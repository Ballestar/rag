00:00:00.410 - 00:00:14.430, Speaker A: Waiting on the stream to just get going. Should be just a few more seconds.
00:00:15.570 - 00:00:22.510, Speaker B: For everybody that joined. We just to start off, we're having everybody throw their local time in the chat.
00:00:23.410 - 00:00:25.600, Speaker A: All right, we're good. Stream is up.
00:00:27.330 - 00:00:58.174, Speaker B: All awesome. Well, we gave just a real quick intro to Juan Benet. If you guys don't know. I'm sure a lot of our participants here are familiar with Juan and the work that he does, but he is the founder and current CEO of Protocol Labs. He's probably most well known for his work with IPFS and Filecoin, which is what this hackathon is about. Hopefully you're here as a part of Hackfs. That's what I'm here for.
00:00:58.174 - 00:01:30.040, Speaker B: We're super excited for the events this week and then the actual kickoff next week. It's going to be an amazing full 30 days of building and creating things with all of you guys. I'm going to be learning about a lot about Filecoin and IPFS and the whole ecosystem. So, yeah, I can say for sure that the whole ETH Global team is really looking forward to all this. Juan, if you wanted to say anything about yourself that I missed, it was pretty short, but I know we do have some ethereum people coming in. Yeah, take it away.
00:01:31.050 - 00:02:38.894, Speaker A: Yeah, that's great. Thanks for the introduction and really excited to be here with everybody. What I'm going to do for the workshop is I want to make this very hands on and very interactive. So really want to make it a learning session where everybody can kind of try things out, follow along, play around with the tools in attack, ask questions, and then kind of the goal is to give you a good understanding of the tools and how to use them and how they work so that then you can use that as a good entry point to then learn more. So we'll have a bunch of workshops both this week and next week that are going to cover a whole bunch of different concepts and kind of in more and more advanced ways. What I want to cover in this workshop is kind of an introduction to the high level concepts and the tool basics. So mostly want to give you a good foundation for how IPFS works, how content is expressed and so on.
00:02:38.894 - 00:03:54.550, Speaker A: And kind of how to work with files and with data on IPFS and kind of how to have a good mental model for how the network operates. The goal is to do as little through concepts as possible and as much as we can directly working with the tools in the command line and the web. That's the goal. I'm going to be sharing my screen, and then we'll just go with that. One SEC. I think I should be able to see most people as well. I'll have like a screen open with people, and if you want to show video, feel free or not, feel free to ask questions on chat as well and I'll be kind of monitoring the chat as we go if I can find the window.
00:03:54.550 - 00:04:14.560, Speaker A: There it is. Soon tends to overlap a bunch of things and pin things to the screen in interesting ways. Cool. So let's see, everyone can see that screen, I'm guessing. Thumbs up. Yeah. Cool.
00:04:14.560 - 00:05:05.514, Speaker A: This is again very intro workshop, very hands on, not really conceptual. There's a lot of conceptual talks out there. You can go and watch those on YouTube. Happy to give you a bunch of links out there but you can just kind of search and there's a lot of really good material out there that kind of goes very deep into all the concepts in IPFS and so on. That's not this workshop. This workshop is meant to be hands on, trying things out. We'll go through a number of examples and they'll kind of scale in difficulty where at the beginning we're just going to be playing around with files and then we'll do more interesting things like starting to deal with video and then we'll deal with whole websites and then thinking about how to move those around.
00:05:05.514 - 00:05:39.862, Speaker A: And with each of those examples we'll kind of try things out locally. We'll try things out looking at things in the gateway. You will hear more about that in a moment and so on. So the goal is to kind of go through these basic examples but kind of get an understanding of form, a good understanding of how the data is moving through the network, how to address content and so on. And yeah, very much ask questions and so on. If a question is asked on chat and you know the answer, please jump in and help each other out. That'll keep everything moving.
00:05:39.862 - 00:06:22.674, Speaker A: And then if you're trying to follow along and you run into some trouble, definitely try to fix it. If you spend more than 1 minute or two on it, I would say just move on and maybe move back to watching. And then later on, because this is recorded, you can go back and play it back and then try to follow along after you debug the problem. So I won't be waiting for we're not going to kind of proceed in lockstep altogether. I'm just going to kind of move through a bunch of things and if you can follow along, awesome. If you're kind of running behind then maybe just start watching. And yes, I wanted to point you to a few other resources.
00:06:22.674 - 00:06:32.040, Speaker A: So first off we're going to have a set of learning resources. I don't know if these are out yet Trent. I'm not sure if they've been shared yet.
00:06:34.090 - 00:06:39.980, Speaker B: Yeah, no, we're just cleaning up that doc. But it should be shared if not tomorrow by the end of the week.
00:06:40.430 - 00:07:17.670, Speaker A: Yeah, sounds great. And I'll give you a preview right now of kind of how it's going to look. So it's going to be kind of like a page like this that's going to have a whole bunch of links. It's going to have a whole bunch of sections with different links to different things, right? So in terms of like an intern to IPFS, you'll get a sense of being able to kind of watch some talks that go in depth. Technically I highly recommend this one. The how IPFS works that goes very deep into all of the different layers of the protocol and so on. You can also see some kind of updates around what's been happening in IPFS recently.
00:07:17.670 - 00:08:37.902, Speaker A: You can also get a sense of this kind of walks through a lot of the tools and links you to them and then starts getting into some more advanced topics like hey, how do you deal with IPFS and domains? How do you put websites on IPFS and how do you address them, how do you do dynamic websites? Hey, if you want to build kind of like a whole web app, like, what are the tools that you can use to do that kind of stuff, then maybe some specific we're kind of collecting. Also some tutorials for specific use cases like, hey, if you want to do something with NFTs on Ethereum and so on, and you want to address the content on IPFS, here's some tutorials for doing that. Going into things like pinning services and kind of what those are and more. So once we kind of ship this resource page, you'll be able to kind of explore all these different things. This will get more and more filled over time throughout hackaths we'll keep expanding these resources and tutorials and so on. There's kind of like a list of to dos here that you can see the range of things that are going to appear over time and we'll kind of maintain this list as well there. And if you have some questions and you want to find out about something and you are having trouble kind of finding those resources, definitely ask.
00:08:37.902 - 00:09:36.258, Speaker A: And we can add that as a category here and we can kind of collect some tutorials there. Great. So that's kind of like I would recommend kind of the main thing that you should kind of lean on is that page and then beyond that then really just like the IPFS docs, right? So if you go to IPFS IO on the browser, then click Docs and you land in the IPFS docs website. And here there's a whole bunch of stuff about how to install the recent releases. You can get some kind of conceptual overviews about kind of what IPFS is, how it works, and you can get a bunch of ideas and examples. It goes into kind of some amount of conceptual information around content addressing and CIDs and so on. But then you can also get very direct how to's of how to do a bunch of different kinds of things, how to configure a node, how to deal with bootstrapping and so on.
00:09:36.258 - 00:10:12.350, Speaker A: This might not make sense to you just yet, but that's okay here. This kind of how to section in the docs is going to be really useful over time. So expect to kind of find a bunch of useful stuff there. And again, if you're trying to do something and you don't find it represented here, definitely ask and we can put some thoughts together on getting some resources for you. Another thing I'll mention is there's a lot of videos on YouTube. So if you just look for IPFS on YouTube, you can find a ton of different things and tutorials and so on. So definitely go check those out.
00:10:12.350 - 00:11:00.990, Speaker A: Those can be a really useful set of resources as well. And if you look at the IPFS channel on YouTube here, you can sort of playing in the background. So I was like, I don't know if somebody was talking. In this page you can see all kinds of really useful resources from conference talks to certain workshops. I highly recommend this IPFS camp, the set of workshops here, I'll paste the link in the chat as well. Let's see. Unable to see the browser screen so you just wanted to be zoomed in more, I'm guessing.
00:11:00.990 - 00:11:53.326, Speaker A: Is that better? All right, hopefully that's good. This set of workshops is really useful. Each of them are kind of an hour long and they go into a bunch of different concepts. So we're most likely not going to be repeating most of these. In fact, I think we'll have one, I think with Lipid P one, but most of these are good to just watch directly from this playlist and kind of follow along with it. So highly, highly recommend this set of workshops that are already recorded. And there are probably other things here that you can go into, kind of the videos or like playlists section and you can find all kinds of things there, including more conceptual stuff and so on.
00:11:53.326 - 00:12:38.110, Speaker A: So the project does all kinds of things through this YouTube channel, including recording some kind of organization meetings and so on. So you can kind of follow along with what the core devs are doing probably. I'd also recommend there's a whole bunch of also lightning talks here from a lot of people using IPFS so you can get a sense of an idea of how people are doing stuff so that's definitely cool to check out. So here's for example, a talk from Textile about buckets. Here's a talk from Microsoft and their Ion Identity System. There's talks about how Netflix is using it for containers. There's stuff from Pinata and how to do pinning and so on.
00:12:38.110 - 00:13:44.338, Speaker A: There's all kinds of really useful things here. So highly recommend using this set of resources. Then from there, I would say there's also a ton of tutorials on the web, so you can also just search online and you can find a lot of really good tutorials. A lot of people are writing about this and you can find a lot of the stuff in the blogs of various groups and companies who are building tech around IPFS. So want to recommend Textile Pinatas and Coral Fleek and a few others that have just been writing really awesome stuff along the way, kind of helping people understand how to do lots of things. And finally q and a So a lot of the time when you're playing around with new tech it's really useful to be able to kind of ask questions when you're stuck and kind of get help quickly. So for that we're going to have a dedicated channel where you can get help throughout the next four weeks on a lot of IPFS things and then separately you can rely on the definitely check out the resources that are already available.
00:13:44.338 - 00:14:40.100, Speaker A: Like there's a forum so you can go to discuss IPFS IO and there's a whole forum here where you can read up about a bunch of topics. You can go to the GitHub pages of various tools and so on and kind of search through that and you can also ask in Stack Overflow. So you can check out Stack Overflow and write IPFS and you can see there bunch of different questions about different things. I think there's like 33 pages of stuff and by the way, if you go to Stack Overflow and you find something and you know the answer to definitely help answer there that'll help make a lot of the content better over time. Great. So let's move on. So I want to just kind of touch on a few concepts lightly that will be useful for the rest of the time.
00:14:40.100 - 00:15:31.890, Speaker A: This is not going to be like a full explanation. If you're unfamiliar with these, you're not going to leave knowing fully but at least you'll get a sense of it. So the first one is content addressing. When you think about IPFS, you can think of how the web works in normal HTP world where a lot of clients are connecting to a single server and you're requesting information directly from that server. The addressing of information in that model is location addressed where the URL is pointing to the IP address of some computer and you're asking that computer for some content and some files. The way that IPFS works is that it makes the entire web work peer to peer by addressing the content with hashes directly. So the hashes of the content and so this is what's kind of known as content addressing.
00:15:31.890 - 00:16:35.914, Speaker A: So the idea is that you map kind of like human readable names and so on directly to the cryptographic hashes of the content and that gives you kind of a secure way of distributing the content and distributing the information to everybody. So the creator of content or the publisher of content doesn't have to be the party serving it, it can kind of be served by anybody and again, for all these concepts, there's a lot of really good explanations on videos. The next one is dags or directed asyclic graphs. These are kind of like a key part of how IPFS works. And so you can read a good explanation here. The important thing is to just think about how at the end of the day, files on computers or all kinds of data is structured in some set of data. So if you look for cyclic graphs, just on Google, you can get a feel for what these objects look like.
00:16:35.914 - 00:17:43.520, Speaker A: So the idea is that we're going to relate information with links. And so these links could be think of them as links on a web page, right? So if you think of a graph of pages kind of linking to each other in IPFS, those links are cryptographic hashes. And then that gives us the secure context and the secure linking between all these pieces of information. That means that anybody can make a link from one page to another page and make that link be secure and so nobody can tamper with the content and so on. It's the same idea behind how blockchains work and the same idea behind how git works and so on. And then, yeah, hashes, probably most people will be familiar with hashes in some form or another. These are cryptographic functions for kind of creating short string that maps to a much larger amount of information in kind of a tamper resistant way.
00:17:43.520 - 00:18:46.020, Speaker A: Could probably write a lot about hash functions. But the basic idea is this is what enables us to make those links in these graphs where one page can link to another page using the cryptographic page hash of that other page. And then the last concept is DHTs, which is distributed hash tables. And so these are networks, these are peer to peer networks that are used for routing and finding nodes or content. And so these distributed hash tables, you can think of them as just like a big lookup table that's spread out over a large network of how to find certain parties or certain content, the specifics of how DHTs work and so on. We're not going to touch. Now, just know that when we mention the word DHT or something like that, we're really saying, hey, there's some lookup process and we need to kind of find other parties that are interested in this content or find other parties on how to connect to them.
00:18:46.020 - 00:19:39.214, Speaker A: All right, great. So now the tools that we're going to go over today, so we're going to go over the main implementations of IPFS. And so this is Goipfs and JS IPFS, and we're going to go through how to use IPFS gateways, kind of what pinning services are. And then we're also going to touch on IPS desktop and IPS companion desktop is kind of like a tool that you can download on your computer and you can kind of double click and open and so on. Companion is a browser extension. All right, let's get to the examples. If you don't yet have IPFS, you can go to the website, you can click on Install up here and you're going to get to move to this section.
00:19:39.214 - 00:20:50.150, Speaker A: And so what we're going to need for this workshop is mostly we're going to be working with a command line at first, and then we're going to move to kind of desktop and the browser and so on. So here you can just click the get the CLI button and here are a bunch of instructions for how to do it. And I'm going to ask so here are the instructions for me. I'll just do it along so we can see what's going on. Let me know if that's a good font sized not hearing it's not a bad font size, so I'll keep it. Great. So then, now I've downloaded the release, so now I just unpacked it and I run just bash install.
00:20:50.150 - 00:21:42.950, Speaker A: Great. So that's this command and I should be able to say IPFS version and get 60. Great. So we just installed the IPFS command line. Now if you're not used to installing command line tools and so on, then you might run into some trouble here where your operating system might be like, oh, you need special permissions to install this, and so on. If you run into that, I'd recommend kind of skipping this part and just kind of watching and then going back later. But yeah, for most people that are kind of used to installing a lot of various tools and so on, you should be able to just do this and now have the command line tool.
00:21:42.950 - 00:22:21.076, Speaker A: Can I get a show of hands either on Zoom or just on Chat? If you have a Vs installed and are going to follow along, that'd be useful for me to know. Sweet, sounds good. Great. So now that I have this IPFS tool, there's a lot of commands here. There's really good help directly in the commands. So you can ask for help on all of these. You can pass in help on each command and get an explanation of what that command does and so on.
00:22:21.076 - 00:23:46.300, Speaker A: I'd recommend using the docs page and the kind of the how to's along with the help text here for you to kind of be able to learn a lot about how all the pieces work and so on. And here the first thing to notice is that there are a lot of different subcommands here. There are some basic commands which are kind of like the bread and butter of working with IPFS, which is just kind of adding files to IPFS and getting files from IPFS. There are some data structure commands and so these are for working directly with the raw data and that starts getting useful and interesting when you're working with some application data or something like that. Then we have a whole set of advanced commands which are about various different kinds of features and functionality that you can use along with your normal use for IPFS, including things like pinning, which is asking your node to keep around data, things like resolving addresses so when you have long names and so on, you can kind of resolve those. You can get some stats about the local data storage and so on. You can see how much data there is in your FFS node.
00:23:46.300 - 00:23:58.610, Speaker A: And probably the most important here to know about is the to. Usually most of the time when using IPFS here we're going to start up a demon and kind of run it in the background and so on.
00:24:00.680 - 00:24:05.376, Speaker B: Could you just zoom in a little bit? Looks like some people need a little larger.
00:24:05.408 - 00:24:55.172, Speaker A: Yep, yeah, hopefully that's better. Then the last two sections include kind of network commands. So these commands are useful for these commands are useful for looking at the set of connections that you have to other peers in the network. And then there's a set of commands just to work with the installation of IPFS itself. Kind of like getting a listing of all the commands that are there, getting a log of what the daemon is doing and running and kind of maybe manage the configuration. All right, great. So let's initialize and kind of get going.
00:24:55.172 - 00:25:39.424, Speaker A: So if you already have IPFS, you might have already kind of a repo. I'm going to move mine so I don't lose it and then kind of initialize a repo so you can just type IPFS in it. And this creates a repository in kind of your local machine. And what that did is it has this created some files here and that is where Ibfus is going to put all of the data that you add to it. And it also created a keypad for me and gave me this command to run to kind of check things out. So let's just run that command. And so this is kind of like the basic README.
00:25:39.424 - 00:26:20.144, Speaker A: It's showing how to get some files out of IPFS. And so this is an address on IPFS. This is the hash of a directory. And here's the specific files you can think of pathing here in IPS, the same way that Unix pathing works or at the web as you can cat a different file instead of the README, you can maybe see quick start or something like that and kind of get a bunch of ideas on kind of what to do. Cool, so that sounds not too exciting just yet. Let's now move to starting the daemon. And so this is what's going to bring IPFS online.
00:26:20.144 - 00:26:48.148, Speaker A: Let's see. I think I already have IPFS running in the background. Great. So now that I have it running, what the demon did is started listening on a whole bunch of addresses. And so these are IP addresses in my local machine. And it's also connecting in. You'll notice here there's a lot of different protocols.
00:26:48.148 - 00:27:16.450, Speaker A: So we're using TCP. We're using Quick. We're also connecting to a thing called the peer to Peer circuit, which helps some Jsips nodes connect. And it works over FPV four and Fev six and so on. We also see some useful other services. So one is there's an API running. And so this API, we'll see kind of how to work with it in a moment.
00:27:16.450 - 00:27:50.430, Speaker A: And then there's a Web UI and kind of a gateway. And so the Goips demon kind of packs all of these things together. So what is this Web UI thing if you go to that address? So this is one hundred and twenty seven, zero zero one. You get this UI. And so this is a UI around my node. And so this is kind of the bandwidth over time that I'm using. Here's my peer ID.
00:27:50.430 - 00:28:16.752, Speaker A: Here are my addresses and so on. Then here you can see files. So right now I haven't added any files yet, but we'll see some in a moment. And there are some other things like I'm able to see the set of peers that I'm connected. So right now I'm already connected to a whole bunch of peers. And you can see kind of like the list here, and you can see the latency to those peers. So this is a fully peer peer network.
00:28:16.752 - 00:28:55.490, Speaker A: Great. And so this map is getting populated over time by kind of taking the IP addresses of the peers you're connected to and kind of figuring out sort of like where those parties are. And you can also get that same listing here. So let's see if I can say API again. I'll get the commands, the network command swarm helps me see what connections I have. So I can say Epiphan swarm in there, I can say Epic swarm peers. And I'll get the same listing that is kind of rendered over here.
00:28:55.490 - 00:29:32.540, Speaker A: These are just kind of all of the addresses of all the peers that I'm directly connected to. Cool, so that's interesting, but let's see what we can do with it. So I have here a set of files and I'm going to add them to IPFS. So this is like the if we go back to the listing of commands, this is kind of in the basic commands, how we can add some content. I'm going to add files. And now it's a directory. So I have to pass in R for recursive.
00:29:32.540 - 00:30:24.990, Speaker A: And this is adding all of the files in that directory to IPFS. And so I get this listing of each of the files and the hash for each of the files. And so the directories are kind of hashing all of that together. And so now, just as I've added it, I can also do IPFS LS, which is kind of LS in the command line and kind of see the listing of that directory. So I can explore this as well, like I would on a file system. But the fact that it's now an IPFS means that I can view it online as well. So if I go to localhost 80 80, which is this gateway port over here, I should be able to post the exact same, use the same hash here to kind of view that content.
00:30:24.990 - 00:31:11.128, Speaker A: Sure enough, here's like a directory listing of the content that I just added. And so we can see like images and we can see these are directories. I think the folder rendering got a little bit messed up, but yeah, you can explore all the content that I just added here so we can look at some pictures and kind of here's like the same content that I added. Now, the cool thing is, if I give you this address, you should be able to get it as well. So you can type IPS, get on this hash, and you should be able to download that as well. So I'll post it here on chat and you can follow along. So here's the hash.
00:31:11.128 - 00:32:02.980, Speaker A: Now, because I'm behind a firewall, it can be really annoying to sometimes it may work or may not work because your computer may or may not be able to reach my computer. So I have a set of scripts that help me deal with that, which I won't get into it right now, but I'll post the script later. So you can use something like this. And so I'll do this to kind of connect to a set of nodes that I have and then kind of replicate the content to them. And you should be able to download the same content as well. So if you do IPFS get, you should be able to kind of download that. Let's see, I'll open another window.
00:32:02.980 - 00:33:00.552, Speaker A: Let's get on that hash then. It should yeah, so I got the same content was put in on that hash and I can open it as well locally in my file system so I can see that set of pictures and so on directly in my machine. Cool. So, so far what we've done is we added some content to IPFS. We started propagating it to the network, we've looked at the web UI that shows us how many connections we have to various peers. And then we're able to kind of add files, including kind of text and images and so on, and then give links to other people to kind of download that content. Cool.
00:33:00.552 - 00:34:19.100, Speaker A: So, so far the way that we view it on the web is through this kind of like local gateway. And so what the gateway means is there's a program, it's an HTP server that's running, that helps browsers interact with and view content. That's an IPFS. And so it serves as a bridge between kind of the normal web world that kind of expects to use Http to connect to everything and then being able. To view the content in FFS. Let me see if I can get a diagram for you that helps make more sense of this. I think a good diagram for this is like you can think of a gateway as a way for browsers and so on to connect through HTP to a special IPFS node that then kind of connects out to the rest of the network and moves the data around.
00:34:19.100 - 00:35:14.540, Speaker A: So every Goips installation comes along with one of these gateways. And that's so that you can use your own browser to view your content locally. That gateway is only just for you, nobody else can access it. But that can also be used to kind of host some interesting services. So as an example, we run one global gateway that you can use to view the content and address it in the world if people don't have IPFS yet, and that's at gateway IPFS IO. So an example is we can take the same hash that we had here and then view it on gateway IPFS IO and get the exact same content. So you should be able to this is kind of how links tend to work.
00:35:14.540 - 00:35:55.030, Speaker A: Let's see, I'll post it here. So most of the time you'll see links like that, you can also for convenience drop the gateway dot and then this kind of works. It's a little bit confusing sometimes to just use HTP IPFS IO, IPFS and so on, because that's also kind of the page of the project. But that works. There's also a number of gateways from other people that run them. And so you can look on Google for IPFS gateway checker. And so here's like a listing of a whole bunch of gateways that you can find.
00:35:55.030 - 00:37:04.506, Speaker A: This Jasker page is just pinging a bunch of them right now to see if they're online and kind of gives you the kind of the time that it took them. So you can find hours here, you can find cloudflares, you can find a lot of fitting services, run gateways, so Infura and Pinata and Temporal and others run their own gateways. And so that means that if you want to give a link to somebody that doesn't yet have IPFS or doesn't use it, you can give them a link to this gateway. And there are a whole bunch of folks who are building services and businesses around just kind of providing these gateways and with added services and so on. But again, this is kind of like a kind of in between world where we're using kind of Http to kind of enable browsing of this content without kind of like running the protocol and connecting to a lot of parties yourself. This is especially useful in mobile. So, for example, the Opera browser now in mobile can resolve IPFS content directly by going through a special gateway.
00:37:04.506 - 00:38:07.538, Speaker A: And so that way they kind of help make sure that those phones are not connecting to hundreds of connections and so on, which would be kind of resource intensive for a phone. But they can resolve all the IPFS content that they want directly on web pages. And what's really cool about that is that you can start using kind of the protocol handler sort of the way that it's meant to work, which is right now we're using links of the type, we're using links kind of like this, which has kind of like this Https prefix and so on. But once a browser kind of supports functionality for the protocol, you can change the link into just having this is tricky. So you can just have IPFS and then the content directly. And that is kind of like a nicer way. And this is kind of like the way that it's meant to be.
00:38:07.538 - 00:38:39.390, Speaker A: In that way it doesn't kind of hop through HTP first right now, where a lot of browsers are starting to add support for this in various ways. The best way to do it is through a tool called Companion. We'll check out Companion a little bit later. Cool. So now let's start diving into a little bit of how the data itself is structured. So what is this hash? What's in the content? How does that magic work? Let's see. And I see some questions on the chat.
00:38:39.390 - 00:39:02.662, Speaker A: Yeah. What about Brave and Mobile? I don't know about brave and mobile. I think Companion only works on desktop. Brave desktop, I don't know that Mobile is there. But one cool thing is the Brave team is adding GoIP support directly into Brave. So it's going to kind of run along with Digital there. I don't know if in Mobile they're planning for that yet.
00:39:02.662 - 00:39:21.018, Speaker A: I think that might be later on. Others here on the call might know more than me. Great, so let's explore what's in there. So I talked earlier about kind of there's these graphs and so on. Let's see what that means. Let's see if I have this tool. Yeah, great.
00:39:21.018 - 00:40:17.600, Speaker A: So I have a special script that I can share later. And what this script allows me to do is it allows me to kind of extract the kind of shape and the topology of the graph and then lets me visualize it. So it's called Graph MD and I can give it kind of any CID and it kind of outputs a lot of dot formatted graph so then we can look at it. And so I just need to pipe that into dot, which is a graph, this tool and so on to see kind of an SVG. And then I can open that SVG up on text. Let's open it with chrome. And so this graph is the representation of the content that I just shared with you.
00:40:17.600 - 00:40:53.586, Speaker A: Here's the hash of a directory. Here's the specific directories underneath that and then here's more stuff underneath that stuff. And you can see kind of like images there and so on. You'll notice that the files, if they start getting big, they'll start getting chunked. So for example, this portal, one JPEG here is getting chunked into multiple chunks. That is done to just have a small chunk size for objects which are easier to move around. That brings all kinds of good properties.
00:40:53.586 - 00:41:28.980, Speaker A: If you have a file that's gigabytes large, you want to chunk that into smaller pieces. But it also helps a lot with up with if you end up replicating a lot of the data. IPMS is really good about just deduplicating all of that content. And so here, let's play around with an example. So let's go into that directory that I showed earlier. Let's go into pictures. I think we had some backgrounds and then let's just copy all of these.
00:41:28.980 - 00:42:21.830, Speaker A: Let's see, let's copy the entire directory multiple times. So copy backgrounds into v two, three, b, four, B, five. So now I have a bunch of directories that are all the same and they've kind of like replicated all of these pictures. So now let's do the same thing that we did before, add it to IPFS and see how it got added. So now I get a different hash because these directories got added. Now that kind of accumulated up into the root and that ended up kind of changing the hashes alongside in the links. But you'll notice that these hashes are the exact same.
00:42:21.830 - 00:43:45.520, Speaker A: So that means that those directories are entirely duplicated, not just the files, but the directories as well. So if we try to visualize that again, let me do the whole then what happened here is we can see that there are a set of this particular hash that is pointing to that has a bunch of different directories, is pointing to exactly the same object. So that directory is getting entirely duplicated. I think there's a bug in my script where right now it's kind of representing each one of these files is a little bit different because those are kind of independent coming from the directory. But the point here is all of those replicated files and so on got it duplicated in the underlying graph. So all of that data is not duplicated. Those files only got added to IPS once.
00:43:45.520 - 00:44:34.766, Speaker A: And so then when you have files that are large and they start changing, you can think of all of those chunks themselves as being duplicatable as well. So if you have kind of like a very large file and you only kind of change some of the beginning, then when you have two versions, they'll kind of link to the same pieces underneath the hood that are kind of the same. And the way that chunking works, there's a whole bunch of different algorithms for how to do this chunking. IPFS supports different chunkers. And a really interesting project for a hackathon might be to play around with different chunkers and maybe make some specific chunkers that are tuned for specific files. Great so I think there are some questions. Let me look through.
00:44:34.766 - 00:45:25.054, Speaker A: So are the chunks split into coherent pieces the first half and the second half, or are they split into in some other way that isn't amenable to the network? So IPFS supports different chunkers directly. So Goadfest directly has a few chunkers here. You can say IPFS add help and you'll see different kind of like different chunking algorithms here. And you can kind of read more about those on the web. These are kind of pretty dumb anyway. So there's like a simple chunking algorithm that's just based on size that's not smart at all, and it's not going to deduplicate very well with a lot of edits to a file. But there's a thing called Rabbin fingerprinting and I think called Bush hash, and those get smarter about how to chunk things, especially through kind of changes in files and so on.
00:45:25.054 - 00:46:10.270, Speaker A: But all of that chunking is still kind of not very smart in terms of thinking about the file itself. One of the things that we've been discussing for a long time is, hey, it'd be really cool to have chunking algorithms that are tuned specifically to the file. So you're chunking at specific boundaries that are really useful. We have one version of this, like one experimental version of this, which is we can chunk Tarballs like that. So I'll give an example of it. So if I compress say that files small directory. Now I have this like files small Tar.
00:46:10.270 - 00:47:07.374, Speaker A: And then I add I think this is an IPSTAR command. Yeah. So if I use a specialized IPSTAR command and I add that to IPS that way, then what it will do is it'll chunk the archive smartly to kind of deduplicate along the file boundaries themselves. So I got this hash, let's see what is going on inside of it. So here I got something kind of a little bit more crazy. But what's going on is that each of the Tar headers so this is chunking the Tar file smartly. It's looking at each of the headers themselves and treating that as an object and then looking at the files themselves and chunking that as an object itself.
00:47:07.374 - 00:47:58.814, Speaker A: So one interesting thing though, is if we start looking at kind of the data contents of some of these files, they're exactly the same as the content of the file outside of the Tarball. So if you have a lot of Tar archives and the actual files on compressed and so on, then they'll deduplicate to the same content. So you can actually just get out that file directly out of the Tarball and it's the same exact hash that was in the comment. All right, let me see if there are other questions. I think I answered the one on Braven Mobile. Let me know if there are other questions that I haven't covered yet. All right, great.
00:47:58.814 - 00:48:25.900, Speaker A: So far we've added some content to IPFS. We've looked at it on the gateway. We've moved it to each other and so on. And so we're getting a sense of how static content, like documents and images and files kind of sort of move around. We've looked under the hood to see how those files themselves are chunked and kind of moved around. We've talked about the duplication a little bit. Now let's do something more interesting.
00:48:25.900 - 00:49:21.202, Speaker A: So yeah, we can move around files and so on in a peer to peer way. But what about websites? Right? So this is kind of where the gateway to browsers becomes really interesting and useful because you can put entire websites into IPFS this way. So for that, let's see what is a good website? Let's find a website hosted on IPFS. There's a whole bunch of them. I believe the hacky fest website itself is hosted on IPFS, so I think we can find out about that in I think if I do XFS DNS, is this a thing? This should maybe it's not. Let's see. Will this work? Maybe this old tool is not working.
00:49:21.202 - 00:49:48.942, Speaker A: Let's see. Yeah, there we go. So I can do IPFS less directly, so I can do hackerfest.com, and so I can't reset the name for some reason. Oh, I think a DNS link is not set up yet. Yeah, let's do it with the IPFS IO website. So this whole website is on IPFS itself.
00:49:48.942 - 00:50:08.870, Speaker A: So this is kind of like the IPFS IO website. So this whole thing itself is in IPFS. And so let's maybe grab the docs one. Let's see the docs one will work. Yeah, great. So let's just get IPNs. Docs IPFS IO.
00:50:08.870 - 00:50:31.226, Speaker A: And so this is going to download the whole website to my machine. I actually don't know how the bigger that is. Okay, great. Just five megs. Surprising that it's taking a while. Sometimes it can take a bit of time to find the right content. You should be able to also do this yourself and you can download the whole website.
00:50:31.226 - 00:51:17.640, Speaker A: So now we have kind of this docs IPOs IO website. And so this is the whole thing itself here's, like the index HTML and images and so on and all of the files and whatnot. And so you can think of this entire website as moving as just a static bundle directly on IPFS. So let's try to try to replicate that. So let's make a website ourselves. My first IPFS website. Let's add some content to an HTML page.
00:51:17.640 - 00:52:34.362, Speaker A: Let's maybe copy one of those pictures and let's see if we can maybe make this a little bit more interesting. Great. So now I have some index HTML that has just a super basic website. Now let's add this entire directory to IPFS. I got the hashes for this website and so on. And now we can go to localhost 80 80 and get that content. And so we can see the images that I posted.
00:52:34.362 - 00:53:27.200, Speaker A: Let me make the text a little bit bigger so we can see it. Oh that's right, I need a body standards. It great. And so I've just deployed a very simple website and so you should be able to look at it as well. If you go to this. Let's see, yeah, let me pin it, move it to the rest of the world. I have a particularly aggressive oh, there we go.
00:53:27.200 - 00:54:00.572, Speaker A: Particularly aggressive, like firewall. Sometimes being able to kind of move it to a machine out in the cloud or a pinning service really helps. So there we go. We kind of loaded it directly on the global gateway and you should be able to kind of follow along and see it as well. So yeah, if you're kind of hacking around and doing it as well, feel free to post your links here and we can check those as well. So let's see from there. And by the way, you can always come back to the peer list.
00:54:00.572 - 00:54:55.452, Speaker A: It's kind of cool to see like all the various connections kind of flowing and so on. So we can also use kind of like this tool here to kind of explore the content as well. Let's see, this lets me kind of browse the content directly here. So this web UI lets me view kind of all the content that I'm adding to IPFS and that works for any website. So like we saw before, I can do, I can resolve the content for docs and kind of browse that. And so here's the entire website for Docs. There's a whole bunch of websites that are hosted this way.
00:54:55.452 - 00:56:02.204, Speaker A: I think the ENS management tool is itself an IPFS tool. Let's see, let me see if it's not, I think it used to be probably broken. Yeah. But you can grab any kind of content or IPFS website or something that you find. You can always put it here and kind of explore it this way you can get a sense of the content in there. And this GUI tool also lets you kind of import files directly into IPFS. So if I were to open the images folder directly, I can drag and drop things into this as well.
00:56:02.204 - 00:56:40.350, Speaker A: I think you have to drag it into the import button and then I can look at the content here and I can grab links, copy the cav and share a link to other parties. I wonder if maybe drag and drop will work. Yeah, I guess so. I think didn't like that there was already duplicate name. There we go. So you can just drag and drop content directly into this web UI and you can add so this starts pushing into out of the command line more into GUI tools. We can kind of explore, kind of adding and so on things this way.
00:56:40.350 - 00:57:25.684, Speaker A: Sweet. So then we've seen how to deploy websites statically and so on directly to IPFS. Now all of this stuff is made easy by a whole bunch of tools. So I'll give an example of one here. So Fleek is a really good tool that lets you it's kind of like a netify type tool that lets you just kind of have a GitHub repo. And if you kind of push content to that GitHub repo, fleek will kind of follow along, add it to IPFS and then update a domain name so you can have a bunch of domains kind of pointing to this. So in fact, there's, like, this website I made recently called for Falcon Ignite.
00:57:25.684 - 00:58:30.430, Speaker A: And this is kind of hosted with fleek and it makes it super easy to just have a standard single page website and so on deploy. It to GitHub, link it to Fleek, and then it'll kind of constantly pull that, add it to IPFS, and then update the domain name. I probably won't go into the domain names here, but we might in a future workshop on how to add DNS domains and ENS domains and a couple domains and so on. So we'll kind of get into that next week. But there's a way of having a really nice human readable domains, map those to IPFS content, and then have that be totally automated by tools like Fleek and others that let you do this in a smooth way, but kind of like the underlying what Fleek is doing is kind of like the same operations that we're doing here, which is just grabbing the content, adding it to IPFS, grabbing those hashes, and then kind of pointing at a domain at domain to that hash. Cool. So let's see how are we doing on time? I think we're like at six now.
00:58:30.430 - 00:59:35.536, Speaker A: Probably one last thing I wanted to show for this kind of basics, which is getting a little bit into the desktop and companion. So I'll try to do that kind of quickly and then we'll go from we can pick up on a lot of the more kind of advanced uses of IPFS and so on later in the week and next week. So great. So desktop is a software tool, so less aim for developers. So I started with a command line here because I wanted to kind of tune that for hacking with IPFS and developing. But I wanted to also cover the fact that there are UIs that you can recommend to folks who are not developers and who are not used to installing things that way. So if you go to IPFS IO again and you go to install here, you can get IPFS desktop and you can download the yeah, we got to make this install process a little bit nicer.
00:59:35.536 - 00:59:59.532, Speaker A: But you can download here desktop for Mac, Windows and Linux. So you can just download the tool. It's very big because of Electron. It kind of bundles electron in there. So it happens to be like a large tool. I already have it installed, so I'll just open it. So if I open.
00:59:59.532 - 01:00:34.980, Speaker A: I got to kill my local tool before. Let's see. Yeah. So once I opened, I press desktop. It got added to my tab bar. Let me do that again so it's clear. So, yeah, if I open this app, it will just add it to my toolbar here that might be too small for people to see.
01:00:34.980 - 01:01:36.504, Speaker A: I think it errored out. Yeah. I have like a very experimental set up, so my desktop might not be working. I'll show a demo of Desktop working later on in the week, but if you don't mess a lot with a command line and so on, desktop is just kind of like a drag and drop. Install open and it gives you this kind of web UI, the web UI that we were seeing before. So that's kind of like the main interface for Desktop. Let me open my so yeah, this is the same UI that this desktop tool would open up.
01:01:36.504 - 01:02:08.470, Speaker A: And so I quit my Demon and started it up again. So if we go back to the peers tab, we should see a lot less peers. As you add content and so on, it starts gathering more. So if I go back and add content, it will jump up again. It this should refresh in a moment with a lot more peers. Yeah, there we go. It's like climbing up.
01:02:08.470 - 01:02:49.964, Speaker A: Cool. So then maybe the last thing I wanted to show is companion. So companion is this tool for the browser. So let's go back to the install page. And down here is IPS companion. And so this is a browser extension that's going to work with my local node to resolve content on the web better. So let's go to it here.
01:02:49.964 - 01:03:15.914, Speaker A: You can get it for Firefox or for Chrome. So you go for Chrome. And so I already have it installed. I already have it. But you would then install it here. I'll just remove it and then install it again. Great.
01:03:15.914 - 01:04:17.390, Speaker A: So now that I have Companion installed in Chrome, that means that my Chrome instance can now resolve content on IPFS directly with this extension. So I can start browsing all kinds of IPFS links directly from Chrome without having to do anything special. So companions are this really nice kind of stepping stone to IPFS being broadly distributed and implemented in browsers, where if you build a new protocol for the web, browsers won't immediately kind of adopt it and add it in. You kind of have to get a lot of traction and usage before they'll consider that. But then you have this chicken and egg problem of how do you get people to use the thing if you can't really use it in the browsers. And so this extension is serving that purpose where the community installs it and has it around, and that lets a lot of websites and content be served directly through with IPFS without having to touch the gateway. And then that way people can play around with a whole bunch of interesting features of IPFS directly in the web without having to wait for kind of browser adoption.
01:04:17.390 - 01:05:02.362, Speaker A: Great. So now I have companion running here, it's connected to my node. That means it's going to start like I can open the web UI directly, same thing that we saw earlier. And then I can also start looking at websites directly here and it'll start doing some smart redirection. So if I go to say, the docs website like we saw earlier, this is now going to get redirected to my local machine. This might be too small to see it, but what happened is that it noticed that that website is hosted on IPFS and it redirected it to this address, which then works locally with my local extension. And so that's like a really useful way of now suddenly all this entire website has been downloaded to my computer and is now served locally.
01:05:02.362 - 01:06:02.290, Speaker A: So that means I can disconnect from the internet, I could disconnect from the rest of the world and continue viewing this page because it's now in my computer and can just keep refreshing it and it's local. Great. So I think these set of tools so Go, IPS in the command line, the gateway to be able to give people links that don't run IPFS, and then kind of companion added to the browser to be able to kind of resolve links directly with a local node. And then desktop for users who kind of want a desktop application kind of form, like the basic tools that a lot of people working with IPFS and building things on IPFS end up using. Most apps just use Goips or Jsips. That's the one that I haven't touched on yet, jsips, which is this whole JavaScript implementation of the tool. And by the way, this website also is running directly from my computer because I'm using IPFS, I'm browsing it locally.
01:06:02.290 - 01:07:08.098, Speaker A: JS, IPFS itself is a whole implementation written in JavaScript and you can play around with kind of examples directly here of how to use it and so on. If you're writing anything kind of like a front end application where you want to use IPFS, not just to kind of distribute the website, but to start doing something more important. By starting to play around with the peer to peer network directly in your app, like you're starting to build a peer to peer Twitter or something like that, then you might want to use Jsip fast to be able to kind of deal with all those connections and so on. We'll get into this much more advanced topic next week into kind of exploring how to use Jsip fast, how to build applications with it and so on. So great. I think that's probably most of the content that I had to cover today kind of summarizing. We went through these implementations, we looked at some of the tools, we looked at how content is structured and modeled.
01:07:08.098 - 01:08:02.226, Speaker A: We talked about how files kind of distribute through the network and through content. And we kind of looked at a whole kind of host of resources where you can learn a lot more about the tooling and how to do various things and definitely go check out tutorials. Next week we'll get into a much more advanced set of things around not just how to move static content, which this workshop was aimed at, but then now how to build applications with the tooling, and if you're building kind of how to model the data for applications and so on. So from here I'll take some questions and then kind of wrap. So I see. Is there any built in encryption available for IPFS just before upload, right after download, so the encryption is not yet built there's. The connections themselves are encrypted, similar with TLS.
01:08:02.226 - 01:08:53.960, Speaker A: I think TLS shipped recently. But the content itself is not encrypted by default in IPFS because a lot of the content is kind of published websites that people should be able to look at it. But you can totally pre encrypt things before you put them into IPFS and there's a whole set of tools that are emerging to do that encryption for you. So one that I'll kind of plug here is textile buckets are a way of kind of addressing a set of content and then kind of encrypting it and then kind of moving it around, encrypted and having keys. I was going to kind of demo. There's a tool called IPFS Sync, which is kind of like simple encryption that showed us an example of how you might do something like this. So you can see like this tool, let's see.
01:08:53.960 - 01:09:29.214, Speaker A: I'll kind of kill companion because it'll download a lot of data that I don't want it to download directly. So this tool just grabs some encrypted content and then kind of decrypts it directly in the browser. It's kind of downloading it right now. And so this is kind of like a whole bunch of all of this content was encrypted before it hit my browser. It hit my browser, decrypted it on the fly and then kind of render it here. So this is kind of like how you can send kind of like an encrypted little dropbox like thing. It's static.
01:09:29.214 - 01:09:58.158, Speaker A: So this is not a dynamic thing. It's not a full solution, but it kind of gives you an example and you can even rick roll people with it and so on, which is a key staple of the Internet. But yeah, I think there's a whole bunch of tools that you can use for doing that encryption for you. Great. Any other questions or happy to. I'll be on chat and so on. And you can definitely ask a lot of questions about IPFS there.
01:09:58.158 - 01:10:00.880, Speaker A: And we'll have more workshops next week.
01:10:02.450 - 01:10:30.886, Speaker B: If there are not any more questions, I'll wrap up. This has been really great. Good intro. To Hack FS the event, and I'm sure we already have four more events. So really quickly, before everybody wraps or everybody heads off, I'm going to just run through a quick list of things. Most people, I think, are here for Hack FS. So we're very glad to have you, but you got to make sure to stake the 30 die if you're having trouble with that.
01:10:30.886 - 01:10:58.640, Speaker B: We know there were some issues with credit cards and stuff. Please just DM somebody from ETH Global, and we'll make sure to take care of that as soon as we can. But you have to do that if you want to stay in the hackathon after this weekend. After that, we'll be sort of trimming out the slack just to make sure we've got people who are committed to the event for the 30 days. Yeah, again, just DM anybody if you have issues. Kickoff is Monday, 12:00 P.m., eastern time.
01:10:58.640 - 01:11:28.330, Speaker B: We'll have an opening ceremony type thing where Kartik, one of the ETH Global co founders, going to give a short talk, just introing the event. Juan's going to give a talk, and there might be a few other small things, but definitely make sure to attend that. If you can't attend anything else, it'll be a really good event. Highly recommend it. And then just after that is when hacking actually starts. So about 130 Eastern. And like I said, there are four more intro events very similar to this.
01:11:28.330 - 01:11:59.646, Speaker B: If you're not familiar with the Filecoiner IPFS ecosystem, very much recommend people check their emails for the calendar invites. We've already sent a bunch. Hopefully it didn't go to spam. But, yeah, check your emails. And the easiest way to stay on top of all these events, because we're going to have a ton next week, it's going to be even more stuff. We want to make sure you guys are getting up to speed on things and you have the best tools available while you're creating your hacks. Subscribe to the Hack FS calendar.
01:11:59.646 - 01:12:20.774, Speaker B: You can find that in the Hack FS schedule channel in Slack. Let's see if there are any final questions. I think I covered everything I needed to cover. Yeah. Again, Juan, thank you so much. That was super fast. But I think people got a lot of value out of it, and you can see a lot of great comments in the chat.
01:12:20.774 - 01:12:54.470, Speaker B: People really enjoyed it. And, oh, of course, this will be available directly on YouTube after this. So if you weren't able to keep up or you want to go back and try something again, this is recorded. It'll be directly on the ETH global YouTube page. Any final comments you're muted? Thumbs up from Juan. Thumbs up from me, everybody. Hopefully I see you tomorrow for the event.
01:12:54.470 - 01:12:59.360, Speaker B: Give me a wave as you head out. We'll see you. Bye.
