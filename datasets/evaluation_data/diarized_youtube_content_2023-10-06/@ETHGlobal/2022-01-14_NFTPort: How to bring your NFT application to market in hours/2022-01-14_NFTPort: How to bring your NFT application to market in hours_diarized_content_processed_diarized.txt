00:00:00.490 - 00:00:33.270, Speaker A: Now and just want to say welcome to our first workshop of the day for NFT Hack and super excited for everyone to start hacking later today. All right, we are good to go. So hello everyone. We have Johannes here from NFT Port with his workshop how to bring your NFT application to market in ours. Super excited to have NFT port here and with that being said, I'll hand off the mic to Johannes.
00:00:34.490 - 00:02:07.700, Speaker B: Thank you and welcome to NFT Hack everybody. I'd actually like to start with sort of a short story how we NFT board attended as hackathon participants during last year NFT Hack and it was if I'm not mistaken, it was like March or something like that. The previous NFT Hack and as a company or as a startup we were actually quite in a sort of a difficult spot because we were in the middle of a pivot and we ended up attending NFT Hack and we got a lot of inspiration from NFT Hack and we actually sort of in parts also crew out from NFT Hack. So all the participants, all the hackers there, all the builders, all the creators. I guess one of the message that I would like to give you is NFTs is a new space, there's a lot of new opportunities and you can create this NFT world. So everything that you see, let's say about NFT board or any other kind of NFT company today, they created by people just like me and you. So I guess this is sort of the first message to you that you can create really cool and build really cool things here in the NFT space.
00:02:07.700 - 00:02:51.810, Speaker B: And as sort of the title of the talk is how do you actually bring your NFT application to market in ours then? I won't trouble with you any kind of let's say like Flashy slides. I'm an engineer by my heart as well. So I'll sort of give you a really quick rundown. What NFT bot is how it actually helps you and then we'll dive right into actual building together. So I'll show you the NFT APIs with what you can actually build your application. And as a sort of a start we like to tell about, we are basically Stripe for NFDS. So if you ever use stripe then you know, it's really easy to use has create developer APIs et cetera.
00:02:51.810 - 00:03:43.998, Speaker B: And we really like to help developers ship their NFT products to market. So you don't have to worry about the complex NFT infrastructure, you can just focus on your own product under your own users. And basically we are already today used by over 5000 Philippines, a lot of known names such Nifty Gateway, which is like one of the world's largest NFD marketplaces. And the question is, what can you actually build with NFD board? How does it help you then? We sort of like to categorize into three different buckets. So one is you can deploy currently on polygon NFT contracts and mint NFTs. I'll show you that as well. So those are like your fully owned contracts, you can customize them, et cetera, et cetera.
00:03:43.998 - 00:04:35.410, Speaker B: The second big part is that you can very easily pull NFT data into your applications and that is for both Ethereum and Polygon. And third one is what we like to call enhanced APIs. So let's say you want to actually like a search bar during NFT application, or you want to add a recommendation engine or even an NFT counterfeit detection so your users don't get farted. Then you have these kind of like enhanced APIs as well that you can use. So let me come to the docs now. And yeah, sign up is you can just grab your free API key. You can start by just like self sign up and also for NFD hack participants, we actually have a package.
00:04:35.410 - 00:05:22.820, Speaker B: So if you'll DM us in NFD port discord channel, then we'll actually increase your API limits. So specifically for free, you can mint up to 1000 NFDS and get access to all the NFD data as well. So now let's jump into the API docs. We also have some nice tutorials here. I won't dive into too deep here, but you can basically like how can you actually use ten of the data minting how you can actually create your NFD collection. If you want to create like ten k NFD mints how you can create dynamic NFDS. So I can actually show you how these dynamic NFDS look like.
00:05:22.820 - 00:06:06.210, Speaker B: This is of course speed up, but you can basically, let's say you mint an NFT. Then you can drew an API call. You can actually change the metadata as well. So the NFT becomes dynamic. And you can create a lot of use cases with dynamic NFTs. Of course, like how you can get your MetaMask with your homepage and even how you can actually use NFTs inside Unity as well using NFT ports. So you can either pull NFT data, do your Unity app or mint NFTs as well and save for enhanced APIs.
00:06:06.210 - 00:07:34.730, Speaker B: And now let's jump into actually we'll start with getting the NFT data. So let's say you want to actually get if you go let's say I want to get all NFDS that are in the board API club collection, then I can grab the contract. There is this can I just add the contract address chain Ethereum? I will want to include metadata so the response has metadata as well. And I will fire it up and I will get the NFDS. So if I'll actually exclude metadata for a second, it then you will get all the NFDS, all the tokens in this contract. And as you can see, there are 10,000 in total. And if you met a little back, then you can get like the image opencashed image, we'll see specific all the data that you see, let's say about the properties you have in the response.
00:07:34.730 - 00:08:11.190, Speaker B: And we also give back cached file URLs. Those are like cached files that we download from IPFS or wherever the original file is stored. So you can actually basically it's semi like a CDN. So you can download the original assets very fast from these Google bucket. So this is like returning to NFDS. You can as well do the same for getting like a single NFT details. You can do the same for the polygon.
00:08:11.190 - 00:09:06.224, Speaker B: And we have endpoints for ownership data. So let's say I want to get owned by DDR Walt. I want to get all NFTs to this account owns. I'm just here retrieve NFTs owned by an account and I'll get all the NFTs to this specific account. Different a lot of different use cases. Let's say if I want to build like gallery, if I want to build any kind of application where I want to show to the user what NFTs he or she owns, then that's a very easy API to use. You can also get NFDS that account has created and by creation it's basically if you Mint an NFD.
00:09:06.224 - 00:09:35.020, Speaker B: So let's say I go to NFD. Drop collection has just opened up, I go to someone's home page and I Mint to my own wallet. Then that sort of initial Minting is basically creation. So let's see if this account has Minted any as well. So this one it seems hasn't Minted. But basically if you would have Minted NFDS, then those NFDS would be seen here. Then you have data about transactions.
00:09:35.020 - 00:11:35.220, Speaker B: We have sales statistics about, let's say if you take the same if you want to get port Apio club sales statistics, then we get the sales statistics like one day, 110 day, 30 day volume sales, like average price, floor price, market cap, et cetera. We can also get transactions by contract and those include on chain transactions and also for all of contracts off chain as well. So specifically off chain data, what I mean is openc plus wearable zone order book data. So again, if you take the board Apache club and we want to get all transfers or actually let's say sales that in this contract is happening. So this is on chain data and we can get all the sales here, who's the buyer, who's the seller, details about the specific NFT quantity, what's the price transaction, hash, where was that transaction took place? It's an openc also you'll get like canceled listings and you can do the same for basically there's also a barometer for if you want to get all transactions in that specific contract. And what it does is it will return to you transfer per Mint fees, list and sales. So as you can see, this type sale, transfer, cancel listing and so forth, so forth.
00:11:35.220 - 00:13:00.270, Speaker B: Now you can do the same about, let's say if we go to that specific I want to get transactions that this specific account has done, then I can go to retrieve actions by account. I want to see all, let's say all sales that he has done so I can skip all the sales that this account has done or any other kind of, let's say, transfers, listings, buyings, et cetera, et cetera. And the same when I showed for full contract I can do for this specific NFD as well. So if you go to this ape here and I will get all the history of that specific NFD, all the transactions that has happened to it, then I can get all the transactions like transfer, sales, et cetera, et cetera. Now this is the NFT data part. As you can see, it's really easy to use. It's like just simple API goals and in a docs you will find all the details as well.
00:13:00.270 - 00:13:53.004, Speaker B: Now we'll jump to Minting. So let's say as you saw, you want to create your own collection or even let's say you're creating a game or any kind of like an application where you want to mint an NFT based on some user event. So let's say I'm playing a game, I do some sort of a quest, I kill a monster. And then now you want to from your backend, let's say you want to mint an NFT to my user. So this is sort of like those kind of dynamic flows are very easy to do with our APIs. The first step, what you can do is deploy your own NFD contract. So it's the standard ERC, seven to one contract.
00:13:53.004 - 00:14:51.784, Speaker B: You will see all the code, it's open sourced in GitHub and basically you'll get all the parameters here that you can customize like your contract chain. We currently support Polygon Rinkabee ETH mainnet is upcoming as well. And the name of the contract symbol, owner address. Let's say if I would deploy the contract I would save it as my own address. Then something that you can do if you want to create dynamic NFTs, then you can set metadata update to be less true and basic Uri as well. If you want to do sort of a reveal where NFDS are hidden at first and after some time you can actually change the pays Uri and NFDS are revealed. So as the first step you can deploy the contract again.
00:14:51.784 - 00:15:24.260, Speaker B: You can do everything from here. Then after that you can basically already start minting. Or if you haven't uploaded files to IPS yet, then you can upload your files also to IPFS. So it's like really easy to use. Let's say I can pick like any kind of file from here. Let's say NFTs Christmas. All right? Some Christmas picture.
00:15:24.260 - 00:16:15.300, Speaker B: It's a really large picture. So I can upload my files and the files are being uploaded to IPFS and they're also backed up by fileguard using NFT storage. So let's say wait until finishes uploading. Should have picked a smaller file. Usually when you're uploading a larger file it's good to do some code for terminal, but it finished. And now you can see that I'll get back to IPFS URL. This will probably take some time until an IP fest node responds and it's a really large file as well.
00:16:15.300 - 00:17:13.540, Speaker B: Once you sort of upload, let's say 10,000 of your NFD pictures or any kind of other assets that you want to upload, then you would go as a next step after let's say deploying benefit contract uploading file to IPS. Then you would upload metadata to IPFS. And again you can basically customize whatever you need to customize in metadata. So you can have a name for your NFT description file URL. This is the same URL that we got from here that we uploaded, I prefer, but if you really want to, you can also use any other kind of file URL, even if it's like centrally hosted. Nobody's really sort of like saying that you can't do it just like a sort of a soft recommendation that you use decentralized storage with NFDS external URL, just something like that, basically an open z. You can see it like let's say your home page.
00:17:13.540 - 00:18:07.350, Speaker B: If you're actually uploading any kind of, let's say videos, audio files, then you can add animation URL. So here you can also add custom fields. So basically in NFT metadata you can upload any arbitrary data and what you can do is have it as sort of even like key value database in a way. So in this metadata, uploading metadata, you can just add any kind of arbitrary data that you want to include within NFD. And here are the attributes as well. So attributes are again like basically properties that you see and the spec is basically opensea's own spec as well. So it's in the same format of attributes.
00:18:07.350 - 00:19:25.226, Speaker B: Now, as the first step you deploy the NFT contract, you uploaded your files metadata first, then as the next step you're basically ready to start minting to our own fully owned contract that you deployed. In the first step you would basically take the contract address that you got from the deploying. You would add the metadata Uri that you got during the uploading metadata and to the address that you want to mint that specific NFD. Is it for example, your own address, wallet address, account address? Or if I brought the example that you and I actually already mint to user whom let's say does some kind of event in your application, he buys something or he, let's say plays a game and if he enters his address, then from your back end you can actually already mint that user wallet address. So this is sort of the Minting part. We also have helper sort of functions or sort of endpoints as well like recruiting a Minted NFD. You can also update a Minted NFT.
00:19:25.226 - 00:20:36.482, Speaker B: So this is in the case when you during contract deployment you set metadata update to be less true and then you can basically update the method of the Uri. So you can sort of create NFT as a dynamic one and you can see specifically and you can also later if you're done updating, then you can also freeze metadata. So everything is recorded on chain and users also see okay, you updated once but you can't update it anymore. So it's frozen now on a contract level. And if you just want to, let's say, test things out there's like Easy Minting with URLs as well and even in a file upload, this is a shared if you're using those Easy Minting endpoints, those will be minted to our shared contract. So if you're building your own application et cetera, then we recommend deploying your own contract. Then we can continue to enhanced APIs.
00:20:36.482 - 00:21:57.166, Speaker B: So first one is multi chain NFT search. So let's say if you count OpenSea or any other sort of majority of NFT applications, then he has some kind of search bar, right? But building a good search is quite complex, or it's not maybe so complex, but it takes quite a lot of time handing all the indexes to databases, et cetera. So what you can have is let's say you can search NFDS across different chains, we currently support Polygon theorem or you can search across both of them and let's say I'll fire it up and Denpo responds all the NFDS that have in their name or description the search query. So I search for Vitalik so I get all of the NFDS back. You also have a recommendations AI engine basically. And this is based on visual content. So let's say if I own some sort of specific art that looks, let's say has like abstract art, then I can actually, let's say typo here.
00:21:57.166 - 00:23:06.970, Speaker B: But I would want to find let's say similar, visually similar images to this one or recommend similar NFDS to users. Then what I would just do here is pass that image into the endpoint and it will respond with similar abstract NFTs images. So it's the AI workspace using computer vision and there is in the user interface where you can actually test things out as well. Fingible this is like a showcase application built in those enhanced APIs. You can do the text search here. This is the same endpoint that I mentioned to you. So with Alex plug elixir.
00:23:06.970 - 00:24:22.434, Speaker B: So this is basically the reverse image search. Here is the recommendation AI let's say. So as you can see, this was an original and you can find like similar ones or even you can actually, let's say, just describe what you want. And basically here you so Vitalik is smoking with a hat and there is also the counterfeit detection. So let's say if you this board yacht club specific one, I can take the contract address. I'll also filter out the same contract address NFDS entry trees search for and as you can see, very similar NFDS but those aren't actually the original ones. Probably OpenSea has even taken those down luckily or unluckily.
00:24:22.434 - 00:25:12.630, Speaker B: It's sort of depending on their point of view. And yes, those are sort of like depending on your own use case. You might want to show the user, hey, this kind of like NFD has been created already, or you might want to automatically take things down. This is up to the developers to decide. And yeah, those are also the duplicate detection AI that I just showed here as well. You can pass in an URL token ID or even upload a file as well. So this is sort of in a very quick manner give an overview of the NFT APIs and infrastructure and to sort of recap, you can really easily mint NFTs, deploy your own contracts dynamically mint NFTs.
00:25:12.630 - 00:26:37.298, Speaker B: You can get NFT data from ethereum polygon and you can use those kind of enhanced APIs which help you build better product. And I will now check what kind of questions do we have floor price? So this is the first question I will take. I guess this is about sales statistics. So floor price is actually from let's take this board ape one again, floor price is actually from openc. So where we're getting the floor price data, the rest of the data, let's say total volume, total sales, et cetera, et cetera, number of owners, this is all on chain data. So what's the delay between a Mint versus when it shows up in your index use case for this would be grading a live streaming here for thing dropped Minted right now. So I guess the question is about how fast.
00:26:37.298 - 00:27:44.002, Speaker B: Let's say if you mint with our endpoints and how fast the same NFDS are being sort of are available in our own NFD data APIs and usually it's like a few minutes. So if you would need to sort of have a use case of live streaming where you need it in seconds, then at the moment we don't have this sort of a fast turnaround in order to support that use case. But you can also test it out as well. It might be sort of quick enough for you. And second part of question, how fast for, let's say a transaction is recorded on chain and how fast it is in our index. Again, this is usually between like two to five minutes is the usual sort of delay at the moment USC 1155 supported. There's two ways how to answer the question.
00:27:44.002 - 00:28:40.870, Speaker B: One is for Minting, the answer is no, we are shipping it. We are basically like in the testing phase for it and we're shipping it beginning of next week, which means unfortunately, it's not ready for the NFD hackathon. NFD hack, but for NFD data, if you're pulling NFD data from any NFD data API, then ERC, 1155 is supported indeed. All right, so it seems I got all the questions covered and again, Nftport XYZ, if you'll DM us or just write to discord, we will also increase limits for you. And with that, I'd like to wrap it up and hope you'll have a fun and successful NFD hack. Bye.
00:28:41.370 - 00:29:18.570, Speaker A: Thank you so much, Johannes, for the awesome workshop. Super interesting and I'm sure everyone learned a lot from this workshop. And just to reiterate what Johannes said when he first introed himself, he was a hacker at last year's NFT hack and created this product and now he's back and supporting this year's T hack and it's super amazing to have him here and helping to support all of you. We do have a workshop right after this and some more today, and we also have our kickoff event at 12:00 p.m. Eastern time, so please be sure to tune into that and I hope you all have a great rest of your day. Bye.
