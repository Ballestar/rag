00:00:00.490 - 00:00:50.058, Speaker A: Hello? Yes. Okay, great. So I'm going to talk about this proposal that I think Phil mentioned earlier on today, which is basically block space auctions and an integrated market that kind of separates the function of block builders that come together, that actually package and come up with proposals from blocks the consensus function of what proposing. And our proposal to add that into the ethereum Sharding design. So a quick summary of the ethereum sharding design. So there's a beacon chain, there is a bunch of shard chains currently 64, but that amount is likely to increase over time. And the shard chains just have data.
00:00:50.058 - 00:02:04.910, Speaker A: So they're just a data availability space. And the reason why these shard chains exist is basically to provide space for roll ups to publish their data and have it be guaranteed by consensus through data availability sampling that this data actually is available. So projects that are currently roll ups with data on mainnet could instead be roll ups with their data on chart chains and this would increase their scalability by something like a factor of 100. Now the question is what actually is the fee market for putting data into these shards going to look like? Right? So basically the challenge here is that we're looking at these data blobs and it will mostly be roll up projects providing these large data blobs. But conceivably there could be multiple roll ups that provide multiple blobs that get included into the same shard block. And the job is to just make it easy for block proposers to choose what data to include and get paid for it. So this is the proposal for a market for choosing block proposals.
00:02:04.910 - 00:02:41.082, Speaker A: So there's a few steps, but I'll go through it step by step. So we have a class of actor called block builders. And the block builders propose block bodies and think of the block body as being just a lump of data. So it has no meaning within the protocol itself, but roll ups can refer to it. Roll ups will be able to make proofs that show that, hey, this particular piece of data actually is available because it actually was published in a shard block at some previous point in time. So the block body, you can compute a polynomial commitment and that can go into a header. And so there is this concept of a block body header.
00:02:41.082 - 00:03:32.826, Speaker A: A header contains the commitments of the block body and it also contains a signature from the block builder that produced it together with a number that represents what fee the block builder is willing to pay. So we have a bunch of block builders, they create a bunch of bodies and from those bodies you can create the headers. So the header is going to be at most maybe 100 bytes, maybe a little more altogether. And this all gets published into a special peer to peer network that we call the proposal header subnet. So then there is the block proposer. Right? So block proposers are these actors that are actually the ones that are supposed to have kind of ultimate choice about what gets included. And block proposers are going to look at all of these headers and they are going to take the one that has the highest fee and this is a mistake.
00:03:32.826 - 00:04:21.310, Speaker A: This should be zero point 15 instead of zero point 13. They're going to take the header that has the fee, that the highest fee, not the lowest and they're going to sign it and they're going to republish the signed header into the proposal header subnet and the block builder that actually created the winning header is going to see this. So step one, block builders create bodies, submit headers with fees, block proposer chooses the high C that they find, they sign it. And step three the block builder sees this and at that point it's up to the block builder to publish the body. Once the block proposer has submitted the header, the block proposer does not needs to do anything more. They have no further choice about what happens. So notice that at the time that the block proposer makes their only decision they do not see the body.
00:04:21.310 - 00:05:16.282, Speaker A: Right? So this makes the fee market very efficient for the blog proposer. They don't have to do any kind of complex math, all they have to do is see a bunch of headers and choose the one with the highest fee and they have no ability to censor because they have no ability to see contents. This gets published back to the network and then the block builder is the one that publishes the block body. They have to publish a block body where if you calculate the commitment that actually matches up with the header. And so the block builder does not have a choice of what to publish, they have to actually publish the original block body that they started with and then they publishes it to the main chart subnet. And then you have the Attesters who are basically the same attesters that are currently participating in E 2.0 consensus and instead of voting on basically either there being a new block or there not being a new block, they end up voting on one of three choices.
00:05:16.282 - 00:05:41.598, Speaker A: One choice is that the body is available so everything is available. The second is that the header is available but the body is not available. And the third is that the header is unavailable. So if the header is unavailable that basically means that well this basically means the signed header is unavailable. Right? So that means that the proposer kind of neglected their duties. The proposer was offline. If the header is available but the body is unavailable then that means that the block builder neglected their duties.
00:05:41.598 - 00:06:36.826, Speaker A: So in this case what happens is that the fee from the block builder to the proposer still goes through but the body is counted as not being included. And then if the body is available, then the body is counted as being included. So the goal is to basically replicate this kind of fee market design, sort of similar to what Flashbots does with a single bundle with this nice privacy property, but do it all in protocol in a way that's kind of very efficient, has very light trust assumptions, so properties, right? So block proposer does not know any contents during step one. By the time the block proposer assigns the header, which is step two. After they do this and after they publish, they cannot prevent publication of the block body. And the final actor in publication actually is the block builder, but they have no choice of what to publish. I made an ETH research post about this.
00:06:36.826 - 00:07:27.530, Speaker A: It may have been linked somewhere, but you can easily find it. It's like block builder proposal separation. Just search for those words that you research and you'll find it. And it talks about the rationale of kind of all of these design decisions. But the goal is to basically allow block builders to be this specialized actor that can understand kind of where to grab different pieces from roll up projects and other projects to come up with a block body. And then the function of block builders is fairly specialized and the function of block proposer is this very easy function that's very amenable to decentralization, which is they just see a bunch of headers and they pick the one with the highest price. So this potentially even allows the block proposer to be Mpc'd, for example, which could be useful for staking pools.
00:07:27.530 - 00:08:30.782, Speaker A: And it actually provides an advantage for decentralized staking pools because decentralized staking pools are the only ones that can. Credibly not be kind of siphoning off mev to themselves by side channels because they could have multiple participants that are running this algorithm and they would have to all agree on which of these headers has the highest fee. So this can be combined together with Flashbots. So Phil also talked about the possibility of combining together the SGX based approach with the economic approach. What I talk about here is purely economic, right? There's the fee. And the incentive for the block builder to publish is that if they don't publish, they have to pay the fee, but they don't get the benefit of their block body being included. And the incentive against censorship here is basically that if there is some underlying lump of data that pays a fee, then if the block builders try to censor it, they'll just get outbid by block builders who don't censor it.
00:08:30.782 - 00:09:10.250, Speaker A: And if the censoring block builders suggest start pushing their bids higher, then they'll have to basically pay higher bids than what they can actually get in revenue. And so they'll have to keep losing money very quickly. They lose money once every block forever, until eventually they have to stop censoring. Right? But these are all economic arguments. But what you can also have is you can have this market going from searchers to relayers, right? So block builders, in this case we could call them relayers, this would be the central actor and then they themselves would be listening to a flashblood style market where you have a lot of different searchers. Searchers can specialize. They can focus on individual roll ups, for example.
00:09:10.250 - 00:10:05.594, Speaker A: And so searchers are this function where you can do something useful even if you're very small, even if you're an individual hacker, for example. And then relayers would be responsible for just doing all this aggregating between the searchers. And you can kind of slot this into Flashbots and even kind of Flashbots with me VSGX. Almost as it exists today. Except instead of the contents of a body being unlocked when the miner gets the proof of work, the contents of the body would be unlocked when the relayer gets back the header signed by a proposer. So there's this nice kind of opportunity to create this three layer market that basically has a kind of very decentralized market of searchers doing all sorts of things to a fairly small but still competitive group of these more professionalized relayers and then going to proposals. So that's it for me and hope you enjoy the presentation.
00:10:05.594 - 00:10:08.250, Speaker A: Hope you go read these research posts. Bye.
