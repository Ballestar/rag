00:45:52.200 - 00:46:18.660, Speaker A: Hello. Hello. Whoo. I don't know if the claps for finally somebody talking here or because it's been great and it's over. Well, thank you so much for being here. I am super excited. My face may not show it, but welcome to the closing ceremonies for ETH Waterloo.
00:46:18.660 - 00:47:11.460, Speaker A: I'm Kartik. I'm on the 8th Global team here and we are here, so I wanted to kind of move things fast. We talked about how ETH Global has been for us in 2019 and I wanted to share some stats about ETH Waterloo specifically. We had over 800 people apply to attend these hackathons, out of which we had a little bit. Over 250 people get accepted and stake and we had a lot of walk ins. And this is the number of total attendees that have hacked here this weekend. And the way we kind of measure our success is we actually categorize the experience levels for all the attendees and we kind of try to track how many of the attendees are new to the ethereum versus kind of how they're advancing and progressing on how they self quantify their own skill sets.
00:47:11.460 - 00:47:36.510, Speaker A: This has been an interesting mix where almost half and half have been new to the Ethereum. Relatively new. I want to give a special shout out to the 22% of these attendees who had never done anything on the Web three world until this Friday. So congratulations, you did it. We had 65 projects submit this weekend. This officially makes it over 1000 projects submitted total over the last 14 events in ETH Global. And I'm so happy that we've kind of hit that mark.
00:47:36.510 - 00:48:04.736, Speaker A: And our judges did the hard job here of Marty getting reactions. Our judges kind of talked to every team and if you were part of the judging process or as a team, everybody presented to two different set of judges and they kind of combined their scores and we normalized to get these five top finalists for ETH Waterloo. So congratulations to Sheetcoin. ETH p to p VoIP. DC. Wallet. Wallet.
00:48:04.736 - 00:48:17.576, Speaker A: Notify and connection. All of you, I suppose, are in this room already. If you are one of these teams, just raise your hand. Just want to make sure I have a visual reference that says, perfect. We're going to go in this order. We'll have Sheetcoin up in a second and then eat. P to p.
00:48:17.576 - 00:48:53.270, Speaker A: VoIP. After sheetcoin. Please line up. I realize what I'm saying. Please come on that corner to just kind of be ready for your demo as the next team moves along. And just to kick this off, please welcome Shecoin. All right, thank you guys for all for coming.
00:48:53.270 - 00:49:12.476, Speaker A: My name is Sonny. I'm a core developer at Cosmos and also professional crypto troll. I'm Brent. I work on strategy at Cosmos Tenderman. Howdy? My name is Billy. I'm the founder at Clover's Network. Can I get some screen up here? I don't know who's in charge of that.
00:49:12.476 - 00:49:42.644, Speaker A: I plugged in some things, flashed any help? Cricket up. Okay, cool. I think I know what to do. You want to start them, right? So good. All right. Can you mirror it? You're not going to be able to do it like this. Can you give us, like, two minutes while we fix technical you can talk about? All right.
00:49:42.644 - 00:50:24.470, Speaker A: So Facebook is going on right now, like, trying to take control of the entire blockchain space with libra and whatnot. And so we've thought that the best thing to do is fight fire with fire. So our goal is to help Google take over the entire blockchain space. And to do this, what we've done is we've built Google Sheets as a sidechain to Ethereum, a trust minimized or trust mediumized sidechain to ethereum. And Ud has been talking about this for a while, and so we decided to make it a reality. And it sounds funny, but I think this actually is a huge UX piece that we can do a lot of cool stuff with it, which we'll walk through today. So Billy can start off the demo.
00:50:24.470 - 00:50:45.048, Speaker A: How is that? No third try. All right, so here we are. Beautiful Google sheets. At the very top, you can see we have this beautiful new addition, the Sheetcoin. So let's start this thing off by moving some coins onto the sidechain from Ethereum. We're going to deposit how many should we deposit? I don't know. Maybe four.
00:50:45.048 - 00:51:03.596, Speaker A: Okay, what's going to happen here? I'm going to send it to somebody. I'm going to send it to myself. And look at that. I'm using their email address because normal people have email addresses. Let's make that happen. We're going to open up a page here. We have a traditional web, three, because I'm moving stuff from Ethereum, which means I already have some stuff on Ethereum.
00:51:03.596 - 00:51:23.430, Speaker A: That's right. I'm going to move four, try to make this happen a little faster, and confirm. Cue the music. All right, great. As we're waiting for the deposit. So we're looking at this project. We've seen things like this in the past.
00:51:23.430 - 00:52:00.496, Speaker A: Burner Wallet was implemented on a POA network side chain. This is using Google as a sidechain. Basically, there's over a billion users with Gmail accounts. And these Gmail users can essentially access the blockchain via these sheetcoin tokens. So now that I have some Sheet coins here, why don't I send them to somebody else? How about myself on another email address? Love having so many Google accounts. Is that right? Yeah. All right, so you'll see that that person doesn't exist? Yeah.
00:52:00.496 - 00:52:15.616, Speaker A: We're going to make them I'm going to send them how many do I have? Four. I'm going to send them three. Okay. So we're going to sign this transaction. And this is where the magic happens. This is actually Google signing this for you. So Google is pretty good at keeping things secret, holding on to keys.
00:52:15.616 - 00:52:39.772, Speaker A: They're also pretty good at allowing you to own things when you want them to. So we actually shove in some of this metadata into a nonce when they sign on your login. Usually they just try to sign a nonce to prevent replay. But we actually have them sign our intentions as if they really were handling our private key and signing transactions for us. Once that happens, it goes through. We verify it and we're allowed to update this balance where now Billy at Tenderman has three. Billy Rennekem has one.
00:52:39.772 - 00:52:56.940, Speaker A: That was very fast, like a normal Google Sheet where you can just go edit it. Billy can't just go in and just start messing stuff around. All the transactions are verified using proper signatures and everything. These are all locked. You can see like a proper blockchain. We have accountability. All of our transactions blockchain, of course.
00:52:56.940 - 00:53:33.760, Speaker A: And now let's think about withdrawing. So I'm here, I want to take my three out. I'm going to withdraw my coins, all three of them. I'm even going to withdraw them to an ENS name. We hold that and so it'll go ahead and once again, you sign it with OAuth again. And then what we do here is we sign it as well from our server saying that not our server. The sheet has a private key environment variable in it and it signs using that and kind of verify it acts as like an oracle here.
00:53:33.760 - 00:53:56.784, Speaker A: But the key is we don't want to be able to steal people's money. And so what we do is on the Ethereum site, we also verify that the user did make a request to withdraw those funds. So we actually verify the OAuth signatures on Ethereum. So these are RSA encoded. It's expensive, but people love she coin so much. They're not going to withdraw that often anyways. Here you can see the transaction is pending.
00:53:56.784 - 00:54:19.310, Speaker A: It's outgoing. We're going to say, yeah, we want to actually submit it to the Ethereum blockchain. If something were to mess up here, you could go back, somebody else could submit it on your behalf, or you could try it again. This contains all the parameters necessary. Finally, we can go back into our Web three, connect, and make this thing happen. Thank God my ethereum balance is zero. But I'm going to hopefully increase it by withdrawing these three onto main net.
00:54:19.310 - 00:54:37.620, Speaker A: Just kidding. This is Rinkabee. Confirm. Be a little bit faster. Hopefully another drum roll. Yeah. And like I said, so it verifies the OAuth on chain and you have coins back on Ethereum.
00:54:37.620 - 00:55:03.080, Speaker A: And what we've done is this is actually an open API. So the wallet that we've built into the Google Sheets view is just one wallet, but we actually built a second web wallet. Anyone can build a wallet as long as they import the Google APIs. For Google authenticator. You can make your own wallets for this. Let's see what else? And yeah, what's the future? Right now, it's for a single token. So one sheet is for one token.
00:55:03.080 - 00:55:39.176, Speaker A: I think we can do more and more tokens on one chain, maybe on different tabs. So we essentially have, like, full sharding going on right there. And the other nice thing, another next step would be native Sheetcoin. So currently the sheetcoin has to originate as an ERC 20 on Ethereum and come into Sheetcoin. It'll be nice if we can have native Sheetcoins. So, for example, like a cap table, right? It can exist natively on a Google Sheet, but then you can take your shares onto Ethereum and trade on uniswap and then bring it back onto the cap table. So yeah, that's it.
00:55:39.176 - 00:56:40.990, Speaker A: Thanks very much. That was awesome. Next up, I'd like to get Eat P to P VoIP on stage, and I'll have DC wallet over there on deck. Please welcome eat p to p VoIP. I need the other cable. Do you have this one that's still HDMI? I mean, you don't have an HDMI? We're having some cable difficulties. So give us about 30 seconds.
00:56:40.990 - 00:57:16.286, Speaker A: Somebody from the AV room. We're trying to get an HDMI connector. If you can have that for this, that'd be great. Never mind. I just figured out what's going on. We're all set. It all right.
00:57:16.286 - 00:57:38.882, Speaker A: What's going on? Cool. Hi, my name is Ethan, and I made ETH p to p VIP. Or as my friend called it, e teeth. Phone home. So the inspiration is that I hate getting spam called. And 1 second, I want to make sure I don't. Okay.
00:57:38.882 - 00:58:19.598, Speaker A: I hate getting spam called, and I wanted to put a barrier between myself and the caller and have the caller pay a price that I define. So I wanted to create an incentive for me to pick up because otherwise I just get a bunch of calls and I can possibly get scammed. I think it's a terrible idea that phone numbers are a source of identity, so why not use another form of identity such as the Ethereum address? I wanted to get rid of providers that sell your number, your data, et cetera. I wanted to get rid of SIM swapping, and I wanted to see if I could make phone calls using an Ethereum address. And I wanted to put, at the end of the day, more control into the receiver's hands. So to give an example of how easy this is to flood somebody, I'm going to flood my own phone. Please don't call me.
00:58:19.598 - 00:59:08.638, Speaker A: I know my phone number is on the screen, but right now I'm just going to call myself, and I can just keep calling myself over and over and over again. And I can do this with anybody, any phone number, and it's really annoying. And so at the end of the day, this costs less than $20, right? It takes me like, $20 to fill the account, and then it takes cents on those $20 to make these calls and continue to do this. So ETH PDP vuip effectively allows you to call an ethereum address. Now, let me explain how this works. There's a few rules that exist here. So everybody is blocked by default, all right? That means that all users have a default price that they pay when they enter, which is everybody from the start, since it's a hash that has everything that's two to the power 256 minus one.
00:59:08.638 - 00:59:31.142, Speaker A: So that number is 1.15 times ten to the 77th, which you probably don't have. So everybody's blocked by default. And user A defines a price for a token they are willing to accept for. So that can be TCAD, that can be WETH, that can be dai, it can be anything, and I set that price. Then there's a call list. So that call list allows to define who can call you for free.
00:59:31.142 - 01:00:02.194, Speaker A: So if user B calls user A and user B is not on user A's list, they pay user A's token price. If user B calls user A and user B is on user A's token list, then it's free. That call is free excluding gas. And at the end of the day, if I have user A miss A call, then the amount that otherwise would have been given to user A is actually refundable or actually able to be withdrawn by user B. So you can think of it as like a phone booth. You put in the money, you make the call, but nobody picks up. You get your money back.
01:00:02.194 - 01:00:39.562, Speaker A: Okay, so let me demo what this looks like. One thing to keep in mind, you're going to see two things here. The first thing is that the test is going to show what it's like to call somebody that you otherwise don't have access to call, as in they haven't defined their price, meaning it's max. The other thing is you're going to see me calling myself because I did not figure out how to change and then accept a call for myself on the same machine. It was really weird. So I'm just calling myself. So when I do connect, my machine will bug out and scream.
01:00:39.562 - 01:01:00.594, Speaker A: So I apologize for that. But here we go. So another thing to note here as we're waiting for this, is that the actual VoIP server is decentralized. It's p to p effectively. Like I contact you directly. I don't use twilio. I could have used Twilio and rotated the numbers, but I did not.
01:01:00.594 - 01:01:47.314, Speaker A: I kind of went the extra mile and just decided to use this peer to peer service. So here we'll see that I tried to call an address and that output is to show that that's the max amount that I have to pay of TCAD in order to do that. So the test passed by showing that I performed an invalid call and I wasn't able to actually call. Here it's actually calling. Let's see, oh, looks like I won't be able to show you the voice. Maybe if I okay, well, as this is happening, the contract actually acts as an Escrow. So you'll see right here, there's a balance of 100 that's in TCAD, and after it's answered, then what will happen is that I will withdraw that amount.
01:01:47.314 - 01:02:09.420, Speaker A: So this should actually go back down if it's been mine. There you go. So the Escrow is the registry contract. The funds are put in, then they are pulled out. I would like to unplug this and actually show that it did do a call, because otherwise you're kind of just looking at a terminal. So I apologize, but let's see what happens. Let's see.
01:02:09.420 - 01:03:00.746, Speaker A: Is this okay? Yeah. So that's the thing. It so I only have a few things left here, which is that I kind of like this project. I'm not really sure where I want to go with it, but there are some other things that might be interesting to think about here, which is that I could choose a better encrypted VoIP service, which means that right now it's just like something that I got kind of modified and used, which means that you could do, like browser calling. You could put in a MetaMask Snap and effectively call somebody through MetaMask. And I'd also like to build out, like, a utility that right now, it's just a contract. It's been abstracted away.
01:03:00.746 - 01:03:39.240, Speaker A: But to do all that through a utility on the front end, that facilitates that would be great. It'd be cool to have some better mechanism to determine when a call ends. So, for example, to have the actual app be the Oracle that determines that if a call was or was not taken, that would be really useful. And then also, the thing that I think is probably the most compelling is creating a dynamic pricing scheme so that if you're popular, like Vitalik and you get a lot of phone calls or something, that price just goes up. And then if you're not, then it goes down and it changes dynamically. Anyways, that's Et phone home, East PDP VIP. Thanks.
01:03:39.240 - 01:04:41.030, Speaker A: Can't wait for search pricing on my phone calls. It's great. Next up, we'll have DC wallet. And I'll have wallet notify beyond deck. Please welcome DC Wallet. Who else had a nap with their eyes open today? Okay, for our project, what we tried to do is we tried to take all the amazing things you can do with smart contract wallets in the back end and the new technology that came out with MetaMask with the Snaps plugins. And we tried to connect those things together.
01:04:41.030 - 01:05:17.910, Speaker A: Do you guys hear what I said before? Yeah. Okay, good. So essentially, for the user, the experience is that it looks like MetaMask, like you're just interacting with account like you would normally, but in the back end, because you're dealing with a smart contract, you could do all these amazing things. So one of the use cases we wanted to show today is what happens when you die, what happens to your crypto and it's a difficult problem to solve. So we're trying to deal with that custody problem. In this particular use case with the plugins and with the smart contract wallet to the back end, the possibilities are amazing. But we will show you this use case and a couple of other things.
01:05:17.910 - 01:06:19.720, Speaker A: All right, I'm going to just go over and show you how it works actually. So you can think of this page as kind of configuration page. It's not adapt, it's like config page for your MetaMask plugin. So you connect regular way to MetaMask, then the plugin is going to ask for permissions, we grant those permissions and then we click create. And what is happening right now we are actually creating a custom account inside MetaMask. Then we are deploying a smart contract wallet on the blockchain and we are using the address to set that account inside MetaMask. And as an addition we are also adding two tokens for convenience of the user which is USDC and TCAD.
01:06:19.720 - 01:07:33.608, Speaker A: All right, so now you can go to MetaMask and you open your wallet and you see DC wallet. So this is actually a smart contract but you can use it the same way as any other account. So from the user perspective there is literally no difference except we have to adjust gas. But other than that it's literally the same thing. And the nice thing about it is also that this smart contract, it's actually supporting generic transactions. So basically it doesn't really matter if we are sending Ether, if we are sending USDC, if this is just a transfer or this is a compound and I'm just making an investment and getting cUSDC back, it really doesn't matter, it's all working the same way. So I want to show you one of the things that we chose to add to the smart contract wallet, which is recovery.
01:07:33.608 - 01:08:48.950, Speaker A: So I'm going to put my default account address and I'm going to put 120. So what I'm doing right now actually I'm sending transaction to my smart contract that is saying if I don't do anything during next 120 seconds, send all my assets from my wallet to this address that I just gave you. And the only way to postpone this is click I'm alive, which resets the clock. Well obviously no user is going to do it because they're probably going to forget about this page after the first setup. So basically you just can use your wallets normally, like everyday use, you do transfer, you do ERC 20, you can go to your DAP, you can go to your decentralized exchange and basically every single time that you do any action whatsoever, you send any transaction, this clock is going to reset. Did it reset? No it didn't because I didn't send from the right account. Okay, so let's try again.
01:08:48.950 - 01:09:31.104, Speaker A: Zero one okay, now I'm using DC wallet so that should work at the moment of truth. Yes. Okay. All right. And the last thing that I want to show you is what happens if actually we hit the limit. What happens if we put like, only 16 seconds so we don't have to wait too long and we go to the wallet. We go to DC Wallet.
01:09:31.104 - 01:10:15.216, Speaker A: We have eight, we have USDC and 10. Okay, we got tokens, we got USDC. Actually, we didn't have any tickets, so that was before. So you go to DC Wallet, it's zero. This is zero. And if you actually noticed, this set recovery address button is sending a transaction to the blockchain, but there was no confirmation. And we can do that because each MetaMask plugin is given its own private key that can manage all those smart contract accounts from the inside.
01:10:15.216 - 01:11:19.512, Speaker A: So basically, we don't really have to ask a user for any permissions or any confirmations. It just works. Obvious thing that we could add here, probably some of you notice that we are prefunding the wallet and we are also prefunding with Ether and we are prefunding with the ERC 20 tokens. So what happens inside is that every transaction is actually sent by this internal private key that is an owner to the DC wallet. And this private key actually needs to hold some kind of Ethereum to be able to send those transactions. So what could be done very easily is support of meta transactions that from that moment the DC wallet would be able to pay for himself. And at this point, you could use this wallet as any other Ethereum account.
01:11:19.512 - 01:11:53.612, Speaker A: So that's all from me. Anything to add? All right, thank you. Thanks, guys. Next up, we have wallet. Notify Please welcome Wallet Notify on stage. Hi. My name is Roman.
01:11:53.612 - 01:12:55.526, Speaker A: This is rustam. Igari and amsel wait for us to set it up. And we made a way to send rich text cushion notifications to Ethereum addresses, so all right, cool. So identifications are pretty ubiquitous. It's hard to imagine how to live without them, but just some of the use cases are DeFi. So when you're about to be liquidated, it's nice to get a push notification. And a lot of the times the only thing that the Dab has is your wallet address.
01:12:55.526 - 01:13:48.230, Speaker A: ENS could send you a push when your domain is about to expire. All kinds of DAOs have these fixed voting periods where you need to show up and vote. And actually there is like a fourth bullet here could be used in upgradability. So before whatever DAP that you're using gets updated, you can get a push so that you can get out if you don't like the update. And the implementation is pretty simple, actually. All we do is we wrap all the data we need to render identification and we put it in the transaction data and then we send that transaction to the wallet of the recipient. And as long as everyone does it in the same format.
01:13:48.230 - 01:14:59.070, Speaker A: Wallets can identify those types of transactions and treat them as notifications and show them in a different way, give you, like, a badge count, or in case of trust, they could send you an actual push notification. And in general, Wallets usually have some kind of way to reach you and they can isolate your PII from everyone else. So for this hackathon, we built four things. We made a draft for the standard just so that everyone kind of formats the data of the transaction the same way we made an NPM package that does exactly that so that you don't have to go through the standard. We build a front end that uses the NPM package to craft those notifications and set them to the Wallets. And then we made a fork of MetaMask, and we changed the way it displays transactions that are the notifications. And we'll show you a demo with the front end and the MetaMask.
01:14:59.070 - 01:15:43.818, Speaker A: So hold on for a bit. These are like two different browsers. One of them is Brave and the other one is Chrome. So we have two different instances of MetaMask, and the one on the left is a MetaMask fork. So this is just kind of like a Gui that lets you craft notification. And you can set your address of the recipient, which we'll select from the other window. Set the text set the text message.
01:15:43.818 - 01:16:46.020, Speaker A: That's the only required field you can set, like, the thumbnail for your notification. Think of it as a logo, and you can set, like, a click action. So whenever somebody clicks notification, it either opens a URL or you can put things like Ethereum, Address, Amount, and call Data so that you can craft a transaction whenever somebody clicks notification. So, for example, you can get a request to extend your ENS domain. And then when you click Notification, the transaction screen flies out and you're done in one click. So let's try sending it and we'll so within this transaction, it's a zero ETH transaction, but inside the data, the payload is formatted in the way that Wallace will recognize. So I'm going to go ahead and send this transaction, and you can see that it's pending over here.
01:16:46.020 - 01:17:45.300, Speaker A: And once this is confirmed, it should show up over here on the left side. And this is our forked version of MetaMask, which recognizes those notifications, rather those transactions as notifications and handles them differently. So while we wait for that, we would have hoped for this to have been sufficient inside the MetaMask plugin API, but it wouldn't necessarily work with the functionality that's been exposed right now. So we just went ahead and forked it, and hopefully this shows up soon. Okay, so the transaction is confirmed, and it's on Ether. Scan has the data. It's not here yet.
01:17:45.300 - 01:18:27.860, Speaker A: All right, there it is. Yep. So this is the message that's embedded in the input data. This link is the one that we set the action to. And as Roman mentioned, this action could actually trigger other things other than just opening a URL. Like it could initiate a transaction with a preset properties of payment amount and address to send to and things like that. Yeah, sure.
01:18:27.860 - 01:19:39.560, Speaker A: So the next thing that things that we can add to this in this shape and form, I think this is going to be already pretty useful for a lot of use cases. But on top of that, we could add relatively easily message encryption because we know the address of the recipient and we can get a public key out of it as long as there were some transactions there. And encrypted, we could send unencrypted transactions to multisig wall. It's no problem. But with encrypted transactions, with encrypted notifications, it's tricky because there's no key and there needs to be a way figured out for that to work. And also, I think the killer way to use it would be to integrate with something like a trust wallet or some kind of app that has access to your actual APN that can send you iOS Android push notifications. So this way you send notification to Ethereum address and the person receives it as a push notification from their wallet on the phone.
01:19:39.560 - 01:20:22.470, Speaker A: We want to make an EIP out of it. Oh, yeah. And this is all going to work only as long as people agree on the format. So we started an ERC and we hope you guys go check it out and comment and we can agree on the way we format things and then yeah, just go there wallet notify we have Telegram channel set up and join the conversation. Thank you. Thank you. And our final demo for the weekend, please welcome Connection on stage.
01:20:22.470 - 01:20:53.086, Speaker A: Don't worry. Can we switch midway through? Yeah, you can. That will just be has that worked? TADA. Okay. Hello. Okay, here. All right.
01:20:53.086 - 01:21:24.442, Speaker A: Hi guys. We'll keep it short. They basically did the pitch for us. We're basically enabling communication to smart contract addresses as well as ENS through our platform in a decentralized way. Yeah, so the use cases would be the same. We just implemented it in a different way. So our thing likewise is built around a MetaMask plugin, which we prompt the user to install before they can use our service.
01:21:24.442 - 01:22:07.474, Speaker A: So we're all familiar with this step. I actually messed up my password, give it the necessary permissions log in, and all I would have to do to send a message is put in an ENS or put in just your regular address. So let me do that. And all I would have to do is hit send. Once again, MetaMask pops up. And there it goes. So it should pop up in Darcy's MetaMask and it would appear right in the native MetaMask UI.
01:22:07.474 - 01:22:26.026, Speaker A: So hopefully she gets her screen up before the transaction actually gets mined. So we can see it popping up here. You go. Is that the right one? Okay. Yeah. And the way we are listening for these transactions and showing them is with defuse. Oh, okay.
01:22:26.026 - 01:22:44.180, Speaker A: It popped up just in time. So what Diffuse is doing is alerting us of all the events that the contract is emitting and we pipe the relevant ones to her client. So this website and the MetaMask plugin. So if you could just click on the message. TADA. There was my message. Easy as that.
01:22:44.180 - 01:23:15.760, Speaker A: Awesome. So I'm going to demonstrate our other feature, which is actually called Broadcast. So Broadcast works in a similar way to messaging, except this way people can subscribe to your ENS or to your address. And whenever you send a broadcast, anyone who's subscribed to you will receive that message. So Ryan here is subscribed to me, so I'm just going to send a message to my friends. It's okay. And then Ryan should receive it.
01:23:15.760 - 01:23:54.140, Speaker A: And so actually, after we resolve the ENS, we take the sender address, the recipient address, and the message, and then send it to IPFS to be hashed. Once that returns, we then send it to the smart contract to push it to the blockchain. So, yeah, we're still waiting for the broadcast to be sent. Cool. Perfect. There it is. And shows up just like a message.
01:23:54.140 - 01:24:24.322, Speaker A: Cool. So I'm going to talk a little bit about our tech stack and how exactly this works. So obviously, we use IPFS for storage. We use Diffuse for streaming events from the smart contract. We use MetaMask plugin as the core. Also, we sort of hacked around like we didn't fork MetaMask like those guys. So we sort of hacked around your asset list.
01:24:24.322 - 01:24:57.994, Speaker A: So this is the place you'd usually see your ERC 20 tokens. So we kind of made a message token sort of hacky, but every single message you get is a new token and it has the URL attached to it that you can just click on and it'll go to our website with a hash parameter in the URL that allows it to resolve from IPFS. Challenges are also quite similar. Like, we haven't done encryption yet because MetaMask plugins, well, we can't access their private key directly. The user would have to enter it manually to decrypt it. And that's kind of bad. UX.
01:24:57.994 - 01:25:25.000, Speaker A: So we just skipped it over right now. And lastly, I guess, huge shout out to Dan from MetaMask. I don't know if you're here right now, but thank you a lot. He was up with us to like five in the morning helping us get this work, this thing. Yeah. I also want to give a huge shout out to Chickpea Curry for literally powering the creation of this hack. Without them, it wouldn't be possible.
01:25:25.000 - 01:25:58.518, Speaker A: Cool. Yeah, I think that's all. Yeah. Please give connection. And all five of our finalists a big round of applause. Who. The most interesting things I just realized is that actually, first of all, these were only the five finalist projects.
01:25:58.518 - 01:26:38.406, Speaker A: There's 60 more that were made this weekend, and I highly encourage you to check those out at eatwaterloo two devpost.com. Obviously, we couldn't show all of them on stage here, but it's incredible that we're seeing all these cool, amazing sort of problems being solved. And kind of the most obvious thing I just realized was that I would say all of these things are forcing us to make things ready for millions of people to come in. And that's just incredible to see here this weekend. So congratulations again to all five of the winners and we'll move on to the next part. So those were some of our finalists. What I want to do now is that a lot of teams and a lot of you guys apply to a lot of the sponsor projects.
01:26:38.406 - 01:27:14.762, Speaker A: So I'm going to have some of the sponsors come up on stage and talk about who won and those prizes. So what I'll do is all the sponsors, you know, who that you're coming up just come onto this side altogether. And we'll kind of just swap mics every now and then or after every other person. We'll grab this one as well. And I'll start this off with Sean from Fortmatic. Please welcome Sean on stage. Yeah, I wish we had enough money so we can fund a lot of awesome projects, but it was really tough picking the top three.
01:27:14.762 - 01:27:42.210, Speaker A: So we made a last minute change to pick four of them and then kind of adjusted our bounty. So, yeah, the grand prize winner is Cad2500 in Dai. And that goes to NIA. He's an absolute beast. Solo the entire project. He was very patient with us. Iterated with us on improving a lot of our bugs.
01:27:42.210 - 01:43:26.740, Speaker A: And he actually depicted the perfect story from earning crypto, getting users into the ecosystem and actually integrated formatic into the nosis safe, providing like a smart contract wallet. And also connect that to the entire DeFi ecosystem. And even added three box identity. So that's a really good vision to what yeah. Connected all the dots and shadow and everyone the level. And that's, um and but yeah. So that's was do that's the and.
01:43:26.740 - 01:46:45.934, Speaker A: And please thank all of that to make this possible. Thanks to the translate team for managing her process as well as making everything else. On top of that, this is heavily available with the help of volunteers. These are some of the amazing volunteers that have heard this entire weekend. On top of that, these events go on for months, but it takes us months to make this happen. And there's a special team that has been working with us, specifically Nabir Davis, Andrea Gregory, adam spending the last few months with us to make sure that we have an amazing experience here. And without you, this would not be possible.
01:46:45.934 - 01:47:38.320, Speaker A: Thank you so much. On top of that, we have our amazing drivers who saw Adam's amazing demos, the staff at the building, the photographers who have been here, the videographers, everybody who's been here to make them decide and make this an amazing experience for every please give them I don't get to do this thing enough. This is amazing. Five other people have been spending all their time and energy. Heather Leon and if you see them, give them a shout out. Make sure that they know. That is amazing.
01:47:38.320 - 01:48:45.282, Speaker A: This has been an incredible journey to keeping you trained. So thank you so much. 2 hours ago, the application so if you know my time there on February 13 before the day the next yay. So the finalists, we've got five teams presenting on stage and the question is, what do they actually win? What about the winners? If you have a bit of a midfielder, this isn't a competition. We don't do 2nd, 3rd year. We want to make sure that this is about bridging and keeping that the factors are presented on stage. Winners, each of them again, is actually 758 Patreon member on top of every thousand.
01:48:45.282 - 01:49:59.446, Speaker A: So this is I have my congratulations to all five of you, five teams on top of that, there's going to be a special podcast for this coming week. So not only the project, but also the experience at these events. So congratulations to our five winners. This is my final match. This is our last event. As we've been talking about, this just kind of wraps up and a lot of people come up to me and the rest of the term asking about it, what's going on in 2020 on that. But what we're going to do is go to and we're going to spend the next few weeks finalizing that Twitter and my website and everything else.
01:49:59.446 - 01:51:07.314, Speaker A: If you want to be the first to find out what the next event, just get an update about CA and you are the first person to that email, so stay tuned on that. However, this is what a moment. It's been two years you can look at this and we've kind of been to different cities so that we can give opportunity to out there that's outside from the US continental cities. And to us, this is what makes it greater. But the problem is, for every 100 people that want to come to an event, there's others that are not able to anywhere from financial to not being able to come to a mobile city. Just in general, they're not able to come by the court that time. These are bedrooms that we play about and it's a fairly nice so we wanted to do something built for next year and we're still figuring out what it is.
01:51:07.314 - 01:51:51.554, Speaker A: But I want to be the first to say with you that we're actually going to be piloting an online hackathon and we're going to pilot online and this will be specifically on DFI and we're just announcing this online deadline. And you can go to youth to be the first one to be involved with this. We think this is an incredible way for us to offer this to a lot more people and as we decide on how 2026, the theme we're going to stick to is how do we get millions of more people into this ecosystem? So we're back dream big. Keep working on your projects. There's a lot more to do in this ecosystem and building this together and we're going to all go to concert. That's a family. Thank you so much for making that happen.
01:51:51.554 - 01:51:52.190, Speaker A: Congratulations.
