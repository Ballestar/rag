00:00:15.160 - 00:00:35.260, Speaker A: We got a few few stragglers. Hey, welcome. Dude.
00:00:36.080 - 00:00:37.348, Speaker B: How? It?
00:00:37.434 - 00:01:12.990, Speaker A: Maybe I'll just wait like 30 seconds, see if anybody else comes in. Okay cool. We'll start. So yeah, my name is Gerald, I work at union. I'm a dev. And we'll start by just giving a brief overview of what union is, what problem we're actually solving. I'll go through a little bit about how you actually interact with a protocol like which smart contracts you might be looking at and what functions you might be wanting to be calling.
00:01:12.990 - 00:02:00.584, Speaker A: And I'll also go over a few potential ideas just to give you an idea of some things you could actually do with the protocol and then obviously at the end I can answer any questions you might have. So yeah, union in a nutshell it's basically like a credit network. It's a coordination layer. So if you're a person, a Dow, a contract, you can essentially become a union member and either borrow from a credit line or provide a credit line to anybody else. And anybody else that you'd be providing a credit line to could be people, groups, investments. So yeah, it's really like just that coordination. So like an example would be like and Jacob's given me these really difficult names to pronounce but let's say it's.
00:02:00.584 - 00:03:01.188, Speaker A: So we've got Jean, Ophelia and Claire and they're three separate parties and they want to trust the Louvre Dow, I'm going to say that is and so each of them trust the Louvre Dow and Gene trusts the Louvdao for 100, Ophelia for 50 and Claire for 250. So now the Louvre Dow has a credit line of 400 and the Louvre can do what they wish with that credit line. So if they borrow 100 they obviously have to repay the 100 before they default plus basically their interest fee. So that's essentially like hey guys. So yeah that's essentially how union works. And just to briefly go over that again you basically have three parties. Each of them can trust a single contract, in this case the Louvdao.
00:03:01.188 - 00:03:52.860, Speaker A: They can trust them for an amount. In this case Gene for 100, Ophelia for 50 and Claire for 250. At which point the Louvdao now has a credit line of 400 and the Louvre can borrow from that credit line, do what it wishes with the money and as long as it repays it with interest it won't go into default and that's good for everybody else. So yeah this is just an example of the trust graph. You can have one to one, you can have one to many, you can have many to one. So you can have all these different types of borrowing and lending sort of schemes and yes, kind of up to you to define what those might be. So yeah, basically what I just said, you can do one to one, you can do one to many, blah blah blah.
00:03:52.860 - 00:05:00.290, Speaker A: So with union we have this onboarding process for new union members. So in order to actually do anything on the protocol or anything meaningful like borrowing, you have to be onboarded as a union member. And to do so, you need to have free vouchers from existing members. And so this is kind of like a little bit annoying when you're just trying to build stuff because you have to get these free initial vouchers. But we do this to try and make sure that the network grows in this kind of well connected way and you don't just have a single connection for the network. But anyway, in order to onboard a contract to become a member, there's one contract that you have to interact with that's called the user manager. So once you have free people that are trusting your contract, you can then call register member on the user manager and then your contract will become a union member and from which point you can then start to borrow, repay and vouch for other people.
00:05:00.290 - 00:05:41.308, Speaker A: Also, when you call this register member function, you have to have one union and at which point the union gets burnt. Anybody can call it, so it doesn't have to be the member that's trying to become a member. Somebody can call register member on behalf of the contract that you're trying to register. So we do have an SDK, so it's on NPM. You can get it by installing Union credit v one SDK. And what's essentially inside this is just like some helper functions to help you interact with the union protocol. So for this example, we have a contract that's called Squeef with friends.
00:05:41.308 - 00:06:20.808, Speaker A: It's a union borrower. And basically what you can do is people can vouch for this contract. This contract can then borrow from its credit line and it can go long on squeaf. So assuming that you're vouching for this contract and you think that long term ETH is going to go up, you might want to vouch for this contract. This contract can then borrow from its credit line and then it calls this invest in Squeef function which you can imagine just goes off to an AMM and buys some Osqu. Likewise, you can go the other way around. This contract is actually misnamed, but this would be a union voucher.
00:06:20.808 - 00:07:08.252, Speaker A: So instead of borrowing funds, this contract is going to vouch for people. And so this would inherit the union voucher contract which is also in the SDK. And once it becomes a member, it can vouch for owners of the Frank Frank NFT. So if you're a holder of a Frank Frank NFT, you can call this contract and this contract will give you a credit line. So you can start building like little communities that maybe have some characteristic that you want to vouch for and you can build contracts to vouch for people based on that. So other things you might consider is like what is on chain that I can use to determine if I want to vouch for somebody. So maybe you look at their ENS, you look at how long they've been holding their ENS and you try and determine some sort of sentimental value for it.
00:07:08.252 - 00:08:03.470, Speaker A: You could write that into a contract and vouch for people based on that. So yeah, so just a few ideas of things that you could build on union. So this would be like a credit union. So imagine you have a Dao and the Dao is initialized with free people and we will call these people Dgens and those free Dgens can approve another new member for the Dao. And to do so they have to not only vouch for the member on union, but they also have to vouch for the member to become a part of this Dao. Once that member joins the Dao, it will now have not only a credit line from the free original Djens that vote for them, but it will also get a credit line from the Dao. And this way you can start to build up like a pot of money in the Dao where you have a bunch of people that are members that can borrow from this credit line.
00:08:03.470 - 00:08:48.200, Speaker A: So that's one simple idea. Another idea could be like a Pay with union button. You could simply do it as a UI piece. So you have a button on a UI, you click the button, it borrows from your credit line and it sends that money to whatever you're trying to buy. A less simple approach to this would be like to write basically like a credit account. So instead of you your EOA being the member, you could build a contract to be the member. And this contract could have some extra abilities like borrow and pay in one transaction or borrow and transfer in one transaction or anything you can imagine that you could put into this credit account contract.
00:08:48.200 - 00:09:37.476, Speaker A: So yeah, think nosis safe but with some built in functions that interact with the union protocol. And this is one actually that when we were talking to Superfluid yesterday, they gave us this idea and it's basically like provide a credit line for somebody that has a superfluid stream. Obviously there's some issues with this being that how do you necessarily know that you should be providing credit just because somebody has a superfluid stream? But it's an interesting idea that if somebody is being streamed income you can see that they have an ability to pay repay a loan of a certain size. So you could create a voucher contract that checks for somebody's stream on superfluid and then vouchers for them an amount to give them a credit line based on.
00:09:37.518 - 00:09:40.940, Speaker B: That cool.
00:09:41.010 - 00:09:52.250, Speaker A: And that's pretty much union in a nutshell. So if you have any questions, let me know and I'll be happy to answer. Yeah, go for it.
00:09:53.920 - 00:10:07.564, Speaker C: You mentioned when you take out a loan you have to pay interest on it. I was wondering where does that interest go and also how do you kind of figure out if someone's kind of in debt?
00:10:07.692 - 00:11:27.716, Speaker A: Yeah, so to deal with the second question, how do you figure out if somebody's in debt? So in the protocol we call it overdue and basically if you're overdue you're owing money and you haven't repaid your loan on time and that function is in the utoken contract and it's called check is overdue. And so what does it mean to be overdue? So if you're a staker vouching for people, you're earning union tokens by doing so and the rate that you earn union tokens is based on if your loans are healthy. So if I'm lending to you and you default on your loan and now you'll become overdue, the amount of union that I'm earning is going to drop basically. So that's how the overdue piece works. As for your first question, where does the interest go? So union is like a two sided market. You have the stakers that are underwriting the loans, but the people that are borrowing are not borrowing from the pool of money that is being used to underwrite the loan that just gets staked in the contracts. There's a second pool of money which we call Udi Minters and they basically mint money into this reserve pool which is what people actually use for borrowing.
00:11:27.716 - 00:11:44.640, Speaker A: And the interest can get paid? Well, the interest always gets paid back into this pool of money and it can be determined within the protocol. Should that interest go back to the people that have originally deposited in the pool or should that money just remain in the reserves and in the treasury.
00:11:46.740 - 00:11:50.320, Speaker C: Generating token? And then it kind of like increases.
00:11:52.020 - 00:12:43.052, Speaker A: Udai is just like a token to say you have added Dai to the reserves. So yeah, it's not like one for one with Dai because obviously if a bunch of people default there's like less money in the pool for you to withdraw. But if a bunch of people are repaying their loans and it's going up with interest, then yeah, there would be more money in the pool. Any other questions? No? All good then. But yeah, if you do have any other questions, if you think of them in the day we're on Discord, we've also got there's like union finance, you can find a bunch of useful links, we have Docs, et cetera, et cetera, just ping us. The easiest thing to do is just.
00:12:43.186 - 00:13:07.710, Speaker B: Message us and we'll help you answer all it's.
