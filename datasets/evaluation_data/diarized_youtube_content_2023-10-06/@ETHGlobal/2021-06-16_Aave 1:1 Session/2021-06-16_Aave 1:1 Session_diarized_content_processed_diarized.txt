00:00:00.250 - 00:01:05.090, Speaker A: To know a bit better about this protocol and how can you integrate it using solidity? Yeah, I will share you some slides to see how the protocol works with some coding snippets so you can easily see how to integrate this. Let's share my screen. Okay, so basically my name is David. I'm one of the smart contract developers from the team. Yeah, what's Aave is an open source, decentralized and non custodial liquidity protocol where users can take interest by depositing and borrowing or borrow crypto assets or cryptocurrencies. So with this diagram, we can see how more or less how it works from one side. From the left side, we have the depositors.
00:01:05.090 - 00:02:17.218, Speaker A: The depositors can provide liquidity in crypto like ether or die, and as a reward, they receive some interest. The interests are determined by the demand of that asset and the market demand. Then after this user deposit liquidity inside the protocol, they can use some part of that liquidity as collateral to request loans in an instant way in a variable or stable interest rate. The main actors of the protocol are the well, the posters, the borrowers, the collateral liquidators, and also the integrated applications. There are other protocols that can integrate and they become integrators at the end. So one important key between the depositor and borrowers that both actors can interact with the protocol in an independent way when they want. Both of the actors doesn't need to be matched inside the protocol or they don't need to contact each other.
00:02:17.218 - 00:03:34.800, Speaker A: They talk directly to the protocol about the total value lock is the amount of the crypto assets that are deposited inside Ave. Currently we have like $21 billion deposited inside the protocol and inside the different markets that exist inside of Ave. And here we can see the chart of the growing total value lock since one year. The deposit of Ave grows a lot more because of the increasing interest of cryptocurrency and also the activity of the incentive for the safety mode and also the adoption of the polygon side chain. The total value lock come from, as you say, from the markets of the Abe protocol and the Safe model. Currently, there is four markets, the AB one. The main one is the AB two market, the MMM market and the Polygon market.
00:03:34.800 - 00:04:32.050, Speaker A: The MMM market is an special market where you can deposit liquidity provided tokens from uniswap or balancer to use it as collateral. So you can borrow money using your liquidity tokens. So in that way, you can optimize your balance and you can do more stuff with your deposit liquidity inside uniswap or balancer. The main features of the Ave protocol. This one you can deposit and receive tokens that you can borrow in a stable or variable rates. You can do credit, delegation, flash loans and participate in the governance with the Release Division Two of Aviation. That happened some time ago.
00:04:32.050 - 00:05:19.470, Speaker A: We have new features. The phase one is the batch flash loans where you can request multiple assets in the same flashlong. You can also do a flashlong and interact with the protocol. This is also the tokenized depth. Now, all the depth that you had when you borrow any asset now is tokenized. Tokenized, yeah. Another other features like more improvement of gas versus basic one now natively we support warp instead of ether.
00:05:19.470 - 00:06:26.854, Speaker A: And also one important aspect is the new governance of having where you come. For example well, there is two types of voting. Like one is for creating new proposals, another one is for voting. So in that way you can delegate Urab to people to make new proposals that users must be more should be more they should know how to create proposals and how the protocol works more in a technical way. But yeah, you can only delegate the creative proposal. Then you can of course vote in that proposal and if you like it, you can participate in the global. Yeah, let's talk about how the deposit works inside our basically the protocol tokenizes deposit with a tokens with a parity of one by one.
00:06:26.854 - 00:07:41.102, Speaker A: So for example, you deposit 100 die, you receive 100 to keep that of your account inside the protocol. The users that holds tokens earn interest in every second also depending on the risk parameters and the borrowing demand of that asset to see, we can integrate the deposit in your smart contract. It's a sweet smippet where feels you need to instance the needed arguments to calculate the deposit factor and the lending pool contract. First you need to instance asset address, then the amount in unit days, the address of the depositor and the referral code. If you don't have any referral code you can set at zero. Then you need to approve the asset to move from your account from your address to the rent input. And later you can call deposit with all the argument at the end of the when you call it to the deposit function.
00:07:41.102 - 00:08:22.670, Speaker A: Let me put we give you the tokens in a chain during deposit to withdraw from the protocol. It's more easy. You need to prepare the arguments for the withdrawal factor. You need to instance the asset address, the amount and the medium address. Okay, let's talk now about the borrow. So after you have the deposit side ave, you can borrow any supported asset and sleep between variable or stable rate. You can pay whatever you want using the same asset.
00:08:22.670 - 00:10:10.480, Speaker A: Oh, thank you. So basically you request our law, you can pay when you want, there is no durettium of the law. You can pay using the same asset that you borrow or using part of your deposit to cover this position. When you borrow a table, it appears a new indicator, his name is health factor and this helps you track the proportion of your collateral versus the value of the borrower asset. If your health factor goes below one your position is in risk and can be liquidated by the collateral liquidators you need to make sure to keep your health factor greater than two to prevent liquidians in volatile settle when the market is volatile so yeah, if your health factor goes below one your position will be liquidated it's. Yeah to borrow any asset using solidity basically you need to prepare the arguments phase one the asset address the amount you want to borrow the interest rates where one is the stable and two is debarable the referral code and the address of the borrower. Once the arguments are ready you can call the borrow faction from lending pool and after that we receive the borrowed asset and also the tokenized step.
00:10:10.480 - 00:12:04.850, Speaker A: Once you borrow the asset you can switch between interest rate you can switch between a stable or variable rate using this factor name swap borrow rate mode and to repay the loan you need to need to calculate the repay factor inside the lending pool. Basically you need to fill the argument as the assets the amount that you need to repay, the interest rate mode that used when you call it the borrow faction and who you are going to pay the borrow then now there is the credit delegate. This is very good feature. The credit allows you to approve the parties to have access to the credit line that are in your avenue in the protocol. Basically the entities that you approve can borrow assets using your collateral you can enforce the repayment by beyond chain or using smart contracts or off chain like a normal legal contract. The entities that you approve it doesn't need to have any collateral so they will be using your collateral. Use the create delegate with solidity first you need to have the address of the depth tokens you can have the addresses of the dev tokens using the head receive tokens address factor from the linking pool address provider.
00:12:04.850 - 00:13:33.070, Speaker A: Once you have this address, the token address you need to prepare the arguments like the borrower address and the amount in unit base. So basically the delegator needs to approve to this third party entity a maximum amount where it can borrow. Then when this entity is approved to use to credit line, when the credit delegating is approved, the entity can local to the borrow factor but instead of using his own address, he needs to use the delegator address to being able to borrow assets from the delegator. And also everyone can call to the repay factor to repay the debt that you borrow it with syncret delegator you need to call to the repay factor and use the delegator address on the on behalf factor argument. That is the last one last argument inside the repay factor.
00:13:34.130 - 00:13:34.542, Speaker B: Okay.
00:13:34.596 - 00:15:02.794, Speaker A: Flash Loans flash loans are a very cool feature from Abe protocol. Basically a flash loan is an uncorgalized loan requested to the protocol where the borrowed amount plus the interest must be repaid at the end of the same transaction so the color of the flash loan can achieve any arbitrary axiom during the transaction. If the loan is not repaid the protocol with the debt and revert the transaction, reverting back the previous state of the lodge. To see a guide of flash land more in deep you can visit the Quantity from Abio. This is a full guide of how to use flash loans inside the protocol and it contains a lot of hints and tips so you can create flash loans the common use cases, the flash loans are the migrating liquidity between protocols. This means you can migrate liquidity between different protocols also you can migrate liquidity between version of the same protocol and other ways to move migrate. One important use case I think the most useful one is advertising decentralized exchanges with flashland.
00:15:02.794 - 00:16:15.006, Speaker A: You can request any capital and then execute advertise between markets without having any capital. You only need to pay the fees in ethereum or in Polyon, for example. You can also do liquidations. You can liquidate path positions at Ave using Flash law. So you need to have the capital to pay the rep of the position at Ave you can just request a Flash loan and liquidate a user that has a health factor below one. Then you can also do combos of actions, random actions that you need and maybe in the middle you need a flash loan to hit enough capital to deposit in another contract or whatever is your strategy inside the protocol. Inside Ava we use flash loans to swap tokens or to repay the debt using your collateral and many more.
00:16:15.006 - 00:17:12.498, Speaker A: There is many other flashland use cases and I think these are the main ones. Now, how to use flashland, how to integrate with solidity Atabe. We developed a helper contract named flashland receiver base that you can import in your project, in your solid project to make easier to request flashlands. You can check the flashland helper at that address. Let's see who you can use it. So basically you have here your contract that will call to the flashland. First you need to import the flashland receiver base and engage your contract so then you need to prepare all the arguments to call the flash loan.
00:17:12.498 - 00:18:28.030, Speaker A: So fees you need to set the receiver address, it is the address of the smart contract that will execute after requesting the flashlow. Second the list of assets you want to ask in the flashlow through the amounts in unit based TB minus decimals. Because each asset has different decimals. Fill the mode. You can set the mode zero. If you don't want to include any depth after the flash, log the mode one or the mode one is stable and sequential is variable. With flash loans you can start a flash loan and then later you can request a flashlong and if you want you can keep the flash long open and if you have collateral you can keep that flashlong open and then after the transaction you will receive the corresponding debt tokens to indicate your union deposit.
00:18:28.030 - 00:19:47.774, Speaker A: And now the on behalf address from who I will borrow the sets. So this is important if you are going to use the mode one or mode two because you need collateral to request a loan. But if you are using the mode zero where a normal flash loan you don't need to have any block. And then the params arguing parameter, this is where you will enter your custom params and then the LinkedIn pool will pass you this parameter to the factory. And last parameter is the referral code. The referral code if you don't have any, you can use set zero. After you request a flash law using that call lending pool will call to a special method, a special factor name execute, operating that must have all these argument parameters.
00:19:47.774 - 00:20:40.250, Speaker A: The asset that you requested, the amount that you requested. The premiums that are the fees that you need to pay at the end of the transaction. The initiator, that is who initiates the flash local and the parameters at the extra parameter that you added. And now inside this body or inside this factor is where your custom logic goes. So here you can do minting of funds or make it liquidity, you can average or you can do anything that you are planning to do with fluctuations. And at the end of the end of the body of the factory you need to approve Lending Pool. So Lending pool is able to pull the funds and repay the flash loan.
00:20:40.250 - 00:22:14.054, Speaker A: So here we can see some transactions with flash loans. For example, in the past you can do collateral swaps with Macropal. Imagine you have an open Bowel, the maker with Dai and there is a better rate in cryptocurrency you can swap the collateral to another currency that the interest is lower. For example doing architects between exchanges like Uniswapper balancer Governance. So basically the Abbey Governance you have the token holders of Fabe, the users have Abe tokens can go there in the Governance, they can create proposals, they can vote yes or no to a proposal and Ejectivity is the proposals. How to create a proposal in Ave first you need to understand the Ave Governance and the process of the Governance and you can check all the documentation at then for asset listing. You also need to follow a special process and feed them.
00:22:14.054 - 00:23:08.650, Speaker A: You need to create an ETL draft in ETL draft at the Governance forum. This draft is named Abi request for Comments and this is where you describe your proposal. You provide links about payload implementation and let the community discuss and review your proposal. For example, here we can see a listing proposal for the curve token in the Governance forum. Basically, the post must contain the summary of the proposal, a risk analysis of the asset or risk analysis of the change that you want to make inside average. Provide links and let the community view. Then later, after you submit the draft, you need to ask for delegating.
00:23:08.650 - 00:24:32.610, Speaker A: Did you see that community of Abe likes to do proposal? Yeah, you need to ask to delegate proposal power to your address users can use abe to delegate to you. Once you have enough proposal power, you can submit the proposal on chain. So here we can see a diagram of how the governance work and yeah, this is of the steps design of chain process submission of the area. C and the AAP then the proposal creation with enough proposal power then the community can vote on chain and then after the vote passes the proposal need to be queued and executed to delegate voting power using solidity there. Is a function named Delegate inside the Abbey token. Yeah. You only need to cut to the delegate factor and use the address of where you want to delegate your facts.
00:24:32.610 - 00:25:19.634, Speaker A: You can also submit your boat using solidity you. Need to calculate the submit both factor with the proposal ID and the support. Yes if true and false if no staking in abe. You can provide security to reto protocol if you deposit ave or if you deposit abe. BPT. BPT tokens. They are liquidity token of balancer into the safety model.
00:25:19.634 - 00:26:00.640, Speaker A: Into the safety model. Staking contract. Once you deposit your Ave or your BBD tokens, you will start receiving rewards from the safety model and you can withdraw your deposit with a cooldown of ten days. The safety model covers the Abe markets. The main Abe markets in case of any hacks or any loss of funds. So keep in mind that your amount, your stake, could be slashed in 50%. So keep in mind that there is risk deposited to the safety model.
00:26:00.640 - 00:27:29.142, Speaker A: So for staking you need to load the ave token and stake avidoken addresses the amount that you want to stake and to approve the draining pool, the amount you want to stake. And then later you can calculate the stake faction. Inside the stake avidoken contract. Then to claim the rewards, you can use the claim reward factor using your address and the maximum UN value to release the stacked ave to withdraw the abbey inside the stack token you need to calculate the call down factor, wait the period of ten days to withdraw and then calculate the redeem factor. And now we are going to see a few samples of free entries that we have integrated inside their protocols. One of the sample is Curve. They created an Ave pool inside Curve that allows you to deposit the UDC inside Ave and then being able to swap it inside Curve.
00:27:29.142 - 00:28:41.198, Speaker A: So basically you can deposit in this liquidity bullet curve and then was in CRV swap fees from curve and also the borrowing interest from the Ave protocol. This also the fee saver that it allows you to manage the Dai wallet where you can swap between protocols and you can get interest between protocols and you can swap between protocols using Flashloads. Basically it is also full combo. There is a flashland, it's a flashland interface. So you don't need to code the flashland. You can use through combo web interface to create the flashloads and also integrated in one of the strategies using Alink. And also there is a game that the Abegochi team launched some time ago in Polygon and basically they are NFTs with interest bearing tokens inside the NFTs.
00:28:41.198 - 00:29:25.554, Speaker A: So basically you have this cost, this little ghost that will hold for sample heat. It can have tokens or it can have Adai or ETH or any other supported tokens inside of the watch. And yeah, we have many more integrations I would like to show you. I think we are out of time. So here are the list of resources. You can contact us at discord, check the documentation of docsavay.com, check Twitter at if you have any questions, this is the time to do it.
00:29:25.554 - 00:29:26.580, Speaker A: Thank you.
00:29:27.430 - 00:29:53.820, Speaker B: Great. Thanks so much, David. And it would be great to have these slide decks shared in the sponsor of a channel as well, just so everybody can go through them in their own time. I see there is one question that came in from YouTube which is is there a way to get all available collateral for an asset? We are planning to give options to users to select from assets with low interest rate.
00:29:55.790 - 00:29:58.540, Speaker A: Can you repeat the question? I didn't understand. Very good.
00:29:59.230 - 00:30:03.550, Speaker B: Is there a way to get all available collateral for an asset?
00:30:05.410 - 00:30:16.786, Speaker A: Well, you can borrow that asset or you can query that available using Solidity. I can send the details in the chat so it's more better to interview later.
00:30:16.968 - 00:30:35.442, Speaker B: Great. Yeah, that would be great. I'll copy paste that question into the sponsor Ave chat. Cool. Thanks so much David. That was a really great session and you got through a lot of content in just 30 minutes. If anybody has questions for the Ave team or David specifically, they are in the sponsor Ave channel and Discord.
00:30:35.442 - 00:30:46.950, Speaker B: So feel free to reach out to them directly. I will link this workshop and David's slides in that channel as well. Yeah. Thanks so much, David.
00:30:47.290 - 00:30:49.890, Speaker A: Thank you all for your time. Yeah, it's.
