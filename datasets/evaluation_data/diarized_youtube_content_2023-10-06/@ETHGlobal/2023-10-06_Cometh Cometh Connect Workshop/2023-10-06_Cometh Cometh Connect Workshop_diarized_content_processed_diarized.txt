00:00:07.930 - 00:00:37.030, Speaker A: Hello guys. So I'm Joanne from Comet. I'm the lead dev for Comet Connect. And I'm going to present you a small workshop for the heat online. To begin with, a small summary what we're going to talk about. First of all, what is a kind of traction, then a description of commit connect, then a small live coding session and a conclusion. So what is account extraction? The idea is a separation of concerns.
00:00:37.030 - 00:01:31.740, Speaker A: If you take EOA so externally owned account, what happens is that you have the account and the signer at the same entity. For example, with a MetaMask account, we have a private key that allows you to sign transactions and messages, et cetera. And if you lose your private key, your signer, you also lose your account. So you lose all the assets that are in the account. In the case of contract traction, what you have is you have a decoupling of the account and designer, so you have a smart contract as the account and you can have multiple signers for that same account. Which means that, for example, if you lose one of the signer and you have another signer that is available, you still have access to your account, which is a big deal. Of course, also it unlocks many benefits.
00:01:31.740 - 00:02:18.890, Speaker A: What you can do is you can define flexible security rules in your account, in your smart contract. You can also implement a recovery system in case of losing your keys. You can also relay transaction, meaning that you can have someone pay the gas of the transaction for you. You can also batch transaction to get better UX. And you can even implement multiple validation logic. Not only the validation logic, the standard of the Ethereum protocol. Another idea is that for us, transaction experience, it depends on the context.
00:02:18.890 - 00:03:10.554, Speaker A: For example, in the regular finance system, when you want to do a touchy transaction, when you're going to do a big payment, you want to have a system with different steps. When you'reassured because, for example, you have to put your identity, you have to maybe have a Pin code and do multiple checks before you're really sending the transaction. But on the other hand, if you take the bus or the Metro, you just want to maybe put your card or even your phone with Apple Pay and pay in just 1 second. So it depends on the context, the UX that you want. And in crypto, it's really difficult to hack that. And that's what we try to do. We try to create frictionless transactions and we created an SDK for that.
00:03:10.554 - 00:03:47.510, Speaker A: But it's a really big technical challenge for developers. So what is Comet connect? The overview of the solution is that first of all, we have an SDK. That SDK allows different signers. The default one is Webbathon, the one that we use. That SDK is connected to an API. That API can create wallets, deploy them, relay transaction, sponsor transaction, et cetera. And then that API is linked to a safe smart wallet with all the logic that the safe wallet allows.
00:03:47.510 - 00:04:21.710, Speaker A: Now a bit overview of webothem. It's an open standard that was set by Fido. It's supported by all mobile devices. It's based on public key cryptography. And the idea is that when you create a private key using robotom, what happens is that the private key is created in the secure and cloud of your device. And when you want to access that private key, you have to authenticate yourself with different methods. For example, with the touch ID.
00:04:21.710 - 00:05:23.490, Speaker A: So with Biometrics, what it means is that the DAP itself cannot access that secure and cloud. You need the authentication of the user to really be able to access that private key and then sign transaction or messages. At Comet we want to provide solutions for real life problem. For example, you may have some questions with Comet Connect, can I use my account on multiple devices? Well, of course, that's the idea. We have a trusted device management that allows you to have multiple devices as signers for your account. But you might also be wondering, okay, but if I only have one signer on my phone, and if I broke my phone, what happens? Well, we have a social recovery system with the Guardian that allows you to regain access to your account in a safely manner. Now a small live coding session.
00:05:23.490 - 00:06:03.630, Speaker A: So after going to the discord of the ETH online partner Commit, you're going to have to go to that link that we sent you and write your whitelisted email sign in. Then you're going to have to go to your emails and verify your account, which is what I'm going to do right now. I just received the email can verify it. All right, now I'm logged. I'm going to go to new project. I'm going to create a new project. I'm going to call it east.
00:06:03.630 - 00:07:03.220, Speaker A: I'm going to create it on the Mumbai testnet, click on Launch. So here I access my dashboard where I can have some data regarding my wallet, my transaction and what's happening with my project. I can click on API key to have some info regarding API keys and other data. And I can click on that button which is clone our demo. And what's going to happen is I'm going to download a sample, which is a project, a small tutorial that I'm going to put here. What I'm going to do is I'm going to do a small yarn all the packages of the tutorial, and then I'm going to going to run a yarn dev. And the idea of the tutorial is to give you an idea of what we can do with Commit Connect.
00:07:03.220 - 00:07:53.438, Speaker A: Okay, so now I'm here and what I can do is I can click on Get your wallet. Now it's going to ask me to click on Continue and put my Biometrics. So what's happening here is I access a private key and I create and access a private key in my secret cloud. And then I deploy a smart wallet. Well, actually, it's not deployed yet, but I created a wallet in our database, and then I can click on increment counter to interact with a smart contract. I'm going to put my biometrics and then a transaction is happening. So actually, it's a multicol where we first of all deploy your smart wallet and then execute the transaction, which is the increment counter on a smart contract.
00:07:53.438 - 00:08:57.570, Speaker A: And here it is. The transaction has been executed. I'm going to wait a bit for polygon scan to index because it takes a bit of time but we should be able to see the data regarding the transaction and here it is so that's a small overview of the tutorial. If we go back to the documentation in the Getting Started, you will have a small description of what I just did with all the steps and a small video. And then in the under the hood section, there's an explanation of what we did, what you just saw with a few lines of code. For example, the init of the comet connect SDK with your API key, the way you would create and connect a wallet. So depending on if you have the wallet address of your user for example, if it's the first time that you use Comet Connect for a user, you can call Connect without any parameter and you create a smart wallet and then you can get and save his address.
00:08:57.570 - 00:10:12.000, Speaker A: And the next time you can put the address as parameter of Connect and you can connect the wallet of an existing user. You can also create Ethers provider so an Ethers V five provider if you want to interact with a smart contract the same way you would do it within Ethers provider, what you can do is create the interface for smart contract using Commit provider and then called methods for that contract. For example, we called the count method in the demo. Also if you want to check more advanced feature you can go through the docs for sending transaction and gases transaction, adding multiple devices and social recovery and if you have any question you can ask us of course in the chat. Now going back to the demo for sure we have the conclusion here. In the conclusion in terms of prices for the hackathon, there's a price for the smoothest UX which is the first price. The second price will be for the best mobile DAP and the third one will be for the most original use case.
00:10:12.000 - 00:10:34.340, Speaker A: And in conclusion good luck to you guys. You can check our docs, test the SDK, give us feedback, you can request your access to the dashboard if you go to the partner channel on ETH online we'll be happy to answer any questions that you guys have and help you in what you guys are building. Thank you guys.
