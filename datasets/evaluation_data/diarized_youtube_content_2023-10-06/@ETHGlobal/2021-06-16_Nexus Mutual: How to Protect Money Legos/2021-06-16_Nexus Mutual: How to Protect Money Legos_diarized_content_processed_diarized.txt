00:00:00.170 - 00:00:01.070, Speaker A: We are live everyone.
00:00:01.140 - 00:00:24.918, Speaker B: Hello everyone. Welcome to the Nexus mutual how to Protect Money. Legos workshop. I'm honored to be joined here by Anatol from Nexus Mutual. And so I'm going to pass it off to him to kind of introduce himself. And if you have any other questions kind of as the presentation goes on, please reserve them for the end. There is A-Q-A at the end where Anatole will allow you to ask your most burning questions.
00:00:24.918 - 00:00:29.880, Speaker B: So feel free for that. But yeah, Anatol, you can feel free to introduce yourself.
00:00:30.250 - 00:01:07.750, Speaker A: Thank you. Hello everyone, nice to meet you here. My name is Anatol Prasakaru and I'm a core dev at Nexus Mutual. And today I'll talk about how can we hack into our project and build something on top of it to protect other DeFi projects. So let's get this started. So first of all, I'll talk about the prizes that we're offering during this hackathon. First of all, we have the immediate integration price, that's $2,000 paid in roughtenxm.
00:01:07.750 - 00:02:20.806, Speaker A: There's the long term alignment price, also $2,000 in rough and exam and the pool price of $4,000. And besides this, I want to point out that we have extra community grants that you can apply and production projects can get sponsored. So let's dive into this. So I'll start with a few project ideas that you can build during this hackathon. First of all, you could build a cover recommendation engine. This means that users would connect on your website with their wallet and you could automatically suggest the best cover products based on the assets that they hold and based on the farms that they participate in, the pools that they contribute to and so on. Secondly, you could use a distributor contract and build integrations on top of that and find creative ways to compose Nexus with any other projects.
00:02:20.806 - 00:03:12.438, Speaker A: For example, insured vaults or stuff like that. Another interesting idea would be a delegated staking. We basically have the pool staking contract and users often have trouble staking by themselves or changing products. And a delegated staker would accept the tokens from the delegates and would decide what products to stake on. And the covered tokens would be another idea that you could build. And it would basically mean that you would be able to build a natively covered token that could be used anywhere in DeFi. So let's talk about National Mutual.
00:03:12.438 - 00:04:21.002, Speaker A: First of all, what is nexus mutual? We're a discretionary mutual based in UK and we offer cover against DeFi risk. What cover means? It means that in case of hack a smart contract bug, an oracle attack or something like that, if something happens with a protocol, we offer you a cover and you can get basically if you're covered against a particular risk, you will get your money back if something happens. It's not an insurance product because it's a discretionary mutual. And also because of that we have the legal requirement for all the members to pass the QIC. Let's talk about the protocol. So we have a list of the protocols on our website and first of all we have the roles. And the first role that does something inside Nexus Mutual is the risk assessor.
00:04:21.002 - 00:05:55.134, Speaker A: So basically the risk assessor decides which projects protocols are safe and if he thinks, for example, that wiren Curve, Avi or Binance is a safe project, he would stake an exam on those protocols. Doing so, he creates capacity. So a cover owner would be able to then purchase a cover on the protocol that he desires. He would pay the premium to the protocol and the risk assessor gets 50% of the premium that the user paid going on. If an incident would happen on the covered protocol, the covered owner would submit the claim and then we would have the claim assessors that would vote on the claims. And after the voting, based on the outcome of the vote, if the vote is to accept the claim, the COVID owner would receive a payout and the claim assessors would be rewarded with some ending sum. Moving on, I should talk about product types because we have the protocols, the projects that you can see, but there are different risks that we can cover.
00:05:55.134 - 00:07:15.350, Speaker A: For example, if we're talking about an exchange, a centralized exchange that takes custody of the user's funds, then we offer custody cover. So a user would buy custody cover and if the withdrawals are halted or the funds are lost from the exchange, then the COVID owner would get reimbursed. Then we have the protocol cover. Basically, if you want to cover a specific protocol, risks against risk that can happen in a specific protocol, you would buy a cover on that protocol, that would cover boxing, the covered protocol, economical attacks, oracle fails, failures, governance attacks. But it's important to notice that bugs and other protocols are not covered. So if for example, you're using the Curve lava pool and something happens in Curve, you are covered. But if something bad would happen in Avi, then this cover wouldn't protect you from the failures.
00:07:15.350 - 00:08:36.718, Speaker A: So for this reason, recently we developed the yield token cover and the Yield token cover product offers you cover on a vertical instead of horizontal direction. So you would have a specific token, for example Yusdc from Wired. And if the token happens to have a DPEG and we would cover that loss well up to 90% of the COVID amount. Moving on. In case of the Ill Token cover. The claim assessment is of course a bit different because compared to the protocol cover, when users have to create a claim and then the claim assessor have to vote in the Ill Token cover claim, the advisory board uses the governance to add an incident and then the COVID owner would send the DPAC Tokens and would receive immediately the payout. There's no claim assessment process other than the add incident.
00:08:36.718 - 00:09:46.600, Speaker A: Everything is just automatic. Okay, now that you have an overview, we'll dive into some more specific details. So first of all, in order to buy a cover, you need to use the code API. The code API is hosted us and you request a quote and the code API will query the on chain data for the staked amount in the pool staking contract. Once it has that, it calculates the amount the user has to pay and sends back a signed code. Then using this code, the member can purchase a cover by interacting with the Smart Contracts. A little bit of details about our code base so you can find our contracts on GitHub at Nexusmutual smart Contracts we're using Hard Hat, we're not using Hardhead Eaters, but you can try to add that as well.
00:09:46.600 - 00:10:35.960, Speaker A: It's not a big difference in their APIs anyway. So you should be just fine using this. You can try adding waffle eaters. It all should run just smooth. Haven't tried, but you could try it. It should run all right and just use the master branch. And the most basic way to get started would be to just fork our repository and then just add your contracts and tests in there because the whole system has to be deployed and we have the integration tests that take care of that.
00:10:35.960 - 00:11:56.050, Speaker A: The structure of our code base is like this. So basically, first of all, we have the contracts in which you'll find more folders, but the more important ones are the interfaces where you can find the interfaces that you can use in front end or in your contracts. The modules folder actually holds all the important heavy stuff. We have all the heavy lifting in there and you'll find the capital, the claims, the quotation and cover information in there, as well as the Governance and Staking modules. Then we have the scripts where you can use the deployed JS for a testnet deployment. But we really recommend using our deployment because it's ready and you wouldn't waste your time deploying yourself. And finally the test folder, you'll find a unit folder in it where we keep the unit tests that test one contract at a time using MOX, the integration folder that has a more advanced testing framework because it uses the entire system.
00:11:56.050 - 00:12:50.590, Speaker A: And the fork folder that we use usually before deployments for testing in a more comprehensive way and make sure that whatever we deploy will be live safely and nothing will go south. Okay, so if you pick the local environment development method, basically you'll use the integration folder from the test. You can find there the setup JS that deploys the entire system. It's called automatically. You don't have to call anything. You'll find all the tests. Basically you have a list of modules that we test in index JS.
00:12:50.590 - 00:13:34.000, Speaker A: Everything is required so you can comment out anything that you are not interested into and you can just add your module that will be run. You'll notice that in our setup, Mocha isn't running the test recursively. So everything that is added has to be included. Specifically, if you haven't added the file, haven't required your test, it will not run. So it's just like standard JavaScript. Nothing happens magically in there. You'll find yourself home.
00:13:34.000 - 00:14:55.610, Speaker A: Okay, so if you pick the Covenant testnet development method, for example, for testing your front end or demoing your product, you will have here all the information that you need. First of all, the APIs and addresses on Coven can be found at API staging Nexusmutual IO versiondatam. Also the quote API that we are running, it's at b one quote you will need a product list the coverables at the contract JSON. And for Coven you will have to whitelist yourself to pass the QIC yourself and we deploy the contract that will do that for you. So you don't have to contact us for whitelisting, just use the contract. And if you need Coven ETH, you can just ping us on Discord and we will give you some. Okay, so let's talk about the ideas a little bit more in details.
00:14:55.610 - 00:17:08.550, Speaker A: So a lot of users are confused as for what cover to buy because DeFi is highly composable and a lot of projects are using other projects behind the curtains and users often do not know what protocols do they have to get cover on to actually cover their risks. For example, if one deposits some LP tokens, deposits some tokens on uniswap and those tokens belong to another protocol, the user might need cover for uniswap and for the set protocol. But often users are confused about this and they do not know what they have to buy. So you can get a list of coverables available protocols that we have from the contract JSON and do not pay attention to the addresses themselves because they are just identifiers, but you're interested in the protocols themselves. So what you will do in this scenario, you would have to crawl the balances of the users and categorize them on the specific protocols and recommend the user to buy one cover or another or a list of them and so on. Okay, so moving on integrations with the distributor contract because with Nexus Mutual Unib to pass the QIC, there are distributors that can offer cover to people outside of Nexus Mutual. And technically Nexus Mutual offers the COVID to the distributor contract that's a member of the mutual and then the distributors passes an NFT forward to the user.
00:17:08.550 - 00:18:51.750, Speaker A: We have a distributor that solve a contract, which is an example contract implementing ERC seven to one, which is the NFT standard and you can use as an example and either modify or build on top of it. Users that will use this contract will not need to pass the QIC since the distributor is a QIC entity. You have some documentations regarding the distributor in the Docs folder in the repository and we challenge you to think what new apps or products you can build of it, what integrations can you come up with, what interesting edge cases maybe, or other ideas? Next on the list is a delegating staking idea. So we have the full staking contract that is, the current staking and implementations. And as we know, the fees were skyrocketing, and this wasn't an option for anyone to use it because you have to stake on multiple protocols, and when you have a lot of storage rights, this isn't really scalable and gets expensive really quick. But if people would pull together and would delegate someone to stake on their behalf, this could be much more efficient. So a delegated staking project built on top of pool staking would be an interesting idea that we would want to see implemented.
00:18:51.750 - 00:20:33.186, Speaker A: Moving on, we have perhaps my favorite idea because it's in the spirit of DeFi. Legos so the COVID tokens idea, as I told you before, we have the Eel Token cover product that offer covers against token depeg. So if you have the yusdc, for example, you would buy cover token, eel Token cover, and if the token would depeg, then you can just send the depeg tokens to us, and you would get back the dai or ETH or whatever the underlying asset is. So the idea would be to create token that supports this natively, and you would have the COVID built into it. You wouldn't have to get the token from one project and then get insurance from another. You'd have just one stop where you can get a natively covered token and use it and swap it or do whatever you want with it in the spirit of money. Legos okay, so for this idea, you would probably want to integrate with the Gateway Sol or distributor Sol contracts.
00:20:33.186 - 00:21:16.760, Speaker A: In Gateway Sol, we basically have everything that you would need to implement this, and distributor Sol itself uses the gateway. So Gateway should be the way to go to integrate everything that you need for this idea. Don't stop on just these ideas. Think of something else that maybe you have another great idea that we didn't think of that always can be the case, and ask questions on Discord, and let's discuss and see what other ideas you have that you can build on top of Nexus. So I'll stop here for the questions.
00:21:26.970 - 00:21:50.090, Speaker B: And just like, a small note, if anyone would like to ask questions later on Discord, you can always feel free to ask it as well as you see on the screen in the Nexus sponsor channel. All right.
00:21:51.260 - 00:21:53.050, Speaker A: Okay, let's see.
00:21:59.870 - 00:22:05.850, Speaker B: A few final calls for questions, and if not, I guess we can adjourn.
00:22:08.110 - 00:22:21.220, Speaker A: Yeah, you can find us always on Discord. I turned the notifications on, so make sure and make sure to ask them there, and we'll see you guys building.
00:22:21.750 - 00:22:24.880, Speaker B: Yeah. Thank you so much, Annatol, for the presentation. And thanks, everyone, for coming have.
