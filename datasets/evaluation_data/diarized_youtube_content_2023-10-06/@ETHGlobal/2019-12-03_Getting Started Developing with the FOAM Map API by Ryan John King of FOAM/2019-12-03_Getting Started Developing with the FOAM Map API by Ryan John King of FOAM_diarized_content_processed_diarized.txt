00:00:09.140 - 00:00:37.856, Speaker A: Thank you all for coming, really appreciate it. I'm here today to present on Foam. Foam is a protocol that provides tools to enable a crowdsourced map and decentralized location services. The project really has kind of three elements. One focuses on location encoding standards, just bringing these kind of standards into the blockchain world as there aren't any kind of geospatial standards to begin with. The next element is what we call a spatial index visualizer. So this is then how do you actually visualize on chain data in a spatial way.
00:00:37.856 - 00:01:09.076, Speaker A: And the third element is what we call proof of location. That's where the Foam token comes into play and is about how do we come to consensus and verify these things that are making geospatial claims on chain. So today we have our first product that's live. It's called the foam map. It's a token curated registry for curating points of interest data. It's been alive on the main net of Ethereum for about one year. And really kind of the goals of this protocol is that anyone can add places to the Foam map and then anyone can also curate that map.
00:01:09.076 - 00:01:56.772, Speaker A: So basically look at that data, challenge it, and be incentivized to kind of keep all that information up to date. And so we're trying to basically make this on chain registry of accurate geospatial data that then other applications can hook into and utilize and use. And that's kind of what I want to be focusing on in this talk is how to use the Foam API and examples of other applications that people have built. But first, briefly I'll explain how the actual protocol works. And kind of just to take a step back, want to focus on maybe some of the reasons why this is even important. Because today geolocation is not actually a solved problem. There are tons of open source mappers contributing to OpenStreetMap, but there's no incentive for them to actually go check that data or return years or months later to see if it's still accurate.
00:01:56.772 - 00:02:29.620, Speaker A: And so we have centralized companies that take up that role like Mapbox or Facebook that take all this OpenStreetMap data and try to then package it and sell it back. But even that isn't sufficient. So we've seen recently a kind of nasty hack where New York was renamed to anti Semitic, name of geotropolyps. And this appeared on the weather channels, nas Map, Street, Easy, and even the Foam base map for like over 48 hours. So that was pretty embarrassing. And there's all these different kind of hacks and issues with geospatial data today. So we're trying to basically experiment with new means of curation and incentives for participating.
00:02:29.620 - 00:03:22.100, Speaker A: So really what is this? Foam Map is taking the kind of geospatial encoding standards we've developed and combining it with a primitive called token curated registry. And out of that we get this kind of map of points of interest. And a token curated registry is a way to kind of generate a list and curate that based on token mechanics. So this is kind of like, might be hard to see, but an infographic of how the mechanism of the Foam PCR works. And essentially if you want to add a location to the map, you have to make a deposit in Foam tokens. So this is kind of an anti spam mechanism that you essentially believe in the information you're providing to the map, but it also serves as a latent bounty for people who want to come check on that point in the future and potentially challenge it or curate it. So if you add a poi and everybody's happy, eventually your point will then show up on the map and be considered accurate and verified.
00:03:22.100 - 00:04:03.252, Speaker A: But if somebody's not happy, they can initiate a challenge against you and essentially stake against your point and open up a kind of voting period. And that would allow anyone who has Foam tokens to kind of weigh in and decide, should this point stay or should it remain. Today we have over 10,000 points that have been added to the map and about 6% have been challenged and removed. There's some edge cases of maybe malicious challenges, but for the most part, the points that have been challenged and removed have actually been inaccurate. So we're kind of seeing the system like working today. This is an example of what the Foam map interface looks like and how you would essentially interact with it. On the left, you can see where you're going to be filling out information about the point.
00:04:03.252 - 00:04:38.270, Speaker A: And when you're kind of confirming, you need to confirm with MetaMask. This is another example of just the UI and how it looks. And here we see this is here in Boston. So basically all these green dots that you see are verified points of interest on the Foam map. That's old city call. And so this is a mainnet application that you can check out and see all the kind of features of how it works. But for the purpose of this talk and workshop, I want to kind of look under the hood and explain how the actual application works and how you can use the API to build your own application.
00:04:38.270 - 00:05:24.696, Speaker A: So the visualizer of the Foam map is essentially this architecture we call the spatial index visualizer. And this is a way to kind of visualize on chain data in a spatial way for any kind of use, case or application. So it's not specific to Foam. And this is kind of the architecture of the Foam map and how it works today. So it's this end to end kind of circular system where we have this front end where we use tools like Deckgl from Google for visualization and it's kind of a react front end app. We use a language called PureScript, which is a functional programming language that compiles to JavaScript for the front end and from the front end of the map, you're able to interact via MetaMask and make Web Three calls. And then we kind of have a back end API, Restful API written in Haskell running in kind of Kubernetes.
00:05:24.696 - 00:06:16.390, Speaker A: And this essentially indexes all the onchain data into kind of BigQuery databases and geospatial databases. And then we have a Restful API that essentially sends normal WebSocket events back to the front end. So for people who want to essentially take the Foam map data that's been indexed by our API, they can just use like normal web events and have those be fed back to their front end. So the architecture of the Foam map and the spatial index kind of works in this loop where from the front end you can interact with Web Three, and the back end then kind of indexes that and serves it back to the front end. And the result is what you get is this. So this is the Foam map today that uses that kind of architecture where it's kind of a normal web app to some extent in the way that the data is coming into the app, but has web free functionality. And so that's the architecture we use for our app.
00:06:16.390 - 00:07:05.906, Speaker A: But anybody can essentially replicate this architecture and utilize it for visualizing geospatial contracts and it doesn't have to be related to the Foam PCR. You can use this kind of architecture just as a web DAP architecture to index data and be able to feed it back to the front end. So specifically with how we built our Foam map, we, like I said, use a language called PureScript, which compiles the JavaScript for the front end. And we are at Foam, the authors of the PureScript Web Three library, which we actively maintain and is open source. Another tool we use when using the Foam map is called Clickbait. This is a simple docker tool to spin up a test blockchain where you can pre allocate libraries and balances and really get started testing really quickly. And we also utilize something called Chantrell.
00:07:05.906 - 00:07:40.638, Speaker A: This is written in Pure script and it's an alternative to Truffle as a way to deploy your contract. And so at Foam, we kind of have our own Ethereum stack that we've built ourselves that is Foam agnostic, so anyone can use it for any ethereum development. And that's kind of in contrast to the traditional Ethereum stack, which is very JavaScript heavy. So at Foam, we are functional programmers and really rely on like Haskell and PureScript. So instead of test RPC, we're using this clickbait tool. Instead of Web Three GS, we use PureScript Web Three. And instead of Truffle, we use Chantrell.
00:07:40.638 - 00:08:53.320, Speaker A: So all these are actively maintained in open source libraries that you can utilize for any DApp deployment, not specific to Foam, but just to kind of highlight how our app is actually built and what the stack is underneath. So you don't need to use any of those tools to still use the Foam API, you might have a sheet that has been passed around which is kind of a quick intro of how to use the Foam API. The URL there will bring you to the Foam developer portal and this is where you can essentially get started learning how to use the API and seeing different documentation. So the easiest way to access our API is that you can use swagger generated docs on this developer portal and you can simply explore the API by calling the endpoints in the browser. We also host automatically generated client libraries that you can import into your own application. So, as I explained with TCR, the primary thing being developed are these points of interest that mark interesting places like attractions or restaurants. And within each of that point, when we actually want to look at what the metadata entails, this includes name, address, description, a geo hash, which is the way to hash Latin long, and what addresses the owner and how much stake is actually put into that point.
00:08:53.320 - 00:09:57.612, Speaker A: This is an example from our developer portal of kind of the swagger documentation. And so in browser you can call all of these functions and essentially get all the most recent API data right there. So this is kind of taken from the sheet that I passed around, but it's just a kind of simple example of the kind of data you're going to get from doing these API calls. And kind of the key fields that you may want to look at for different applications is when was this point created, is it in a certain kind of geofenced area and who's the owner and what kind of other points have they done or what kind of other activity have they pursued? So also on our developer portal, we have recently launched like seven, I guess, examples of ways to use API. And basically this allows you to take the Foam data that already exists on chain from our API and put it in a whole different style. So you're not kind of confined to using map foam space. With this API, you can take the Foam data and basically make your own kinds of maps, your own visualizations, your own tools for whatever you want.
00:09:57.612 - 00:10:58.210, Speaker A: So some of the examples we have there is this map visualizes the density of points in an area by using an Uber tool called Deckgl and mapbox. And so this shows where points are, but on the phone map, the points just are static. This is a bar graph representing the amount of tokens people have staked in those points. So this is an example of a visualization you can do based off our API where you have this kind of 3D model and you get a sense of where are really high lease staked points. Another interesting example on this page is about flight paths so that you can kind of look up one individual user and get kind of a sense of all the places that they've mapped so you can kind of track the history of a cartographer. This specifically is tracking a user who participated in a scavenger hunt we did as a kind of external incentive with a project called Loccides, where you could win an NFT by solving clues and mapping areas. And we did some post analysis with our API tools of kind of seeing where different users mapped and how they played the game.
00:10:58.210 - 00:11:54.976, Speaker A: So that's essentially just an overview of what is the Foam protocol, what is our API, and the stack underneath it, and a few examples on our developer portal. I know we're getting close to the time limit I have, so I just want to basically go over a few example applications from the recent hackathons to essentially give some ideas of what people have built. So this is a project that recently won a prize at the Eat Berlin hackathon about two weeks ago, worked on by the Gnosis team. And it's called Mapcovery. And this is essentially an application that will allow you to restore your Gnosis safe wallet if you forgot your private key by utilizing the Foam protocol. And so what it does is that you can pre commit five points of interest that are secret to you to a contract. And then essentially, if you lost your private key, you would be able to reveal this information by reselecting these points off the map, and then you can unlock your key.
00:11:54.976 - 00:12:42.896, Speaker A: So they've built, like, a pretty advanced application in two days where they use the Foam API to basically pull all the Foam points and have a mobile application. And when you want to set up this recovery function, you basically go around the map and select five points that are secret to you, and they could be anywhere around the world. So you could pick the Taj Mahal, Washington Monument, JFK, your mom's house, and your elementary school and keep that. Don't tell anyone those five points. And if you lost your password, they made this interface where you can go back, select all those points, and then you basically can unlock your wallet. And so this is a really amazing example to me, because this is an application that then has a demand for more points. So how can you make this more secure to make sure no one could guess your five points? We only have 10,000 points today, so it might be easy for someone to brute force guessing five.
00:12:42.896 - 00:13:31.724, Speaker A: So this is an application that could potentially drive the demand for more points of interest, because this is an application that would require onchain geospatial data. This is a quick example of the Foam winner at the E New York hackathon. It was called French toast, Kitty. So what they did was they allowed you to essentially assign CryptoKitty, a cryptospatial coordinate, which is the Foam geoencoding standard, and rendered it on their version of the Foam map. They use the Foam API to basically render all these points of interest. And interestingly, in this project, they had a chainlink integration where CryptoKitty will ask an oracle, what is the weather outside? And then essentially tell you what the weather is and filter the points on the map based on the weather. So this kind of your cat essentially recommends what points of interest you should go to based off the weather on chain.
00:13:31.724 - 00:14:15.980, Speaker A: So that was a really cool integration that we're really excited to see and just some other things that people have been building based off of our APIs. And tools are kind of full fledged Foam specific block explorers. We have a platform called Foam Tools. This allows you to claim three box identities. So for opt in social reputation, we have a leaderboard as well as kind of advanced tools for the curator class to kind of go in and look at how the challenges are going on, the points of interest, t user history, really specifically and really get a more advanced experience. If you're an active curator on the Foam app, you can use this platform. And that was kind of one of the first projects really built off of our API, and it's quite advanced, so you can see that foam.
00:14:15.980 - 00:15:03.164, Speaker A: So thank you, everyone. I'm happy to take the last five minutes. I have to answer any questions and yeah. Is it possible to kind of share a location with someone in a secret way? You mean like a park location? Any location? Yeah, it's possible. So this is an overview of what's Live today on Foam, which is the Foam Map, the future of the project. We're working on basically real time locations, what we call proof of location. So that is a system of radios and time sync, and you'd be able to generate a proof of where you are.
00:15:03.164 - 00:15:28.070, Speaker A: And we're investigating other kinds of cryptography, so you could reveal that to a friend and still keep it private. Or if you want to unlock a Pokemon, you could reveal that proof to that app, but using some fancy so that'll be a future thing. Can't do it now. Well, right now, what's Live is the token created registry. You could potentially hack something where you reveal your activity or points using some cryptographic function, but nobody's built that yet. Okay, thanks.
00:15:30.230 - 00:15:31.138, Speaker B: Super question.
00:15:31.224 - 00:15:31.522, Speaker A: Sure.
00:15:31.576 - 00:15:38.366, Speaker B: The response object is that are we stored on chain or is it stored in multiple areas?
00:15:38.558 - 00:15:48.650, Speaker A: Yeah, the kind of, like, reference data is on chain, but we utilize IPFS for kind of what's returning there. So there's an IPFS call on the microphone.
00:15:50.590 - 00:15:53.930, Speaker B: Development. Super functional.
00:15:56.110 - 00:15:56.806, Speaker A: Exception.
00:15:56.838 - 00:16:07.454, Speaker B: That one area which is solidity. Are you guys considering reporting these other languages? There's one, like, Pyramid Scheme, which is.
00:16:07.492 - 00:16:09.498, Speaker A: Like, a more functional pyramid scheme.
00:16:09.594 - 00:16:13.870, Speaker B: That's a bad name, but compiles to the Gem.
00:16:14.610 - 00:16:24.610, Speaker A: Working on it. Yeah. I know that our team is not the biggest fan of Solidity, but when we launched this a year ago, it was like the most production ready smart contract language at the time.
00:16:24.760 - 00:16:34.438, Speaker B: I was just wondering if you guys are because you look like you do a lot of R D into the other parts of that area exploring as well.
00:16:34.604 - 00:16:51.850, Speaker A: Right now, we're kind of working on rewriting the Cosmos SDK in Haskell. We have a ground for that. So we're not focusing on new smart contract development at the exact moment. But probably after Defcon, we'll get back into that and maybe find out about some new exciting ways to write smart contracts.
00:16:53.730 - 00:17:04.942, Speaker C: I'm wondering about the map recovery feature. I know you didn't write this, but what would happen if I choose my five points and one point then turns out to be false and is removed from the map?
00:17:05.006 - 00:17:08.674, Speaker A: Yeah, that's, like, an interesting question.
00:17:08.792 - 00:17:30.866, Speaker D: I'm actually from Nephis, so I talked a bit with them about this, and they like, well, historically, the data is available because it's been published at Chain. So as long as you have an indexing service that allows you to kind of recover past states of foam, then you're okay. For example, if a point gets moved.
00:17:30.898 - 00:17:55.860, Speaker A: Or something like that, essentially when points get removed, they're not removed from the blockchain, they're removed from their status of being on the registry. So even on the map application, it's hard to find, but you have a filter layer that's called the graveyard, and then you see every point that has been removed from the registry, but technically it's still on Chain and you can still render it on the map. Okay, but its state is inactive or something.
00:17:56.550 - 00:18:00.660, Speaker C: I guess then you'd have to track or keep in mind the time.
00:18:01.910 - 00:18:07.240, Speaker A: Yeah, or you could just write down the listing hash or save it somewhere, and then you would be able to find it.
00:18:12.960 - 00:18:24.636, Speaker C: But this sounds like a great framework for the year 2000. You have very short term stakes about some signal information, say traffic location. Do you see that being a possibility.
00:18:24.748 - 00:18:25.904, Speaker D: For the next few years?
00:18:26.022 - 00:19:35.580, Speaker A: Yeah, that's definitely what we're working on for this more dynamic proof of location. So we kind of refer to this as static, just the things on the map. You can participate from your couch and add things in India, but as we kind of move towards this fault tolerant way to prove location, you can have all these really interesting applications like traffic flow, and if you're managing your fleet, you can require your fleet to produce these claims at a certain interval. Even with the foam map itself, you could say, hey, you can't vote on a point in Boston unless you can prove you've been there in the last year or something. Any other questions? Yeah, just curious what drove your sort of thinking around using app for functional programming? A little bit out of my hands. My co founder and CTO, Christopher, wrote the haskell Ethereum client in 2014. And a lot of our team members worked at a company called Block Apps, which is a Haskell based company.
00:19:35.580 - 00:20:23.116, Speaker A: And so when they started working here, that's the stack that they were pretty committed to. But then basically why we even made like this chantrell was just because our developer Martin was so upset with how frustrated he was using Truffle and he just remade it because he was too upset. And that's kind of the same thing with this demo we just did at East New York that used the radios and this tendermint application. We wrote it in Go. Our developers were just so mad about working on it, so instead we just got a grant to rewrite it in house mode. But that kind of comes with all these static type security guarantees and basically we're able to really iterate on the application without breaking it in the way Java things might be easy to make on day one, but a year later it kind of starts to fall apart. So we're able to really seamlessly execute updates and we haven't had any downtime or issues so far.
00:20:23.116 - 00:20:31.440, Speaker A: And so for the phone location work, the thinking is once we have that SDK and environment we're comfortable in, we can iterate way faster and have way more secure.
00:20:35.060 - 00:20:45.588, Speaker C: So if you have a point and a word is misspelled on that point, does that mean that you have to kind of download that point, remove it, and create a new point with the correct name?
00:20:45.674 - 00:21:17.950, Speaker A: Yeah. So as the owner, you still own your token if the point is still there, so you're able to manually remove it and pay the gas. But that's one of the top reasons people challenge points for Nitpicking and they're like, oh, this is case. So it's really then open to how the users use it. And we've had a lot of interesting edge cases of people even lying challenging, like, hey, I live in Boston. This Dunkin Donut is across the street over. And then like they're just lying it.
