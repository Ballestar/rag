00:00:10.570 - 00:00:43.514, Speaker A: Hi everyone. I'm Sam. I'm CTO and co founder of Tatum. And in this video, I want to introduce you Tatum. I want to tell you what it is, what you can do with it, and how Tatum can help you with building new blockchain applications. So let's start from scratch and let's say what Database? Database is a developer framework for you, for the blockchain developers to build blockchain applications fast, sometimes without previous blockchain experience. It means you, as the developers, doesn't have to know what blockchain is.
00:00:43.514 - 00:01:27.110, Speaker A: You don't have to know how you need to interact with the blockchain. From the low level perspective. You can just come use Tatum and leverage some kind of pre built pieces of functionalities or building blocks and put your applications together. Why should you use framework like this? It's super easy. What we've seen for the last years, we've seen increased amount of new blockchains, new complexity in the blockchain development. The webtree space is really huge, and yet it's very young in the early stage. And there is like tremendous amount of information you can search for everywhere.
00:01:27.110 - 00:02:36.042, Speaker A: But the most important things how to build applications, how to build great scalable blockchain applications, how to even interact with a blockchain. It's almost nowhere to find. You can either find API documentation or references to blockchain nodes to a specific RPCs with very low level features, or you can just see the results, some nice application, some fancy UI and NFT marketplaces and whatever out there. But what's missing is the glue between those low level RPCs, those blockchain integrations, and the final step. And that's why we've built Atom. That's why we are trying to help you developers to build applications, to actually see the design patterns, to see how you actually should do it, what's important, why you should care about security, why you should care about scalability, and how to achieve that in a very, let's say, easy way. My name is Sam, as I said, and I'm the co founder, I'm the CTO of Tatum.
00:02:36.042 - 00:03:30.746, Speaker A: I founded Tatum a couple of years ago with Jiri. And our main idea, our main goal is to give you the tool which you can leverage, which you can leverage easily. And we are trying to hide the complexity of blockchain development and we are trying to, let's say, democratize the blockchain development space. Because you either has tremendous experience with RPCs and you are really a skilled developer, or you have basically no other way how to build and how to interact with the blockchain. That's really shame. That why everyone can't leverage blockchain in their applications, in their projects, in their products, in their companies, because it's a great technology with a huge potential. In general, you can build anything with Atom, any project you want, anything blockchain related.
00:03:30.746 - 00:04:31.954, Speaker A: There is a feature on our side you can leverage in your product. So if you want to build some NFT marketplace, you can find some features connected to that. If you want to create some blockchain wallet or custodial wallet or custodial exchange, there are some features we have available for you. If you don't care about the custodial applications and are more into DeFi space and noncustodial approach, we can give you tools for that as well. So there is like a huge product offering from our side. And today I'm going to show you, let's say, top ten features or areas in Tatum you can leverage in your projects, you can leverage in your development, and it can save you a lot of time, lot of money and a lot of headaches during the development. So today I'm going to show you how to actually interact with the Tatum, how to build something, what kind of features we offer to you.
00:04:31.954 - 00:05:18.980, Speaker A: Keep in mind, it's not everything. We have more than 300 different API calls and API endpoints available for you right now. I'm just going to highlight the most important ones, which I believe you can leverage right out of the box. In general, if you want to interact with the Tatum platform, with the Tatum API, you need to go to Tatum IO, sign up, create API key and use the API key in the API calls. Tatum is mostly the cloud API, which you can easily integrate in your applications basically in any programming language. There is no limitation here. If the programming language can call Https request, you can use Datum, which is great.
00:05:18.980 - 00:06:04.030, Speaker A: For today's demo, I'm going to use Postman, which is a great rest API client. And I'm going to show you a couple of couple of product features and a couple of, let's say, very quick operations you can start working on and building your next product. So in this section you can see what we are going to talk about today. We're going to talk about the native RPC. So Tatum as a platform can help you. As an RPC provider, we run all the blockchain nodes on our site. So anything you want to build directly on a native RPC of the nodes, you can use our nodes, they're all exposed.
00:06:04.030 - 00:07:11.862, Speaker A: And then we've built another layer on top of the RPC node because RPC nodes are great, but it's like coding in assembler. If you can code in Java, right, you don't want to code in a low level language if there is some abstraction, some simplification for you, which makes your life much easier. So, except of RPCs, we have bunch of different product offerings and one of those is a blockchain indexer, which means we are actually indexing the data of the blockchains we are running into our systems and we can serve you real time data and real time information from the blockchain world. You can read NFTs by address, you can see NFTs in a collection. You can see transactions of ERC tokens by a specific address and much more. On top of that, we have some features connected to the NFTs easy minting of the NFTs, even without working on your own smart contract, without paying the gas cost. If you want to mint thousands of NFTs, you can just call one API and it's done.
00:07:11.862 - 00:08:07.410, Speaker A: You don't have to take care of anything out there. One of the product features we are proud of a lot is our fee estimation feature where you before you make any transaction, you can easily call the estimate fee endpoints and you can see the real time gas prices or fees which you should include in your app. Another huge section is the tokens where you can work with any type of tokens. You can deploy your own ERC tokens, your own SPL tokens on Solana, NFDS, eleven fifty five S, and many more. Of course, if you want to work with a blockchain and for example, NFTs, you need to store your data inside the blockchain easily and fast. And for that we have a very easy IPFS integration where you can store your files to the IPFS. You can read your files from IPFS and you don't have to pay for the cost of storing the files.
00:08:07.410 - 00:09:11.180, Speaker A: We take care of that for you. Once you've done all those things, once you start working with the wallet, start working with some tokens. Usually every application needs some kind of notification about events that happened on your side. For example, you have, I don't know, 1 million addresses on your exchange and you want to be notified once some user perform a deposit on one of those addresses. For that we have this great notification station feature where you can just subscribe for Webbook notifications on top of your address and you just receive the alerts real time in your app. We have tried a lot to make your life easier, especially on a blockchains where it's not so easy to develop on. And one of the most, let's say, challenging use cases we've seen so far is covering the gas cost for some operations on EVM chains, for example, I have received some NFT on my wallet and in order to send it out, I need to have enough ETH on my address to cover the gas cost.
00:09:11.180 - 00:10:08.298, Speaker A: It's okay, when you have one address, you can send ETH there and withdraw the NFT. But if you have 1 million addresses or tens of millions of addresses like, the complexity of managing such a solution is really high. That's why we've created a gas pump feature which is very, let's say, easy way to work with the tokens on your addresses. And in general, you're just going to cover the gas cost of all transfers of all tokens on different addresses from one place in your app, from one private key, which is great. It can save you tremendous amount of money and headaches. Another great feature we have inside the app is virtual accounts. It's something which is our own proprietary solution, where you can basically create your own accounts inside our platform, inside our system and those accounts could mimic the blockchain behavior.
00:10:08.298 - 00:11:04.598, Speaker A: You can use those accounts for fiat support in your app. You can use those accounts for easy, let's say easy accounting of what's happening in your application. You can use those accounts for some off chain features that you don't want to transfer all transactions on chain for your users but you can very easily perform instant transactions between accounts inside your app. Another powerful feature most of users are leveraging this. We're gonna get there what's behind it? So let's start very high level what I mentioned from the top RPCs if you want to work with the RPC on our side, we have one unified endpoint for all chains we support. The endpoint is V three blockchain nodechain you want to work with right now I'm going to work with Salana. I've performed simple get block call to the RPC node.
00:11:04.598 - 00:11:32.742, Speaker A: If you want to work with different chain, you just enter it. Or you can enter Matic as a polygon. You can work with Celo, you can work with BSc, you can work with Algorand and any other chain we. Are supporting. There is an IRPC endpoint anytime you're building application. You don't want to leverage any, let's say, additional features we are supporting. Or you have your application already built, running on your own nodes and you don't want to maintain them anymore.
00:11:32.742 - 00:12:34.320, Speaker A: You can just pass this one simpler URL and you can easily switch it's that easy. Usually when you are integrating those RPCs in your application, you need somehow to read data from the blockchain. Not all data are available from the blockchain node itself. Most of the data must be actually queried periodically as they are writing to the chain and you need to store those data, index them, and then you can serve them. Once you've integrated RPCs into your application, you want to read the data because you don't want to write only you also want to see what's happening on the chain. In order to do that, you can leverage the node for the operations it supports, I don't know, get blog or get transaction. But if you want to maintain more complex data in your app and you want to read some transfers, you want to read some crazy operations on NFTs, these information are not available in the RPC node itself.
00:12:34.320 - 00:13:17.994, Speaker A: You need to index those data manually store them on your database solution somewhere in your app or in a cloud and then you can query the information. It's okay to do it for one node for one chain if you want to do it for five chains is a nightmare if you want to do it for ten chains is disaster. And usually applications these days are not built on one chain only, they are built on multiple chains. We have a solution for you. It's our blockchain indexer feature where you can actually read the information from the blockchain for anything. Basically we are supporting. So we are storing those information on our side, indexing them for you and you can just read them.
00:13:17.994 - 00:14:02.490, Speaker A: For example, one operation which is worth mentioning is I want to see all NFTs under a specific collection. So again, we have some unified endpoint for that. You want to see NFT collection for polygon and this is the address of the collection. And you can see some information about the tokens available in the collection with the metadata available as well. Another interesting operation could be I want to see all NFTs which sits in my address. Right now I'm using Solana blockchain with some specific address. And again, you can see which kind of NFDS you own in the address with the metadata available.
00:14:02.490 - 00:14:34.130, Speaker A: So these kind of information are available for you. You can easily query them from our blockchain index. There's many more, not just these. You can see the account balance of specific SPL tokens on Solana, for example. Or you can see if you want to work with Ethereum, you can see Ethereum transactions by a specific address in, let's say, very low level Raw format. There are many more operations like this. You can find them in our API documentation.
00:14:34.130 - 00:15:31.334, Speaker A: Talking about API documentation, if you want to work with some of those API calls, you go from the main page to the resources to the API docs section and you can see our API reference. Right now I was talking about the node RPC, about the RPCs we are offering. So you can see in the first section the node RPC and list of all the blockchain we are supporting RPCs for. So if you want to work with any of these chains, you can easily leverage the same URL, which has a different chain you want to work with when you want to work with some NFTs. Those are under the smart contract section, under the NFTs fungible, token, et cetera, et cetera. So the features here, they're here for you. You can just full text search, I don't know, get Ethereum transactions by address, something I was showing right now.
00:15:31.334 - 00:16:00.778, Speaker A: And you can see the API operation here. So that's the blockchain indexer. So you have RPC application and you can read the data. Great. This is like something most of the projects actually need. They need to write, they need to communicate with the node and they need to read the data from the node. Now we are going to talk about more advanced features, something you will have to spend a lot of time during development.
00:16:00.778 - 00:16:57.134, Speaker A: And we are going to talk about the NFT Express. NFT Express is a set of features we are offering to you, to developers, where you can easily mint NFTs without taking care of the smart contract development, without taking care of the blockchain fees. The only thing you care is the metadata you want to attach to the NFT chain. You want to work with and the recipient of that NFT. These all are the only thing you need to know, you need to leverage if you want to mint something, we take care of all the rest. So if you want to mint NFT, you can just mint it on polygon for example and you can see the transaction ID. This operation minted NFT on our own internal smart contract, something other chains are doing as well where they are minting random NFTs for random people under their own smart contract.
00:16:57.134 - 00:17:39.338, Speaker A: If you want a more advanced solution, you can mint NFT using NFT express and you can mint them on your custom contract. If you already have an, you can enable the contract that Tatum and Tatum address could mint on top of your contract. And then the only thing you need to do is again recipient the URL use the minter, which is our own internal address. You can find it in our documentation. And you will define your own contract you want to mint on. And you can include the token ID you want to mint the token. And again, you don't have to cover the gas codes.
00:17:39.338 - 00:18:30.970, Speaker A: You don't have to do anything. We take care of all of that. You can see the result are the transaction IDs pointing to the tokens minted on the blockchain. For some applications they already have done all their hard work before, but they are missing fee estimation feature. If you want to estimate the fee on a blockchain, it's not so easy because there is so many transactions happening on the chain. Mempool is full of transactions and the validators or miners are actually picking those transactions based on the highest fee, based on some other priorities. So if you don't want to be stuck in your app for, I don't know, a couple of hours because you have used not sufficient fee for your transaction to be processed by the blockchain, you need to be notified.
00:18:30.970 - 00:19:27.138, Speaker A: Or you need to know what's the situation on the chain, what's the probable situation in the next 510 or 15 minutes. And you need to adjust your fees of transaction so they can pass quite easily. For that, technically, you need to do a lot of things, you need to monitor the mempool, you need to see the history of the previous blocks and transactions and the fees happening there and do some crazy algorithmic math to achieve some powerful results. You don't have to, we have that covered for you. So if you want to estimate a fee for transfer of the ERC 20 token on ethereum, you can call the estimate fee and you can see the gas limit and the gas price. If you want to see the estimation for some more complex smart contract operation, for example on a polygon there is a custodial transfer from one of our features. You can leverage this.
00:19:27.138 - 00:20:13.054, Speaker A: If you want to estimate the fee for a bitcoin, you can again just pass the bitcoin as a chain, an address from which you want to transfer, an address to which you want to transfer and again you will receive some estimations of the fees. So this is really powerful, this is great. You can see what's actually happening on the chain. You can see what the fees should look like in the near 510 20 minutes when we're going to talk about the tokens. There are multiple types of tokens you can work with. You can work with when we are talking about, we are talking about EVM chains, ethereum, polygon, et cetera, et cetera. There are mostly three token standards which are used 99% of cases.
00:20:13.054 - 00:21:17.270, Speaker A: When we are talking about tokens, it's ERC 20 or fungible tokens. It's ERC seven to one nonfungible tokens, aka NFTs and ERC 1155s which is semifungible tokens which is a combination between fungible nonfungible, something like an NFT with multiple additions of the same token. We can support you with all of these tokens if you want to include them in your application. You can easily deploy any type of this token. You can easily transfer those tokens, burn those tokens, read information from the blockchain about those tokens. You can do really lot of things with just one simple API call. So let's just try to deploy new ERC 20 token on a binance smart chain, with some initial supply, with some initial recipient, with name and a symbol, you receive a transaction ID.
00:21:17.270 - 00:22:38.954, Speaker A: We have a handy utility function where you can actually read the contract information from the contract deployment transaction from the chain and you can see that this is our new Minted ERC 20 token. Then let's transfer some of those ERC 20s from one address to another, how much, how many decimal places the contract has, which blockchain you want to work with. Again, if you want to change BSE to Celo or to Ethereum or to Matic or to Harmony, you can do that with just changing of one parameter. So we are trying in all of the API calls to follow the idea code once deploy everywhere, where you just do the integration for the first time and then you can just change the chain you are working on. So let's try to transfer those tokens and let's take a look on the explorer to see the transaction that it really went through. And you can see we have sent nine Tatum demo tokens from one address to another. Same setup applies for deploying your own NFT contract.
00:22:38.954 - 00:23:35.838, Speaker A: You just create a contract with the given symbol on a chain from a deployer and you just fire the request and it's done. Same applies for 1155, you're just deploying the multitoken talking about the tokens. As I said before, all our smart contracting or features connected to some smart contracts are available under the Smart contract section where you can work with seven to ones or compatible ERC 20s or compatible 1155s or compatible. When I'm talking about all or compatible on some blockchains. For example on Solana, the ERC 20 token and ERC seven to one token is already a blockchain standard called SPL Tokens. And you just work with the standard. You don't deploy your own contract, you just work with a blockchain defined standard.
00:23:35.838 - 00:24:39.888, Speaker A: Same applies for algorithm when there is already some asset on the chain which you can leverage for all the token operations. As I said before, when you want to work with the NFTs, you usually want to or need to store some data connected to that NFT, ideally on some decentralized storage for that. We have an IPFS endpoint where you just select the file you want to upload and you just store that file to the IPFS. Once the file is uploaded, you'll receive the Identifier from the IPFS. The result is the IPFS hash which is the Identifier of the file. And when you want to read those data from the IPFS, you just enter the Identifier of your file pinned to the IPFS and then you will see the results. We can see these were just some compilation metadata from a smart contract thing.
00:24:39.888 - 00:25:33.210, Speaker A: So IPFS super simple, two API calls, store read, nothing crazy, very straightforward. We are going to the more, let's say, advanced and cool stuff. And I really love the Notification station feature because it's something you don't even think that you need unless you realize that you really need it. Because let's be fair, you want to know what's happening in your application, your users want to know what's happening in your application and what's the other way to know what's happening if not notifications. So in general, the flow is very simple. Your user signs up, you create an address for him, your application, it's up to you. It could be exchange, Marketplace, wallet, whatever.
00:25:33.210 - 00:26:33.912, Speaker A: Once you have address for the user, you will create a subscription on that address and from that second you start monitoring those address and you receive all transfers, incoming or outgoing on top of that address. We'll do it on solana. We just create a new Solana wallet and we'll create a new subscription. We have multiple types of subscriptions. The one I'm going to show today is Address Transaction subscription type, where you're just going to subscribe to the address on a solana chain and URL is the URL of the endpoint we're going to send the notification to. I'm using this cool feature called webhook site where you can actually create your dummy listener for webhooks. You can copy the URL to the clipboard and we have created a subscription.
00:26:33.912 - 00:27:43.858, Speaker A: So from now on, every time anything happens on your address, let's gonna mint NFT to that address we are talking about right now I have minted an FD to this specific address on Solana, again using the mint endpoint. And from now on NFT was minted. And if I want to transfer some solana for example to that address as well, I can transfer some small amount of sol tokens to that address. You will be notified on the webhook side or on your listener. In our case it's the webhook side that something has happened on the chain, that there was an incoming NFT operation, that there was an incoming solana transfer. If we transfer something from that address away, you will be notified about outgoing operation. We can check the webhook side now if there is any webhook fired and we can see right now that we have received two webhooks.
00:27:43.858 - 00:28:23.486, Speaker A: Webhook number one, that we have received a token on an address with the transaction ID. Webhook number two, that we have received native solana tokens. This was the amount of the sol on address in a block with a transaction ID. Super simple, super powerful, nothing crazy. If you want to build this by yourself, you need to run your own node. You need to query every event, every transaction, every blog on the chain and listen to it. Yeah, could be a fine programming work, but trust me, you're going to spend a lot of time on that gas pump.
00:28:23.486 - 00:29:36.250, Speaker A: As I said at the beginning, gas pump is one of the features we are very proud of. A lot of projects are using that because every time there is some project coming to us and they are asking how can I pay the gas cost from NFT transferring? How can I pay that? I want to pay it from one place, I don't want to pay from 20,000 places. We say yeah, it's great, you can use our gas pump feature. Our gas pump feature is basically you are creating one smart contract wallet for each of your users and that smart contract is owned by one specific owner. And every time you receive anything on that smart contract wallet you can transfer those tokens from one private key with fees covered from debt one private key and debt one address. So only owner of a smart contract wallet of your gas pump wallet can transfer the tokens out and can pay the gas cost associated with the transfer. Which means you don't have to send tokens for covering the gas cost on a custodial deal.
00:29:36.250 - 00:30:28.410, Speaker A: On a smart contract wallet you need to have all your fee budget in your one place. So let's use Cello, let's create one wallet and this is the owner address from the transaction ID. You can read the wallets or smart contract wallets generated from the transaction. It's the only one we can use cello Faucet to send some tokens to my smart contract wallet. We can check in Explorer that the address is actually funded. You can use that this is a contract address, not the regular address. And you can see that we have a couple of tokens here that we have sello dollar, sello euro and sello native assets.
00:30:28.410 - 00:31:46.798, Speaker A: Right now let's transfer some of the sello euro, ERC 20 token from that smart contract wallet to someone else without the necessity to have a sello on the wallet. So we've performed a transaction and you can see that it's this transaction where we have actually transferred we have actually transferred some sello euro without any balance change on the contract wallet. You can see the only balance change is a seller euro because the gas was paid, this is the transaction and the gas for this was paid from the owner of the address. So this is very high level our gas pump feature, which is really great. You can create a lot of stuff with this, especially in a custodial space. When you want to onboard your users very easily into your application, when you want to cover the gas cost for them, this is the easiest and usually the only way how to do it. You need to deploy some smart contract and work with that.
00:31:46.798 - 00:32:16.026, Speaker A: Let's start with something easier before the virtual accounts. Let's talk about the custodial services we offer. One of the custodial services we offer is the managed wallets. Very simple stuff. You basically can create the managed wallet by on our platform, which means we are storing the private keys for you. You just create the wallet, you just create the address and you receive the Identifier of the address. You don't have to take care of the private keys.
00:32:16.026 - 00:32:58.698, Speaker A: We take care of them. Once you want to expose or once you want to read the details about the wallet and export it to your users, you can just get the wallet details via the Identifier and you can see the private key as well if you want. So, very simple setup. If you don't want to manage your private keys, if you just want to create a wallet and then just export and expose it to your users, you can use these two API calls. Create and get. Another cool feature we have is Exchange Rate. Yeah, it's one simple API call where you get the real time exchange rate of any crypto asset you want to.
00:32:58.698 - 00:33:42.170, Speaker A: So let's take a look. What's the current bitcoin value? And we can see it's €20,000. If you want to check what's the value of solana? You can see it's something about 35. If you want to take a look on, I don't know, on USDT. What's the euro value of USDT? Zero point 94. Very simple real time monitoring of the crypto assets of the Exchange Rate, including your application users can see what's the status? Very simple operation. And now we have last two things to go through is the virtual accounts and is the NFT marketplace or the auction.
00:33:42.170 - 00:34:12.610, Speaker A: Let's start with the virtual accounts because I believe they deserves that. Let's start with the fiat support. As I said, virtual accounts is a feature in our API where you can work with the fiat in the same way as with the cryptocurrencies. You create your own accounts of a specific currency. You. Can perform transactions between those accounts, you can list those accounts, list transactions on top of those accounts. Everything is outside of the blockchain.
00:34:12.610 - 00:35:19.078, Speaker A: You have instant settlement without any fees. If you want, you can connect your virtual account to a specific blockchain address and that virtual account will be feeded with all deposit operations that happens on the connected address. And you can work with crypto in the same unified way as you are working with a fiat or any other currency. This has a great potential when you're working with multiple chains. And the best example how to imagine like hey, what the hell is Sam talking about? Imagine some custodial exchange for example Binance. When you sign up for Binance, the Binance actually creates bunch of accounts for you, for Bitcoin, for ethereum lending, staking, trading, lot of stuff all those accounts and all those balances in those accounts are virtual accounts, something stored in their systems. And every time you want to deposit some crypto, you are generating the blockchain address.
00:35:19.078 - 00:36:01.830, Speaker A: And the blockchain address is associated with that virtual account right on their system. You perform the deposit, the deposit comes to a binance address and Binance detects the deposit and increase the balance on their accounts. You are not working in binance with a blockchain address. They work with their own virtual accounts, with their own system. On every operation they are supporting the split between the blockchain world and the virtual world is very strict. You actually are using blockchain addresses only as a deposit ones. Everything else is in virtual accounts.
00:36:01.830 - 00:36:50.680, Speaker A: So let's show you how to create some virtual currency. We can create a virtual currency, we just give it a name. Let's say I'm going to create my own US dollar. So I'm going to create virtual currency, VC, USD, Sam with initial supply of zero assets. What has happened? I have created on the background in Tatum virtual account I have created new virtual currency and the virtual account has a zero balance. What I can do right now, I can easily mint new supply. So I'm going to create ten new US dollars in my app and I'm going to add those supplies to the account ID I have created before.
00:36:50.680 - 00:37:09.126, Speaker A: So let's create new ten USD dollars. You can imagine the flow. Why should I doing this? Hey, Sam. What you're doing? Imagine you have application where you have a lot of users. They want to deposit some fiat currency to your app. They're going to use PayPal. Stripe.
00:37:09.126 - 00:37:46.040, Speaker A: Whatever. And once PayPal sends you the web book hey, I have performed the payment. They have sent me $10. You can then mint new virtual $10 into your virtual accounts and you mimic the real fiat values in your system and you can pair it every time your users want to pay out. And you're going to send them via wire transfer against Stripe or PayPal some money out of your app. You can actually destroy the balance inside your virtual account and send the money away. So there is like this connection between the real world and your application.
00:37:46.040 - 00:38:50.326, Speaker A: Let's create another account. Let's create another account with the same virtual currency again with the zero balance. And then we can transfer between those accounts between the main one where we minted something to the newly created one. So right now, you have performed the virtual transaction instantly without fees, with basically zero response time. If you want to see what's actually happening in your accounts, you can see the get transactions by ID and you want to see the transactions for and you can see that, okay, I have performed Mint of $10, and then I have sent $10 from my account to someone else with some additional details. So, again, very simple, very straightforward. If you want to see where in the API doc is this? It's in the section of the virtual accounts.
00:38:50.326 - 00:39:25.698, Speaker A: When you want to work with virtual currencies, with accounts, with transactions, you can see there is much more to it when we are talking about the Gaspump. Before Gaspump is a smart contract type of the operation. So it sits under the smart contract section. And the subscriptions, it's in a notification subscriptions. The same logic, like for these fiat operations, applies for crypto. So if you want to work the same way or integrate the same way, your fiat and the cryptocurrencies, you can use the ledger accounts for this. Right now, we are going to create new virtual account for Solana.
00:39:25.698 - 00:40:17.830, Speaker A: Again, the same input, same output. What we're going to do on top of it, we're going to pair the account we have created with some specific blockchain address. I need to create a new Solana wallet. We have assigned address on the blockchain with this virtual account. And right now, if we transfer something, some solana assets to this address, your virtual account balance will be increased and you will see that blockchain transaction inside your virtual account. You'll see the balance. You'll see the detail of the transaction.
00:40:17.830 - 00:40:49.442, Speaker A: If you want, you can create multiple accounts. You can create not only solana, you can build accounts for a bitcoin. You can build accounts for Ethereum, you can build accounts for Polygon, right? You can build accounts for USDT. It's really up to you. Every time you want to support some asset, you can create a virtual account for it. You will assign an address for it. And you have done this interconnection if you want to.
00:40:49.442 - 00:41:44.522, Speaker A: Like then once we have created these, let's say five accounts right now we have added all the accounts under one common customer, which usually represents your user in your application with some kind of external Identifier. So anytime your user sign ups to your application, you will create a couple of accounts for them and connect them or glue them together via external ID. The result of the account contains a customer ID. And then we can check accounts of a specific customer and you can see I have done that before. I have a lot of accounts under one specific customer for different chains. Those are for matic, for ethereum, for bitcoin. This is our account for Solana.
00:41:44.522 - 00:42:28.020, Speaker A: Obviously that the transfer of the 0.1 Sol was successful and we can check the details of that operation under get transactions by account operation and we can see that we have processed the deposit. This is the transaction ID, this is the receiving address, this is the amount of sold tokens we have received. There is obviously much more than that. You can block amounts on the account. You can send crypto from your virtual account and from a specific private key somewhere else. So there is lot of logic hidden here, but you really can do a lot of stuff.
00:42:28.020 - 00:44:05.102, Speaker A: You can really build your application on top of the virtual accounts where you're going to support tens or hundreds of assets and on different blockchains, using the same integration, using the same way and you're going to save tremendous amount of money, tremendous amount of time. And basically your time to market will be 5% of what would you have done directly with RPC nodes. Last but not least, we have some NFT marketplace auction features which basically creates your own on chain smart contract marketplace on different blockchains. You can then list your NFDS on that auction, on that marketplace. You can buy then the NFDS as a buyer from the outside world or you can bid in the auction if we are talking about the auction. And you really can build your own marketplace logic on the chain, something similar what OpenSea does or other marketplaces really straightforward smart contract for auction or marketplaces details for that again in the API section under the smart contracts in the marketplace or auction fields. So this was a high level overview of Tatum, of the framework and of the product offering we have for you.
00:44:05.102 - 00:44:22.326, Speaker A: You can pick whatever you want. It's really based on your use case. If you want to work with RPC, work with RPC, we don't care. We're just here to help you. Just here to help you build and scale. If you want to work with indexers or some other features, feel free. It's super easy.
00:44:22.326 - 00:45:18.026, Speaker A: The only thing you need to do is to go to Tatum IO, sign up in our dashboard, you can sign up via Google or anything else in the dashboard. You will create your API key. It's free. If you want, you can create free API keys and then just copy the API key and you can do whatever you want. You can play around with any URL, with any operation, with any feature. It's just here. If during your build time you want to ask us something, you are not sure how the operation works, you can always reach out to our Discord, which is our main community channel, where you can go Discord Atom and you will go to our Discord Channel.
00:45:18.026 - 00:46:07.410, Speaker A: When people are asking questions, our team is there trying to help you, guide you, show you some next steps or where you should reach out again. There is a huge API reference. And if you want to read some guides or tutorials, it's also available under the resources, under our documentation. Here's a link to the discord. And of course, last but not least, we have quite a big, quite a big YouTube channel where there are a lot of videos, lot of tutorials, lot of guides where you can just where you can just see our channel. Lot of information is available there. So thank you guys and happy coding.
