00:00:00.250 - 00:00:38.580, Speaker A: Go up on YouTube. Hi, welcome to our final day of Hack Money workshops. We have Federico here from Uniswap Grants programs, doing a workshop on a fast, efficient method for backtesting Uniswap LP strategies. Questions will go into the zoom chat and Federico will answer them all at the end. And with that being said, I'll pass the mic along to Federico.
00:00:40.840 - 00:02:02.184, Speaker B: Hi, welcome everybody. My name is Federico Landini and I'm the co creator of Defileab XYZ. It is a website where we build tools to help users understand the possible risks and the rewards of using various DeFi protocols. One of our tools is a Unisoft V Three simulator and back tester. It allows liquidity providers to test different strategies and comparing the impermanent loss and the potential fees that are generated for different configurations of ranges or between different pools. We received a grant from the Unisop Grants Program to develop this tool and the grant also included a research part to investigate on ways to backtest Unisop V Three strategies and I will introduce you to the results of this research in just few minutes. While I was working on the grant, I got more and more engaged within the Uniswap community and a few months ago I also started collaborating with the Uniswap Grants Program, joining the team that reviews grants proposals and supporting grantees in the process of developing their projects within the UGP.
00:02:02.184 - 00:03:17.350, Speaker B: I'm also helping running the Community Analytics Program, an effort we launched to incentivize the Uniswap community to create dashboards and analytics to showcase data about Uniswap and DeFi. Before going to the core of this presentation and talk about backtesting Uniswap strategies, I'd like to take a few minutes to introduce you to the Unisop Grants Program. Unisop, as you probably know, is one of the most popular DEXes in the defy space and is currently deployed on ethereum, polygon, Arbitrum and optimism. In December 2020, Unisop governance voted to approve the creation of the Unisop Grants Program. The goal of UGP is to support the growth of the Unisop ecosystem, funding teams working to improve governance, usability, tooling and community. A particular attention goes to initiatives that are open source and that can be considered public goods. Initiatives that have an eye impact for the ecosystem, but might not be realized if they are not founded by the Grants program.
00:03:17.350 - 00:04:06.208, Speaker B: In little over 1015 months, UGP founded around 100 initiatives for a total of around $6 million. We encourage all the hackers of the AC Money Akaton to go visit our website. And if you are working on an idea that can contribute to the growth of the Unisop, of Unisop or its ecosystem, you should consider applying for a grant. We will be very happy to talk to you and to discuss together how we can help you to bring your vision to life. For the AC money. Akaton the Uniswap grants program committed $16,000 in prices for the best uniswap axe. We identified two categories for this competition.
00:04:06.208 - 00:05:03.652, Speaker B: The first one is about tooling. If your team is building tools to help other developers building on top of Unisop, or if you are building tools to improve the end user experience, you should apply here. Other example of this category could be libraries or framework to help coders easily interact with Unisop, or tools to help end user abstracting complexity and or providing a better user experience when interacting with Unisop itself. The second category is all about innovation. You should apply here if your AK is using Unisop as a Lego block within DeFi processes, or maybe if you are building additional functionalities on top of Unisop, or even if you are using Unisop in a new and innovative way. These categories are quite broad. We did this on purpose because we didn't want to limit your creativity and fantasy.
00:05:03.652 - 00:06:13.332, Speaker B: We encourage you to build in complete freedom and submit your ideas as long as they are related to Uniswap. For each category there is a price of $4,000 for the best submission and an additional budget of $4,000 that will be divided between the best runner ups. We are very excited to see what you come up with and we wish you the best of luck. Okay, so now let's go to the core of this presentation and let's get started talking about back testing LP strategies for Uniswap v three in a fast and efficient way. I'll do my best to keep this presentation simple and clear. There is quite a lot of formulas that I will show you and I know it could be a bit overwhelming to absorb everything in around 20 minutes. And this is why at the end of the presentation I will present you some links to documentation where the same logic is explained to our GitHub repositories.
00:06:13.332 - 00:06:58.170, Speaker B: So if you will want to dig deeper into what I'm going to tell you, you can refer to this documentation. So the success of any Unisoft B three strategy depends on two fundamental elements. The first element is the impermanent loss, also called divergent loss. The terms refers to the loss or profit that you could incur due to a divergence between the price at which you open the LP position and the price you close the LP position. This impermanent loss is deterministic. As we can see in the GIF that I put it in the slide. We can determine the value of our LP position for each level of price.
00:06:58.170 - 00:08:03.490, Speaker B: This allows us to clearly understand the impact of the impermanent loss in various scenarios and quantify mathematically the risks involved in each strategy. The second element that determines the success of a strategy are the trading fees collected by the position that we define. Trading fees depends on the trading volume and on the amount of liquidity locked in the pool. We cannot forecast these parameters for the future. However, we can look into historical data to guide us in our decision making. For example, historical data can give us an idea of the average returns of a pool, helping us to shape our positions. So how can we determine historical fees? The most obvious way to calculate the fees is to bruce force the calculation.
00:08:03.490 - 00:08:44.586, Speaker B: So how can we do that? We can download all the swaps for a pool in a given time frame. We can download all the liquidity state of the pool in the same time frame. Then we can merge the data and calculate the fees for a specific strategy. The advantage of this method is that it can be very precise. However, it's very data and resource intensive. The amount of trades to be downloaded, for example, for a popular pool, like if USDC for just a couple of days is very very high, making this method very slow. It's also not very handy to compare different pools performances.
00:08:44.586 - 00:10:05.060, Speaker B: As you might know, there are different pools for the same assets in Uniswap. For example, if USDC can be found with different features, or it could be found on the different networks on Polygon, Ethereum, Optimism and Arbitrum. So if we want to test the same strategy on these different variants, it would be very slow and cumbersome because we have to download all the data all over again. But what if there is another way? So, for our website we wanted a method to be fast enough to be run on screen, without the need of downloading data locally and without the need to wait for time consuming calculations. So we went on a quest to look for an alternative solution. We went back to the Uniswap v Three white paper to understand in detail how the Unisop Smart Contract works. Reading the documentation, we could see that for each pool the contracts are tracking the total amount of fees that would have been earned by one unit of unbounded liquidity that was deposited when the contract was first initialized.
00:10:05.060 - 00:11:30.760, Speaker B: We can define the Unbound liquidity as a strategy that provides liquidity to the entire price range, where the minimum limit is zero and the maximum limit is infinite. If we track this value from the Smart Contract, then we can simply calculate the amount of fee earned by one unit of unbounded liquidity in a certain time frame as the difference between the value FG at the end of the period and at the beginning of the period. Now that we know what we need, so we need to get these Unbounded fees from the Smart Contract, we should think how we can retrieve this information. One simple way to get this data is to use the graph for this. The Unisoft v Three subgraph that is available for all implementation and on the various networks, allows us to read this value either on daily or hourly base. For our purpose, we decided to use the hourly subgraph, which allows us to keep a balance between accuracy in the results and efficiency. As an example, if we want to backtest 30 days, we only need to retrieve 30 multiplied by 24 hours, so only 720 records.
00:11:30.760 - 00:12:32.060, Speaker B: Another big advantage is that we can easily integrate the graph in our website without the need to host data, and this is very advantageous for us. So this is the best solution for our use case. But if you want to use this backtesting framework for more advanced applications, running your own node or using infura to collect the data could be a better solution. So the big benefit in this case is the possibility of collecting data in smaller intervals than 1 hour. So for example, half an hour, five minutes, one minutes depends on your needs. This will guarantee better results and accuracy in the back testing, as we will see later. Now that we collected the fees generated by one unit of unbounded liquidity, we need to calculate some additional data about the strategy that we are analyzing.
00:12:32.060 - 00:13:49.860, Speaker B: So for each period under consideration, we need to calculate the liquidity provided using the liquidity provided using the liquidity function. The liquidity function determines the quantity of liquidity provided and depends on the price at which we deposit the liquidity, the mean of the range, the max of the range, and the amount to be invested. So the mathematical details of this function are described in the white paper and there are some libraries available that you can use to calculate these values. I will skip the details at this point for simplicity, but everything is very well documented and it's easily available if you want to look further. And I have some links at the end of the presentation that I will introduce to you. Besides the liquidity of our specific strategy, we should also calculate the liquidity of an unbound position where the amount invested is equal to the amount invested in the strategy with these two values calculated. Finally, we can determine the concentrated liquidity multiplier as the ratio between the liquidity and the liquidity unbounded.
00:13:49.860 - 00:15:18.450, Speaker B: All this calculation needs to be repeated for each period within the time frame considered, because the values will change since the initial price will be different for each period. With all this calculation complete, we can finally determine the historical fees for each period in the time frame. A liquidity provider has basically two different options. First, they can decide to provide the liquidity for the entire range, and in this case, the fee they would collect would be equal to the fee unbounded, multiplied by the number of unit of unbounded liquidity their investment could buy them otherwise. Option number two they can provide a concentrated liquidity position, specifying a custom range that they chose. In this case, the fees that they can collect can be calculated as the fee that they would have collected with an unbounded position multiplied by the concentrated liquidity multiplier multiplied by the time that the price spent in the selected range. We should repeat this calculation for each period in the time frame and finally sum all the values to determine the fees that were generated.
00:15:18.450 - 00:16:23.150, Speaker B: Okay, so we were able to calculate the fees, the historical fees in an alternative way without the need to download all the data from the swaps and all the data from the liquidity. The first big question is does this actually work? We did some tests using live position on unisop, on Ethereum and in the chart that you can see on the screen, you can see the results we obtained. So we can see that the method is very precise when the price spends the majority of time in the range. So on the right side of the chart, the method is also very precise when the price spends no time in the range at all. So on the left side, and this part is quite easy because in this case the fees collected are zero. So it's quite easy. And finally, the method is pretty accurate when the price spends sometimes in the range and sometime outside of the range.
00:16:23.150 - 00:17:49.740, Speaker B: And this is shown in the center part of the chart. A good thing is that even in this last case where our accuracy is lower, we can quantify our precision, we can measure the time that the price spent within the range and we can give the user an indication of the confidence of our measure. So if the time of spending range is around 50%, as you see here, the confidence will be lower and we can inform the person. So the results that we are showing you here are good enough for our use case. So it's good enough to be shown on a website like we will see in a few minutes and to give you a good overview of your fees. But if you would like to improve the precision because you have a use case that is more demanding from that point of view, I would recommend you to use infura or your own node to take the data in a shorter time frame because that will greatly improve the results of the calculations. Okay, I would like now to show you our website and how the back tester works on our website.
00:17:49.740 - 00:19:21.062, Speaker B: So this is our website where we do simulation and back testing of unisoft b three strategies. And if we go a bit further down, we can see here the part about strategy back test. So on the left side we have some input parameters where we can define our own strategy, selecting the pool, so in this case ethereum USDC entering the investment that we want to deposit in this specific position and then defining the minimum and the maximum of the ranges of our strategy. Here you can see a chart, a bar chart where each bar represents the fees that the strategy would have collected on a specific day. So we can see that for example, if I change my strategy and I make the range larger, increasing the max value. The back tester is calculating online the updated results without any slowdown and even if I go and select a different pool, so for example, bitcoin ethereum, after reloading for a second, the results are shown again and again. We can change our strategy and the tool will calculate our results in a very quick way.
00:19:21.062 - 00:20:21.160, Speaker B: We can also change the interval, the time frame that we want to calculate and the results are also very fast. Okay, so now you know everything there is to know about our methodology for backtesting unisoft strategies. And I think that showing it how it works on our website gives you an idea of how fast at the end the results are in their calculation. So there are a few reasons why I decided to make this presentation that I would like to share with you. First of all, I think this methodology is quite interesting and could be used for more use cases. We are currently using on our website as a back test to help user pick their strategies. But I could think about other uses.
00:20:21.160 - 00:21:21.696, Speaker B: For example, I think it could be useful in data analysis to do researches on how different strategies perform in different market conditions. Another use case I could see is as an exploration tool for money managers defining new units of the three strategies. And I'm sure that other people could think about other use cases. So we would love to see any of the hacker building on top of this framework. A second reason why I decided, and I wanted to share this with you, it is because I think it showcases how a non developer individual can contribute to the space or to an Akaton like this one. I think that going deep in understanding how a protocol works and the protocol design can uncover new ways of doing things and unlock new ideas and possibilities. Yes.
00:21:21.696 - 00:22:21.780, Speaker B: So now we are at the last slide and I'm listing here some documents and some documentation that you can refer to if you want to know more about all this. So the first link, it's a medium article where the logic that I just described is described again in details. So if you thought it was too fast or there are some steps that are not clear, you can refer to this medium article. Then we have a link to our defylab GitHub repository where you can find a Python script to run the backtester. So I did the code myself, so it's a bit acky, but it works very well. And also if you want to add the vector logic to your web application, there is a node module for that that you can use. Then I add links to the unisoft B, three white paper and documentation.
00:22:21.780 - 00:23:54.024, Speaker B: That is the basic documentation that I used to study and to come up with this methodology. And finally, I link a Python library where you can find the liquidity functions that I used and that I spoke about a bit before, that they were made by JMP, that it's also another UGP grantee. So I think it's very cool to see that we built our product using JMP work and we would be really happy if somebody would build something on top of our work. I think this is a very nice example of the benefits of a grants program and of the benefit of open source code and open source ideas. I really hope you enjoyed the presentation and I think that we have still some times, some time. So I will have a look if there are some questions about the backtesting and also if you have any question about the Unisop Grants program, please feel free to write it in the so okay, sorry, the first question, yes, it was already answered by Rumold. I hope I didn't misspell your name, but LP stands for Liquidity Provider in this case.
00:23:54.024 - 00:25:20.176, Speaker B: So what it means is in Uniswap, you have the possibility of depositing capital in the automatic market maker to facilitate trades, and doing so, you earn fees for debt. So as a liquidity provider, you can decide to deposit your liquidity, define a range for which your liquidity will be active, and you will be rewarded with trading fees. So this methodology that I just described is helping you to determine and to estimate how a strategy performed historically. So I hope that this helped you to understand a bit better. So will there be support to back test on Unison V Two pools? So the Unisoft V two pools works a bit in a different way and this methodology, specific methodology doesn't work. In that case, using B two pools, it's easier and there are easier way to do all this. However, you could use Unisop V Three, as we said, providing liquidity to the entire range, simulating basically a V two strategy.
00:25:20.176 - 00:26:02.460, Speaker B: And in this case, the back tester works and you can see how much fees you would make in this kind of scenario. And finally, Carlos is asking if you can pick a custom date range. And the answer is not in our tool. In our tool, you can only test back to the last 30 days. But the framework allows you to test whatever you want. And even using the subgraph, you can query the date range that you want. So you can look into the documentation and you can look at our logic.
00:26:02.460 - 00:27:16.740, Speaker B: And with a bit of hacking, I think you could adapt our code or making it even better, as I said, using infura or running a node and you could backtest the debt range that you would like. So I don't know if there is any other question maybe about the Unisop grants program. Otherwise I think that well, thank you very much for your attention. I think that just to reiterate, if you have any question about the backtesting methodology, you can go to our website and you can contact me through our Telegram group or through our Twitter. While if you have questions or anything about Unisop Grants program, you can either go to our website and there are contact information there, or you can go to the discord of Unisop and there is a specific channel that is dedicated to Unisop Grants program.
00:27:18.470 - 00:27:52.622, Speaker A: Awesome. Thank you so much, Federico, for taking the time to do this workshop for hack money. Yeah, super useful. Super interesting. As Federico said, the team is reachable on Discord, so definitely feel free to reach out if you have any questions, whether it's about the tech or about Uniswap Grants program in general. And thank you to the rest of you for tuning into this workshop. And with that being said, I hope everyone has a great rest of their day, evening, morning, depending on where you are.
00:27:52.622 - 00:27:53.760, Speaker A: Thanks, everyone.
00:27:54.530 - 00:27:55.020, Speaker B: Thank you.
