00:00:00.170 - 00:00:58.570, Speaker A: Cool. So today I'm going to share Xerox's RFQ model, one of the trading models that is 100% mev proof and also has several other really nice properties. If you were listening to Tom's presentation, he did drop some spoilers and I think this might be one of the few presentations today that will actually actually be under time. All right, so first of all, what is RFQ? This is a concept that exists in traditional finance. It's not specific to blockchains at all, but has some really nice properties that work really well with blockchains, I would say. So at a high level you could think of RFQ as programmatic peer to peer OTC trades. So you have a trader, let's say they want to sell 200 Ether.
00:00:58.570 - 00:01:52.670, Speaker A: They say, how much can I get for this 200 Ether? A market maker will be on the other side. Actually, one or more market makers will be on the other side and they will respond with the best prices they're willing to quote. So in this case, market maker says, hey, I'm willing to pay $500,000 for this Ether. And then the trader at that point can decide to agree to the trade or pass on the trade. And yeah, at that point the trade is sent to the blockchain and settled. So some of the high level properties of RFQ are well, first of all, it can offer really competitive pricing. And while it does have complete protection against mev, that was not necessarily an explicit design goal.
00:01:52.670 - 00:02:47.250, Speaker A: This model was designed first and foremost to offer the most competitive pricing. And I think it's just a little bit different framing than a lot of the other solutions that we've seen or we're going to see today. All communication happens off chain until these trades are actually settled, which makes the system extremely gas efficient for liquidity providers. They could be quoting all day, hundreds of times a minute or a second or whatever and they're not going to spend any gas on that. And in addition to that, orders pretty rarely need to be canceled, I would say so very rarely actually spending gas as a market maker at all. Trades are completely impossible to front run or sandwich. And we'll get into how that works in the next couple of slides.
00:02:47.250 - 00:03:49.234, Speaker A: Trades have zero slippage, zero fees aside from gas, and they're settled at a predetermined price. The price of the trade does not change if the transaction is mined in a different order or anything like that. These trades are highly capital efficient for market makers. So they are trading directly out of their own wallet and can theoretically offer trades as large as the balance in their wallet. And RFQ liquidity is also composable, so other DApps can consume this liquidity. Smart contracts can consume this liquidity, can be used with more complex systems. So how does it work? Well, if you're familiar with Zero X, the underlying concept is pretty similar to how zerox has worked since the beginning.
00:03:49.234 - 00:04:37.160, Speaker A: So Xerox uses off chain orders with on chain settlement. An order just describes the properties of a trade. So the tokens that are involved in that trade, the price of the trade, the time at which that trade expires, and several other fields. The market maker will hash all of the order properties together and sign the hash with their private key. And at that point the order becomes executable and can be sent to the smart contract for settlement. You could check out the entire order field and documentation in this link. So I want to focus in on this one field in the order TX origin.
00:04:37.160 - 00:05:41.510, Speaker A: This is actually the main field that prevents these trades from ever being front run or sandwiched. So the TX origin field enforces, who is actually allowed to fill this order, who can send this trade to the blockchain, only that field is allowed to fill the trade. If anyone else attempts to submit the same order, the trade will just revert. So literally impossible for any other bot, any miner to come in and try to fill the same order. And in addition to that, since the price is predefined in the order, the trade must be settled at that exact price. And this is how zero slippage is accomplished. It's totally agnostic to how market makers are pricing their orders or how they are hedging behind the scenes.
00:05:41.510 - 00:06:31.156, Speaker A: There's no price curve involved, no magic pricing formula baked into the system. The user really doesn't know any of that. They just know that this is the price the market maker is willing to give them and they either accept that or they don't. So what are some of the constraints of RFQ? Well, I would say, first of all, this is not really for your average liquidity provider that's depositing their tokens on, not made market maker, uniswap or SushiSwap. It does require a pretty high degree of sophistication to be a market maker on the system. You are trading completely programmatically. There is a good amount of off chain infrastructure.
00:06:31.156 - 00:07:31.050, Speaker A: You're not just depositing your funds and you need to be able to hedge out your risk in a pretty sophisticated way overall. And because of that, market makers typically aren't going to be experimenting that much with brand new tokens or tokens that are difficult to hedge or maybe tokens that have questionable legal status. Right. So they tend to participate in already established markets that have a lot of trading volume. So you're going to see really good coverage in the main markets that involve ETH, WBTC, Stablecoins, any of the DeFi blue chips. But if you're trying to market by a million dollars of some dog coin that launched an hour ago, you're just going to get sandwiched. There's no way around it.
00:07:31.050 - 00:08:53.040, Speaker A: However, yeah, I would say for consumers of liquidity there really aren't any downsides to trading against RFQ. You're going to get all the advantages of that consumers don't really need to care about where that liquidity is coming from otherwise. So I would say overall, the trade offs are pretty minimal and there's really good coverage in general. Tom showed a chart in his presentation about how large of a percentage RFQ volume makes up in the overall Deck space. Yeah, it's probably somewhere around 40% these days, I would think, and probably somewhere between ten and 20 professional market makers who are using these systems, from my experience. So how can you go and actually use this in practice? Well, we have a Liquidity Aggregation API called Xerox API, where Xeroxrfq is one of the major sources of liquidity taps into several professional market makers behind the scenes. If a trade is routed 100% through Zero X, it will be protected from mev and Slippage.
00:08:53.040 - 00:09:45.540, Speaker A: And you can easily set that in the API parameters or can also just let your trade be aggregated. There will be cases where there are mispricings and automated mark makers are offering better prices. For whatever reason, you don't really need to worry about it. But if you're doing a very large trade could be worth considering, even if you are offered a slightly worse price. In some cases, you can think of it as insurance, essentially because it guarantees you're not going to get front run. So yeah, give it a shot at Matcha XYZ, which is our user Facing Dex aggregator, or one of several Xerox API. Integrators zapper MetaMask DeFi saver coinbase wallet forgetting a bunch.
00:09:45.540 - 00:10:28.000, Speaker A: And if you're using Matcha and you do want that insurance, you are making a really large trade. There is this OTC tab you could check out and that'll just be trading 100% with this RFP system. So it's not even going to bother looking at the other liquidity sources in this case. That is all. I guess my closing comment is it's a super simple system which I think is desirable. It's really hard to reason about a lot of these solutions, but with your Xrq, I think it's actually like really black and white and yeah, hope you enjoy the presentation.
