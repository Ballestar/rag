00:00:00.250 - 00:00:40.994, Speaker A: So today we are going to talk about the limits of crypto economics and how to build antifragile MEB based systems. Next slide. All right, so kind of a brief intro of this talk. This is not going to be kind of my usual very kind of in depth researchy deep dives. Instead, I kind of want to be a little bit more provocative for this event because we have a lot of panels and a lot of discussions. I think we have a real chance to kind of influence the future of how we build systems and marketplaces for mev extraction. So this morning I was driving to kind of a piece of land I'm trying to build a home on to fight with the government over permits.
00:00:40.994 - 00:01:10.882, Speaker A: Here's a picture of me and my truck. And honestly, I had no idea what I was going to talk about in this talk, beyond some vague stuff about SGX and the title. So that's kind of the backstory. Hope you're not expecting too much, but please be prepared to kind of open your mind and challenge your preconceptions and have some discussion because that's what I would really love to happen. Next slide. Great. So first things first, because this is going to be kind of a very specific talk.
00:01:10.882 - 00:02:09.350, Speaker A: I'm specifically going to be talking about SGX and crypto economics and the interplay between the two and kind of the synergy between the two. If you want a more general talk if you want a more high level talk about what we do about mev in general and you haven't attended scaling ethereum, specifically the mev roast session that happened last May, may 6. I highly recommend you just pause this talk and spend the rest of my time here watching the mev what do talk, which is much more kind of prescriptive and higher level. Here we're kind of going to focus on a more specific question. Assuming mev is present and assuming that it can't be reduced to zero, how can we build the best systems and the best marketplaces around it? So what's the problem? So the first thing is that we want to avoid the centralization of mev at Flashbots. We want to avoid a case where miners and exchanges and large validators are kind of centralizing mev to themselves. And we feel that the only way to do this is through a fair, real time marketplace.
00:02:09.350 - 00:02:54.894, Speaker A: What do we mean by fair? Well, we consider a few different properties, kind of key to keeping mev decentralized, lowering barriers to entry, and making sure that anyone can kind of engage in the mev ecosystem to get data, to run bots, to participate or to see what's going on if they're an app developer or a user. So in order to have such a marketplace here's a few of the properties that we kind of think are fundamental. One of them is pre trade privacy. So the idea that as a bot or a submitter to this marketplace, your trade stays private until it's unrevertible by miners. This is to stop things like payment for order, flow of the bundles. Otherwise we kind of enter a very Wall Street style hierarchical situation. We also need spam resistance.
00:02:54.894 - 00:03:42.590, Speaker A: This is to prevent miners from getting dos and taken off the network, which would threaten overall system stability. And we also want to maintain the stability of the overall protocol as well as alignment with the incentives of all its actors. So where do we stand today? Flashbots alpha has two properties which are currently pretty suboptimal. The first one is that pre trade privacy relies on trust in both miners and Flashbots. So both of these entities right now in the alpha are able to kind of see bundle flow and front run it, mess with it and otherwise manipulate it. So we do kind of actively monitor for behavior like this in the ecosystem and we do stay on top of the motorcycle, we do stay on top of this kind of thing. However, that's a lot of trust in us as a centralized entity and we don't think that's a long term solution.
00:03:42.590 - 00:04:26.618, Speaker A: Also, spam resistance currently relies on trust in Flashbots. So miners have to trust that Flashbots won't spam them, dos their endpoints or otherwise expose sensitive infrastructure which is suboptimal for miners as well. Next slide. Great. So how do we upgrade this? How do we get out of this world into a better world? So, to move forward, the first thing we have to do is remove all these elements of miners and flashbox trust in the system. So it's obvious that we need decentralized and secure spam resistance and privacy. But what is good enough decentralization for us and what is good enough fairness? Well, there are a few properties that are obviously additional on top of this that we also need to be suitable for use in ETH and in a kind of financial context.
00:04:26.618 - 00:05:10.410, Speaker A: The first one is that the marketplace has to be robust to system shocks. What do we mean by this? We mean things like large price events, attacks on the network, downtime of large validators and other kind of unexpected events in the system and in the world. Also, if we're not building a system that's robust to system shocks, system shocks are going to pose a massive vulnerability and we want it to be robust for miners, bots and users. So we don't want system shocks to advantage any of these one parties over the other. We also want a system that's suitable for byzantine operation up to a threshold. So up to a certain percentage of the actors in the system can be blatantly malicious without the system falling over as high of a threshold as we can achieve. And we also want a system that's suitable for rational operation up to a higher threshold.
00:05:10.410 - 00:05:48.954, Speaker A: So we don't want the rational action to be attacking the system up to a pretty high threshold of hash power and validation to achieve our kind of goals of decentralization. Great. So how do we get there? Next slide. So again, to get there, our task is to remove all elements of minor and Flashbots trust in the system. Otherwise, I would personally consider that Flashbots and mev has failed. Why is that? Why is this such a failure point? Well, if we're not robust to system shocks, we risk a trust collapse or a spiral, and that could erode trust in all blockchains and all the financial ecosystems we're building. There's also a cat and mouse game.
00:05:48.954 - 00:06:41.446, Speaker A: So a lot of the attacks on bundle flow or payment for order flow may not be visible. You may not be able to tell if a miner is front running bundles to insert their own transactions if they don't directly alter bundles. And there's a wide class of behavior in the system that's not detectable or falsifiable or policeable. And that creates a cat and mouse game where Flashboss has to constantly monitor and try to stay a step ahead of people who are trying to kind of take personally advantaged actions in this marketplace, providing kind of a constant need for data and policing. Also, it creates major centralization in the ETH stack. So we don't want a case where we're actually responsible for kind of policing all these functions because that puts us in a centralized position and it makes us a kind of risk and a point of failure for all of Ethereum, which would be absolutely terrible. We also don't want vampire tokens.
00:06:41.446 - 00:07:38.186, Speaker A: So what do I mean by this? Well, there's a risk that in a world of centralized mev, you'll get tokens that come up that kind of claim to handle mev that are not actually aligned with Ethereum itself and with the broader ecosystem, which is also a major centralization risk. All right, next slide. All right, so what can we do about this? So one proposal, and this is a proposal by Vitalik and also kind of very similar to several kind of internal areas of research that we've been engaging in at Flashpots is to use economics to solve this problem. So to decentralize us using economic incentives that kind of secure spam resistance and also privacy. So I encourage you I'm not going to dive too deep in these ideas. I'm more going to talk about the high level kind of content here. But I do encourage you to check out this e three search, post and comment and kind of bring your feedback and your comments.
00:07:38.186 - 00:08:19.930, Speaker A: What these proposals all have in common is there's some economic incentive to behave honestly. So either you want to behave honestly to maximize your revenue or because you'll lose revenue otherwise, or there are some slashing conditions that force you to behave honestly. That's kind of a common theme in crypto economics. Next slide. Okay, so what else can we do other than crypto economics? Kind of exploring the trade off space. So I called this slide Voldemort, and this is kind of the more provocative part. I wanted to kind of talk today about why we're working on SGX based solutions at Flashbots, and why we think economic solutions alone aren't enough to build the robustness of the marketplace that we really need to handle mev.
00:08:19.930 - 00:08:52.760, Speaker A: So on the left kind of shows you my mental model of how to think about mev in various distributed protocols. So on the top you have some code that's running of the distributed protocol. It might be an ETH validator. A Cosmos validator. It might be a, I don't know, centralized exchange service, whatever kind of distributed system or cryptographic system that's ultimately being exposed to the public. And the system has a bunch of outputs that it sends as messages across the Internet. Here it's labeled out one, out two, out three.
00:08:52.760 - 00:09:57.210, Speaker A: And there are users and observers and auditors who look at these outputs and try to define what is the code that's running. Is it the right code, and is it kind of doing what it says on Pin? So in this kind of picture, there's something I call the Wiggle room, which is kind of how I think about approaching protocols at first blush, which is like looking at the code that the validators run and the outputs it produces, and seeing what other outputs can be produced by code kind of other than the prescribed protocol. So what other messages can validators send? And what does that mean about the state of the world that's inferred by these kind of people? At the bottom? Are they able to detect that the validators have kind of changed the code and what are they able to detect about that? So without SGX in the ideal world, this Wiggle room consists of the code plus the network input and output. And with SGX, the code is removed because you can attest that you're running a particular code base. So the Wiggle room is kind of limited to the network. So if code is not in the Wiggle Room, that actually simplifies the analysis. A lot of security.
00:09:57.210 - 00:10:36.802, Speaker A: You don't need to define these economic slashing conditions like we saw before of inferring what is the code security property from these messages we see on the Internet? These conditions are also prone to introduce additional assumptions, right? So you might need to assume that a certain number of validators are honest to see the truth and figure out who's actually taking liberty in this wiggle room. And these conditions kind of also introduce fragility into the system. So what I'm going to propose is defense in depth, which is adding an ideal SGX construction to the stack. Doesn't mean we don't have the economic incentives. It means we also have these other systems. Next slide. So I think these are complementary for mev.
00:10:36.802 - 00:11:25.318, Speaker A: And this table is kind of the one takeaway I want everyone to have from this talk why? Well, let's look at both. So first of all, how much capital is required to break the security model of these two systems? With SGX, it's hard to say. It's hard to say how expensive it would be to attack and break SGX for a miner, so I've put that as an unknown. With economics, the capital requirements are likely pretty high if you design the slashing conditions properly. However, the security outside of the design, so outside of these assumptions you've chosen in economics is zero, because you haven't really analyzed the space outside of these assumptions. Whereas with SGX, the fact that you have some guarantee that the correct code is running may give you some assurances, even if you kind of look outside the specific code paths you've reasoned about. So what I mean by that is it just removes the wiggle room.
00:11:25.318 - 00:12:06.638, Speaker A: It removes enough wiggle room that it just fundamentally simplifies the analysis of how much capital is required outside your design space. The next column is the engineering expertise required. So this is a big barrier to people actually pulling off attacks. It's like getting the engineers together in the room and doing the attack. So with SGX, to get together kind of ten engineers to do this attack, you'd need a pretty high kind of level of engineering expertise. You'd need people who are familiar with either kind of extracting keys from secured memory through kind of molecular level analysis, or specific side channels, or kind of very specialized technical attacks. So that's a pretty high level of skill with economics.
00:12:06.638 - 00:12:51.970, Speaker A: Violating the economic assumption requires capital usually, and not much coding ability. You can usually violate the assumptions pretty easily. That also brings me to this next row, which is how many people do you need to get together? Right? Generally larger conspiracies are more likely to fail. So my personal heuristic is like you probably need at least ten people together in a room to break SGX with at least one month of lead time, whereas the coding level to kind of code a malicious ETH validator is almost trivial when you're modifying stock software. So the point here is that these approaches are complementary and not mutually exclusive, that SGX adds barriers that economics misses and economics imposes capital requirements that SGX may not have. So using these together is kind of our proposal here at Flashbots. Next slide.
00:12:51.970 - 00:13:35.158, Speaker A: And another reason for that is because of these system shocks we're talking about. So here are some Flashbots bundles that are the most profitable bundles ever. You can see some bundles that pay as much as ten different ETH blocks, 30 different ETH blocks, 50 different ETH blocks of reward. So in these moments, and we expect these to continue increasing, it's much easier to kind of defect from the crypto economic system because of that lower barrier to defection than from this kind of more technical cryptographic equilibrium, even imperfect cryptographic equilibrium. Next slide. All right, so this is the last slide that I think is kind of important. So you might be thinking like SGX is poned, it's not secure.
00:13:35.158 - 00:14:45.366, Speaker A: And this is the slide I kind of want you to look at and internalize, if that's your opinion. So here I have two different worlds and I'm not sure which world we're in, but I want to raise the top and bottom world as two possible worlds. And what these graphs are showing is how much does it cost to attack SGX, how much does it cost to attack one chip and break it, and then how much does it cost to generalize that attack to two chips, to three chips, to four chips, to five chips? What is the economic marginal cost of attack? So in that top world, it's expensive to have a specific attack. Maybe it requires a lot of research, but cheap to kind of reproduce it. Sorry, the labels on these emojis should be switched, that should be nontrivial or low marginal costs. Basically, in that world we're screwed, right? Because miners can simply pay this $3 sign, which is probably going to be less than the total available mev, and scale their attack to infinity. However, if instead we live in the bottom world where there is a marginal cost at equilibrium to attack each chip after the first one has been pwned, we can leverage that to build secure crypto economic systems by only entrusting each chip with the amount of value that is kind of much lower than that estimated marginal cost.
00:14:45.366 - 00:15:43.574, Speaker A: So that is where the security of SGX comes from and why SGX is still secure even in the face of attacks. Next slide. The last slide here that I'm going to talk about, and I'm overtime, so I'm not going to finish the slideshow. Most of it is, the rest of it is just fluff, but I really want to get through this is what about when SGX breaks? So this is a key way to think about SGX in your protocol. What happens when protocol security properties break? First of all, can the public tell? If it can't tell, then maybe SGX can still provide some defense in depth, where if it's working, it gives you additional properties, but if it's not, we don't really rely on those. That's what's known as defense in depth, and like layered defense to make attacks more expensive. If the public can tell, on the other hand, if it produces objective evidence, or if it produces evidence at all, you can build protocols that are either subjectively or objectively secure without relying on intel and without relying on SGX or trust, because you have this kind of additional falsifiability when it fails.
00:15:43.574 - 00:16:05.040, Speaker A: So anyway, that's all I wanted to say at Flashbots, we're building both protocols. I would love to talk to you guys about where SGX fits in this ecosystem and where it doesn't, and let's chat more about it. Sorry for the technical issues earlier. I'm going to go dig into my Linux configs and make sure doesn't happen during the rest of the day. Thanks everyone, for listening. And probably no time for questions, but feel free to ask them on Twitter, I think.
00:16:08.130 - 00:16:25.090, Speaker B: Great, thank you. So there seems to be a lively discussion on the Eastglobal TV live chats, so if any of the speakers here have time, can also hop onto Eastglobal TV to interact with our global audience.
