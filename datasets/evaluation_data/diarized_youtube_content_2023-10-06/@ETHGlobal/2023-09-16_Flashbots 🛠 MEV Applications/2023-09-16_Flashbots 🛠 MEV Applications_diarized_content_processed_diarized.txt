00:00:07.690 - 00:00:47.340, Speaker A: Hello. Welcome ETH global Hackers. We're very excited to have you here today. I'll be going over a quick workshop on mevshare, some quick ideas related to the mev market today and as well a little sneak peek of some suave concepts and things you potentially can't hack on for this hackathon related to suave, but in the very near future to get your ideas going. And then additionally, at the end we'll be going over the prizes that Flashbots is sponsoring. So if you're interested in that mostly please skip through to the end. But you will miss some alpha if you do that.
00:00:47.340 - 00:01:40.614, Speaker A: Cool, let's get into it. Yeah. So first let's do an overview on mev and order flow auctions, which is what ofas stand for. So yeah, state of mev. There's a premise when users transact on blockchains, they generate value. The classic example of this is when I transact with uniswap or any other AMM, there is the value that my transaction passes through the protocol, but then there's also the value that my transaction creates that is able to be extracted, which is usually extracted via reordering transactions in the block or inserting new transactions into the block. Today this value is mostly captured by searchers and validators.
00:01:40.614 - 00:02:37.466, Speaker A: One of the common examples, especially in this sort of AMM example, is slippage. So if I set my slippage as being potentially up to 20% of the order value, a searcher could see that if it's in the public mem pool and then insert a transaction before mine, which will buy up a token such that the price will essentially take it all the way up to, like 19.99% of what my slippage was. And then they are essentially extracting that value. And that is an example of how users can be negatively impacted by some strategies. This is the general flow of the transaction supply chain today. And this is post merge and introduction of the proposer builder separation design philosophy that we see, which is very common in transaction markets and mev markets.
00:02:37.466 - 00:03:11.450, Speaker A: So the user interacts with the wallet. This is what you can view as an intent. It's sort of a buzword these days, but this is like pre transaction state. This is like I have a desire and the desire is expressed. I express my desire to the wallets and sort of something is like a gas price. I can sort of choose the gas price and that is like my desire for how fast the transaction should be included. Next we have a transaction and so that typically go from the wallet to the mempool or the wallet to a searcher.
00:03:11.450 - 00:03:52.550, Speaker A: Next, a searcher will take that transaction and do something with it, either something that negatively impacts them or sometimes positively impacts. So JIT is a good example of just in time liquidity that often actually improves execution prices, but unfortunately that comes at the cost of LPs. So there's always a trade off. Yeah. Searchers send these in a format called a bundle to a builder. Builders will then construct blocks and participate in a block auction hosted by the validator. And that last piece is all facilitated through Meth Boost, but that's a little too in the weeds for this workshop.
00:03:52.550 - 00:04:43.106, Speaker A: Cool. So, yeah, in that last example, we talked a lot about how users transact through the mempool and that is how negative strategies are most likely to occur on the user. So the current solution that we've seen is private channels. This was first introduced with Mev GEF with Flashbots in the Flashbots auction. And then later on, mevboost allowed any builder or a market of builders to expose these private transactions that users can send directly to builders. So that's awesome because it protects from negative externalities. In the past, in order for Searchers to extract mev from these strategies, they would have to spam the mempool by having these auctions out in the open and by having just many, many bids.
00:04:43.106 - 00:05:21.026, Speaker A: This actually creates a lot of negative externalities for the network. One, it overloads the mempool, but then two, it actually just raises gas prices as well for all users. The disadvantage of this though, of course, is that we don't internalize any of the value. The user has this value that they create, but they're not getting any of it. It's all going to the searcher or the validator. And so that is like potentially one very active research area for Flashbots in the broader ecosystem is how we can internalize this value and then also who gets that value. So, yeah, private mempool is a big one.
00:05:21.026 - 00:06:15.910, Speaker A: As I mentioned on the off chain side, the other option as well is like on chain mitigation mechanisms. I think in the limit, applications will asymptotically be approaching less and less mev, I don't think, and many don't think as well, that mev is totally possible to get rid of at the application level, but there's definitely a lot of things you can do. So Maker has a great example of how they introduced Dutch auctions for their liquidations. In their first versions, again, users would just spam their best bids to compete on a liquidation opportunity. But now a Dutch auction just says, okay, here's the starting price, and it just continuously decrements the price until someone takes it. And so this is actually a much less communication intense auction process which again reduces negative externalities. But again, you can also front run people's.
00:06:15.910 - 00:06:52.880, Speaker A: You can wait until someone bids and then try and front run that bid so it doesn't totally remove that gradual. Dutch auctions is another approach that paradigm pioneered, which was used in Art Gobblers and then AMMS. There's a lot of talk about order flow discrimination. So these are models like the Mcamm Dmcam. I won't get into those too much, but just check out ETH research if you'd like to see what those ideas are. Cool. So, yeah, again, these are the common themes a bunch of these protect from negative externalities but they don't internalize value.
00:06:52.880 - 00:07:24.006, Speaker A: So we want both. Hopefully that's very obvious. So order flow auctions giving users a fair price for their order flow. How do we do that? Privacy, we believe, is one of the key aspects of this. In the public mempool example, users are revealing all of their information to a searcher. So this is information about their order. Everything in fact inside of the call data is available to the searcher, the gas price is available to the searcher.
00:07:24.006 - 00:08:11.830, Speaker A: This sort of reveals your intent for how fast you want this included. And then lastly, also this actual signature for your transaction is given to the searcher. So the searcher can now package this and include it in any other order flow auction on your behalf. So we believe one of the keys here is programmable privacy. Giving users the ability to selectively reveal parts of this information allows users to have more control over the value they create. And the simplest example here is if we actually never give the searcher the signed transaction, then they're going to have to communicate back with the user or the protocol somehow. So, benefits for everyone? Yeah, programmable privacy.
00:08:11.830 - 00:09:28.862, Speaker A: So users are protected and they internalize value. As I mentioned before, by requiring searchers to now communicate back, they're very incentivized to now give you some value because if they don't give you any value, then why would you ever give this to them? You can just actually just give it to a private channel and just have it be executed as is. Those are sort of the main benefits here. Another side benefit is that instead of everyone just giving privately to these builders, this actually gives searchers access to a whole new range of orders that they didn't have access to from a subset of users that they don't even want to play these games, they just want to go straight to the builder. This allows them another channel which really increases the market for searchers. And then yeah, lastly, builders and validators receive more profitable bundles and blocks because if this extra generated value is able to be extracted and given to them, then we have a much better market. So the order flow, market size, market size today kickbacks.
00:09:28.862 - 00:10:15.570, Speaker A: So these are sort of refunds that users are getting from their value. It's in the hundreds of e, which is pretty awesome. I think a couple of years ago if you had said users were going to be getting refunds for the mev they generated, that would have been like a pipe dream and now it's very real, which is awesome. So the order flow, market size tomorrow kickbacks tens of thousands of e. The slide here is wait, it's all mev addressable order flow. Yeah, it always has been. So there is a very wide market for users and app developers such as yourself, hackers, to create these mechanisms which are able to capture more of this order flow.
00:10:15.570 - 00:10:40.466, Speaker A: Yeah. So what can you do today? Yeah, so for private channels, we have Flackbots protect, we also have builders. RPCs, as we mentioned before, use case specific tools. So Cowswap. Dex aggregators, one inch fusion matcha. These are sort of ways to minimize mev. And then yeah, general purpose order flow auctions.
00:10:40.466 - 00:11:26.760, Speaker A: We have mev blocker and mev share is the two big ones. And so mev share is our instantiation of programmable privacy. It allows users to, as previously mentioned, reveal subsets of their information in exchange for sort of negotiating how much they're allowed to refund. And mevblocker also does something very similar, except they choose to just sort of reveal the entire piece of information and then include fake pieces of information to sort of throw searchers off their scent. Yes, let's get more into WebShare. It's programmably private. It's permissionless at the moment, and it's a general purpose ofa protocol, meaning it doesn't cater towards any specific application such as a dex or liquidation, but can do all of them.
00:11:26.760 - 00:12:04.820, Speaker A: Yeah, so as mentioned, there are low switching costs. You can plug anything into this permissionless. Any searcher can access this. All searchers need to do is listen to a specific endpoint that we have revealed and they're able to sort of already start searching on this. And programmably private. Yeah, it's customizable, so we have a way that you can express a variety of information reveal. So you can do things as minute as only revealing a specific pool you're trading on, or you can do more as like revealing a pool plus the direction but not the size.
00:12:04.820 - 00:12:40.106, Speaker A: Yeah, anything like this is possible. So here's roughly how it works. A user sends a transaction to a mev share node. The mev share node will then selectively reveal a piece of data to the searcher. The searcher will then send partial bundles back, and then the mev share node will combine these bundles and then give them to the builder. But they will include something we also call a validity condition, which specifies how much of a refund the user gets. And so obviously the higher the refund that the user gets, the slower it will be included.
00:12:40.106 - 00:13:11.342, Speaker A: So if 90% of the MUV is to go back to the user, that only leaves 10% for the searcher and the validator as well as the builder. So, yeah, it's up to the market to decide what is the actual right pricing mechanism for how much the user should get back based on their intent for how fast it should be included. Cool. And we're back. So mebshare for wallets. Yeah, it's really easy to integrate. So Wallets simply just need to route your ETH, send raw transactions to RPC flashbots.
00:13:11.342 - 00:13:49.400, Speaker A: Net, and you can configure your settings through query parameters. So this is sort of like at the end of the URL, put question mark, hint equals, et cetera, or refund equals this percent. And any order flow that you send through your wallet is now able to be searched on by searchers in a permissionless way. And then yeah, lastly, profit. Just transact, sit back and see how much profit you accumulate into your wallet. The builder will take care of sending the payments to you. And there's a really nice guide for users for how to configure this.
00:13:49.400 - 00:14:54.918, Speaker A: You can simply specify before you add the RPC to your wallet, you can click on some of these settings and you can even include builders. So we had a working group where we defined some fair market principles and each of the builders on this list have agreed that they uphold these fair market principles in order to get put on this list. This is to guarantee that to have some type of protection, that builders aren't going to abuse the order flow being sent through this. And for the obstute observer, yes, this is a social contract in some sense and so we need tools to actually monitor how builders are upholding these guarantees and also just even monitor other things like the performance of these guarantees, et cetera. And so that's all up for grabs in sort of the data analysis section of the prizes. Cool. So that was Mev Share and we think it's really awesome and it's been sort of a game changer for the mev industry.
00:14:54.918 - 00:15:29.794, Speaker A: But let's give you a sneak peek of what's next. So the order flow auction endgame, I used to use this meme wrong. I would list a bunch of things and I'd just be like, oh, look at all these things. And they were sort of like true things. But the big part about this meme is the little girl says, look at all these chickens. And so the thing there is supposed to be the caption at the bottom is supposed to be labeling them incorrectly. And so, yeah, look at all these trustless mev auctions.
00:15:29.794 - 00:16:19.640, Speaker A: Like, yeah, they're all trustless, right? No, yeah, so I mean, mev share is even on there. So we totally admit that there's a centralized operation aspect to this. I think no matter which of these services you're using, you're trusting them in some sense to not abuse it. And there's not really any crypto economic or just even cryptographic guarantees that your order flow isn't being abused. So yeah, we have programmable privacy, but what's missing? Decentralized off chain, often infrastructure. It's exactly what we think the space is heading towards. If we had all of those previous examples, but they were running on decentralized infrastructure, we think the market would be in 100 x better place.
00:16:19.640 - 00:17:19.960, Speaker A: So that's why we introduced the mem. It's an upgraded EVM which allows anyone to deploy these off chain mev sharing solutions to a blockchain which then runs on trusted execution environments so that no one, not even us, Flashbots or the operator of the actual node is able to peer into the operations and extract information. So how do we do this with mev specific pre compiles. We expose things like simulate bundles forward to builder, et cetera, et cetera, for these applications. And we allow them to define these applications in a programming environment that is very common to most DApp developers, which is solidity and then, yes, secure hardware and confidential data. So you can actually encrypt these transactions to the secure hardware. So that, again, no one but the secure hardware can see it not even a man in the middle of anything.
00:17:19.960 - 00:17:53.182, Speaker A: Yeah, it's an upgraded EVM or it's actually more a market for mechanisms. We think the best mechanism should win that's not necessarily one defined by Flashbots or anyone else. And so we want anyone to be able to permissionlessly compete for execution on order flow. So, yes, our first rollout will be Swab centauri. It's coming soon, TM. So here's sort of the key users we're targeting. So developers, they can create contracts for ofas block builders.
00:17:53.182 - 00:18:19.894, Speaker A: You could even do RFQs, anything that you can imagine here users, they would then send bids, encrypted bids to this environment. And then lastly, executors. So these are Cirkers and solvers who are competing to solve on these applications. And these are the key components of Swab. An execution node, a confidential data store. This is what makes sure your bid is actually private. And then lastly, the chain.
00:18:19.894 - 00:19:00.118, Speaker A: So that's sort of a shelling point for agreement upon what the actual auction we're running on top of the bids are. And then lastly, this whole thing just magically combines order flow into blocks which are then sent to proposers. Here's maybe another slightly more detailed example. So you can imagine Unix, cowswap, mebshare, them all being defined on Swab. And then people can also then define block builders on Swab as well. And these then order flow auctions can program which block builders they're allowed to send this order flow to. And the users also have some say in that as well.
00:19:00.118 - 00:19:48.454, Speaker A: And then lastly, the block builders will then communicate with validators through some type of EPBs like mechanism. Although currently it's out of protocol and that's very much okay, it still gets the job done. So what can you build on Suave? Yeah, solidity based, intense infrastructure, order flow auctions, builders decks, aggregators, validity conditions, custom redistribution mechanisms. You could even redistribute, ERC, 20 tokens instead of just the underlying token. Another application is private voting as well. This environment allows you to aggregate votes and privately as well, so it could then compute results. And then another fun one that we talk about sometimes, EIP 4844 Blob merging that one's a little bit more involved for those advanced hackers.
00:19:48.454 - 00:20:27.480, Speaker A: Definitely reached out if you're interested in this idea. Cool. Let's get into the prizes what you're here for. So the open innovation track unveiling the mev potential. This is supposed to be an open ended track and we didn't want to be too prescriptive about this. Essentially any project that showcases, suave mev or programmable privacy concepts will be included, will be potentially available for this track. And so we really want to see mechanism designers flex your crazy ideas and things of that nature for this track.
00:20:27.480 - 00:21:24.070, Speaker A: The next track, this is the big one data Analysis track. So the first idea we have here is Rex what the fuck mev lookup tool for uniswap users. The idea here is that it could be a tool where you can look up past uniswap or maybe any other dex trades and see related metrics. So you could see the mev extracted from a specific bot, the slippage caused by trade collision, and then you could also even what would be really cool is if you could compare the user's execution to how it would have executed at the top of the block. So let's say the user's transaction was in spot 100 in the block. What you could then do is grab that transaction and then simulate it as if it were at position one and see how many coins they would have got at the end of both of those. And then compare swap execution dashboard.
00:21:24.070 - 00:22:53.330, Speaker A: Yeah, a very similar idea to simulate design a simulation bot to query across major dex aggregators and then compare execution quality based on same trade requests to help the community understand if really aggregators are providing better quotes than DEXes, are meta aggregators providing better quotes than dex aggregators? And then also are solver systems providing better quotes? Additionally, there's room for empirical analysis on historical data here as well. How vulnerable are each platform's orders towards mev? How are price execution compared between each platform? And then lastly, the mempool hydrometer. Hydrometer. If you also know how to say that word, please include that in your presentation. So yeah. Is the public mempool really drying up with order flow? Moving to private mempools recently we released a project called Mempool Dumpster, which is the first public actually one of the first there have been other attempts, the first public mempool aggregator which reveals all of this information and gives it to anyone to do historical analysis on. So you could do things like analyze exclusive mempool transactions from specific sources or see the propagation of transactions through the mempool.
00:22:53.330 - 00:23:40.340, Speaker A: Yeah, so things you can do with this are you could actually look at blocks and see which transactions in a block were seen in the public mempool and then that tells you which of the transactions in the block were private. Yeah. How valuable are these transactions? Add metrics or visualizations to inform the mempool evolution after the adoption of memboost or end specific order flow options if you have one in mind you'd like to analyze. Yeah. And so projects in this track should focus on illuminating the dark corners of the mev supply chain. Additionally, there are already tools which attempt to do some of these things. So a compelling project will do something that hasn't been done if you want examples of projects of things that have already been done, please reach out.
00:23:40.340 - 00:24:44.818, Speaker A: Lastly, the ecosystem track, and this is focused on broadening the mev landscape. The first one is a Mev game. The idea here is to basically create some type of game that allows searchers to submit bundles and essentially stress test the underlying environment that this Mev game is running on. So one example recently is Friend Tech launched on Base, and it was quickly found out that there's actually opportunities to extract Mev on the sort of underlying infrastructure there. And so we think if there was a game like this that any new chain could deploy to stress test their environment, this would help reveal some of these inefficiencies in the underlying infrastructure. So one example of this is like a project like FOMO 3D, so look into that if you're looking for inspiration. Next would be a mevaware, uniswap front end flashbotsprotectux.
00:24:44.818 - 00:25:14.922, Speaker A: So produce a Mevaware front end Fork, which informs users about potential Mev from their trade and directs them towards Mev Share or existing order Flow auctions and shows an estimated refund amount. And then lastly, backrun my Oracle. So craft a system where Oracle updates can be auctioned via Mev Share or similar services. I think Uma is a project that's really interested in this as well. So if you have any thoughts, please reach out to us or them. Amazing. And those are our prizes.
00:25:14.922 - 00:25:26.370, Speaker A: We're extremely excited to see what everyone will be hacking on, and we cannot wait to see the submissions. And thank you for helping contribute to a more fair and parent meta ecosystem.
