00:00:03.790 - 00:00:04.098, Speaker A: Great.
00:00:04.184 - 00:00:22.500, Speaker B: So welcome to our NFT port workshop and you'll learn how to bring your NFT to market in hours. We have tyvo here who will be leading the workshop. Feel free to pop your questions in the chat as we go, and tyvo will take them towards the end. Taiwo, I'll let you take the lead.
00:00:23.670 - 00:01:07.030, Speaker A: Thanks. So welcome everyone. Let me first give a really brief introduction to myself. So I'm VP product at NFT Part and myself and actually many of the other team members. I come from an AI background into Web Three, and it's been fascinating to me what people are building in this space. It's funny that I actually started my own Web Three journey also with the hackathon, and I knew the founder of NFC Port from before I asked him for access to the APIs. And during this hackathon I tried creating my first NFTs, used the product, and eventually I actually ended up working at Nftport.
00:01:07.030 - 00:01:55.394, Speaker A: We do see a lot of hackers or different projects in different hackathons or trying out new projects on their own. So I'm excited to see what you're going to build in this hackathon. So let me first share my screen and give you an overview of what NFT port is. Our goal is to be the stripe for NFTs. That means that NFT creation, we think, should be as easy as making a simple rest API call. There are times and places where you might want to spend a lot of effort and put in the work to write custom smart contracts. But there are also times, and I think most of the time you actually don't want to do that.
00:01:55.394 - 00:02:36.402, Speaker A: You don't want to do that work. You just want to get started creating your NFTs and we are here to enable that. So our goal is to get your application deployed as quickly as possible and not worry about all of the infrastructure behind it. And we take care of that for you. So the three main things, three main products that we have, that we offer you are anyway, I'm at Nftpart XYZ, that's our website. So with us you can mint NFTs. We have simple APIs to deploy contracts and mint NFTs into these contracts and all of the surrounding things like uploading data.
00:02:36.402 - 00:03:23.300, Speaker A: I will go into more detail later. You can also get NFT data that we have built the infrastructure to index for you. So you can get the NFD data from multiple chains, including polygon, which is the focus of this hackathon, and enhanced APIs, which are, let's say, more give you a bit more power on top of this data. For example, search recommendation engines and counterfeit detection, which might be useful to build into your application. So the easiest way to get started is to click the big button on our website, get free API key. Once you fill in this form, you will get the API key to your email immediately. There's nothing else you need to do.
00:03:23.300 - 00:04:15.178, Speaker A: And then you can just pop into the documentation docs nftport XYZ. And there are like the documentation, there's an introduction, you can go through it later. But the main flesh of it is the tutorials and the API spec in the tutorials. So let me do a brief walkthrough of those. You can see how to start consuming the data about NFTs without running your own node. So how to fetch data about NFTs, about collections, contracts, ownership transactions. There are several tutorials around Minting.
00:04:15.178 - 00:05:03.970, Speaker A: So what's the easiest way to Mint? With one API call, you can start minting your NFTs. Or if you want more power, more flexibility, you can deploy your own contracts and mint collections. You can create dynamic NFTs where you update the contents of the NFT over time. For example, an image that changes depending on the time of day. And one interesting tutorial, how to use NFTs inside Unity if you are into building games. So we also support these kinds of use cases. And with the enhanced APIs, there's a quick start here, and I'll later give you a live demo of how to search, recommendation, et cetera.
00:05:03.970 - 00:05:54.546, Speaker A: And if you need support, then we have the API status link to your knowledge base. And also in our discord and in the if global discord, you can get support during this whole hackathon. So we'll try to be there for you and solve your problems. So let me jump into the actual APIs, our multi chain data APIs. So let's say you're on OpenSea and you look at the board Ape Yacht Club collection. You can get all of the NFTs in there and the contract information from an API endpoint that we have. So, for example, let me find the contract address.
00:05:54.546 - 00:06:22.362, Speaker A: So this is contract address, and when you go to retrieve contract NFTs, you can put in the contract address. This is an interactive demo. So in the background it makes the API call for me. It's on ETH. And let me fire the request. So I get back all the tokens. But there isn't very much data right now.
00:06:22.362 - 00:07:12.214, Speaker A: As you can see, there's the chain contract address and token ID. That's not very interesting. We probably want more. So I'll also put the optional metadata inclusion parameter and we can see that now we also get the metadata. So you can see that token ID one in that contract. If we go to token ID one, we get the attributes, we get the image link, et cetera. You can also get the metadata URL, which is the link to the original metadata as it is as part of the token.
00:07:12.214 - 00:08:18.460, Speaker A: So let me show it to you on IPFS. This tends to happen, so IPFS can take a long time to load. And this actually happens with images as well, which is a good segue into another thing that we provide for you is you don't have to fetch the NFD images or NFD files that are attached from some storage that might be out of date or take long time to load. So we give you in the response that we give you about the NFTs. You also get cached file URLs, which is basically we fetch the image so that you don't have to do that. We serve sort of as a CDN so that you can easily get the images without going and doing the tedious process of fetching them from IPS or wherever they live. So that's one of the first endpoints you might want to look at.
00:08:18.460 - 00:08:59.960, Speaker A: When you look at our Data APIs, let's look at a different use case. So let's say there's an account and you want to know which NFDS this account owns. So let's, for example, take openc Chris Dixon. If you don't know him, you can Google one pretty well known guy in the Web three space and let's get his address. You can see all of the NFDS on OpenSea. We can also get that through this API endpoint. So retrieve NFTs owned by an account.
00:08:59.960 - 00:10:09.086, Speaker A: I have the account address here, and you can see we have here a list of all the NFDS owned by discount. So this might be useful. For example, if you're trying to show to the user what NFDS they own, this endpoint would be probably for you, some other endpoints under the Data APIs as well. Getting all NFDS you can iterate through NFDS, although there are very many, so you probably don't want to get all of them. You can also get NFDS created by an account. And essentially the difference between owned by an account and created by an account created by means that the NFT when it was first minted, it was minted to this account, to this address. So we can use the same account address and see which NFTs were created by this account and we get the list back again.
00:10:09.086 - 00:11:28.290, Speaker A: And there's tons. So some other interesting things you can get with the Data API are transaction and sales data. So if we take a contract, we can get high level statistics on the sales or on the transactions surrounding this contract. So if we again take the Board Ape contract address and let me put it in here, let's see what we get. So we get things like one day volume, one day change, seven day volume, so different time periods, average prices, market cap, et cetera, floor price, which you might find useful. And you can also get more detailed data so you could get all transactions done with this contract. Sorry I'll put in all and you can also filter down based on what transaction you want.
00:11:28.290 - 00:12:17.780, Speaker A: So you might only look for transfers or Mints or sales. Right now I ask for all of them. We also return some off chain transactions so the OpenSea and Variable order book data are also in here for that contract. And it might be useful for you because not all of the interesting transactions or interesting information, especially if you're looking into the price, are going to be on chain. So some of them will also be off chain. Request is taking quite long to load for for some reason. But let me continue with the demo.
00:12:17.780 - 00:13:26.550, Speaker A: You can also get transactions by a particular account. Again, if you have a user, then you can show them what transactions happened with their account. Or one other use case that you might be interested in is if you find someone who you think they're really good at picking NFDS, you might want to follow what they are buying, what they're selling and based on this, maybe come up with a trading strategy or find out which NFTs are more popular. Or there are probably other use cases you can get for a particular NFT, the transactions. And yeah, together with these endpoints, you should be able to get most of the interesting transaction data you need for an NFT or a contract. So, moving on to Minting, this is possibly the most exciting part of what the NFT part provides. So the first step if you want to start building your application is probably to deploy a contract.
00:13:26.550 - 00:14:50.780, Speaker A: For example, if you upload or if you create NFDS on OpenSea, you create them into their common contract. So the OpenSea contract, which is probably not what you want, you probably want your own contract for your application. We also provide something called Easy Minting, which is basically that you don't have your own contract. If you want to get started really quickly, you could just take a URL of an image, let me find some fireworks and let me mute it to my own address. And with a single API call, I should be able to Mint. Yeah, here it is. So I minted NFD with a single API call.
00:14:50.780 - 00:15:30.910, Speaker A: That's the easiest way to Mint and you can get started with that in five to 10 seconds like I did right now. However, like I said, if you're building an application, you probably want your own contract. So the flow for starting deploying your own contract would start with the endpoint called deploy an NFD contract. There are two options you have here. So we support ERC 71 and ERC 1155 contracts. It's up to you which one you choose. 1155 is more powerful, but maybe considered by some people inferior in terms of collectible quality, if that's what you're going for.
00:15:30.910 - 00:16:18.520, Speaker A: So all of the code, the smart contract code is open source. So if you click on the links here, you can see the smart contract that we will deploy for you. 1155, exactly the same, not the same contract that you can see the contract as well. So let me deploy a contract. Let's call it hackathon contract. And again, let's mint it to my address and let's use the standard, ERC, seven, two, one. Okay.
00:16:18.520 - 00:16:57.410, Speaker A: And since it takes a little bit of time to sync. Then we don't get back the contract address immediately, we get back the transaction hash and we have to retrieve the contract address with the retrieve a deployed contract endpoint. So when I put it in here, it's not yet gone through. So it will take a little bit of time to sync. I can see the transaction here as well. So it's been included into a block and I will get the address soon, see if I have it ready. Okay, got it.
00:16:57.410 - 00:17:37.810, Speaker A: So this is the contract address. And let me so let me just say put it down here somewhere. Now I have my contract and now I can start minting NFDS into that contract. So to do that, we have an endpoint called customizable Minting where the chain is polygon because that's where I deploy my contract. Contract address is. This is what I copied here. And I'll go into details.
00:17:37.810 - 00:18:06.474, Speaker A: Before I actually mint, I have to create the metadata of the NFT. So that's what constitutes most of the interesting parts of the NFT. And before that, let me show you a few of the arguments actually on the contract deployment. So this is the deploy an NFT contract endpoint. The name, symbol, loaner address and type. This is what we actually specified already. One more thing.
00:18:06.474 - 00:18:41.890, Speaker A: If you want to keep the metadata updatable so it can be changed after the NFT is minted, you have to specify true here. If you want them to be frozen immediately when minted, then you have to set it as false. You can read more in our documentation later about details about deploying a contract. So to mint an NFT, what do we actually need? We need two things. We need metadata. But the metadata has to point to an image that is uploaded somewhere. So we have to take two steps.
00:18:41.890 - 00:19:10.160, Speaker A: First, we upload an image. So under storage we have upload the file to IPFS. So this is really easy. And let me pick an image and it will be uploaded to IPFS in a second. It will be backed by filecoin using NFD storage. So you will not lose it. So you don't have to take care of pinning it.
00:19:10.160 - 00:20:00.190, Speaker A: And let me see if I can fetch it immediately from IPFS. Again, might take a little bit of time. Let's see, maybe another endpoint works better. Okay, it will take a little bit time, but I can already create the metadata because I know the hash of the file. So I have uploaded a file. Let me upload metadata. So this is where we name in the metadata is where we actually give the name to the NFT.
00:20:00.190 - 00:20:30.118, Speaker A: Let me call it test abstract NFT, abstract art NFT. And the file URL will be on IPFS. Okay, so it loaded now, this is the image that I used and it lives on IPFS. And I should be let me update the file URL. Yep. And the metadata should be uploaded to IPFS any second now. Okay, got it.
00:20:30.118 - 00:21:09.186, Speaker A: The metadata lives under this Uri and now I am actually ready to mint. So back to the customizable Minting chain polygon contract address. This. Four B, 83. It is correct. The metadata Uri I updated here now and minting my address. So should be done and transaction should go through any moment now.
00:21:09.186 - 00:22:11.070, Speaker A: And soon we should be able to see the NFT on OpenSea as well, and other platforms depending on how quickly they index the NFTs. So let's see, let me try to find my contract. Yeah, it seems that it's not yet updated. So anyway, after a brief delay of indexing, you should be able to see your NFD on any platform or any other provider as well. But we should also be able to see it on polygon scan already, right? So this is my NFT living on polygon scan. Okay. And once you have Minted, you are done.
00:22:11.070 - 00:23:14.256, Speaker A: Your NFTs are on chain and you can Mint using this endpoint keep adding into the contract or you can create a new contract and mint more into that. The default limits on the free accounts are 100 Mints and five contracts. But if you go to our discord channel, our sponsor NFT port discord channel, there's a link to a type form that I posted. If you fill that in, we will bump your limits to 1000 NFDS that you can Mint for free. Okay? And let me quickly give you a demo of some more interesting things as well. So on NFT port homepage, there's this thing called Fingible, and this actually is a demo of our more advanced endpoints. So you can find, let me see if I can find NFTs where the text description contains vitalik.
00:23:14.256 - 00:23:52.080, Speaker A: And here are a bunch of responses. This search, it relies on an endpoint that we have called multi chain NFT search. And you can see the arguments, the parameters yourself. Again, this helps you avoid the effort of building a full index of the whole blockchain. And you can use the search to fetch NFDS based on the text description. One more cool thing you can do reverse image search, either with an image or with text. For example, I can do with text smoking with a hat.
00:23:52.080 - 00:24:57.432, Speaker A: And yeah, you can see images where someone is smoking and they have a hat. So this is, I think, also pretty cool that you can integrate these sorts of smart or seemingly clever intelligent searches into your application. And you can also get recommendations. Let me show you the endpoint behind this. So, multi chain NFT search, when I search for yeah, in the, in the search endpoint you can see that. And there's a recommendations endpoint, which I'm not going to go deep into, but you can also do duplicate detection. So one problem that you might have is that you want your user to be sure that the NFD they're seeing is actually genuine or that it is not a duplicate of something that they have seen elsewhere and they don't get defrauded.
00:24:57.432 - 00:26:06.512, Speaker A: So for this we have a duplicate detection endpoint where you can put in a URL or token ID or file upload. They all work pretty much the same but basically you put in the URL to an image, you can see CryptoPunk URL is here and you get back all NFDS or as many NFDS as possible that are very close to this but not the right one. So this is useful for adding trust or creating more user trust in your application. I'll stop it here. You can go through all of the endpoints yourself and I'll take some questions that I see in the zoom chat. Now one question was how can you mint NFT chair contract? I did show that ERC 3664 I don't think I've heard of that. Is that an extension or is this a new NFT token standard? Oh no, right.
00:26:06.512 - 00:27:08.288, Speaker A: We don't support that. We only support 721-9955 and adding additional data in addition. So question is it possible to add additional data in addition to the IPFS image during the meeting? Yes, I'm glad you asked, I actually skipped over this part but when you are doing the uploading metadata before you mint then these are the minimum fields that you have to add. But you also can add in custom fields you can add anything that you want. It's basically a key value store or a custom object JSON that you can put in here for example YouTube URL or background color or whatever key you want. You can store this in the metadata and it will be part of the NFT. Ah, is it possible to batch Mint? Yes it is.
00:27:08.288 - 00:28:47.296, Speaker A: So batch Minting is possible only if you use an 1155 contract. So when deploying contract you have to specify type as ERC 1155 and then you can use the batch customizable Minting endpoints where you can do you can see here in the call that you specify multiple tokens and you can also have more than one of each token so you can set the quantity. Will the JSON be available when we query the NFT metadata? So are the custom fields available when you get the metadata back? They should be, yes. So when you ask for the multi chain NFT data here, you should get them as part of the metadata or if you want they will also go into IPFS under the IPFS storage. Another question, can you get the metadata and owner of an NFT uploaded to OpenSea using lazy Mint? So as far as I can tell OpenSea does Lazy Minting off chain and I think we don't currently fetch those so we only show NFDS once they are on chain. We show off chain some off chain transaction data as well but we don't show off chain NFDS. Another question from Luis can we upload 3D objects? You can so with the storage endpoint, where is it? Upload the file to IPFS.
00:28:47.296 - 00:29:42.964, Speaker A: So this supports all file types up to 20 megabytes. So as long as you stay under 20 megabytes, you can deploy or you can upload your 3D object file and then you would reference it in the metadata either in the file URL if this is what you want, or in one of the custom fields. Louise also asks, how do you pay for minting the NFT? The first 1000 are free if you fill in the form on our discord. So for the first 1000, you don't have to pay. And if you need to go above that in the future, you have two options. One, you can apply for the community package, which is selective. So we take a few of the projects that apply and we support them with 10,000 free mints.
00:29:42.964 - 00:30:22.370, Speaker A: Or if you don't get selected, which it's quite competitive, if you don't get selected, then you can upgrade to the growth package, where you get 500 mints for free or included in the price. And extra mints are zero point 125. So a bit over ten cent dollars cents. And we are actually working on bringing the price down so that you can deploy and mint as cheaply as possible. But right now, to cover the gas costs, this is the pricing. There was other questions, or there were a few more questions, but I think we probably have to end here. We're out of time.
00:30:25.380 - 00:30:38.630, Speaker B: Thanks, Tygo, for the great workshop. And yeah, we'll take the questions over the discord on sponsor NFT port. And yes, you there and hope that you join the next workshop. Thanks again. Bye. Thanks.
