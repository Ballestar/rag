00:00:09.260 - 00:00:13.292, Speaker A: Hello everybody. Thanks for coming. My name is Cindy.
00:00:13.436 - 00:00:14.524, Speaker B: And I'm wes.
00:00:14.652 - 00:01:21.148, Speaker A: And we both work for Coinbase specifically on the commerce team. And so we're going to spend a little bit of time today talking about what we do as a team, like what commerce is, and then spend most of the time talking about how you can leverage our API for your hackathon project. And then we're going to do a little bit of a demo to show you how easy it is to set up and work with our API. So first of all, what is commerce? So commerce is a product that is designed to allow merchants to easily accept cryptocurrency payments. All you need is an email and you just make an account on our website and within minutes you can start accepting payments through our platform and you can manage your payments, you can check your balances and you can withdraw your money to any address that you choose all through this user friendly UX. And so that's what we do. Now we're going to talk a little bit about some highlights in our API that we think would be really useful for you as you think about what you want to do for projects.
00:01:21.148 - 00:01:51.650, Speaker A: And also we're going to talk about our prize. So we're sponsoring a 1000 USDC prize for the team with the most creative use of our API. So we're really looking for someone who kind of thinks out of the box and makes us surprised in terms of like, oh, I didn't know you could use our API to do that. So just that's something to be thinking about as Boyon talks about kind of like some cool features that we've already built that you can maybe use out of the box.
00:01:58.440 - 00:02:52.148, Speaker B: Hello everybody. So our API premierly geared towards merchants accept cryptocurrencies. So a big process of accepting cryptocurrencies is that we need to be generating a lot of addresses and need to be monitoring what happens to them. So if you happen to be building some projects where you need to have kind of like per session or per user unique Identifier, you can use our API function to chimpat them the addresses that we generate. They are all 32 and 44 compatible. We should mention that our product is like noncuspodial, meaning that you get like one master mnemonic and from then on, we can derive number of addresses. We do monitor these things.
00:02:52.148 - 00:04:03.824, Speaker B: We generate different addresses for bitcoin like and bitcoin cash. But I guess the more interesting things for us this weekend is like Ethereum and USDC. So that is one thing that I think can be used as a building block even though you don't do anything payments related. The other side of like once we've generated these addresses that you can use is that we can send webpoon notifications whenever something happens to them. So if somebody sends a payment date, if that payment is confirmed on the blockchain, we will send you a web authentication indicating that that particular thing happened. And the way that you can use this as a building block is that if you need some sort of interaction that needs to be driven by certain funds reaching instead of kind of like building some custom monitoring from the blockchain level, you can use our API and our web applications to do that thing. I guess in addition to all of these things, because we are payment things, we need to convert and handle different currencies in different amounts.
00:04:03.824 - 00:05:00.700, Speaker B: Whether it's like Fiat on one side, USD kind of like crypto ethereum on the other one. You can use that essential exchange exchange for that. So these are kind of like the two very kind of basic primitives that we offer that kind of like a lot of things can be built on top of as a product. We send emails to the buyers whenever payment occurs. So if you need to have some sort of an email notification service that kind of like it triggered whenever somebody pastes something on the blockchain, you're more than welcome to use us. If you think that webhook notifications are too heavy and you don't want to have a server that's running and that's listening for these things. We provide redirect URL that kind of will be automatically triggered whenever a payment happens on the blockchain.
00:05:00.700 - 00:05:51.388, Speaker B: We do have integration with MetaMask, which is kind of just like a nice user experience. Whenever a buyer opens our widget, we would automatically populate all the necessary fields in metadata. So if you have any questions about this thing, even if you kind of like I guess that we're mentioning these things, even if you don't stop using our API, we're more than happy to discuss and to help with any of this. This is essentially how our settings look. We host this particular widget where kind of like most of the magic happens. This widget can kind of like what we show to the buyers when they interact with our platform. We can require that an email is entered here in case you need that thing.
00:05:51.388 - 00:06:55.600, Speaker B: But once you have this thing, you can essentially share a link in whatever way you want and the buyers would generate one of these charges. The other thing is that if you don't want this thing to be just kind of like hosted by us, you can include this snippet somewhere in your code. It would create like a button and that's kind of like an easy way to get around, embedded right into your product instead of going to our website. All of these things kind of like another feature that you can think about using is like your code generation, which is pretty neat for any sort of mobile wallets or real life interactions where you have two devices. One of them which is to show a particular information, and the other one is to send that address. There is like a particular format that is like standard throughout industry that we follow that works pretty well across the world. And also we have a point of sale capability.
00:06:55.600 - 00:07:22.490, Speaker B: Our product has a point of sale feature that you can somehow use it. You can populate programmatically through our API with this product. If you somehow are building something that requires this themed or something along these lines, you're more than welcome to try to use it and make the best out of it. So now let's go through a short demo where we will.
00:07:26.610 - 00:07:45.620, Speaker A: Yeah, so the purpose of this demo is basically to show you how easy it is to kind of get started with our API. So I've already gone ahead and created a new commerce account and we're just going to go through the onboarding flow real quick.
00:08:06.950 - 00:08:07.860, Speaker B: I think.
00:08:19.270 - 00:10:18.656, Speaker A: You'Re on you can choose to backup to Google Drive. For now, we're just going to skip this step and then that's it. So you created your account and now what we're going to do is we're going to go into settings and we're going to generate an API key which we're going to copy. We've already set up a kind of like just kind of default Rails app. And if we run Rails server right now and just go to it's a hello world right now. So what we're going to do is we're going to go into the controller for this page and add our API key as a constant and go into our gem file. And basically we want to include Coinbase Commerce as one of the required gems.
00:10:18.656 - 00:11:50.352, Speaker A: And then at the same time, this is some code that I'm going to copy over that we're going to use to generate a QR code for you guys. So back inside of welcome controller. Now that we have the Coinbase Commerce gem, we're going to basically create a new client like that. And then we're going to fill out we're going to create a checkout info object and basically populate it with all of the fields that we need in order to generate a checkout. We're going to create name, coinbase, description, and pricing type. Basically means that you can either specify how much a user will pay you or you can choose in this case, no price. So then the user can choose to send you any amount.
00:11:50.352 - 00:12:51.108, Speaker A: And this is good for donations. If you do choose to set a fixed price, you also have to fill in a local price field in this object. And then finally we're requesting that when users pay us, they fill in their name and their email and that's the info for the checkout. And so what we're going to do now is basically client checkout create with checkout info. And this is the checkout that we just created. And each checkout is basically or like this checkout object will have its own ID field. And as we showed you earlier, all of the payment or the checkout widgets are posted at a link that we generate for you.
00:12:51.108 - 00:14:31.818, Speaker A: This is a really ugly way of creating a URL, but we're going to just create it like this. Checkout. And we're going to just create the URL like this. And then finally I'm going to auto fill and then finally we're just going to add some code again just to generate the QR code. And then inside of our HTML, what we want to do is basically show you guys a QR code, which you guys can which hopefully if this works. Yes. So you can scan this QR code now on your phone, or you can visit the link that I just created, which and once you scan that QR code, you should be able to go to the checkout widget, send any amount of crypto or any currency that you would like, and we'll have your name and email.
00:14:31.818 - 00:15:13.554, Speaker A: So then come by our table later and we will have special swag for you guys. Basically, it took like, five minutes to kind of get all this set up and to expose this QR code. And from here, it is possible to kind of just like the possibilities are endless. You could just for your hackathon project, I'm sure there are more creative ways that you can think of to use our API. So let me know if this goes through. Yeah. Okay.
00:15:13.554 - 00:15:14.380, Speaker A: Yeah.
00:15:15.550 - 00:15:17.818, Speaker B: Is everybody heading to the same address?
00:15:17.984 - 00:15:44.490, Speaker A: No, everybody has their own address that is being generated when they scan at this QR code. That is the demo, and that's it for our presentation. And we can just open up the questions for whatever time you have.
00:15:52.330 - 00:16:01.880, Speaker C: When the user makes the purchase through the widget. Where do this fund go find.
00:16:04.910 - 00:16:08.134, Speaker A: Remember when we did our onboarding, we had a seed phrase.
00:16:08.182 - 00:16:08.394, Speaker B: Right.
00:16:08.432 - 00:16:16.414, Speaker A: So that basically we create a wallet for you when we generate that seed phrase. So that's where the mining is going.
00:16:16.532 - 00:16:20.110, Speaker C: Okay, so this is a method for you to quickly get a wallet.
00:16:21.410 - 00:16:38.322, Speaker A: Yeah, but commerce doesn't have this seed phrase. They never hit our servers. So yeah, we're still non custodial. We can allow you to have your fund there. Yes.
00:16:38.456 - 00:16:44.870, Speaker D: I think I missed a point. Is it like the same address for every customer or it can be dynamically generated.
00:16:48.330 - 00:17:18.410, Speaker B: Essentially, like that we generated at the beginning of the presentation. We are able to use, essentially, HP path to generate new address. Whenever you essentially open that link, that checkout link, special new address will generate just for you. And that's how we know who it was, because you're the only one that has seen that address. Any payment sent to that address must have come to you.
00:17:18.580 - 00:17:20.194, Speaker D: Yeah, but in the same time, I.
00:17:20.232 - 00:17:22.482, Speaker B: As an Ethereum user, do not usually.
00:17:22.536 - 00:17:25.160, Speaker D: Use wallets which utilize all this.
00:17:27.450 - 00:17:44.698, Speaker B: Yes. Well, our product has built, like, withdrawal features such that kind of like when you log into the product, we know where the funds are like, which points in the 44 state. So we are able to kind of instruct the web browser, but I'm going.
00:17:44.704 - 00:17:52.700, Speaker D: To pay for all this transaction additional excuse me, I'm going to pay like additional commission for all those wallets.
00:17:53.040 - 00:17:57.240, Speaker B: You have to pay an extra transaction fee when you withdraw.
00:17:57.320 - 00:18:09.436, Speaker D: And also as soon as I withdraw, all those wallets going to be connected together because it's kind of obvious by transaction itself. Like if you see graph of transaction. So what's the point of generating address just for accounting?
00:18:09.628 - 00:19:05.780, Speaker B: Well, I mean, the point of generating this intermediary address is so that kind of like us and merchants can identify who paid what. Like right here, it might be easy. Like you can send your transaction hash, but if you have some people on the left, it would be impossible for you to know who actually paid. And especially for people that use wallets, this is not that much big of an issue because you can prove which address was yours, where the funds originated from. But if you're paying from any big exchange because of the way that faster transaction, because of the way their hot wallets work, it's pretty much impossible to know where your funds coming from. So that's why we've kind of engineered this way with this intermediary assets. And yes, you're right, there are certain privacy configurations here which can be mitigated if you try to withdraw things in batches.
00:19:05.780 - 00:19:28.170, Speaker B: But I don't think that honestly, at any point you would like to have your funds at a certain level. If you care about privacy, then there are different ways that you can do after the funds are there. This is not the most private solution out there, but you don't try to.
00:19:34.630 - 00:19:44.740, Speaker C: The seed phrase generates a whole bunch of wallets and is those intermediate wallets with the subsequent account.
00:19:48.680 - 00:20:28.230, Speaker B: So the seed phrase is like essentially at the root of this HD hierarchy. And there are various ones. Like bit 44 is like one standard that defines essentially what path you should use. It's used more or less consistently across different wallets. So actually, if you load up the same key into mobile wallet wallet or red wallet or any of the others, it will work with some ideas. If you have a gap, it will not kind of notice those things.
00:20:30.680 - 00:20:34.950, Speaker C: Are the addresses like.
00:20:39.860 - 00:21:12.510, Speaker B: Yes and no. They are, but essentially we go kind of like four level deep and from that point onwards we just go flat point and that's kind of like how the standard is defined and that's how most wallets discover this address. So the intermediary address are needed so that you can in intermediary spots in this case are needed so you can have kind of like output the final addresses and their corresponding privileges. We want to spend funds from that, but they're not used. Like, we don't send funds to these intermediary addresses. You could.
00:21:16.400 - 00:21:19.996, Speaker C: Are they redirected there is.
00:21:20.018 - 00:22:14.300, Speaker B: No redirection in the end. The only redirection in the end is that when a merchant wants to withdraw this fund, their funds can be like at different places from all the different people that have paid it. And at that point they essentially kind of like in the case of Ethereum, they would create multiple transactions to one intermediary address and then there'll be a final transaction from that intermediary address to whatever destination you chose. I guess the usual flow is that our merchants usually want to cash out. So they would enter some exchange address, their deposit exchange their deposit address from an exchange. So then we will kind of do this consolidation. That's kind of like how general flow of the funds work.
00:22:14.300 - 00:22:22.000, Speaker B: There are certain things that we do to make it a little bit smarter, a little bit nicer from the US perspective. But in the simple case.
00:22:28.170 - 00:23:18.194, Speaker E: Two questions. Sorry, I'm like spreading them out to make sure. First question from the sound of it, doesn't seem as though at least the smart contract related addresses like Ethan USDC are tied to sweep accounts, so to speak. So to kind of address that. The questions about each address being its own intermediate step. Have you guys considered making it so that each address that's generated is like a sweep account, so to speak, that sweeps into the account after a certain amount? Or are there a lot of smart contract development consideration?
00:23:18.322 - 00:23:20.070, Speaker B: I'll let CD answer that question.
00:23:20.220 - 00:23:45.150, Speaker A: Yeah, so actually we are in the process of doing that for USDC. Boyon actually already has done that and he's getting a talk about it, I think, tomorrow. 03:00 p.m. So if you would like to learn more about that, do come. But yeah, the short answer is yes.
00:23:45.220 - 00:23:51.134, Speaker B: And now it's going to be the same thing for Ethereum. And then we couldn't do that before either.
00:23:51.172 - 00:23:52.446, Speaker C: And we had to kind of like.
00:23:52.548 - 00:23:57.406, Speaker B: It was made possible when Creative was introduced and boiling.
00:23:57.438 - 00:23:59.090, Speaker C: We'll talk more about that tomorrow.
00:23:59.910 - 00:25:03.830, Speaker B: Just like a sneak peek for that is that having these intermediary addresses introduces quite a lot of complexity when it comes to withdrawing the fund and especially for years. Point Tokens introduces the problem that now you have like obi accounts that are intermediaries, that don't have enough ETH to pay for gas. So you need to somehow provide it to those addresses either by sending it or we've actually developed this very lightweight smart contract that serve as our intermediary address. So now we don't use that 44 style derived addresses. Instead, we deploy this very lightweight smart contract that automatically know how to flush non custodial deal that anybody could use and actually serve executives. Like whenever they receive funds initially bounces to the right, forward it to the right address. Cool.
00:25:03.900 - 00:25:28.080, Speaker E: And then like a sub question within that when you guys kind of push that out into production or will it have the ability for merchants to kind of customize the parameters. So like a set of sweep accounts for each month kind of like already in a previous question about accounting and different ways that versions want to keep track of stuff or is that.
00:25:32.390 - 00:25:32.706, Speaker C: You.
00:25:32.728 - 00:26:23.600, Speaker B: Could definitely do that. In theory we are not doing that and I think that we want to keep this in my personal opinion, that sort of concern should be handled by the app itself and not by the blockchain layer. And especially because if you want to group them somehow, usually you want to do the grouping after the payment happens and all of this kind of address generation and forwarding needs to happen before. So there's some stuff there and definitely there's a bunch of stuff that can happen. But if we kind of decide to group these things, I think that would be at the app layer, kind of like the database layer UI rather than having these things exposed to the blockchain.
00:26:24.500 - 00:26:57.528, Speaker E: And the last question is I might have missed this, covered this. But within the parameter associated with price, can you get really granular such that, say the price is, like $100? But if you have some sort of promo for specific tokens, or you want to incentivize people paying with one token over another on the other end, you have a better exchange rate or something like that. Can you kind of tweak like say 10% off if you pay litecoin or something?
00:26:57.614 - 00:27:57.704, Speaker B: For user, we don't offer that thing. But essentially if you use kind of like the very raw API you can customize what each person is seeing and the price that they're seeing. So there would be like where you can include something that the price is usually $100 but just for you in the next five minutes. So that's definitely something that you could do through the API. It's not something that you could do through kind of like the automated way that exists because it's also possible to use our products and to create these checkouts and to create these links only within our dashboard, only from clicking buttons. Essentially, if you go that route, then we try to limit the knobs that you can turn, we can tweak so that it's simpler for the nontechnical people to use it. But if you want to kind of do this thing, then we can go back afterwards.
00:27:57.704 - 00:29:04.304, Speaker B: I can show you how. It's relatively simple. And also another thing is that we have to talk some more about the smart contract. But if you're interested or if you are using anything in your project about how to kind of do this payment forwarding with smart contracts, you're happy to help and give ideas or reference implementation of anything that might be useful. In the expert group we have like a one feature that kind of goes through all the stuff that we talked about and the different technologies that we've essentially used to build out the product. We are more than happy to help with any questions that you might have, whether it's about address generation, HD, wallets sweeping transaction buildings, non management gap costs like create do addresses, all of this kind of stuff. We've touched all over while building the product.
00:29:04.304 - 00:29:11.456, Speaker B: And even if you don't end up using our API, we're happy to help you in your project.
00:29:11.638 - 00:29:14.120, Speaker A: Despite your in our discord.
00:29:18.380 - 00:29:24.820, Speaker B: There'S a bunch of DKS for different languages that are available also, not just for Python.
