00:00:00.330 - 00:00:18.954, Speaker A: You cool. All right, 1 second. Awesome. Thanks everyone, for coming. So, you know, we're in a college town. Decided to do a bit of a tribute to my college experience and we're going to do a bit of like a fire hose survey. We're going to go really, really fast through a bunch of different ways to look at ethereum.
00:00:18.954 - 00:01:04.270, Speaker A: Not going to be able to spend as much time as I'd like to on most of these topics, but hopefully give you some interesting food for thought lot and would love to talk more about each of these things later. So first, one quick, not super important, but just brief intro myself. Studied math and CS pretty close to here at MIT back in the day, live in San Francisco. I had a fun experience early at a company called Dropbox. Learned a lot there, did some other stuff afterward and been helping the Ethereum Foundation for the past couple of years. So like I said with today's talk, we're going to go through a bunch of different perspectives. But before even diving into the specific perspectives, why is this important? I think one of the reasons it's important is when you have a complex topic, it's valuable to take different perspectives to try to better understand it.
00:01:04.270 - 00:01:38.906, Speaker A: And if you think it's like, oh, no, it's not going to be that hard to understand this. Well, I decided to dig up some fun quotes from about 20 some years ago. First we have ironically, the inventor of Ethernet has nothing to do with ethereum, but it did have a lot to do with the Internet. So it's kind of interesting to see a quote from the inventor of Ethernet about the Internet. Here's something about, yeah, retraining 250,000,000 people. Who's ever going to do that for the Internet? This one's a bit longer, but it's basically like my local mall is doing more business than the entire Internet, like blah, blah, blah. And I almost felt bad including this.
00:01:38.906 - 00:02:18.530, Speaker A: He's gotten a lot of crap for this. But Paul Krugman's infamous quote I do want to be clear, I'm not trying to compare blockchain or ethereum to the Internet. That alone would be the exact opposite of I think what we should be doing. Actually, what I'm trying to get at is a lot of you have probably heard of the parable of the blind men and the elephant, right? And the idea is like, these different blind men touch different parts of an elephant. They all have incomplete and incorrect views on what they're touching. And if you think about trying to predict the future or see where things are going, it's kind of analogous to this. So that's why I decided to try to take this multi perspective angle.
00:02:18.530 - 00:02:54.578, Speaker A: And the first one is just history. As saying often goes, history doesn't repeat, but it does rhyme and started with a quote from just a couple of weeks, or maybe it's like two months ago. Now from biology on Twitter. But yeah, I think looking at the past is often just as fascinating as trying to think about what the future can be. And so one thing I thought about recently was imagine being there for typing on a keyboard and seeing letters appear on the screen for the first time. Obviously this is natural to us today, but imagine being there for that first moment. Well, when I thought about it, I was like, actually, probably a lot of people didn't care.
00:02:54.578 - 00:03:37.290, Speaker A: Probably a lot of people were like, we can already do this with a typewriter, what's the big deal? If you think through even just moving data around, many people in this room are probably too young to have used many, if any, of the first few things here. But there's been quite an evolution through the years for the way people move things around. I remember my family was not well off. The one thing that we would invest very heavily in was technology. And my parents talk about how when I was two, they spent $600 to buy a 20 megabyte hard drive for the first computer that I had as a kid. So I was really fortunate that they cared enough to do that. But you just think about that for a moment.
00:03:37.290 - 00:04:23.658, Speaker A: I mean, it's still better than storing stuff on Ethereum right now, but it's a lot of money for not very much stuff. Another thing I think is interesting when you look, take a historical perspective is you have this imitation thing that goes on and as they say, imitation is this sincerest form of flattery and it gets even more interesting when the imitation doesn't make any sense. So one of my favorite throwback examples is how JavaScript was originally named Mocha and it was renamed to JavaScript because Java totally separate language works very differently, was extremely popular at the time. They're like, all right, yeah, we're just going to name it JavaScript now. It's the most used programming language in the world. So kind of like an interesting parallel here. You have Solidity, which as many of you may know, it's one of the ways you can write contracts on Ethereum.
00:04:23.658 - 00:05:01.574, Speaker A: It's used to interface with the Ethereum virtual machine. Syntax was motivated a lot by JavaScript because of JavaScript's popularity. Even though I think coding and Solidity is probably better thought of as like writing bash scripts, you probably don't want to take a front end developer kind of mindset when building stuff on Ethereum. Not that stops a lot of people, but hey, that's where we're at. And just as a fun fact, even like the creator of JavaScript works on the Brave browser, it's actually a great browser if you haven't tried it. You don't need a blockchain to be using the browser, but it was funded by a token issued on Ethereum. Like I said, history doesn't repeat, but it rhymes along those lines.
00:05:01.574 - 00:05:40.534, Speaker A: There's this performance optimization rhyme throughout history. I'm just going to go a little bit more quickly here, but in 2005, but when I started MIT, I remember there was this kind of like contrarian narrative that performance optimization wasn't going to matter anymore. Kind of made sense at the time. Like computers just kept getting faster and faster. And it's like, yeah, you could performance optimize, but you could also make things more readable or more accessible in other ways. Are you even going to need to optimize things that much in another ten years? Of course, then the smartphone revolution came along and all of a sudden everyone had this slow computer with even slower Internet, and performance optimization started to matter again. And now we've got blockchain computing, which is basically going all the way back to the beginning.
00:05:40.534 - 00:06:26.738, Speaker A: It's pretty much punch card computing or mainframe computing. So now the second perspective I'm going to take is an engineer's perspective. One thing that I found really fascinating over the last 15 years is how much software engineering has changed. I remember talking to somebody about building stuff on Ethereum, a really bright kid, wonderful person, but was like, how could you possibly write code and then put it on this blockchain and you're not going to be able to change it afterwards? That just seemed impossible. And I was like, oh yeah, I guess you probably have never used a CDROM, right? How do you think when people issued software on CDROMs, how are they going to update it back then? And it's because the software engineering companies today have become much more safe environments, which is great. It's made software engineering a lot more accessible. On the other hand, blockchain engineering, it's kind of like going from the city to the jungle.
00:06:26.738 - 00:07:09.320, Speaker A: It's an unsafe coding environment. And one of the reasons for this is because computing on blockchain is you're sort of imposing some laws of physical reality onto the virtual world. It's like why you can have scarcity, for instance. And so I often note that I'm not sure thinking about writing software on Ethereum should be thought of as software engineering. It's kind of more like building hardware than software. And along those lines, I am confident and I am optimistic about the future of blockchain based systems, because we can build cars, we can build bridges, skyscrapers, space shuttles, and I think we can build systems that are complex yet reliable on blockchain as well. But we're going to have to use very different best practices than the ones that we're using today.
00:07:09.320 - 00:08:01.442, Speaker A: The third perspective is the research perspective. So blockchains are often considered inefficient, but they're actually very efficient at what they fundamentally do. They allow a lot of distinct, just like nodes or entities to come to probabilistic consensus about something. You don't need to know everyone else in the network, you don't need to be connected to everyone. When I was taking distributed algorithms at MIT, you were like, working with 50 nodes and you were assuming they were all on the same network and all this other stuff and now you can have 10,000 and more nodes coming to consensus with very high probability using a lot of the principles that power blockchains. It's just that when you try to then do more stuff on top of this, there's these other factors that make them a lot less efficient. And what another thing that I think is interesting is from a research perspective, well, cryptography, as many of you know, it uses computational hardness as its fundamental building block.
00:08:01.442 - 00:08:54.294, Speaker A: Like the fact that it's hard to do certain things is actually good because that's what allows us to have cryptography and build things on top of it. And crypto economics, which is kind of what blockchains bring into the equation, they bring in this economic component which essentially gives you more knobs and dials to work with. It uses this economic or incentive based or game theoretical hardness as its fundamental building block in addition to using cryptography and other things like that. And so just overall I found it fascinating that in an ethereum or blockchain context I've run into some of the things that I really never thought I'd see again after college, after I decided I wasn't going know, I don't know, be like a math PhD or whatever. Quick examples would be like Fermat's Little Theorem or just like any abstract algebra. Never thought I'd see any of that again, zero knowledge proofs. I would bring them up at parties because I thought it made me sound cool, but actually probably had the opposite effect.
00:08:54.294 - 00:09:51.142, Speaker A: It's like, hey, you can like there's this thing called a zero knowledge proof and if I put this ball behind my back and do this stuff and people are like what are you talking about? And then even just Professor Ron Rivest who I saw last May at this VDF Day event that I can talk more about if you grab me later on. So it's been cool that blockchain ethereum has brought some of these things back into my life. And overall, ethereum and other blockchain systems have just done a lot to stimulate cryptography and zero knowledge proof research and development as well as just distributed systems and consensus and stuff like that. And so, moving along, we've got the computing stack perspective, right? When I think about the most interesting technical environments I've been in, a seminal experience for me was when I was twelve, I built a computer. I mean, I didn't really build it, I just bought a bunch of parts. It was an excuse as a school project, get my parents to pay for all this stuff. But I bought a bunch of parts, I plugged them together, you had to make sure everything fit like a tower and all that.
00:09:51.142 - 00:10:16.174, Speaker A: And it always left me with this memory of like, yeah, a computer is a thing you can take apart. A computer is a thing that has pieces and each of those pieces themselves can then be taken apart. And that always stuck with me. Even when I worked at Dropbox. What I thought was interesting was I never really had to go that deep into the stack. And Dropbox is already a fairly complex software engineering system by modern standards. It was a desktop app which very few products have nowadays.
00:10:16.174 - 00:10:58.586, Speaker A: It had extremely high correctness requirements and even then we were really barely moving outside of this fairly narrow slice of the computing stack. Now when I look at blockchain based computing it's really cool to see this opportunity and need to reinvent the entire computing stack. I mean, it's one thing to be like, I'm going to write a programming language and no one's going to use your new programming language nowadays unless it comes with a new context in which it might be especially useful. And so just like smartphones were a new context and a lot of new programming languages and paradigms emerge out of that. You might see something like that in blockchain and similarly the entire developer experience. I mentioned cars and bridges and skyscrapers. I like to tell people I would not want to drive across a bridge that was built in JavaScript.
00:10:58.586 - 00:12:13.000, Speaker A: And so we're probably going to have to do a lot more work on that front as well. And overall I just think this is the first time in literally decades that so many parts of the computing stack are simultaneously accessible to be worked on in a practical context. I've thought a lot about, hey, what would it have been like to be part of the early days of the internet or operating systems or even just computers themselves? And I feel really fortunate because in some ways it's like being present for all of those at the same time just in this new context. So moving in a different direction for a moment, this legal or game theoretical perspective. One thing that the blockchain and work, just being in a blockchain environment has really helped me understand better is what is the purpose, for instance, of the legal system? I used to think like, oh, the legal system exists to enforce laws, but now I realize it actually exists in part to create society wide confidence that laws will be enforced. And having the society wide confidence shifts the equilibrium of how people behave at scale. This is what's interesting when you have a big group of people that think differently about something, it then has these other macro effects on how they're likely to act.
00:12:13.000 - 00:12:47.242, Speaker A: And so one of the things I think is still underrated about blockchains is I'm not sure this is totally possible yet, but we're moving in a direction where you can have these anonymous credible commitments for meaningful things. There would have been an oxymoron even ten years ago. We would have achieved it by using some sort of mutually trusted third party. But overall we're seeing this new primitive. And when you have new primitives, it creates new equilibria for new behavior. What kind of behavior? Like still really early, but it's an exciting prospect. A lot of you probably aware of the Prisoners Dilemma.
00:12:47.242 - 00:13:43.378, Speaker A: If you don't know what it is, I don't have time to go into it here, but I definitely recommend Googling and just reading about it, it's one of the most fascinating things. And one thing that I always try to remind people is the Prisoner's Dilemma actually is solvable. It's just not directly solvable in particular, you either have to change the payout matrix, which involves some sort of communication, or maybe even deeper commitment, or you have to turn the Prisoner's Dilemma into an Iterated game, in which case it becomes a lot more favorable even if the one shot game is unfavorable. And so again, by having this new type of language that can be built around guarantees instead of promises. I don't know if this is actually going to come through, but I've heard people talk about this don't be evil versus can't be evil thing and hopefully we'll be able to see innovations that can lead to that. So the last major perspective is that of talent. This is a pretty bold statement, but I really think the amount of technical talent in blockchain is going to go up a lot.
00:13:43.378 - 00:14:11.530, Speaker A: And the reason for this is because of a few concepts. First, top technical talent always wants to work with other top technical talent. I mean, this one I think is a pretty easy one to understand. But another thing to keep in mind is that top technical talent rarely looks for new opportunities. They're happy where they are. They're usually like working on interesting stuff and appreciated where they are and things like that. And so if you really want to understand what might be coming along, you don't want to ask people what they're doing or look at what they're doing.
00:14:11.530 - 00:14:50.794, Speaker A: You want to say, if you were looking for a change, which I know you're not, what would you consider? And so counterintuitively top talent is actually a lagging indicator, not a leading indicator. That's something that's really important to keep in mind. And with that, when you see one respected peer become interested in a topic that's worth more than 1000 days of hype and news cycle. So think back to when I joined Dropbox back in 2008. It's like pretty Motley crue, right? And people were like, what's a startup thing? That's weird. You should be going to grad school, you should be going to finance, you should go work at Microsoft, whatever. And not too many years later, founders like on the COVID of Forbes and people are like, oh, this startup thing is actually kind of interesting.
00:14:50.794 - 00:15:33.426, Speaker A: And by 2016 it's like, it's almost weird if you're not interested in startups. So came along pretty quickly. So since I think the blockchain based computing is just the most interesting environment that not just software engineers, but economists, cryptographers, lawyers, probably even multilevel marketers have encountered in a long time. It's just a gravity well for different types of people. And when more of these people come together, who knows what's going to come out of it? So my closing thoughts, like I said, who knows what's going to come out of it, right? It's not that clear that Ethereum is only going to be a part of solutions to problems. I think it's quite possible. It's also going to cause a lot of problems, whether it's Ethereum or other just like, programmable blockchain systems.
00:15:33.426 - 00:16:20.034, Speaker A: So that's something that we just constantly have to keep in mind. Again, trying to look into the future, this blind men and the elephant thing all over again. It's important, I think, for all of us to stay humble and just continue to think about what it is that we're missing. What is it that we're not seeing as we kind of move into this new frontier. So, as my final quick perspective, remember what I said about how a lot of people don't care? Probably didn't care the first time. It's like, so what? There's this computer terminal thing, but what do you even do with this computer thing? Who even cares about that? And I think that's something important also for everyone here to keep in mind, which is almost everyone who's interested in Ethereum or blockchain stuff today, they've crossed essentially this intellectual chasm, but the mainstream doesn't care. For the mainstream to actually interface with blockchains, we're going to have to cross a usefulness chasm.
00:16:20.034 - 00:16:53.610, Speaker A: And so in this sense, blockchain is very different than Facebook or the Internet or whatever, where you can be like, oh, look at the growth numbers. Well, the first 10,000 people on Facebook I know because I was one of them, were doing basically the same things that the 10,000,000th person on Facebook was doing. They were just like looking at each other's photos and posting on each other's walls or whatever. But the first 10,000 blockchain people essentially had some sort of like, acid trip epiphany type thing about the world. And the 10,000,000th blockchain user is probably not even going to know that they're using a blockchain. So we're going to have to cross this usefulness chasm. That's why it's awesome to be at a hackathon.
00:16:53.610 - 00:17:04.620, Speaker A: Yeah. And hopefully as we look at Ethereum in 2019, as we keep building and growing together, we'll see a very different Ethereum five years from now. So thank you. Thank.
