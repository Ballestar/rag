00:00:09.890 - 00:00:38.640, Speaker A: Hey, guys. I'm Alex from Squarelink. Yeah. So I guess the point of this talk, I'm just going to give you a quick overview of what Squarelink is. Then I'm going to jump in really quick to basics of our SDK, our API. The beauty of Squarelink is super easy to integrate, so there shouldn't be any confusion for the most part. But we do have a lot of small custom functionality that you can tie into your DAP to.
00:00:38.640 - 00:01:19.126, Speaker A: We'll go over it, but let's start off with just like, what Squarelink is. How many of you have bought food at the food trucks yet? Awesome. Okay. Do you guys like it? Can you be honest? Yes. Actually, I heard someone gave me this beautiful analogy. He was like, I feel like you built me this beautiful chair and I just sat on the table. Anyway, so Squarelink isn't just what you were doing for the food trucks.
00:01:19.126 - 00:01:55.202, Speaker A: It isn't just that burner wallet kind of solution. What our core product is, is actually an end to end onboarding solution for apps to attract mainstream users into their application. So we offer, like, a standard Web three provider. You can integrate it the same way you'd integrate MetaMask. It takes, like, literally seven additional lines of code. You can copy and paste it, and it just works so super easy off of our landing page, copy and paste it. So I guess one of the core advantages in terms of UX.
00:01:55.202 - 00:02:42.498, Speaker A: So obviously, all of you have probably used MetaMask, right? Yeah. So new users coming into the space, they see adapt, they want to use it, think it's cool, whatever. They have to download a Chrome extension. They have to be on desktop using Chrome. I guess MetaMask now has their mobile version, but just like, the onboarding friction for getting into a DAP at this point in time is just absolutely ridiculous and unnecessary. So what we're basically doing is allowing people to interact with DApps with a totally Web Two user experience and completely noncustodial security. So users can sign up, sign in, sign transactions, even recover their account, all with just an email and password.
00:02:42.498 - 00:03:15.186, Speaker A: And it still keeps everything completely noncustodial. It's awesome. So I'll give a demo at the end, so I'll just jump straight into the integration. At the end of the day, if you guys are building a DAP that already supports MetaMask, this is all you need. Literally all you need. Just register adapt in the Squarelink developer console, copy and paste your client ID, and you should be ready to go. This is literally it.
00:03:15.186 - 00:03:41.766, Speaker A: You're done. End of talk. Thanks for coming, guys. All right, so we do have, I guess, a couple custom configurations to that original Squarelink objects where you see like, const square link equals new square link, et cetera. We do have a couple of custom configurations to that. So the first of which is obviously your client ID. Next is the network.
00:03:41.766 - 00:04:17.570, Speaker A: So we support. If you go into your Squarelink application, like what you use to pay for food at the food trucks, you can click on the network up top and you can see a massive list of networks that we support. We support maybe like twelve main blockchains that you can list here. They're all listed in our documentation page. Things like, obviously, like the Ethereum Main Net. A bunch of testnets like Covon Robston Rinkabee we support, like Xdai POA Thundercore. We just integrated recently.
00:04:17.570 - 00:04:52.974, Speaker A: There's a big list, it's growing every day. So check that out to see if we support the network you're trying to build on. And if you're trying to build on a custom network, that's also totally fine. All you need is your own RPC endpoint and you can pass that in as an object to the Squarelink constructor. So basically with that, I don't know if it's there, you can see it in our documentation, our README, but you literally just have to pass in an RPC URL. Super easy. And then options.
00:04:52.974 - 00:05:45.822, Speaker A: We'll go over this in a second. But when you actually create a provider engine, it comes with a couple of custom features like get name, Get email, Get security settings. These are all on top of the standard Web Three provider where you can do like ETH, Get accounts, ETH, Send Transaction, whatever else. So when a user authenticates with Squarelink through your DAP, at that point if you're set up to use the user name scope, you can call like Squarelink, getName it'll, return the person's name, get email, returns their email. Super straightforward. Just some other features you might want to build into your DAP. I know a lot of people are trying to tie in email services into their DAP so they can onboard their users more.
00:05:45.822 - 00:06:55.180, Speaker A: Just provide a nice onboarding flow where after they sign in for the first time, they get an email with instructions on how to use the DAP or whatever else. So, just some ideas on how to use these custom features. So actually, this is just a side note, but we do have a couple other custom API functionalities let me go to if you go to our API reference. So everything in Squarelink, it's all wrapped around a basically standard OAuth server that isn't anything you guys need to worry about. But if you guys are interested in using our standalone API like our Rest API, you can authenticate your users with a standard OAuth flow. It's all outlined here, like sign in button, obtain an access token, and then you'll be able to use any of these API routes. Some of the interesting ones that you guys might be interested in using for your hacks, probably post Wallet is the most interesting with this.
00:06:55.180 - 00:07:24.564, Speaker A: I mean, super straightforward. If you have an access token that's authorized to create wallets for a user, you can just call this API route and it'll create a new wallet for the user. You can name it if you have your own DAP name. Like my cool DAP. You can call it, like, my Cool DAP wallet or whatever. So, yeah, any questions about any of this? Yeah, go for it. Send email.
00:07:24.564 - 00:08:06.310, Speaker A: We can't send email from Squarelink. No, but you'll be able to have access to their email address. If you want to set up your own email server, you would be able to do it that way. Awesome. Any other questions? So I guess I'll give you guys a quick demo on what the actual user experience looks like. How many of you are familiar with pool together? Okay, I guess as an alternative demo, is anyone familiar with Total toddle, however you pronounce it? Okay, so more people know pool together. I'll do pool together.
00:08:06.310 - 00:08:36.236, Speaker A: So pool Together, it's pretty new. They just integrated us literally yesterday. But it's really awesome. Honestly, really cool. DeFi app. That's attractive to mainstream users. The essential idea is they host seven day periods where they collect a pool of money and that goes into basically like a compound lending account.
00:08:36.236 - 00:09:06.150, Speaker A: And the interest accrued on the total pool raised becomes basically like a prize for a lottery at the end of the pool. So let's say everyone in this room puts in $100 into this pool. That generates like, let's say $100 total in interest. At the end of the lottery. Every single person gets their money back and one person at the end gets the total interest collected. So it's basically like a no loss lottery. Pretty cool idea.
00:09:06.150 - 00:09:32.684, Speaker A: We just got integrated yesterday. So this is just like an example of how it would work with Squarelink. So you can see MetaMask is supported. Squarelink is supported. Obviously, if you're going to choose MetaMask, user would have to be likely on desktop, have the extension installed, et cetera. With Squarelink, it's quick and easy. Obviously, I don't need any extensions.
00:09:32.684 - 00:09:55.220, Speaker A: I can use it on any device, any browser. Just press confirm and I'm in. The way this works, you buy a ticket. We'll buy a ticket. Cool. Awesome. So all I have to do to confirm the transaction press confirm.
00:09:55.220 - 00:10:34.270, Speaker A: Great. And now I have to wait for Ethereum. How's it going? Oh, yeah, awesome. Okay. I honestly don't understand this. Like UX flow on their end too much, but it looks like I have tickets or I have something allocated and now I can buy tickets for the pool. So it's, I guess, another step in the process.
00:10:34.270 - 00:11:16.396, Speaker A: But we're going through there. Wait for ethereum again. I feel like the gas price just shoots up way high whenever ETH Global throws one of these events. Well, yeah. So at the end of the day, this will eventually go through. You'll be entered into the lottery. And that's just like a basic example of a DAP that's using Squarelink.
00:11:16.396 - 00:11:46.780, Speaker A: There are a couple other examples on our landing page. If you go into the wallet that you guys all have. There's an explore page. You can check out some of the DeFi apps that we have up top there, just play around with them. But at the end of the day, this is supposed to be as simple, quick, and easy as possible from a dev standpoint for you guys and for a user standpoint. So hopefully there are no confusions. But I'd be happy to field any questions if you guys have.
00:11:46.780 - 00:11:47.644, Speaker A: Yep, go for it.
00:11:47.682 - 00:11:51.384, Speaker B: What's the main differences between Squarelink and Fortmatic?
00:11:51.512 - 00:12:26.280, Speaker A: Yeah, so Fortmatic is custodial, actually. So they're actually holding all of your private keys and they're signing transactions with HSMs. But at the end of the day, if you hack their front end or their servers, HSMs don't really do anything. So with Squarelink, everything is completely non custodial. So your keys are actually derived from your basically you can read about it more in our white paper. It goes more in depth, but essentially your keys are derived from your email and password. Your password, hash, et cetera are never stored on our servers.
00:12:26.280 - 00:13:10.790, Speaker A: They never leave our front end. So I guess the big difference is that we're noncustodial go for it. When I went to the food truck, yeah, I'm guessing that was not I actually built the Lobster Coin network and the gas price is like zero, so it goes through and I set the block times to like 3 seconds or less, something like that. So it's optimized for quick payments, but not for security. I'd say go for it. Have at it, guys. Yeah.
00:13:11.260 - 00:13:18.810, Speaker B: So there's a pop up window. Is there a way to user flow to open up a modal and have that?
00:13:21.260 - 00:14:39.750, Speaker A: Like an iframe sort of modal? Possibly, yeah, I guess that's another big differentiator between us and Fortmatic, is just because of our security architecture, we're unable to support the transaction signing in iframes partly because of phishing risks. It's obviously easy to replicate iframes, so we're trying to avoid that. The other thing is just iframes limit the security additions that you can add in terms of like third party cookies for authentication, things like that. So in short, we don't support pop up modals or on page modals, but we do have like just as an example, if you guys have signed up for a developer account yet, everything can be also implemented as sort of like an OAuth flow. So this, as an example is more of a redirect and again, everything is totally OAuth based. More of like a redirect sort of user flow rather than that that pop up window. If that's something that interests you.
00:14:39.750 - 00:15:16.880, Speaker A: When I was buying the food oh, it'd be absolutely much nicer on iOS. Yeah, I totally understand. Yeah, it's like absolutely. It would be a top priority. I think it's on the horizon, but it's not something that we would pass by. Cool. Yeah, go for it.
00:15:17.030 - 00:15:19.968, Speaker B: Point of sale out there. That was your system as well.
00:15:19.974 - 00:15:22.930, Speaker A: Or did you plug into something else that was ours? Yeah.
00:15:23.780 - 00:15:27.170, Speaker B: Purpose built or just demo built?
00:15:28.100 - 00:16:02.124, Speaker A: It's pretty extendable, pretty robust. So it'll work with anything, honestly, any sort of POS application. Not just food trucks. It's currently, I'd say, more in beta right now, so we're not really pushing it as a product, but if you're interested in doing something with it, I'd be happy to set you up. Yeah, cool. Yeah. Oh, yeah, absolutely.
00:16:02.124 - 00:16:54.026, Speaker A: So I guess that's, like, one of the cool features that we have. So if you notice in the so if you notice in, like, the the Web three provider initialization, so squarelink I guess this is another notable feature in the SDK. So our preferred method of initialization is, like, obviously squarelink get provider. This returns a promise or callback. The reason for that is because when the SDK is initializing, it's actually pulling a list of available networks from our API. And that list can be like, I can add a new network in like 10 seconds. So if there are networks that you want to see on there that aren't available, just like, shoot me a message, I can see what I can do.
00:16:54.026 - 00:17:35.330, Speaker A: If it's a quick integration, but you guys can check out the available networks here. It's all of these yeah. So on the other end of that, if you guys are, for some reason unable to support that sort of promise or callback flow, we do provide a hard coded list of networks in each build of our SDK. So you can use check out initializing our link synchronously, and we have basically a get provider sync function and that'll work the same way you'd use, like, MetaMask or something like that. In terms of provider initialization.
