00:00:00.410 - 00:03:23.560, Speaker A: Sam. Sam. SA. Sam. Sam. SA. SA.
00:03:23.560 - 00:07:32.910, Speaker A: Sam. Ram. Sam. Ram. SA. Sam. Sam.
00:07:32.910 - 00:08:48.080, Speaker A: Sam. Ram. It.
00:10:01.570 - 00:10:18.520, Speaker B: Attention, everyone. The closing ceremonies for Eat Singapore will begin in the metro room main stage in just a few minutes. So please make your way to the metro room for the closing ceremonies. Thank you.
00:10:27.890 - 00:17:32.818, Speaker A: Ram. Sam. Sam. Sam. Sam. Sam. It Sam.
00:17:32.818 - 00:23:47.530, Speaker A: And Sam. And Sam. It. It's Sam. Sam. SA. Sam.
00:23:47.530 - 00:24:38.560, Speaker A: It's. Sam SA.
00:29:54.230 - 00:29:57.010, Speaker B: Welcome to the closing ceremony.
00:29:57.690 - 00:29:59.750, Speaker A: Hello. How are you guys feeling?
00:30:00.730 - 00:30:02.434, Speaker B: You all look very fresh.
00:30:02.562 - 00:30:04.322, Speaker A: Tired. Fresh.
00:30:04.466 - 00:30:10.710, Speaker B: Beautiful, actually. I slept here. I haven't left since getting here, so I sympathize.
00:30:10.870 - 00:30:26.618, Speaker A: Very nice. I think there's something we want to do before we start. We did this last time in San Francisco. We're going to do a little selfie with the audience. Sorry. And then I'm going to tweet it because Evan's not allowed on Twitter anymore.
00:30:26.714 - 00:30:32.160, Speaker B: Yeah. Good old Twitter. Don't we love Web Two?
00:30:32.610 - 00:30:39.040, Speaker A: All right, I think maybe you guys can put your hands up and get hands up.
00:30:39.350 - 00:30:46.322, Speaker B: Make some noise because you'll see that on the photo. One, two, three. There we go.
00:30:46.376 - 00:31:06.358, Speaker A: Very nice. Thank you, guys. All right, so you've made it to the end. This event was wonderful. I don't know if you guys enjoyed the food as much as I did, but I really, really liked it. Thank you to the caterer, man ETH Singapore.
00:31:06.534 - 00:31:07.562, Speaker B: F and amazing.
00:31:07.696 - 00:31:16.894, Speaker A: Very, very cool. As mentioned, I like this graphic. I promise not to offend anyone this time. With quite a bit F bomb. Yeah.
00:31:17.092 - 00:31:32.930, Speaker B: All right, so Southeast Asia's first ethereum hackathon. That's amazing. 250 attendees. Actually, I think we got more like 327% Was students and 20 amazing sponsors.
00:31:33.750 - 00:31:42.390, Speaker A: Now, out of that, there have been 44 projects submitted, and we got to see some of them today. And lastly.
00:31:44.330 - 00:31:46.450, Speaker B: There are six finalists.
00:31:46.530 - 00:32:03.918, Speaker A: Six finalists. So, judges looked at all of the projects today, picked six finalists. It's in no particular order, but we're going to basically say who you are if you can get ready to come on stage. We're going to actually get to hear presentations from these finalists. So here they are.
00:32:04.004 - 00:32:04.398, Speaker B: Yes.
00:32:04.484 - 00:32:14.830, Speaker A: Starting off hashed, let's give them a round of applause. Snarsma. Very nice name.
00:32:14.980 - 00:32:17.650, Speaker B: Snarsma stretch VM.
00:32:19.670 - 00:32:21.970, Speaker A: Decentralized infura.
00:32:24.550 - 00:32:26.130, Speaker B: Daiko hedge.
00:32:27.190 - 00:32:32.858, Speaker A: And Di le or Dai ly. It's also daily, but it's Dali.
00:32:32.894 - 00:32:33.990, Speaker B: It's controversial.
00:32:35.130 - 00:32:47.580, Speaker A: All right, before we have our finalist come up and present, scotty from Gitcoin is going to tell us a little bit about what they're doing today.
00:32:49.870 - 00:33:18.130, Speaker B: Thanks so much, Anna. How's everyone doing? Somewhat rested? Probably not. Before I get started, we get started here. I just wanted to thank everyone for all of their work. The submissions were absolutely amazing. On top of the amazing prizes that you're already going to get from East Singapore, myself and SapTech wanted to just give you guys a few extra prizes. So we have these physical Gitcoin Kudos trophies.
00:33:18.130 - 00:33:40.010, Speaker B: Each of these trophies represents a genuine compliment from us to you guys based on your work this weekend. Each one also has an actual 721, which you can represent on your gitcoin profile. With that, I'd like to pass it back to Anna to present the finalists. And thank you all so much for all of your effort this weekend.
00:33:45.970 - 00:33:59.380, Speaker A: So first up is hash edge. Are you guys around here? Are you ready? Yeah. Come on up, guys. Oh, they can't get over here.
00:34:03.430 - 00:34:15.870, Speaker B: We will be quite strict about time. So you have four minutes. Each finalist has four minutes to give your demo. Tell us what you did, and then we will cut you off with a big wooden vaudeville hook.
00:34:16.030 - 00:34:19.130, Speaker A: Yes. Welcome, guys. Congratulations.
00:34:25.870 - 00:34:28.140, Speaker B: We got to connect our computer.
00:34:43.430 - 00:34:53.586, Speaker A: The next one. What is it? Snarsma. Can you guys get ready to come up after?
00:34:53.768 - 00:34:54.500, Speaker B: Cool.
00:34:56.790 - 00:36:19.002, Speaker A: Okay. It all right, everyone. Welcome to Hashed, the expedia for generalized crypto mining. So the current concentration of mining on a few coins in a few hands poses a significant threat to the foundation of our decentralized world. We believe in the value of giving millions the access and the freedom to choose to mine the coins of their choice. And also providing effective standardized hedging tools and additional source of capital to crypto communities across the board. By generalized mining, we're referring not just to POW, but POS depots, any decentralized network specified by protocol that can be abstracted into financial contract backed by smart contract.
00:36:19.002 - 00:37:10.430, Speaker A: And we're here to standardize and tokenize it. And this is why in the past 30 hours, we created hash edge, a decentralized marketplace for issuance and trading of generalized mining derivatives with a crowdfunded automated market maker to bootstrap liquidity. And this peer to peer marketplace, miners can issue tokenized, 30 day, 90 day contracts, et cetera, within just a few clicks and posting margins. And investors can trade these standard contract tokens with limitless liquidity. And we do this with the amazing uniswap. We modified uniswap constant product formula to suit our purpose to do an initial uniswap offering which incorporates a kickstarter for liquidity. So instead of seeding a project, you're effectively seeding its liquidity and getting a share of the transaction fees.
00:37:10.430 - 00:37:19.620, Speaker A: Let's just walk through the demo, please. Go ahead.
00:37:20.470 - 00:38:03.776, Speaker B: Sure. So before we dive into that, we can see on the left hand side we have three major features. One is staking, the other is trading. And the third is my portfolio. And let's head back to staking. So we'd like to issue a new contract. You can see all the major components of issuing a new contract.
00:38:03.776 - 00:39:07.770, Speaker B: So we're issuing a bitcoin mining contract for the purpose of demonstration. We actually we're actually doing a call contracting a setting a strike price, total supply, and click submit. So pull up MetaMask. And now we've created a new contract. So let's move on to the staking stage. We can see from the bottom of our page that a new contract has been created. But hang on 1 second, TADA.
00:39:07.770 - 00:39:29.380, Speaker B: So we can actually stake a few amount of money and click invest. Sure, the staking function works.
00:39:30.470 - 00:39:46.040, Speaker A: And the last part I guess we don't have time to show the trading. So basically in the trading page so basically as trades happen, you accrue transaction fees and that goes back to your staking and you can see it in my portfolio as dividends. So thank you.
00:39:53.690 - 00:40:53.450, Speaker B: Great. Congratulations Hashedge. Up next is Snarsma and on the Ondex circle. So get ready to come up when they're done is stretch VM testing. Can I start? Hi. So today we are going to talk about how we did a proof of proof of concept for a side chain that does Snark proofs to do verification of batch transactions to hopefully improve scalability.
00:40:54.830 - 00:41:15.970, Speaker A: Right? So some of you may be familiar with Barry White hat's roll up that basically it allows people to send transactions off chain to an operator who then batches these transactions into a Snark proof. And so all the operator does on chain is verify the Snark proof. And so this is a scalability solution.
00:41:18.070 - 00:42:00.210, Speaker B: So while Yington shows a bit of the demo, going to dive into some of the motivations behind this. So Yingtong does a bunch of classmate work. I've been interested in taking snacks. I'm just a beginner learning how it works. So we came together, she looked at Barry Whitehead's proposal and said, hey, why not we do this in the weekend? So I said, okay, let's find out if we can do it. And it turns out there's this library out there called Circum by Ident Three, which has a bunch of pre written components such as EdDSA, signature validation, person hashes and other things which in theory we could piece together and make a side chain.
00:42:00.550 - 00:43:29.342, Speaker A: Yeah, so what's happening right now is that with user test, I've just sent three transactions off chain to an operator, to the operator's database and these are the deposit transfer and withdraw transactions which are the three state transitions that are interesting to us. And on the other side it's all on my computer, but on the other side the operator is listening to the database and basically picking up these transactions and running them through a state transition logic. So you can see here that the operator is checking if it's a deposit, a withdrawal or transfer and carrying out the relevant transitions for each type of transaction. So yeah, reading in transaction one it's a deposit and it's legit, meaning that it passed all those basic checks like the non is one more than the previous one, the account balance is more or equal to the amount being. So it's legit and therefore the operator puts in a state transition and generates a new merkle route. Yeah, right.
00:43:29.396 - 00:44:06.898, Speaker B: So the three components we completed this weekend would be off chain transaction validation, a database layer that batches transactions which would later on be sent to the contract and also the generation, we wrote a circuit that can do EdDSA signature validation for some sample transactions. So moving forward, we will be looking into how we can complete the circle and do the Mercury proof validation using a Sigma Star.
00:44:07.084 - 00:44:25.600, Speaker A: Yeah, and I also want to give a shout out to some of the other plasma projects that I was looking at. Like I saw one that's called plasma winter and one that's plasma flow or plasma cash flow. And I thought those are really cool. So I just want to give a shout out and email us or whatever. Yeah.
00:44:25.970 - 00:44:27.520, Speaker B: All right, thank you so much.
00:44:30.790 - 00:45:07.900, Speaker A: Thank you guys. And also very white hats. Work nice. Very good. Okay, so next up we have Stretch VM and decentralized infura if you guys can get ready to present. Next. Hey, that's what you want? Bring me down, can bring me down, bring me down, can bring me down love it.
00:45:07.900 - 00:45:17.900, Speaker A: Bring me down can I bring it down? I said you feel like a room without.
00:45:35.530 - 00:46:01.402, Speaker B: Hello everybody. We would like to present our project. We worked on a fork of the VM that we call it a Stretch VM. Stretch is kind of part of the castor ghost friendly family. And the idea is to be able to support sharding and messaging across different shards. So the main kind of like why we did it kind of what inspired us. Everybody's talking about scalability, people are looking at charting.
00:46:01.402 - 00:47:01.998, Speaker B: There's a lot of research around it and we felt that there's not enough or we didn't find any kind of standard implementation that allows the passing of a message from Shard A, let's say to Shard B. We did it in a way that is kind of, let's say non intrusive. So the current VM that we took before pi EVM, we're going to talk about exactly how we did it, but let's talk about the why. The intention is to have a layer that allows different protocols that would like to work with Sharding to actually send messages that have been persistent moving around. And you can see it in the chart how Shard A has a message in block zero and goes to Shard B. And basically you see like the send messages, received messages and then there's event that actually affects the state in the next kind of if I can click here quickly, like another option was can you click here? I don't know how you yeah, I don't know why. So another option is actually to also call a contract.
00:47:01.998 - 00:47:31.898, Speaker B: So I can call a contract in chart B just by sending a message. And the main idea was to basically keep the EVM consistent, be able to kind of work with the existing kind of workflow. And the main work we've done there was to keep the design kind of in place. So if you look at Frontier Constantinople, they all have a similar structure. We try to get the applied transaction and everything working as it is without changing much. So we'll show you exactly how and what right now. Thank you.
00:47:31.898 - 00:48:21.258, Speaker B: Hey, guys. So we took byzantium virtual machine and we basically forked Pyevm and built off byzantium virtual machine and we added some stuff to the block headers, just like a shard ID, a sent message route, a received message route. This is in the block header. The block bodies contain the sent messages and received messages. And when a user has to send a transaction that crosses over to another shard, you package the transaction, add some bookkeeping information for shard routing and put it in your sent log. Someone picks it up from a validator from the other shard picks it up, puts it in its received log and the transaction is like applied. Each time you put something in the received log, the transaction is popped from the message that is received and applied to the state.
00:48:21.258 - 00:49:17.158, Speaker B: And we did it for normal ETH send transactions and naturally we extended it to cross shard contract call because all it does is the function call is encoded in the transaction data, so it naturally works. So we demonstrate two things ether send from one shot to the other and cross contact call from one shot to the other. And Barnaby is going to explain this image. Yeah, just to recap a bit. So you have the block structure here you have two shards and A zero is sending a message to b zero, which is receiving the message. And as Aditya said really well, this is really the most simple case that I think we can treat and we're really looking forward to developing more extensions. And it's made even more easy by the fact that all of this is developed as an overlay on top of Pi EVM.
00:49:17.158 - 00:49:56.262, Speaker B: So let's do this just quickly. What we are planning to do next is basically to fix the serialization because we did it very kind of last minute as a hackathon. Next thing we're going to do is have a message kind of control where we don't have to go to update the routing table every time from every shard. And of course, the main point is to have an upstream pull request to Pi VM so they can support charting as we made it. Thank you. Awesome. Thank you.
00:49:56.262 - 00:51:28.790, Speaker B: Stretch VM centralized infura and in the OnDeck circle. Daiko, Hedge, get ready to come up. Hi. So we're all smart contract auditors and we recently audited a project where it was a decentralized exchange, but they were using an Oracleized to a centralized web two API. And we were thinking that's terribly unsecure because if someone hacks that server, then you can buy Bitcoin for $0.01, which is not something you'd like to happen in your exchange. So our goal for this project was to create a new version of a semidecentralized system which accomplishes many of the goals of Ethereum in a scalable way by stripping out some of the guarantees so that you can take a Web Two server easily port it over to a decentralized medium.
00:51:28.790 - 00:52:31.770, Speaker B: So what we've done is we've located a Unix file system in IPFS. Then we've created a communication system which allows you to communicate the root hash, which will point to all of the information contained in IPFS. In a way, what we've implemented here is proof of authority, though we're going to scale into some other forms of soft consensus mechanisms, like signed updates between communities of validators and potentially even avalanche consensus. So those two things together allow you to build a client server, which by knowing the root hash, can then process all of the data locally and thus function as an API. So our project has a server which does some of the things that Infura does in a more decentralized way. For example, we've put up the block data so that you can get methods like get block from your local host in a way that's super easy to integrate into your project as is. So this was just a simple POC for a decentralized Web Three provider.
00:52:31.770 - 00:53:25.702, Speaker B: We have a local host server that allows you to interface with the decentralized Web Three provider just like you would with a normal one. So all you need is an API endpoint. We've implemented several of the Web Three functions, one of which is the get block by number. You can actually also return the transactions by a block by just not putting leave in the API. So some of the implications of, as we like to call it, transparent computing, are that you could have trusted servers in the future. So the way that this would work is that transparent servers would operate on decentralized file systems like Paul discussed. So once you have the root hash, you could actually determine whether or not an executable on the transparent server had changed.
00:53:25.702 - 00:54:32.574, Speaker B: So if the root hash hasn't changed, then you can be sure that the server's code hasn't changed. The way that we like to think about this is that data on your computer should be private, but data on servers should be totally transparent because it actually has a large impact on our lives as well. Sure. It's worth noting that the paradigm that we're looking here is that on Alex's end here, the client developer user side is exposed to very simple like Http interface. But on the back end, it's communicating with a Pub sub room. And my computer here is running an authority, or the actual authority in this network and is just publishing block numbers and block number data so that people that the client will go and request the latest block number and can essentially derive the entire file system just from repeated requests of consecutive root hashes. So future iterations of this technology will include the ability to request things from the Pub sub room.
00:54:32.574 - 00:54:56.010, Speaker B: So right now, we're processing a lot of this data on our computers. But in the future, you'd be able to put something like get block by number into the pub sub room along with a block number, and we would implement either a soft consensus layer or have the authority return a proof of the correctness of the data. So that you wouldn't necessarily need to process the data on your computer, but you would still have guarantees that it's safe.
00:54:57.150 - 00:55:17.660, Speaker A: Very cool. Thanks guys. Next up we have Daiko Hedge, sounds like a company already. And Dali, you guys get ready to come up soon. All right, take it away.
00:55:27.510 - 00:55:28.260, Speaker B: Check.
00:55:30.150 - 00:56:44.198, Speaker C: Hi everyone. So basically the app that we have sort of it's not an app, it's an extension to an app. So what we have built sort of takes off from what existed already, which is the Kyber network, a decentralized liquidity network, and vault a Daiko platform. So the deficiency that we are trying to address is that when you have a Daiko contract, the funds are locked into the contract and when you lock in ethereum into a contract for long periods, you are exposed to market risk. So what we want to ensure is that you are able to sort of reduce or increase your exposure based on your market view within your smart contract without needing to withdraw the balance out of your contract. And the way we are doing that is by becoming we make our Daiko Treasury liquidity provider on the Kyber network. And when we do that, we allow the user to either offload or onload amounts of ether based on their targets, or we can allow them to seek some sort of balance ratio between a stablecoin and ethereum.
00:56:44.198 - 00:57:52.500, Speaker C: For the purposes of this demo, we are using Dai, but personally I believe we should be using a basket of various stablecoins to diversify the credit risk. So the first two modes that we allow so when you are a reserve manager on Kyber, you are able to update your base rates, the rates at which you are willing to buy and sell. And you're also able to modify some imbalance constraints, meaning that if you reach certain amounts of buy and sell until the next update, then you simply sort of stop trading. So you just enter these parameters on these windows and then everything happens in the application and then it updates your parameters. If you are happy with the exposure that you have and you simply want to be a liquidity provider and make markets, we have a third mode which does not change your exposure, but it is intended to provide a bid ask and to make some sort of passive income. So Chetanya will walk you through how the whole process works and how integrating Kyber sort of broke our Daiko code and how we stitched it back.
00:57:53.270 - 00:58:17.850, Speaker B: Yeah. So coming here you can actually see some of the already deployed contracts because it takes a lot of time to deploy them. So if anyone is familiar with Kyber, they would already notice that most of the contracts are part of the Kyber network. And you can see that the Daiko Tokens are separated out here. The Daiko Token crowds in the pole factory. Pole factory is nothing but the treasury. So the treasury is responsible for managing the funds in the Daiko.
00:58:17.850 - 00:59:08.086, Speaker B: So we wrote a couple of scripts to basically explain the tenets of a Daiko. You can see that the first script basically conducts the crowd sale and it assigns the token balances to people who have sent Ether to it. The second one would be the Daiko polls. So every Daiko usually has a Tap poll and a Kill poll. So we deployed a certain amount of polls and then we asked certain users who were assigned some token balance in the last round to vote in the polls and we achieved this current consensus amounts. Next is since the treasury is also a liquidity provider of the Kyber network, we just enabled and we just enabled it and we send some transactions to the Kyber network. So the transactions are all swaps.
00:59:08.086 - 00:59:41.650, Speaker B: Basically, you can see that multiple swaps are happening at this point. You're basically left with 22 Ether. Now, what we did is we basically withdrew the entire ETH balance of the contract, which essentially resulted in the contract getting zero balance of Ethereum. But it still has some die balance. The next would be to kill the project. We basically set some limits saying that if the DICOR reaches 80% consensus, kill poll consensus, then we would kill it. So you can see that before refund the Ether balance and die balances.
00:59:41.650 - 01:00:04.726, Speaker B: So after the Kill user tokens are burnt and his token balance becomes zero, you can see that the user balance is not updated. Only the die balance is updated because the user was made zero. That was some good speed reading. I'm impressed. Thank you. Thank you. Daiko Hedge.
01:00:04.726 - 01:00:21.178, Speaker B: Up next, die. Ly the last one. Hello. Yeah. So actually there's a backstory to our idea. So we were at MakerDAO happy hour event on Thursday. So basically they were giving away five free die.
01:00:21.178 - 01:00:46.258, Speaker B: You just enter promo code on Kybersworth website and they will load up a web account with token that you can swap for five die. And there's some iters loaded inside. Right? So the problem we saw was a lot of people have trouble understanding how to send one die to get a free drink coupon. Craft beer. One dollars for $15 beer. Very worth it. So we took that inspiration to build something for payments with stablecoin Dai.
01:00:46.258 - 01:01:34.630, Speaker B: So what we built is Italus payments with Dai so that you can make these payments daily. So if you can see here is our web app. So if you guys want to check it out, we have a bitly link Diony. So this account is actually Ethereum wallet with no Ethers at all. And we want to send it to any address. So you're keen like how much? All right, so I'll leave to waihon to explain how this works. So actually, I hope this was because it's actually submitting the roster network.
01:01:34.630 - 01:02:39.342, Speaker B: So basically what it means is this account you just saw is account that just has die alone. It has no Ethernet in it. So what happened is basically the user signs the transaction but it delegates off through our servers a person who has a separate Ethereum account who is willing to submit the transaction on behalf of the user to pay for the gas fees in return. If you can click on the Ether scan, basically the token transfer you can see, let's wait for it to load. But basically the main payload of the die, the amount that you want to send to the end user still gets sent, but essentially a small fee in that silver coin die will be sent, will be redirected back to reimburse the guy who helped you pay the fees to some of the transactions. So essentially this die amount will likely cover any amount of Ether that the guy paid, plus some form of service charge or things like that. So basically any user can send stablecoin without needing to have the gas fees required account.
01:02:39.342 - 01:03:35.214, Speaker B: So why is this powerful? Because any advanced user of Ethereum probably will maintain their own gas balances enough Ether to send transactions, but I think even for separation of concerns. So if I just want a payment wallet, I don't really want to think about maintaining two different types of asset tokens, one to pay and one to send transactions all the time. So maybe this will be a good way to drive adoption among the common people for payments. So this is built on top of ERC, eight, six, five. And we believe there's a huge potential for non crypto real world adoption. So where Ethereum ledger acts as a white label for your applications or payment network. So any companies can create thousands of accounts without having to AirDrop all this s up, then you need to maintain inactive accounts, take it back.
01:03:35.214 - 01:04:10.794, Speaker B: So with this you can just create account for them and actually pass them custody without them knowing they might or might not be interested and just set out your own delegate service or rely on third party networks. That's all. Yeah. So if you feel free to ask us more questions. Thank you. Congrats to all. Up next, we are going to have the sponsor prizes again, like sponsors make this amazing event possible.
01:04:10.794 - 01:05:09.024, Speaker B: So thank you to all of them and we will kick it off with our first sponsor prize, which is B zero X. Hi, we're BZX and the winning team for our prize was they called it Tbzx. It's a telegram bot integration of our protocol. So it lets users do peer to peer loans, margin loans and to short and take leverage positions all from Telegram. So congrats. Up next is Kyber network.
01:05:09.152 - 01:05:09.830, Speaker A: Yeah.
01:05:16.300 - 01:05:41.984, Speaker B: Right. So hi everybody. So for Kyber, we saw a total of 16 submissions. It was pretty astounding. So after much deliberation with my CEO and a few others, we decided that Crypto Nine is the official API price winner. So they built a simple swap interface that also allows you to do advanced trading orders, like limit orders and stop orders. Right.
01:05:41.984 - 01:06:01.480, Speaker B: So we also have other winners for our other bounties. I'm just going to read the names, the teams and we'll reach out to you. So they are deposit is our joint bounty reset protocol winner. So yeah, we'll get in touch with you. We also have Dex Trading View, kyber Zero X, Relay, Daiko, Hitch and Coolsoft.
01:06:02.060 - 01:06:09.210, Speaker A: Very cool. Next up is Maker. Here he is. You can just pass.
01:06:13.360 - 01:06:48.968, Speaker B: Cool. We had seven submissions. We're splitting first place between two projects that use ZK Snarks and put them into practice. One was around privacy and one was combining it with plasma. And so those two teams will each receive 1000 die and there's two teams that will split 500 die each. One is the dialy team that you just saw and another one is a person who made a very cool status extension that allows you to when you have Ether, you can send Dai. It'll use Kyber network within status to swap your ether for Dai and send that to someone.
01:06:48.968 - 01:07:14.316, Speaker B: So it's an easy way to send Dai around. Thanks guys. And Raiden. Hello. We had two prizes. We had a most innovative use case on top of Raiden and we had best user experience. And the most innovative idea is Raido, which is basically an advertisement marketplace built on top of Raiden.
01:07:14.316 - 01:07:37.400, Speaker B: So you pay per second that you advertise something. And potentially other advertisers could also pay a higher fee and have their advertisement showed instead. And the best user experience goes to Crypto Grannies, which is like a simple way to use NFC cards to pay with Raiden. So yeah, congratulations and please find us afterwards.
01:07:39.820 - 01:07:44.410, Speaker A: Very nice. Next up, we have set.
01:07:49.260 - 01:08:20.470, Speaker B: Hi, I'm Richard from Set. So we got a couple interesting projects building on top of us. One of them, we have a joint API prize with Kyber and that's Deposit. So they built a one click app to buy a set using Kyber liquidity. And it all does it all in one transaction. So congrats to guys and we have a couple other interesting projects. We'd love to talk to you guys after to talk more, I guess.
01:08:20.470 - 01:08:52.924, Speaker B: And quant stam. So the winner for our bounty was David Myhal. We had four bounties out, but he actually tackled two of them. He basically built a better UI for our current beta protocol. And he also worked on making the JSON basically the audit report. Nicer. Which was up until now just like a JSON Blob.
01:08:52.924 - 01:08:56.930, Speaker B: So congrats to David and thanks for this wonderful. Event.
01:08:59.220 - 01:09:01.280, Speaker A: Next up, we have status.
01:09:04.260 - 01:09:04.864, Speaker C: Cool.
01:09:04.982 - 01:09:27.848, Speaker A: So we had two awesome prize winners who were able to extend Status with their own features. The first prize winner is Dao to Go. And they built a set of extensions that allows you to interact with the Aragon Dao. Hi, Sebastian. Nice work inside status. So you can vote on a Dao, and you can also create a new one using Status Messenger. And then our second prize winner is the awesome Weasel Team.
01:09:27.848 - 01:09:39.950, Speaker A: And that's the team that actually built the in chat dye sending feature where you don't need to own Dai, but you can send your friend Dai. Thanks to Kyber, Dai and status. So, congratulations, guys.
01:09:44.100 - 01:10:21.044, Speaker B: Aragon. Hard to miss Chris coming through the crowd. Hey, guys. Yeah. So, for Aragon, we had two prizes, first place and a runner up. So first place for the best use of the Argon protocol goes to Project Grunt, who made a UI and a smart contract that worked in the Argon protocol after the model of slicing pie. So it's like to help startups have an objective and transparent way to fund different groups or different contributors.
01:10:21.044 - 01:10:47.924, Speaker B: It's a really awesome project. And runner up goes to who. Status introduced the Dow to Go so that you could use Status to actually vote, and anyone can just use a messaging app. And what's really cool there is that you could have people in a chat room participating in governance in a more social way. Can I also do giveth. Next up, Giveth. Yeah.
01:10:47.924 - 01:11:16.430, Speaker B: And so Giveth was looking for the best social impact project, and that was definitely Chair Teeth. So, nice work. With Chairteeth, they made an easy way for people to donate tokens without having to worry about it affecting the market. They use a Set protocol to find kind of OTC traders so people could donate their tokens without having to worry about somehow affecting the price of the token. So, thank you, guys. Nice work.
01:11:19.040 - 01:11:21.800, Speaker A: Thank you to all these sponsors and their prizes.
01:11:21.880 - 01:11:23.500, Speaker B: Up next is seller.
01:11:24.100 - 01:11:26.160, Speaker A: Oh. Up next is Seller.
01:11:28.180 - 01:11:44.640, Speaker B: Hey, everybody. I am not Mo. Dong from Seller. Modong could not be here, and he asked me to do this. The winner of the Seller API prize is Shaky Shaky, which is a use of the Seller API to trigger micro payments when you shake your phone. Shaky shaky. So, congratulations.
01:11:44.640 - 01:11:46.550, Speaker B: They've already been contacted by Mo.
01:11:47.900 - 01:11:49.930, Speaker A: Thank you. Cool.
01:11:52.700 - 01:12:05.724, Speaker B: All right, now we thank our sponsors once more. We're going to read them out again. These events cannot happen without our sponsors. We are super grateful to them for helping make do this happen.
01:12:05.842 - 01:12:20.508, Speaker A: Yeah. So BZX Kyber network maker news cipher consensus status set Quantstamp omizego raiden seller.
01:12:20.604 - 01:12:32.336, Speaker B: Akamba and Infura zilliqa im token alpha wallet open token matic network aragon neutral.
01:12:32.528 - 01:12:45.556, Speaker A: Blockchain at NTU the Bridge this Location ethereum singapore long hash WXY group SG innovate crypto briefing CoinMarketCap and Kinetic let's.
01:12:45.588 - 01:12:47.960, Speaker B: Have a big hand for our sponsors.
01:12:52.560 - 01:13:05.890, Speaker A: All right. And up next so this event is put on by ETH Global and we're very excited to invite the ETH Global folks to the stage to see you guys out.
01:13:12.580 - 01:13:44.910, Speaker B: Yeah. What did you think of the hacks, Liam? Yeah, no, I mean, I've seen a lot of different hackathons over the past several years of my life and from surveying around, you maybe saw me go in all the different judging rooms and kind of get a sense of what's happening. This has been like one of the most phenomenal events with regards to technical output of really high quality things that are going to be useful. So good. It blows my mind in what you can do over a weekend. Can't wait to see more, actually. Yeah, I want to say a little bit of stuff.
01:13:44.910 - 01:14:36.460, Speaker B: How many of you guys know what ETH Global is like, generally speaking? Okay, decent amount. How many know the backstory or why we do any of this stuff? No one? Perfect. So yeah, I guess I'll just give you a bit of backstory as to why any of us are here. A few years ago, I guess like five or so years ago, kartik and I and a bunch of different friends that we had at the University of Waterloo in Canada started this hackathon right when kind of collegiate hackathons were starting to get popular in the States and in Canada. And the general idea was just get as many people as possible that wanted to kind of just do something different than just maybe like a school project or say, going working at some company. They wanted to get into an environment where a lot of people that are similarly as motivated and interested in technology as they are can get together for a weekend and just kind of have fun. Right.
01:14:36.460 - 01:15:44.972, Speaker B: In the same way that art is a creative output, technology and programming is similarly just the same. It shouldn't be something that just like you build and then you get paid and then it's just something like that. It's much more of a creative aspect and so you want to be a part of a social group. So we started the tackathon several years ago with that kind in mind and we saw just a massive explosion of great products that were built, people that built massive kind of friend groups out of it. And ultimately several years later now we've seen an enormous amount of impact from it in terms of companies get started from it, friend groups kind of spiral into their own startups or different groups within companies and it's just been massively impactful. And so personally, I'm not really like an events guy, but what we saw is this particular style of event led to an incredible amount of output for our friends and for people like us that just care about technology and having fun and building stuff with our creative energy. So a few years ago, I guess two years ago, a year and a half ago, as Ethereum was really starting to get a lot of interest from the developer community, we put on an event called ETH Waterloo, which was the very first Ethereum hackathon.
01:15:44.972 - 01:16:39.620, Speaker B: And because we built our hackathon in Waterloo, we had like a massive advantage where we got to kind of took the whole playbook from building that event and we just kind of repeated it and changed the logo to be Ethereum related. And we got all the best kind of Ethereum people in the industry to come to Waterloo and a lot of amazing stuff happened. Set protocol, his T shirt I'm wearing and who's now sponsoring this event, literally came to that event, built set protocol, or at least the beginnings of it, or the specifications and a bit of preocc code, and then launched a company out of it. And now you can see they're thriving in terms of they've built a great community around themselves and they have a technology that all of you can now build on top of. Because of an event like this, all kinds of other stuff have happened along the way. CryptoKitties and a bunch of other stuff. So ETH Global is just an initiative that us and a great team that I'm going to talk about in a minute, just out of our own interest in kind of pushing this kind of ideology forward, want to give to the Ethereum community.
01:16:39.620 - 01:17:18.610, Speaker B: So. Yeah, that's ETH global. We hope that it's something positive in the community and that people can get a lot of value out of it. And part of what excites me about ETHGlobal is that the stuff we're doing now, we won't actually see how that actually pays out until a few years from now. So the super exciting part of this is that we're just in the very first beginning of what this could be and we have to be a bit more patient and wait a few more years to see what actually comes out of it. And that's, to me, super exciting. So with that, we wanted to thank a handful of people that kind of made this weekend possible.
01:17:18.610 - 01:17:51.448, Speaker B: Yeah. So I guess kind of going in order. First of all, it's the judges. So the really fun part about this space is we get to get the absolute, really amazing top judges and industry leaders in this space to come to the event. And so these are all the folks, if you're on this list and you're judging in this room, a lot of them are kind of scattered about, but can you guys stand up? Because we want to give a major shout out to you all this way to actually go and see your peers kind of building stuff on top of technology that might be even built. Lane. Eureko JD.
01:17:51.448 - 01:18:34.568, Speaker B: Kelsey ziwei ming anna Mo I think Mo's on a plane. E g vitalik dean cassandra yaokri evan erica Xiaoi. Chris Ava Lau. Thank you very much. And separately, one of the cool things is with ETH Global, we get to go to find local teams across the world that are as motivated by Ethereum as we are and we get to partner with them to put on these kinds of events. So this event has been a partnership between us, but with a large part a lot of great people on the ground from Singapore. So, yeah, if you're part of the core team, Singapore, if you're in the room again, they're always running around.
01:18:34.568 - 01:19:00.496, Speaker B: Can you guys stand up? So, for the live stream, nobody is in this room and this is how hard, yeah. Alex, Bernard, clarice, dean, Heather Jervis, Nick PH, windsor. Xavier yulong. Spent a long time working with you guys for the past months. Four months. Four months, yeah. Initially, this is actually going to be in July, I think, when we moved it forward a bit.
01:19:00.496 - 01:19:22.248, Speaker B: But anyway, thank you to you guys as well. And lastly, or not lastly, the volunteers. So, again, I mentioned I've done a lot of hackathons. The volunteers are the massive wild card. Occasionally you get not a great group of people, but in this case, that's definitely not the case. The whole weekend was like super streamlined. I don't know, maybe you guys can attest to that.
01:19:22.248 - 01:19:51.804, Speaker B: It was extremely streamlined. So, yeah, shout out to the Singaporean volunteers. Again, if you guys are in the room, you guys also, please, could the volunteers please stand up? Yeah, they're in the red shirts. Highly recommend. On your way out, you say thank you. And then lastly, our core team. So, yeah, Andrew in the back, put on an enormous amount of effort throughout this whole experience with the logistics.
01:19:51.804 - 01:20:19.564, Speaker B: Heather, I think I told Heather to be here. She should really be here, but she's probably out. They're always doing stuff. Heather enormous amount of time. Also, logistically, you've probably seen her, like, helping out along the way. Jacob, who sponsors especially have been interacting with handling all the logistics of making sure that people building on top of sponsorship, API prizes, or in general, coming to this event, having a good experience goes well. And Josh just generally just does everything across the board and everything I've been involved with.
01:20:19.564 - 01:20:57.830, Speaker B: So, yeah, shout out to you guys, please. You deserve a massive round of applause. Yeah. And to continue the gratitude Train also, thank you to all of you. This has been like an amazing event and like I've mentioned several times, it's not a competition, we're not here just to network and we're here to build cool stuff, make friends and just generally have a lot of fun with the technology that we're also passionate about. So, yeah, thank all of you as well. Let's not forget our amazing MCs, Evan and Anna that have been doing a wonderful job keeping everybody happy.
01:20:57.830 - 01:21:49.160, Speaker B: So, the finalists, so we saw 44 projects this weekend and our judges did all the hard work of kind of figuring out who the top teams are and you kind of saw the six demos on stage. What's unique about these equal events is that these are not set out to be competitions. There's no notion of first, 2nd, 3rd, you're not winning a rank or there's not a high score type of submission process. We want these things to be places where you can show off the cool stuff that you can build over a weekend and then continue to work on it and to kind of bring it all back. The six finalists that came in and presented on stage were actually also our winners. Instead of being first places or second places or third places, all of them are equally the winners of this event. And I want to thank and kind of get a round of applause for all those six teams who are now our winners for this eat Singapore.
01:21:49.160 - 01:22:49.560, Speaker B: And as part of being the winners, the prize we're going to give out for these teams is that every team member will get five ETH. And we hope hoddle. We hope you hoddle. But congratulations to the six teams and being the winners of ETH Singapore. So today is this is the last sort of few minutes of Eat Singapore, which is also the last of them we're doing this year. And I wanted to take we do this every time, and I'm like, super guilty of talking about the same thing every time, but I'm going to still take two more minutes and talk about this, which is this is the last event of our year. And this year, this makes six events that we've done over the course of 2018, starting from Eat Denver, going to Bonazares, going to India, then to Berlin, to San Francisco, and now we're at Singapore.
01:22:49.560 - 01:23:32.408, Speaker B: And the progress and the outcomes we've kind of seen from just this year alone have been absolutely amazing. What I really wanted to do was summarize what has happened in just the last few years since ETH global has been around. We have seen over 550 projects that have come out of these hackathons. Over 3800 people have attended this. Our original goal was to get 2000 people into this ecosystem and have 1000 of them be first time developers. We well exceeded that at the end of this year. And not only that, we've had people come to these events from over 65 countries and it still blows my mind that we were able to get this done in such a short amount of time and I'm super proud that all of you in this room are part of how this has happened.
01:23:32.408 - 01:24:12.916, Speaker B: So thank you so much for making it global happen in 2018. It and with that, I am going to talk about one more thing, which is the next event, which is our first event for 2019, eats Denver. It's going to be on February 15, to the 17th. It's going to be one of our biggest events of the year. Over 1000 people will be here in Colorado. So if you are around or if you would like to attend, please apply to Eat Denver. And I know I said one more thing, but I'm going to do this again and probably maybe one more time.
01:24:12.916 - 01:24:48.960, Speaker B: I can't promise that. So we're right now figuring out how do we scale up ETHGlobal. And as a result, we looked at all the things that have happened this year, the reach we've had, and all the places everybody has come from and the projects we've seen. We wanted to do something that we didn't do originally this year. And as a result, what I'm really excited to announce is we're going to be doing ETH Cape Town in Africa on April 19 of 2019. This will be our first event in that geography. And we can't wait for you to attend ETH Cape Town.
01:24:48.960 - 01:25:25.804, Speaker B: To find out more about both of these events, you can check out Ethceptown.com or ETH Denver. We're going to give out more details soon. And with that one more thing, I guess the after party. So this slide officially concludes eat Singapore. We're going to be kind of wrapping up this event and then making sure we clean up before leaving and kind of take all of our things and make sure that you haven't lost any stuff. And we'll be going across the building here to saver World, where we're going to be kind of celebrating for the next 3 hours.
01:25:25.804 - 01:25:41.650, Speaker B: So from 03:00 to 06:00. And we can't wait to kind of talk and chat with all of you and learn more about the projects that you've built. And we really hope that you keep on building these projects after today. Thank you so much for coming. This would not be possible without.
01:25:44.600 - 01:25:45.350, Speaker A: You.
01:25:46.600 - 01:26:05.160, Speaker B: Actually, let's do this. We'll take one more photo of all of us. The photographers are still in the room. Something complicated. We'll just do a group photo. So if everybody can just stand up, we'll try this one stand up. We'll just kind of sit here.
01:26:05.160 - 01:26:10.120, Speaker B: And if you can just take a photo from the stage of the audience, that'll be wonderful.
01:26:12.780 - 01:26:13.530, Speaker A: Okay.
01:26:17.740 - 01:26:27.260, Speaker B: And then after this photo, if the finalists, the six teams can also come on stage, we'll do one more photo with all of the teams. So right after this photo, please come on stage.
01:27:24.360 - 01:27:25.110, Speaker A: It.
01:27:28.760 - 01:28:32.020, Speaker B: Can the finalists also come up on stage for a one more quick photo? All the finalists, please come on stage.
01:28:38.960 - 01:29:29.630, Speaker A: Sat sam. It.
01:29:36.480 - 01:30:31.630, Speaker B: Come on up. It.
