00:00:00.090 - 00:00:24.882, Speaker A: Or afternoon where you are. Excited for you to join us here too. Awesome. All right, if you are just joining us right now, we are ready to go. Thank you. First of all, thank you to everyone joining us right now. And thank you to Ali and Discordion.
00:00:24.882 - 00:00:40.860, Speaker A: Ali is a developer advocate at Filecoin and I will let her take it from here. She's got an excellent session for you tonight. We will be taking questions at the end or actually, no, I think during. And there will be some moderation. So post your questions in the chat and we'll take it from there. Thank you.
00:00:41.710 - 00:00:54.202, Speaker B: Awesome. Thank you so much. G'day. I'm Australian. So g'day. It's morning here still. Good morning, Saturday morning, good afternoon, evening, night, everyone, wherever you are, thank you for tuning in today.
00:00:54.202 - 00:01:15.574, Speaker B: Wherever you are across the globe, give me a shout in the chat. Let me know where you're tuning in from. I'd love to hear who's here. I am super excited to be here. So massive shout out to Fglobal for organizing and running so many amazing events throughout the year for us all to participate in and learn from. And we've heard some amazing speakers so far on this lineup. So totally not intimidated at all.
00:01:15.574 - 00:01:47.966, Speaker B: This is my first talk as a freshly minted developer advocate here at Filecoin. Not intimidated at all. Like my pun. So I'm Ali, you may remember me from such films that just kidding, just kidding. I'm not in any films, but I do have a podcast. I do run some IoT meetups here in Australia and I'm a lover of Web, three blockchain and open source, obviously, and Tech for good. I also used to run a takeaway sorry, a coffee shop as well.
00:01:47.966 - 00:02:30.038, Speaker B: So if you want to know how to make a good coffee coffee, I'm your girl. And I'm a dog lover. So that answers the age old question of whether cats or dogs no need to dwell on that all night today. But today I wanted to chat with you about NFT storage and about storing our metadata securely, persistently and immutably, and also about how to deploy a front end react app. And I've created a little demo for you in a decentralized way on an IPFS based kind of DevOps platform. So this is the timestamps for the agenda the Too Long didn't read. If you want to skip ahead, you can't.
00:02:30.038 - 00:03:21.370, Speaker B: It's a live stream right now. But in future, for those watching so a Brief Too Long didn't read on IPFS and Filecoin why you need IPFS Filecoin or something similar for NFTs, the devtooling ecosystem that's available for IPFS and Filecoin. And it's growing all the time, which is amazing, our DAP architecture. So the demo that I've made and then I'm going to go into the code and show you exactly how to use NFT storage for creating the JSON metadata to save in your NFT token. And then I'm also going to show you how to deploy our front end react app with Fleek. So that DevOps platform that I was talking about before, I've also got a few projects at the end there to give you some inspiration for your hacking this weekend. So NFTs are a massive story this year.
00:03:21.370 - 00:04:03.850, Speaker B: There's a heap of use cases yet to come and a lot of these use cases are down to the properties that are found in non fungible tokens. So obviously non fungibility is one of them. So it's immutability unless you contract it in code, it in, I should say, their uniqueness, their verifiable providence, their ability to interact with other NFTs. As I mentioned, you can build so many things for them. There's so many cool use cases out there and I'd love to hear some of the projects that you've seen around that are unique or really interesting that you really love at the moment that are using this kind of NFT contract base. Just let us know in the chat there, that'd be awesome. I'm going to have a look at them all later for sure.
00:04:03.850 - 00:04:45.794, Speaker B: But some of the use cases are, for example, gaming assets, but voting and governance rights, tickets, certifications, patents, imexibm, and we're using NFTs for patents now. Or IBM is using NFTs for patents now. There's art and music and video industries that are built up around it. Obviously metaverse NFTs I'm an old second life user, so I love that now that you can verify what you've created using awesome use cases around there. So looking forward to seeing what projects you build this weekend as well. So the too long didn't read on IPFS and Filecoin. Basically, IPFS is content addressing.
00:04:45.794 - 00:05:36.760, Speaker B: It uses content Identifiers to create cryptographic hashes that it then puts into a merkel tree and then allows peer to peer data transfer, retrieval, and storage. So this is important because it's built specifically for Web Three. It gives your data a unique fingerprint, basically. So whenever you go to retrieve that data using a content ID, you get that exact same data back. And yes, you can update your IDs, much like you kind of would with a Git commit. But the issue with IPFS, well, not the issue, but why Filecoin exists is because IPFS is basically a peer to peer protocol. It relies on people running their own nodes, running their own servers, being altruistic about sharing and transferring and retrieving data.
00:05:36.760 - 00:06:33.286, Speaker B: So Filecoin is built on top of this IPFS protocol for Web Three in order to ensure persistent data. So it uses crypto economic incentivizers to have anyone in the world basically store your data or on Mars, which is why it's called Interplanetary File System to store your data and then gives them incentives to retrieve that for them. And it checks that they're always keeping that data so you can ensure that your data is stored persistently for as long as your Filecoin deal lasts. And it's also super cheap, so it's uncensorable or censorship resistant and verifiable. If you do want a deeper understanding on IPFS and Filecoin though, I suggest you check out Michelle Lee's chat there on Intro to IPFS and Filecoin. She does a great job on explaining the protocols and how they're different and how they work. So check that one out if you want to hear more again by Fglobal.
00:06:33.286 - 00:07:22.442, Speaker B: Thanks, F Global. So yeah, just a little bit of so great. We've got an understanding that Filecoins are decentralized persistent storage service, and that IPFS is a protocol that uses cryptographic hashes to index files. So this gives it a unique use case for NFTs, which we're going to come to and they really go hand in hand together. And that's a little architecture diagram there to see how you might use this to build up your project architecture. So, as I kind of alluded to earlier, there is a bunch of devtooling that's getting built on these two protocols. As you can imagine, they're powerful protocols for Web Three, and there's been a lot of growth in this devtooling ecosystem in the last year or so, and maybe your project will be next.
00:07:22.442 - 00:08:16.214, Speaker B: Even so, you can ask us about grants and opportunities later as well. So some of the dev tooling that I really love is obviously Filecoin storage. So today I'm going to take you through using NFT Storage, but there's other storage options like Estuary, Web Three Storage Pinata, and I'm also going to take you through a deployment DevOps service called Fleek, which is amazing similar to Versaille or Netlify. Just does everything for you and off you go with a deployed app on the web. Love it. So what's all this Filecoin and IPFS stuff got to do with NFTs? Well, you need to be able to store data that's off chain. So for Ethereum contracts in particular, I know there's some cheaper layer ones out there that are available, but it's still a good idea to use IPFS and Filecoin, especially for when you start getting larger metadata.
00:08:16.214 - 00:09:01.574, Speaker B: So if you want to store lots and lots of data, it's really prohibitive to do that in a contract. You need a fixed address though, still for the content to live. So you want to make sure that that content is still immutable, which is the benefit of storing on a contract. So that's why we want to use IPFS to make sure that our content is exactly the same as when we put it on there. And then we need to store that content somewhere so that we can always retrieve it and persist it. And that's where Filecoin comes in. So you can really see how that works with NFTs, which the whole idea of is to make sure they're non fungible, to make sure they're unique, to know identity or to give provenance of an item.
00:09:01.574 - 00:09:45.222, Speaker B: So that's why it's important we don't want to have the pool emoji that maybe Moxie created although it was deliberate, I know if anyone's heard of Moxie, the signal creator, and read his little article that's come out. This is one way to resolve some of the problems that he maybe had with this. Wasn't quite what he was talking about, but you get my gist anyway onto the demo. So let's build something. So I've created a basic website here made out of React, as I said. Did I say earlier, I think I said earlier, I've made a little react website which I've deployed on fleek. And I'm using NFT storage to create the IPFS CID and then store it on filecoin to persist that data.
00:09:45.222 - 00:10:10.046, Speaker B: And I've just got a little solidity contract that then mints my NFTs. And that's all I've said here, basically. So let's have a look at what it looks like. So this is what it looks like. And you can actually go to this website live and special treat. There's 100 NFTs here, so you can go and mint your own NFT. It's only on the Rinkby testnet though, so make sure you're not spending real F on this.
00:10:10.046 - 00:10:27.446, Speaker B: This is just a rinkby testnet. NFT. But I would love to see maybe you enter some names. Please try not to break this. I haven't actually put too much error checking on this. It's just a little demo. So if you put 1000 word essay into the name field, I have no idea what that's going to turn up on.
00:10:27.446 - 00:10:57.822, Speaker B: But hey, it'll definitely be unique, which is what we want, right? So I'll just show you how it works. For example, so let's call my NFT minty fresh. And basically in here, I'm just using an SVG to generate the image that I want for my NFT and to make it unique, basically. So I'll put a name in. It's not quite unique. It's personalized though. And you can see what comes back is an IPFS image link.
00:10:57.822 - 00:11:27.878, Speaker B: So this is where I've already saved this using NFT storage. And I'll jump into the code in a second and show you that function. But I've already saved this using NFT storage and I can retrieve it. And I'm using Brave browser, so I can retrieve it through an IPFS gateway in Brave browser. It's integrated in Brave browser, but other browsers you'd need are better length than this. But here it is like our not quite minted yet NFT. So it saved it.
00:11:27.878 - 00:11:54.170, Speaker B: But I haven't approved your transaction, so it's not yet an NFT. So I'm just going to approve that transaction to call my contract and save that NFT. And then I'm also Erwing hello. Someone's beat me to creating one already. Awesome to see people have jumped onto this website already and are creating their own. Love it. And then I'm just retrieving my NFTs from my contract.
00:11:54.170 - 00:12:18.502, Speaker B: So I keep a record of what NFTs are being minted in this collection. And then I'm retrieving them on my front end and going through an IPFS gateway to display them. So let's take a look at how I've done that. So this is my basic this is the code. Hopefully you can all see that well enough. I might be a bit too zoomed in if I do that. So we can see from the file structure here.
00:12:18.502 - 00:12:52.660, Speaker B: All I've done is create this starter kit. I'm using a Create react app and I'm using Hard hat for the solidity contracts. I've put that all into one folder. So you can run the MPX Hard Hat commands if you're familiar with them in this folder, or you can run your NPM install and NPM Start commands to Devon if you're familiar with React in this folder as well. There's more info on the GitHub. So I'll give you the GitHub at the end of this as well, and you can go and have a play around with it. Probably fix it up, send in a PR, fix up my docs and code.
00:12:52.660 - 00:13:34.850, Speaker B: Anyway, so here's the Basic Solidity contract here, just an ERC 721 token implementation. All I'm doing is the main thing in this contract really is the Mint my NFT, which I'm sending an IPFS Uri to. So that's the important part. And that's where NFT Storage comes in. I've created a CID on IPFS, as I mentioned before, and NFT Storage automatically creates a filecoin deal for me to persist. That Storage Jason, and that's what I pass in to create my new NFT here. It's pretty much all for the contract.
00:13:34.850 - 00:13:55.366, Speaker B: Little solidity contract. What we really want to look at is NFT Storage. So NFT Storage on the front end is just the same as any other package in React. You just need to NPM install it. You want to sign up? If I can find here we go. So you just want to sign up. I love this old school website.
00:13:55.366 - 00:14:22.490, Speaker B: It's like being back in the 90s. I'm not that old, I can't remember them, right? Yeah, definitely am. It's like being back in the 90s, though. I love all these old school websites that are popping up and the UIs around them, which is really cool. But basically all you do is log into NFT Storage or create an account. You can use your GitHub for that and it will store your files. So you can get an API key just by going to API keys in NFT Storage.
00:14:22.490 - 00:15:00.574, Speaker B: You can see I've got one there already and I've put that into my. M file because we don't want to send that M API key up to GitHub. So I've put that in a Git ignore M file, which I read from the front end. You can check out how I've done that as well there. So pretty easy just to get an API key while we're here at NFT Storage. You can also just upload them manually so I can see that there's been a bunch of NFT activity already. So you can also just upload a file manually if you just want to get an IPFS and filecoin deal without going through the code.
00:15:00.574 - 00:15:43.866, Speaker B: Obviously though, we want to create a front end and have this work through code. So yeah, I import the library from NPS and let's have a look at how we actually use that if I can find the transaction. So all I'm doing here is creating the NFT data. So create the Ipfscid of the JSON data and save that persistently to filecoin. So when a user inputs their name, as you saw, I go and create this NFT data and I'm using an SVG for the image and just appending that name as a text tag to the SVG. And then all I need to do is set up my client. Sorry, where is it? Here it is, here it is.
00:15:43.866 - 00:16:23.106, Speaker B: So set up my NFT storage client. So that's how we talk to NFT storage through our react code. And I've done that with the API key that I showed you before. And then all I need to do is call client store. This is super simple. If you've got any JavaScript knowledge, this will all be very easy to use. So I'm just going to store basically a JSON file that contains the name of this metadata that I'm saving, filecoin NFT hack 2022, a description of it, and then the image itself, which is going to be a file, an SVG file.
00:16:23.106 - 00:16:50.398, Speaker B: So here's the data for that file. Sorry, here's the data in the array for that file off a base SVG with the name. Then I am naming it. So that's the name of the file and this is the type of the file. Again, you could save any kind of image here, any kind of file, any kind of Mime type, video, audio, anything you like really. And you can add any extra traits that you want for your NFT here or in the contract, whichever way you want to do it. I've added them here.
00:16:50.398 - 00:17:13.286, Speaker B: So awesomeness, 100 for everyone because you're all here and watching this speech, watching this preso and hacking away. So we're all awesome. 100%, I'd say. And then you get back your metadata from this. And this is really all there is to it. You'll just get back that metadata from the file. I'll see if I can actually find it.
00:17:13.286 - 00:17:45.300, Speaker B: Yes. Here's a kind of example from localhost here. If you can see it might be a bit small, so the metadata is saved. We get this Ipnft, which is our CID link, a URL to it, which we can go to through Brave browser because it's got an inbuilt IPFS Http gateway. And then here's our data itself. So, amazing. Pretty simple, right? That's really all there is to it.
00:17:45.300 - 00:18:29.578, Speaker B: I also create the image view. So basically in this little helper function, all I'm doing is appending the IPFS gateway data so I can read it on any browser. And that's all that does there. And then I'm going to ask the contract to mint the NFT with that URL that came. Yep, ask contract to mint NFT. I'm using the Ethers library to interact with this or using the Ethereum sorry, that's injected from my MetaMask connection. Calling that contract function that I set up the mint NFT and then it Mints.
00:18:29.578 - 00:18:42.926, Speaker B: Amazing. That's all we need to do for that. And if we do want to, then you can see that I'm retrieving the last five images. Oh, my gosh. So many NFTs now, they're going to sell out. Maybe I didn't make a big enough collection. Just kidding.
00:18:42.926 - 00:18:57.400, Speaker B: So, Luca, Tony, shout out to you guys at Texas NFT short. I like it. Topangax F. Oh, even got the ENS name. Awesome. Love it. Thanks for joining in, everyone.
00:18:57.400 - 00:19:26.260, Speaker B: Yeah. So where I was, I got sidetracked there, but where I was is that to create this little image view here, I'm just calling my contract, I'm getting that array of that collection back. And then when I do retrieve it so you can see here's my data collection. I've got it from my contract. This little function here is nothing special. I just only want to return the five most recent Minted. I'm not showing them all, that's all.
00:19:26.260 - 00:20:08.560, Speaker B: So that's all that little function does, is get the five most recent NFTs and then I'm creating that image URL. So by fetching that data using an IPFS gateway link. So I'm creating that IPFS gateway link and I think maybe discordian, you can maybe throw up. I might have one here. Actually, there's a public gateway checker, so you can have a look at what some of the gateways are that you can use. So Infura has one, for example, Fleek has their own textile. There's heaps of gateways you can use, so you could even make a Verifier to see which gateway is up and which isn't, and then route it that way if you wanted to.
00:20:08.560 - 00:20:30.534, Speaker B: But yeah. Anyway, I digress. So I wait for that IPFS fetch to come back and then display the data. And that's pretty much all there is to this little here's, my little fetch collection. Nothing special about that. Just calling the contract. Yeah.
00:20:30.534 - 00:21:09.730, Speaker B: And that's really all there is to using NFT storage to use IPFS and BioCoin for your NFTs. So hopefully that's a little bit helpful. The next thing I wanted to show you is how to deploy this site with Fleek. And again, it's just as easy. So you can go to Fleek co and again, you can just sign up or sign in with GitHub, which is what I've done. This is the hosted website at the moment, but you should land on a page like this and you can just add your new site, connect it with GitHub. So just connect whichever repo you want.
00:21:09.730 - 00:21:47.214, Speaker B: So I really need to clean up my GitHub repos. That's a bit of a mess, but I'm not going to add one for now. So I've already got one connected there and then all you need to looks like I've been signed out. So it's always the way, but basically like Netlify or Versaille, you add your environment variables in the settings. You can add your build commands in there. The other cool thing about Fleek is that you could also hook it up to your ENS name. So if you wanted to deploy it through that, you can totally do that.
00:21:47.214 - 00:22:18.342, Speaker B: I'm not sure what happened there. Maybe might just here we go. Awesome. Love the little lightning bolt too. It's a cool logo. As I was saying, you can add all your settings, anything you want and it'll deploy automatically when you commit to that branch, the same way as Netlify or Versaille or any other kind of DevOps thing you've used would do. And super simple.
00:22:18.342 - 00:22:52.354, Speaker B: So that's what I really love, this. It's fantastic. And you can deploy it because it's deployed on IPFS. It's fully decentralizing your front end app as well, which is something that we don't do, I think enough of in Web Three yet, but maybe because the tooling wasn't quite there, but this one is definitely there. So all my environment variables, you can specify a docker image as well. There's site management. Like I was saying, you can deploy this, sorry, you can deploy this with a domain or an ENS or lots of different things.
00:22:52.354 - 00:23:20.134, Speaker B: So I really encourage you to check out Fleek if you're deploying any kind of front end apps for your projects. I think that's about it. I will answer some questions. Looks like I've got some maybe questions in the chat here. Apologies if I haven't been keeping up with them as well. Demo we've gone through awesome. There's a heap of great inspiration so this is a hack.
00:23:20.134 - 00:23:52.946, Speaker B: So there's a heap of great inspiration to build projects on IPFS and Filecoin, so audience is using it. That's the music project. So like Spotify, but on Web Three and rewarding artists appropriately. Live Peer as well, who I think did a talk yesterday, so shout out to them. They are really great partners of ours and really awesome people as well. And developing just this super cool product which I love. Everyone check out Livepeer.
00:23:52.946 - 00:24:40.200, Speaker B: If you haven't seen it before, though, you probably have. There's also a cool project storing New York City data on Filecoin, so you can check out the blog post for that. But the ultimate guide to some inspiration is probably Joanne Bennet and sorry if I said your name wrong, Joanne, I'm blaming the Australian accent. This YouTube are so many amazing projects in there. I really encourage you to go and have a look at that if you need some more inspiration for any of your projects as well. So we've already minted these, so I don't need to tell you again, but if you haven't already, feel free to go and mint one there's some resources to take this to the next level. I think Discordion is probably posting a few things about that in the chat here.
00:24:40.200 - 00:25:06.058, Speaker B: I know there's some questions, so maybe I might throw to them now as well. But yeah, heaps of links here. Check out our grants and opportunities. There's also an $8,000 prize pool for this NFT hack. So I'm super looking forward to what you all create. Let your imagination go wild and see what happens. I can't wait to see our next and otherwise.
00:25:06.058 - 00:25:18.418, Speaker B: Thank you and happy building. I'm developer ali thank you. It meant a lot. Sorry. Not sorry. All righty, that's it from me. I think we probably have some questions.
00:25:18.418 - 00:25:19.426, Speaker B: Do we?
00:25:19.608 - 00:25:44.410, Speaker C: Yeah, if we do, I can read one question out if we have time. And if anyone has any other questions you'd like Ali to ask, please ask them now. And I know I'm going to pronounce this wrong and I'm sorry, but it's Dimitridge. How do you manage to automate the Uri handling for each NFT? Example, if you have 100 NFTs, then you need to put the Uri of each NFT.
00:25:46.430 - 00:25:55.520, Speaker B: Yes. How do you automate that? I'm not exactly sure what the question is asking, to be honest.
00:25:56.290 - 00:25:58.510, Speaker C: I was hoping you would. I wasn't.
00:26:00.690 - 00:26:01.790, Speaker B: Maybe I can explain.
00:26:01.860 - 00:26:02.814, Speaker D: Do you hear me?
00:26:02.932 - 00:26:04.570, Speaker B: Yeah. Hi, Dimitri.
00:26:04.650 - 00:26:17.330, Speaker D: Yeah, hi. So basically when you have like, let's say you want to mint and you have a certain number of NFTs, like 100 NFTs, that can be minted, right? Each NFT would get its own URL.
00:26:17.410 - 00:26:24.600, Speaker B: Right. So are you saying how do you automate calling that from the front end contract from the front end of your DAP, for example?
00:26:25.850 - 00:27:03.060, Speaker D: No, basically, first of all, you deploy NFTs, like in images and you get a IPFS Uri, like the Identifier for each NFT. And now when somebody is minting, you need to connect the token ID with the Uri. So basically OpenSeas knows which token points to which Uri because they're all like, unique. But when you have 100 NFTs, you have 100 unique Uri keys. So you kind of have to put them automatically when you mince and how does it work.
00:27:03.990 - 00:27:26.620, Speaker B: So this is more of an architecture question of how you would set that up. And there's probably a number of different ways to go. I have to admit that I am probably not the best person to tell you what the kind of best practice is here, but I will definitely get back to you on that one. Maybe also, Discordion, did you have a comment on how you would do that?
00:27:28.590 - 00:27:45.710, Speaker C: Yeah, I guess probably honestly best to ask Pan who made the flow. Wow. Tutorial and demo. But I guess I just don't fully understand the problem, I guess because I probably haven't worked enough with smart contracts in the blockchain.
00:27:46.610 - 00:28:19.594, Speaker B: Yeah, I think so. The problem is you want to mint this whole collection all at once. How would you automate doing that. It really would just have to probably come from like a file or something similar to that. It looks like David's got a few answers in the chat there too and has a bit of knowledge on that, but I'd actually encourage you to ask that question in maybe our IPFS discord as well. There's definitely people that are working with much higher level NFT projects than I just showed you that could definitely give you some best practices around that as well. So definitely a great question that I am now going to have to go and find the answer to as well.
00:28:19.594 - 00:28:21.200, Speaker B: So thank you for asking that.
00:28:21.890 - 00:28:24.650, Speaker D: Thank you for your answer. I will check out the discord.
00:28:24.810 - 00:29:00.338, Speaker B: Awesome. All righty. I think yeah, and Pan is definitely a great person to ask as well. Thanks for mentioning that discordian. So I think if that's everything is it luke? So my repo is free to use. You can copy it, it's open publicly, do whatever you like with it. That's what I make these demos for.
00:29:00.338 - 00:29:22.382, Speaker B: I want to make it easy for you to use anything and build on it and build your own ideas into it. So I'm not going to say it's perfect. I did kind of hack this together in a few days, so hope don't take it as the gospel of best practice, but there's definitely some great way to get started. Go ahead and use it now.
00:29:22.436 - 00:29:42.514, Speaker A: That is the true spirit of NFT hack right there. Thank you, Ali. Thank you, Discordian, for such a great session tonight. Thank you for everyone who's joining us. Sorry, morning. What am I saying? I know where you are in the world. Excited to see everyone and we have another great day of hacking and content scheduled for you tomorrow.
00:29:42.514 - 00:29:59.014, Speaker A: So hoping to see all of you again. Right back here, I guess, online. What am I saying? But it's going to be a great Saturday. Thank you to everyone who joined us tonight. We are going to be ending the session here. Remember to follow up in the discord to continue the conversation. Highly recommend doing that.
00:29:59.014 - 00:30:04.590, Speaker A: And yeah, that's it. Good morning, good afternoon and good night.
00:30:04.740 - 00:30:10.010, Speaker B: Thank you for having me. First present. Bye.
