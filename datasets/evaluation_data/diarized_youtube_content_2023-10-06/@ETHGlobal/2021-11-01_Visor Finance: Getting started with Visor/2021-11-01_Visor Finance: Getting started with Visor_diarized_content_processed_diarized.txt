00:00:00.250 - 00:00:01.680, Speaker A: To kick the session off.
00:00:05.490 - 00:00:07.920, Speaker B: Okay, great. Let me just share my screen here.
00:00:10.290 - 00:00:10.702, Speaker A: Okay.
00:00:10.756 - 00:00:11.600, Speaker B: All good?
00:00:14.210 - 00:00:14.960, Speaker A: Perfect.
00:00:15.970 - 00:00:43.850, Speaker B: Okay. Hey, guys. I'm miles from Pfizer Finance. A D Five protocol for active liquidity management. Uniswap B Three was release was released on March 23, 2021 and went live. Later in May, they developed Unisoft V Three, which offers significant improvements for liquidity providers. The most remarkable improvement was the development of concentrated liquidity.
00:00:43.850 - 00:01:47.642, Speaker B: By providing concentrated liquidity, LPs can provide the same liquidity depth as UNISOT V Two within specified price ranges while putting far less capital at risk. Instead of having to provide liquidity within an infinite price range, LPs can increase their capital efficiency by placing liquidity within a custom or concentrated price range. This is a uniswap V Two infinite price range that's applied to each pair. And this is Unisop V Three custom price range, where LPs can concentrate their capital within custom price ranges, providing greater amounts of liquidity within a price range. In doing so, LPs construct individualized price curves. And here it is again. So in Unisop V Two, LPs only earn fees on a small portion of their capital which can fail to appropriately compensate for the price risk, also known as impermanent loss they take by holding large inventories in both tokens.
00:01:47.642 - 00:02:54.606, Speaker B: Additionally, traders are often subject to high degrees of slippage as liquidity is spread thin across all price ranges. In V Three, LPs can concentrate their capital within custom price ranges, providing greater amounts of liquidity at desired prices. So here we compare two positions, one in Unisop V Two and another in unison V three. These two positions will earn equal fees and perform identically, while the price remains between one $200 and $2,800. Furthermore, in order to capture the same amount of fees, the LP on Unisoft V Three only has to provide $150,000 into the pair, whereas on V Two, the LP would have to provide $785,000. This demonstrates a capital efficiency improvement of more than five X. But with these unisoft V Three LP NFTs, there's a significant barrier to being an LP.
00:02:54.606 - 00:04:03.020, Speaker B: On unisoft V three, providing liquidity is cost prohibitive and time intensive. For D Five participants on Unisoft V three, this is because an LP has to mint an NFT for each LP position, which means when an LP wants to change the price range they provide liquidity for, they have to withdraw the assets and mint a new NFT each time. That's why we created Visor. And Visor aims to solve these challenges by serving as an active manager on V Three. So what we've done is created this periphery contract around uniswap core contracts, which enables a strategy deployment which are responsive to volatile prices and serve to generate the highest yield on both correlated and uncorrelated pairs. Positions can better stay within range since we do not use the NFT minting to change ranges, but instead have developed periphery contracts. Because of this, liquidity provision now has a range of complex strategies that can be applied to positions resembling a traditional market structure and new financial products.
00:04:03.020 - 00:04:52.278, Speaker B: So Visor is the protocol venue that allows for the deposit of assets and management of these new liquidity positions. This is the Visor Web app which allows LPs to deposit assets into our managed positions. Visor allows a strategy to be applied to positions on a liquidity provider's behalf to maximize fee return and stay within range. And with Visor, anybody can create their own strategy. And we built this active management strategy framework which Simon will go over in the next part. So you can write your own strategy, simulate it and then deploy it for LPs to subscribe to. And I'll just go over the prizes.
00:04:52.278 - 00:05:35.400, Speaker B: So Visor has three categories for prizes. The first place in each category will receive $1,500 and runner up will receive 1000. We will also be awarding the strategies that are created in the hackathon an additional 10,000 up to an additional 10,000 in grants. So the first category is Unisop B three LP strategy construction. And the second strategy is unisop v three tooling category. Sorry. And the third category is the most novel use integration of Unisop V Three.
00:05:35.400 - 00:05:50.720, Speaker B: So that is it for this first part and Simon will go over the technical details. But if you have any questions, we'll be in the ETH Global Discord. So I'll stop share my.
00:06:01.720 - 00:06:02.470, Speaker A: Hello.
00:06:03.000 - 00:06:03.750, Speaker B: Hello.
00:06:04.200 - 00:07:14.200, Speaker A: Simon here from Visor and I'll be going over a more technical overview of our hypervisor. Like Miles mentioned, we'll be available on the ETH Global Discord in case you have any follow up questions or want to get some feedback on something. So in this presentation, I'll be going over these three main topics. First, just an overall high level description of the concepts behind the hypervisor and its three main functionalities which are depositing, withdrawing and rebalancing Lt positions. Then I'll go a little bit deeper into how the hypervisor functions work. And finally, I'll provide a short introduction to our active strategy framework so that anybody that's participating in the hackathon could get a little bit of a start in developing strategies for gamma. So like Miles said before, what is a hypervisor? A hypervisor is our periphery contract around uniswap LP positions that allows for many participants to pool their assets together and for them to be managed by a single strategy that is professionally developed.
00:07:14.200 - 00:08:11.996, Speaker A: We deploy these hypervisors to manage the concentrated liquidity provision of a Uniswap V Three pair. And a hypervisor has to be deployed for each pool. Basically, a pool is an asset pair and a fee tier combination. These allow the strategies to be executed with the liquidity for many LPs, which allows for gas saving costs, allowing for more active strategies to be deployed. And we also deploy private hypervisors for protocols and dows that want to manage their own liquidity more efficiently and with different objectives perhaps. So the first functionality that we want to describe is simply how the deposits work. Anybody who signs up through our Visor Web app can deposit assets to our hypervisor managed LP position.
00:08:11.996 - 00:09:05.608, Speaker A: And what we allow is for potentially single sided deposits. So you have to deposit one of the tokens. You may choose to only deposit one of them, so the second one is optional. But if you do, you can deploy them in the ratio that represents the uniswap B three LP position. And in exchange you receive an ERC 20 receipt token that represents your share of the whole position in the Pool. And remember that a Pool is determined by an asset pair and a fee tier. When you deposit your assets, you receive the ERC 20 LP tokens in an NFT vault that is deployed through our web app that represents your share of the assets.
00:09:05.608 - 00:10:26.060, Speaker A: And this NFT vault holds all of the ERC 20s for the different LP positions that Visor manages. Therefore, we make the uniswap V three positions that are non fungible and each user must have their own NFT representing them. We make them fungible and represented by an ERC 20 that is easily tradable and represents a fungible position. The second functionality that we want to introduce is the withdrawal. When you withdraw, what you do is that ERC 20 LP received token that you received and sits in your Visor NFD vault. You burn it or basically return it to the hypervisor contract and in return you get both tokens in the share that they are currently deployed in the LP position. So while you can deposit single sided withdrawals are necessarily two sided, basically in whatever ratio they are currently placed in the LP position, it's important to note that these can be partial.
00:10:26.060 - 00:11:21.900, Speaker A: You can deposit a large amount and then withdraw in smaller chunks or fully as you decide. And these withdrawals are initiated through our web app. Or if you're interested, you could do it directly through contracts. And then how does the ratio that you get the assets back is determined? It's basically by what happens in the price of the Uniswap Pool. If there's a lot of swaps that put in a lot of token A and withdraw a lot of token B. What would happen is that when you withdraw, you get a lot of the token that gets put into the Pool. And so your ownership is a fractional representation of whatever the Pool as a whole contains.
00:11:21.900 - 00:12:49.400, Speaker A: And finally, I'm going to talk to you briefly about one of the key parts of the hypervisor, which is that rebalance when the hypervisors place two positions whenever one is initiated. And basically we place what we call a base position, which contains both types of tokens and necessarily includes the current price in the Pool somewhere in there. And then what we call a limit position, which is a single sided position that is with whatever token wasn't able to be placed. Basically the base position puts in as much of both tokens as it can and then there's typically one of the two tokens left over and then that is placed in a limit position. The way this is done in order to make sure that all liquidity that is possible to be deployed gets deployed. And this also allows us to automatically rebalance the position to get into a healthier ratio of the two tokens and that we don't get too concentrated in one of the two tokens while doing this, while earning fees rather than swapping them and paying fees. So this generates further income for the LP positions and our hypervisor users.
00:12:49.400 - 00:13:59.232, Speaker A: So whenever rebalance is triggered, as you can see by that vertical line, that's called rebalance point, basically the position ranges get moved. And it could be the case you can see here that the limit position is still at the top and the base position is still at the bottom. It could be the case that because of the price action that happened or because of deposits from LPs, these could get put in in a different order. But this is the main strategy of the hypervisor. And what we'll describe in the Active Strategy framework part is what flexibility you have in terms of choosing these. So one main thing to notice is that the rebalance functions are only callable by a supervisor account designated by the deployer and this rebalance function is what modifies the LP positions. We are able to plug this into an endpoint and our Active Strategy framework so that we can implement any strategy and make this hands off.
00:13:59.232 - 00:15:11.080, Speaker A: And Automated Gamma Strategies, which is a research arm funded by Visor, researches and implements these strategies through that off chain endpoint that I mentioned. And this allows for hypervigilance in terms of making sure that the strategy is always in range and risk mitigation for when there are violent moves in price. So let me enter into the more technical description of our hypervisor periphery contract. I'll first describe the overall flow of the interactions that users can take with our hypervisor. Basically, if we start here, you can see that liquidity providers, or what we call anybody who deposits into our hypervisors, how does their journey looks like? Basically, you must first mint the NFT vault which is separate from the hypervisor LP NFT. It's not related to that. It's our vault where we allow users to hold all of the hypervisor LP, ERC, 20 tokens in one place.
00:15:11.080 - 00:16:41.488, Speaker A: And so you first have to mint this NFT and it's associated with the account where you decided to provide your liquidity. And then you can choose to deposit, which is that deposit first function that we saw when we're describing the hypervisor. And as you may remember, you can deposit either single sided or both tokens from your wallet and then these go through your NFT vault and then these get deposited into a hypervisor that remember, is specific to one uni v Three pool defined as a pair of tokens or a fee tier. And when this hypervisor receives your tokens, it issues ERC 20 received tokens that sit in your NFT vault. And then when a rebalance is called, these are transferred into the Univ Three pool and deployed as liquidity provision. So what are the steps that go into a rebalance? And you could see this in detail in our hypervisor contract which is both available in Visor's GitHub and is a verified contract on etherscan for each one of our pools. Basically, when a rebalance is called, first of all, all of the liquidity in the position is burned and fees are collected.
00:16:41.488 - 00:18:08.812, Speaker A: This makes sure that all of the assets that were deployed into the contract into the Uniswap V Three pool and the fees that have been earned are collected back into the hypervisor periphery contract in order to both rebalance remove the changes, but also automatically compound the fees that have been collected. We have an optional swap functionality in case there is some need to, but remember that we typically prefer for the limited positions to be used in order to rebalance the LP position into a more healthy in between range. And finally, after the fees are collected, the liquidity is burned and you may choose to do a swap liquidity is minted into the new position by calling the Uniswap B Three pool mint functionality. Then the third part in the typical user journey is withdraw. Where a user calls withdraw from the Visor web app interacting with their NFT vault and the specific hypervisor they have LP to. And then what occurs is that liquidity from the Uniswap V Three pool is burned and the tokens are returned to the hypervisor contract. These in turn are returned to your NFT vault and finally back into your wallet.
00:18:08.812 - 00:19:32.912, Speaker A: So these are the three main functions that users are typically exposed to and defines the overall hypervisor journey. So in case for users, for hackathon participants that want to get into the little the nitty gritty of how our hypervisor works, I will briefly describe the parameters for the main three functionalities that we've been talking through this talk. Basically, the deposit function is very simple. You have to send the units of each token that you're depositing with the right decimals that the ERC 20 that underlies it requires. And you finally choose the two address where the ERC 20 tokens are minted towards. Typically most users use our NFT vaults to interact with, but if you are building a more enterprise B Two B product, it could be the case that you plug this into a Gnosis vault or something else. And so our hypervisor contracts have flexibility to either use our NFT vault periphery or to mint these ERC 20s directly.
00:19:32.912 - 00:20:30.110, Speaker A: And there are some constraints. For example, we require some deposit to actually occur. We have some maximum deposit thresholds in order to ensure safety in terms of economic arbitrage that could occur in case the hypervisors represent a very large share of the overall vault and we don't allow for anything that gets deposited to be accidentally burned to the zero contract. Second, I will describe the withdrawal function. The withdrawal function is basically what you expect here. What you do is you return the, ERC, 20 tokens that were minted here towards the two address. And these represent the basically amounts of shares that you have of the overall LP position.
00:20:30.110 - 00:21:43.508, Speaker A: And here you tell where the returned tokens should be sent to, allowing a little bit more functionality and a little bit more flexibility as well. And there are some other constraints that are not that important. And then finally I will describe the rebalance function basically. However, please be aware that these are only open to a supervisor role in order to make sure that our users are safe and not anybody can interact with the contract. But this is determined at launch and we interact with these mostly through an endpoint that is plugged into our active strategy framework. So the main parameters that the rebalance function takes are the ticks of the two positions that we described before, the base position that typically has both tokens. So this is the lower end of the tick and the tick of the lower end of that position and the tick of the upper end of that position.
00:21:43.508 - 00:22:48.036, Speaker A: We then have the ticks of the lower part of the limit position and the lower part of the upper position. Note that these can overlap or be really in any relevant combination. What's important is to make sure that before you call the rebalance you are aware of which token is going to end up there by determining of which one you have more value or of which one you could place the liquidity. And that logic is already coded into our active strategy framework. Finally, few recipient make sure that the hypervisor which visor takes a 10% cut of the fees that are earned in each hypervisor and returns it to our stakers people who own visor and stake it into the protocol. And this makes sure that it tells you which address you receive it. And in case you choose to swap this swap quantity parameter, executes these swaps.
00:22:48.036 - 00:23:56.040, Speaker A: If it's positive it'll basically swap token zero for token one and if negative it goes in the other direction. Please make sure to be careful to use the decimals of the tokens appropriately. So these are the three main functions and we're going to now describe the active strategy framework in the last five minutes that we have. So we have built the first open source uniswap V three strategy simulator and it's freely available in Gamma Strategies GitHub account. We have used it to study active strategies of uniswap V three LP management in order to simulate and also to actively implement these through our endpoint. It's important to note that we call these active Strategies because they're placed over a smaller range than the Uniswap V two range of zero to infinity. And by virtue of their concentration, they are exposed to more risk, to more risk of impermanent loss and to being out of range if the price moves beyond the limit.
00:23:56.040 - 00:25:02.736, Speaker A: And when you're out of range, you don't earn any fees and so your capital is deployed without returning any yield. And so these characteristics imply that they require constant oversight and some predictive ability in order to optimize the risk reward tradeoff. And that's what Gamma Strategies focuses on. There are three main scripts in the Active Strategy framework, GitHub Repo, which will make sure to share and it's freely available if you just on GitHub find Gamma Strategies and the three main files are get pool data and it downloads the necessary data from several sources. So first of all, the price data is collected from Bitquery IO, which is pretty good because it provides historical data for free. You need to get an API key, but it doesn't come at a cost. All of the swaps that have occurred in the pool that you're studying, these are downloaded from the Uniswap B Three subgraph.
00:25:02.736 - 00:26:04.372, Speaker A: And finally, how much liquidity there is in the pool at any given point in time. This is downloaded from Flipsight Crypto and you need to set up a query for each pool that you need to simulate, but I believe that they're trying to make sure that that goes automated. The second relevant file is what we call the Active Strategy Framework and it is the main framework that runs the strategy for simulations or when a live strategy is being implemented. What it does is generate the data series for the simulations and has functions for kind of preparing and massaging the data that is necessary for the simulation. And finally, you have the specific strategy file. In this case, I'm talking about the Autoregressive strategy. But basically what's in here is what a hackathon participant would mostly need to modify, which are the two main functions that implement an active strategy.
00:26:04.372 - 00:26:52.520, Speaker A: And we'll talk about it soon. And let me tell you what these two main functions are. Basically, it is the set position function and the check position function. Basically, when you deposit into an LP position and you add these assets, the main key point first is to set the position. And that's where you calculate the four parameters for the hypervisor. Here in this set position, you must make sure you choose these four parameters according to whatever it is, the criteria that you need. For example, the Autoregressive strategy that we're using as an example here uses historical data and econometric models.
00:26:52.520 - 00:27:44.376, Speaker A: Then the SLP position is deployed and we make sure to check the position. This position is checked with some frequency, depending on our endpoint parameters, but at least every 30 seconds. And there we choose whether or not to rebalance if certain conditions are met. And therefore it is a key step to effectively check your position because that makes sure that your risk is not too large or that you're not out of position. And then finally, people may choose to withdraw. Okay, and so what are some of the choices that you may have when you are setting your position? You may use data from the past. Prices are typically some of the most common ways.
00:27:44.376 - 00:28:40.904, Speaker A: Like you could look at the distribution of prior price changes. Bollinger bands are pretty common. Time series forecasting is also used typically as well as machine learning algorithms. In order to predict where prices are going in this step, you must choose, like I mentioned before, ranges for both the base and limit positions. And therefore when you choose those, there is a center that is implicit in the base position and this center can be informed from price predictions to improve performance, both to make sure that you're in range a longer time and to lower impermanent loss. Finally, in the check position step, like I mentioned before, there are many decisions rule that could be implemented as part of this step. It could be make sure you implement rebalance every end period of time.
00:28:40.904 - 00:29:35.144, Speaker A: It could be, depending on the market context, if the price has moved 20% close to the end of my base or limit positions, I'll make sure to wear a balance. It could be a mix of both. It could be something more advanced, like if volatility increases a lot, I'll widen. If volatility decreases relative to the last time I rebalance, I'll narrow. And so it's important to just take a little bit of a second to make sure that everybody understands that rebalance step is really important because this is where impermanent loss is locked in. So the way that we think about it, this is a plot of how impermanent loss looks for an LP position. And so imagine this is an ETH USDC pair and on the x axis we have what is the ETH price? And then on the Y axis we display how much you have, quote unquote, loss due to impermanent loss.
00:29:35.144 - 00:30:36.864, Speaker A: And that is basically how much more the value of your position would have been had you just held the two assets rather than deployed them in the position. Imagine that you started the position when the price was 2000. If the price increases, basically you would have had $50 more if you had been outside of the LP position than if you had been in. But it's important to note that this does not include fees and this is why active management positions are key. When you include fees, this curve will move up. And so what we want to make sure is that whenever we rebalance is places such that the impermanent loss has been compensated by the fees that have been earned and basically by the risk that our LPs have been exposed to. This is the end of our talk.
00:30:36.864 - 00:30:41.330, Speaker A: And now we'll open the stage for some questions. Thank you very much.
00:30:52.650 - 00:31:40.290, Speaker C: And this is Andrew from ETH Global. Also, if there's no immediate questions at the moment, as Miles and Simon said, they will both be in the Visor Finance Discord channel in the ETH Global in the Unicode hackathon server. So I encourage everybody to like, if they want to reach out, to do it in Discord. Doesn't look like there's any questions at the yeah, I'd like to thank both of our presenters today, Simon and Miles. That was an awesome presentation. This is also recorded on the East Global YouTube so people can use it later as a resource.
00:31:40.870 - 00:31:42.162, Speaker B: Thanks for having us.
00:31:42.296 - 00:31:44.960, Speaker C: All right, thanks, guys, and we'll see you out there.
