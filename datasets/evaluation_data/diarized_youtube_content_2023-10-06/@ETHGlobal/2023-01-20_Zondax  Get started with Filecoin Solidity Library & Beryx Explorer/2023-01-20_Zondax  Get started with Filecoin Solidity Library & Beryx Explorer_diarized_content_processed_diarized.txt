00:00:19.630 - 00:00:24.900, Speaker A: Hey, everyone. Just going to wait a couple seconds for the stream to go live on YouTube before we get started.
00:00:31.130 - 00:00:31.702, Speaker B: All right.
00:00:31.756 - 00:00:54.050, Speaker A: Good morning, good afternoon, good evening. Depending on where you're calling from, we have Emmanuel and Juan here from Londax, who's going to do a workshop on Get Started with File Point, Solidity Library and Barracks Explorer. If you have any questions, feel free to send them into the Zoom Chat, and our speakers will be more than happy to answer them. And with that being said, I will pass the mic off to our two speakers.
00:00:55.190 - 00:01:29.600, Speaker B: Okay. I will start, and I will manage the presentation, the slides. So, first of all, thank you all for being here. And we are Emmanuel and Joan from Sundax. I will share my screen so you can start with the presentation. And I think now you're looking at my screen, so everything should be ready to start. So I want to introduce us as a company first, because we are a bunch of people that we are distributed around the world.
00:01:29.600 - 00:02:22.880, Speaker B: This is part of the team that we have a meeting in place some time ago. We are a company that we work with different we work in the blockchain consistent from the last four or five years. We are actually working in really innovative tech solutions for the blockchain system. And we have a partner with Filecoin for the last three or four years, really close partnership. So we have built a lot of tools for the Filecoin ecosystem. And today we are going to talk about two of them, two or three of them that are really specific for this hackathon. And I want to go straight forward to them.
00:02:22.880 - 00:03:22.340, Speaker B: We have three tools to talk about them today, and they are like two groups. They're divided in two groups. One of them is a solidity set of solidity libraries that we will see what they are for in the next slides, but they're really specific or related with your smart contracts and your code, the way that you can interact with Falcon from your smart contract. The other one is a protocol barix that will allow you to see the historical data on the blockchain. So anything you do or even interactive with an API. So anything you do with your smart contracts or accounts, anything that's happening behind the scenes in the Falcon blockchain, you will be able to see and interact with them from this specific product. I'm going to talk about the solidity libraries, and Joanne is going to talk about the Berks product.
00:03:22.340 - 00:04:36.706, Speaker B: So I will start with the solidity libraries. This tool is really specific for developers and what they are. There are a set of libraries of solidity libraries. What I meant with that is function and types that will allow you to interact with the filecoin futures from the solidity smart contracts that you're writing. If you don't have these libraries, you would need to do everything by your own understanding how to call the file connectors, the filecon functionality from your Solidity smart contract. So we have created a lot of functions on top of, on Solidity that models all the types and the methods that all the actors in the filecoin network have. So for us, for you, it's just going to be a matter of importing this package and using all the methods that you can find on the documentation, the FICON documentation about the actor.
00:04:36.706 - 00:06:14.082, Speaker B: So if you want to interact with some minor actor with the market to see deals, to create a deal, you are going to to do it really easy because everything is solidical so you can see what is happening and understand the types and match that with the Falcons documentation. So it was conceived to be easy to understand, to use and deploy and what I mean with this easy to understand because it's solidity and there is a really close relationship between the data types and the methods and the method names between the library and the Ficoin actors. So if you check the documentation for the FICO actors, you will be able to understand what those methods and types are and do it's easy to use because as we are going to speak in a minute, there is an NPM package. So you can import it on your Smart and your IDE on your Developer Tool Remix and just importing it. You will get all the contracts and you will be able to consume them and it's easy to deploy because they are libraries, they are not contracts so they are completely embeddable. So it's going to be part of your smart contract when you compile them. So there's no need to pre deploy them and interact with them through an address in the blockchain.
00:06:14.082 - 00:07:01.986, Speaker B: So that's the main three points that we tried to focus on when we were trying to develop the libraries. As I mentioned before, we have an NPM package, it's called Filcon Solidity. As you can see there in the images at filconsolidity, it has the entire set of libraries. And you will see that there is some test libraries, the libraries itself, the types, and there is some mocks libraries that don't do anything specific with the falcon network, with the real falcon network. But they have some mock scenarios depending on what you pass to them. But you will find everything there in the package. We handle the version, I mean it's easier to handle version than updates because we are using Sember standards.
00:07:01.986 - 00:07:49.602, Speaker B: So breaking change, new features and patches. It's going to be easy to see what is happening when we release a new version and it's perfect for developers because as you might know, it's easy to use them, as I mentioned before, from Hardware Remix, it's just a matter of naming them on your smart contract code and Remix will fetch the package itself for you. And that's what I have to tell you about the solidity library. We will try to make a go through the library at the end of the presentation, but I will pass the microphone for Yon. Jan is going to tell you about the Verix API.
00:07:49.746 - 00:08:15.440, Speaker C: Thank you, everyone. Thank you, Emmanuel. I'm Juan and I'm going to talk about Verix. So, Verix. I will explain two parts. One is the API, the other one is the Explorer. What is the API? So varix API indexes behind and exposes it through the API, the filecoin data, historical and real time.
00:08:15.440 - 00:08:45.714, Speaker C: Next slide, please. MRL. What can varix API do? It provides information like transactions, account information, fees, addresses and stiff sets. Next slide, please. Where you can find it? You can find it at Docs ch barracks or just go to Docs and you'll find it there. We will go through all of these. At the end, there are two steps.
00:08:45.714 - 00:09:22.340, Speaker C: You have to get a free token and of course, you must have a GitHub account first, and then you can test it right here. On top of that, for developers, we have an NPM package that has the same benefits as the API, and it's in TypeScript perfect for developers. Next slide, please. Okay. The explorer. The Explorer is a platform for developers like Blockchain Explorer that includes historical data, real time data streaming, and metrics for the polycom blockchain. Next slide, please.
00:09:22.340 - 00:09:53.150, Speaker C: What can you do besides searching like a normal Explorer does? Searching transactions, addresses, tipsets you can interact with the contracts. You can call, read and write methods and see their decoded API, float your own, see the bytecode, the op code. Of course, for the read and write, the write methods especially. You will need funds for that. And don't worry, we have a faucet, so you don't have to go outside. Come back in leanne. And you can connect with MetaMask.
00:09:53.150 - 00:10:29.034, Speaker C: We also have a memple view to check if your transaction got stuck, where it went through. And the network metrics are going to be the dashboard and they are going to come soon. SAP. Of course, you can find it at Derek Zondak Ch. Next slide, please. And it has a nice feature because during these weeks we will progressively add more features we would really appreciate if you can give us feedback. You can use the small tool on the right side.
00:10:29.034 - 00:10:55.300, Speaker C: It takes a screenshot. You can draw on it and write a message. And you can even ask for new features. If you need them urgently for your project, we will be happy to help. Thank you. Here is a summary of all the useful links. You can take a screenshot, take a picture, and I'm sure you will find this presentation after.
00:10:56.630 - 00:11:12.198, Speaker B: Yes, I mean, we can share the links. We can share the presentation and we can make it available for you. So you have the links and you can check them. Okay.
00:11:12.284 - 00:11:29.386, Speaker C: To contact us sorry. Yeah, you can contact us at hello? At zonax cho first the yes, yes.
00:11:29.568 - 00:12:01.910, Speaker B: We have a question. There is why is volleyball not supporting Barix? By default? We have moved to Hyperspace because Hyperspace is the long term testnet that was deployed like a week ago. That's why. But we are planning to add the wallaby again in the Verix Explorer because we had it in two or three weeks ago. So it's going to be there really soon. So I will stop sharing it's. Your turn, Jan.
00:12:06.850 - 00:12:10.020, Speaker C: Okay, I think it's all right. Can you see my.
00:12:12.150 - 00:12:13.570, Speaker B: Yes, yes, Jan.
00:12:14.150 - 00:12:49.466, Speaker C: Perfect. Okay, so we will go first with the API. See how you can get the key. So you'll have to go to Docs until you see Barix API or just type Docs. And here you can get the key, see the Docs and see the NPM package. Let's try to get a key. Okay, here you don't see it because I already have GitHub connected.
00:12:49.466 - 00:13:26.118, Speaker C: But you will have to have a GitHub account and accept perfectly. It redirects me back to the documentation when it pops up to appear with my token, don't forget to copy it. And in here you can test it. You can test all the endpoints, but make sure that in case it gives you a photo, one error. Make sure to replace this one in here with the new one and press Update. Okay, let's make a try. So let's choose the latest tipSet.
00:13:26.118 - 00:14:00.402, Speaker C: This is the easiest one for one, the same error. So in case this happens, you can go in here, delete it, take the one on top, paste it and update. Hopefully this time works perfect. Okay, so here you can see the latest tipSet information. The same with all the others, like account balance, info, transactions. Get all the transactions using from a tipSet or from an address. Good.
00:14:00.402 - 00:14:29.600, Speaker C: Let's move to the explorer. Here's the Explorer at Barracks Zone PH. And you can see on the left side all the tools we have. We have the Home, which is the search bar. We have the interact, we'll have the dashboard soon, and the mempool and the Faucet also is coming ASAP. On top, you can select the network hyperspace Mainet wallaby. As I said before.
00:14:29.600 - 00:14:44.740, Speaker C: Explain why we don't have Wallaby active yet. A search switch. The theme connect with your wallet. To connect with MetaMask, you will have to use Chrome for the moment.
00:14:46.150 - 00:14:46.658, Speaker B: Okay?
00:14:46.744 - 00:15:01.160, Speaker C: And here is the feedback tool. Please use it. Okay, let's make a test. We are here in hyperspace. You have three examples in case you don't know what to search. You're new and just want to check it out. Choose one of them.
00:15:01.160 - 00:15:38.850, Speaker C: If you go to tipSet, you'll see the tipSet information. And if you are a developer and want to see a bit more or more dev style, you can go here on top and enable the Dev mode. And you will see the exact response on the right side. You will be able to see the transactions. But first you have to choose one from the table below, like this one. And from this table, everything you see in blue is clickable and you can go inside it. For example, let's see this account.
00:15:38.850 - 00:16:07.550, Speaker C: This is the account information. All these transactions that came in and out. Perfect. Okay, now let's check the I have it here. Open the interact part. You can use both the PH type of address, kind and official. Check the contract, if it exists, if it's deployed, view it API bycode op code and playground.
00:16:07.550 - 00:16:41.240, Speaker C: Still some bugs to fix. In the playground. In the playground you can call the write and read methods and you'll get the response down here. Okay, let's see the mempool. This is the current mempool in the hyperspace. Okay, I just want to mention that the gray ones are applied to mempool, but I just kept them there so you can access it, so it doesn't disappear instantly. Okay, and that's it from my side.
00:16:43.870 - 00:17:02.650, Speaker B: Thank you. I will share my screen now. I will give you like a quick walkthrough. The repository. Let me share my screen again. So, do you see my screen, Joel?
00:17:03.970 - 00:17:04.766, Speaker C: Okay, perfect.
00:17:04.868 - 00:17:43.734, Speaker B: This is a repository. Sundax falcon solidity. As you can see here, there is a link to go to the web, to the docs web. And here you will find short description about it, an introduction about the technologies involved, some assumptions that we did when we created the library. And you will find here a lot of information about it. I mean, for mocks you will have all the methods that are mock on the libraries and that you can consume. Again, mocks are the same method interfaces that we have on the real library.
00:17:43.734 - 00:18:38.622, Speaker B: But we are not calling the actual file coin, the actual file actors. We are responding answering to your request with preloaded scenarios, depending on what you ask, what you send. And for the API you have a little description of how you can deploy, how you can use it. As you can see here, it's really short, it's really easy with an NPM package if you're using hard hat. It's just a matter of using yarn ad, importing them from the contracts and do a call. As you can see, you're more than welcome to invited to check the website. All the contracts are here in the contract B eight.
00:18:38.622 - 00:19:12.514, Speaker B: They are organized in a way that we have different versions for different solidity compilers. For now we are only using 0.8. I think it's one of the latest one. And as you can see here, you have a lot of solid libraries. There are these ones that say API, one for each actor that we have exposed on the library. If you go to the account API, as you can see here is a library. And you have three or two different, in this case two different methods.
00:19:12.514 - 00:20:30.138, Speaker B: This authenticate message and universal receiver hook and they have different parameters. These parameters are exactly the same representation or pretty close to the same representation that actors in the file call in the filecoin blockchain have. You can go to the types file that you will find there a lot of structs with the description with each field that these types has. As you can see here we are calling they're really straightforward functions, they're really simple because we are only serializing the data, sending the data to the actor, getting response, parsing it and giving it back to the insolidity code. Here you can find mocks. Those are again as I said before, it's the same signature for each method but we are not calling anything, we are just doing acting based on your arguments, giving you different answer and here you can find some tests. These are actual deployable contracts because as you can see here, they are contracts.
00:20:30.138 - 00:21:43.426, Speaker B: We're importing this case, the power API library and creating functions for each of those methods. So now you can call them from this contract that is going to be deployed or can be deployed on the network. What else can be useful to be displayed? What else? Here is the NPM package you saw before. This is the classic NPM JS registry. Okay? I displayed the documentation and lastly I want to show you this is Remix and I think you are seeing my screen here. This is a test smart contract I created in Remix. As you can see here, the only thing I did was to write that I want to get the market API library from the Sundax solidity contracts BA eight and create an smart contract where I am just creating functions.
00:21:43.426 - 00:23:06.942, Speaker B: That are public and I can call from the outset world and getting the response in this case for the get deal label with a deal ID and returning the label in this case and a string the same for the Git deal provider. It's being compiled at this moment with this version of the compiler and if you deploy it, as you can see here, I have two deployments here. I think we can try to do it. It will take some time because it will give me MetaMask here I get some funds before I can confirm it and now I have to wait for the creation. It will take like a minute because there are not many miners on the network so it takes more time than it usually takes in mainnet. But at the end you will have something like this you can execute here as you can see, the get delabel confirm it. I did it like one or two minutes ago and again we need to wait here for it but as you can see here it's just a matter of importing it or mentioning it on your smart contract and Remix will fetch the package directly from the Mpfjs.
00:23:06.942 - 00:24:00.994, Speaker B: That's why it's really easy to use it and again, for all the actors and methods that you see on the different actors. They are like an exact representation of the filecoin functionality, the native functionality. So if you check the filecoin documentation, you should find a better representation of what each actor does and its methods and everything else. I mean, for the Solid library, we are not doing anything special in that sense. Luca asked before if you can from here add some collateral to a new strategy or anything else. We have a lot of methods here. Some of them are commented, we are trying to comment them all.
00:24:00.994 - 00:24:55.926, Speaker B: So you have more information on the contract on the library itself. But for now, if okay, you can check the methods that you have there and what methods of different access you need in order to do what you want to do and see if in that sense it's possible to do it from a Solid smart contract or not. I know that there are a lot of examples or tools that Falcon is creating for you as examples using Heart and everything else. So we can point you to those examples and everything in the discord. And I think that's all for me too. I will leave like a couple, three or four minutes for any questions that I didn't see on the chat. If you have any, please feel free to write them there.
00:24:55.926 - 00:25:07.660, Speaker B: And thank you all for your time. It's been a nice experience to be here and explain you about these two amazing, three amazing tools that we have been working on.
00:25:09.390 - 00:25:13.020, Speaker A: Feel free to come off mute if you want to ask your question live as well.
00:25:15.970 - 00:25:21.960, Speaker B: Okay? No questions.
00:25:22.410 - 00:25:26.870, Speaker C: There is a question. If we have support on the global.
00:25:27.930 - 00:26:02.980, Speaker B: Discussion, yeah, we are going to be there as helping or answering questions there. So feel free to tag us there. We are going to be there and some others partners from the company. So feel free to tag us there and we will be able to answer you, us or any of the partners. All right.
00:26:06.390 - 00:26:07.940, Speaker A: I think you have a question.
00:26:08.950 - 00:27:16.010, Speaker B: How do you see respect people to use? I mean, what we expect here, we want you to use the tools. The libraries are a must if you want to interact with filecoin features from Solidity. They're a must because it's going to take a lot of time for you to discover how to call the precompiles that allows you to interact with the underlying filecoin blockchain. So it's a really helpful tool if you want to do that. I mean, that's the key feature of this Ethereum virtual machine running on top of Filecoin. It's Solidity taking advantage of the filecoin features that FalcoIn has and Explorer. I mean, it's a way for you to interact because you have kind of a remix section that you can fetch with an address and see the code abi and interact with it with your MetaMask run view and any other method change the state of your smart contract.
00:27:16.010 - 00:28:16.296, Speaker B: And at the same time, you can see the mempool and you can see what is happening in the network Mainet or in hybrid space all at the same place. So it's kind of like one of a kind tool because you have everything there. The only thing you don't have there is like an IDE to write your smart contracts, but maybe in the future. And the idea is for you to give us feedback because we know that maybe bugs can happen, I mean, will happen, and maybe futures that you want to have there in the very explorer too. And the API is for any developer that wants to integrate in an application, not for humans that do something you can use postman, but just for testing. And I think I hope I answered the question. All right.
00:28:16.296 - 00:28:28.716, Speaker B: I don't think if you have time to answer the last one, maybe we can continue on this corner. I'm not sure. I mean, minor type, feel free to.
00:28:28.738 - 00:28:30.156, Speaker A: Answer that last one.
00:28:30.338 - 00:29:21.320, Speaker B: Okay. Minor type has all the types, the structures that defines different methods. For the minor actor. For the minor actor, I mean, the minor actor is the one that is created when a new minor is deployed on the network. And if you want to know the characteristics, the features, the values that that minor has in the network, you can use it to fetch information about it. You need to pass the address of that specific miner that you want to interact with. And you will be able to see here, I'm looking at some functions here, getowner I think it will give you the owner of that minor.
00:29:21.320 - 00:30:14.910, Speaker B: You can get the sector size, the balance that it has, some funds, the beneficiary. I mean, again, this is pretty much related with the filecoin network and the documentation. So you won't find like a really big documentation about what is an actor inside the Solidity library because that's part of the file point network. But if you go to the five point documentation and check there, it will allow you to have a better representation, what is a minor on the network. And then you will be able to come back to the Solidity library, understand it better. We're working on adding more documentation on the solidity itself, but we don't want to be redundant between the Solidity library and filecoin documentation itself. But yeah.
00:30:14.910 - 00:30:23.664, Speaker B: Okay, I think we are ready. We're ready now. Awesome.
00:30:23.782 - 00:30:50.996, Speaker A: Yeah. Thank you, Emmanuel and Yuan, for taking the time to do this workshop for the space warp hackathon. Sincerely appreciate it. For the rest of you, thank you so much for tuning in. And as mentioned in the chat, if you do want to look back on this workshop, it is recorded and on YouTube. So you can access it at any time during the events afterwards as a resource. And with that being said, see you all on Discord and also see you at the kickoff.
00:30:50.996 - 00:30:54.600, Speaker A: And summit happening soon. Goodbye, everyone.
00:30:54.670 - 00:30:55.110, Speaker B: Thank you all.
