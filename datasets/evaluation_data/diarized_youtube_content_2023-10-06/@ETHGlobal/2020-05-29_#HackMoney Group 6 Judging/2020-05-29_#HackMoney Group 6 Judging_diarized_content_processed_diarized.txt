00:02:12.920 - 00:03:13.480, Speaker A: All right. Welcome, everybody, to Hack money judging day. I am Kartik, one of the co founders of ETH Global, and this is our day five and group number six of judging our DeFi hacks. So, for those of you who don't know on the live stream, hack Money is a hackathon organized by ETH Global. And for the past four weeks, over 350 hackers from 40 different countries and 15 different time zones work to create projects in the DFI ecosystem. We had people from all these amazing countries and over 40 mentors who helped out our hackers with anything from technical to product to marketing related challenges and feedback. And on top of that, we had all these amazing sponsors in the DeFi space who took out the time and gave their resources to help integrate all projects with a lot of their SDKs to really take the composability to the next level in this ecosystem.
00:03:13.480 - 00:03:47.704, Speaker A: So let me just say this again. We had over 350 hackers who spent four weeks working on projects. And as of Sunday night, with the submissions, I'm proud to announce that we had 118 D Five projects that were submitted for this hackathon. That is absolutely incredible. I can comfortably say that with this week alone, we've doubled the number of D five projects in the space. So for the next 2 hours, we're going to be looking at a lot of these projects. I want to just quickly walk through the logistics of how this call is going to go.
00:03:47.704 - 00:04:22.692, Speaker A: We'll have 14 teams that will come on stage and give out their demos, where these teams will have four minutes to demo what they've built. And we'll have three minutes for any feedback or questions from our judges. That gives seven minutes per team in total. And to make sure that we're minimizing all technical difficulties, we've asked all the teams to prerecord their demo, which they will be playing as they come on. So a quick overview of how the event was structured. The rules and criteria for this event were simple. We had a team you could work with a team of up to five members in total.
00:04:22.692 - 00:04:57.612, Speaker A: That didn't mean that you had to necessarily work with the team. People were allowed to work by themselves as well. And a lot of the hackers that we're going to see are also individual hacks. But they had to incorporate any DeFi primitive into their hack. That was one of the core criteria. And that every all code that you've seen at this event was written over the course of just the four weeks of the hackathon running. There were some cases where we made sure that somebody was able to also extend features to something they've already done, and we kind of had made those custom exceptions.
00:04:57.612 - 00:05:57.728, Speaker A: But overall, everything we'll see today was done over the course of the hackathon itself. In terms of how the judging is going to go, there's going to be five different categories that are going to be scoring these teams. And that is going to be how technical, original and practical their project is, along with, on the usability side, how easy is it to use from a UI or UX standpoint, and for developer tools, how abstraction is coming in handy for the intended audience. And of course, we also have a catch all category we call the wow factor, where anything that we've missed in the four categories above can be addressed. And I just want to remind everybody that this is not a competition. Our hackers are here to learn and share their excitement. They spend four weeks working on these really cool projects that they want to just anywhere from get feedback on to understand how people may use them or react them and how they can make them better.
00:05:57.728 - 00:06:46.220, Speaker A: And this is kind of where our judges are coming in and not everybody's trying to make this a business. We're not hoping that everything turns into a company or a big project. We want to keep this thing in the spirit of a hackathon and the goal is to keep on experimenting in this ecosystem. So I want to give a quick schedule for how this call is going to go. These are our 14 teams that will come on one by one, and after they get judged, the top teams will move on to our finale, which is this coming Tuesday from 02:00 p.m to 04:00 p.m., where we will have a set of special announcements around our prizes from our sponsors, but also a much bigger feedback session that combines all eight days worth of judging or nine days worth of judging that we've done throughout this entire week.
00:06:46.220 - 00:07:37.190, Speaker A: So everybody else on the live stream and the product crypto community can check out the top projects that came out of hack money. And doing the really hard job today are our three judges. Spencer Noon from BTC Capital, montevora from Saya, and Hart Lamber from Uma, who will be telling all of our sort of teams in terms of how they've done it and kind of sharing their excitement. And we're really thankful for them for giving us their time today on a Friday. And with that, I want to kick off with our very first demo for the day and I'd like to invite team Yield Hero to start sharing their demo. Please welcome them on Zoom and I'll ask our judges to turn on their cameras as well. And we'll kick off the demos today.
00:07:37.190 - 00:08:22.316, Speaker A: All right, here we go. Yield Hero is a one stop suite for managing your ave yield. Currently, we have two main features. The Swap Tokens button lets you easily swap your a tokens for other a tokens via a balancer pool and the Become a Yield Hero button lets you pledge your yield towards deserving biddlers in the Ethereum community. Let's take a closer look at each function. Swap Tokens before this feature was invented, swapping A tokens was a tedious process. You had to redeem your A token for its underlying asset.
00:08:22.316 - 00:09:15.490, Speaker A: In this case, Dai go to uniswap or One inch to swap for the asset you want, and finally deposit that asset back into Ave to get your A token. Now, with the balancer pool comprised of the six Ave, stablecoins swapping is as easy as clicking the swap button. Sometimes you can even discover arbitrage opportunities in the pool. Redirect Yield ave has an awesome feature that lets you redirect the yield on your A tokens in real time, sending a stream of money to the recipient wallet. However, during the hackathon, I discovered there was no easy interface for making this happen. Sounds like a good idea for a hack. Pledging your yield is as easy as selecting which A token you'd like to redirect, then selecting a name from the list.
00:09:15.490 - 00:09:59.600, Speaker A: You can even input a custom Ethereum address if your recipient isn't on the list. Once you've redirected yield, head over to the leaderboard to see your name on the list. Don't forget to click the Tweet It button to flex your philanthropy. As of this video, the A Token balancer pool has more than $6,000 in liquidity. However, due to extremely high transaction fees, pool utilization has been weak. I expect that more Atoken swaps will happen once transaction fees on the network go down. As of this video, over 36 ETH worth of yield has been pledged to six different open source creators.
00:09:59.600 - 00:10:54.930, Speaker A: Even though this hackathon is ending, I will continue to reach out to potential liquidity providers and grow the Atoken pool with greater and greater amounts of liquidity to foster easier swapping between Atokens. There have been also talks in the community discord of turning the pool into a smart pool controlled by a smart contract similar to Pidoub, so that may also be an option. As far as redirecting yield, I plan to reach out to larger organizations who have a vested interest in supporting the Ethereum community to redirect their yield towards open source creators. Hey, ETH Global, how about you guys lead the charge? Finally, I will continue researching new techniques in yield hacking and add them onto Yield Hero. In conclusion, this has been a great hackathon experience, and I look forward to joining many more hackathons in the future. Thanks for watching. Now ask me anything.
00:10:54.930 - 00:11:05.910, Speaker A: All right, cool. Hey guys, this is my co founder, Jesse And. Yeah, fire away.
00:11:08.940 - 00:11:19.640, Speaker B: Great presentation. By the way, I have a general question. What was the single biggest challenge that you faced while building this? Be it technical, non technical?
00:11:20.220 - 00:12:31.116, Speaker A: Yeah, that's a really good question. I guess from a technical perspective, it was some of the graph things that I had to learn how to do, like incorporating the Ave subgraph, and I even had to write a solidity contract to deal with to interact with their back end. But from like a project perspective, obviously onboarding people I tried to reach out and find as many open source biddlers as I could find and get their Ethereum addresses and their ENS domains and stuff. So once I got those people, then getting the actual other people to redirect their Ave yield towards them was also a challenge. So it's one thing to build a cool product, but to actually get people to start using it is definitely like the hardest thing. But I think I'm pretty happy how it went because I launched it probably, I think, ten days ago and we've already had quite a few redirects and quite a bit of liquidity in the pool, so I'm pretty happy how it went. By the way, big fan of SIA, my favorite.
00:12:31.116 - 00:12:36.980, Speaker A: That was the first coin that I ever traded in crypto, like four years ago, so very cool.
00:12:37.130 - 00:12:38.070, Speaker B: Thank you.
00:12:38.760 - 00:13:32.420, Speaker A: Hey, guys, I thought that was a great presentation. It was also pretty funny. So thanks for the comic relief. I'm curious, if you had more time to work on this, what features would you include and would you want to work on next? Yeah. For the redirect yield part. I really envision that as becoming not a competitor to Gitcoin and their way of doing that, but I think there's definitely a way to have a more social aspect where everyone can have their own profile and you can see who's redirecting to them, who they're redirecting to, and just a kind of way to build up the whole open source contribution and to give a place in the Ethereum community to have that kind of exchange. So that's definitely something I'm going to be continuing to work on, building out the social side of the yield hero.
00:13:32.420 - 00:14:17.328, Speaker A: Got it. Yeah. That's really cool. I mean, you can think of it kind of like reputation, right? Yeah, for sure. Daniel, question just on the redirect yield stuff, how do you claim, if I get yield redirected to me, do I have to do anything to claim it or what's that process look like? That's actually using the Ave backend and they have a function that allows me to do that. So basically it all gets updated live via their subgraph and as long as I'm constantly updating that it gets updated live. And later I can hook up web hooks and stuff and send people emails when they get new yield or I can do a lot of really cool things with notifications as well.
00:14:17.328 - 00:14:37.560, Speaker A: So that's something I plan to do. Hopefully even use the Ethereum push notification service. That was one of the hacks here, so I think that'll be really cool to be able to use that. Thanks guys. Anyway, I think we're almost okay now. Thank you guys so much and follow me on Twitter. Yield Hero.
00:14:37.560 - 00:15:14.460, Speaker A: Dan, Jesse, thank you so much for this awesome first demo. It's very entertaining and relaxing at the same time. And just to kind of point out for our livestream audience and also for everybody else on the call, these things are live and on main net so you can check out Yield Hero on yieldhero app. And with that, I would like to call up our second team, Contractor, to kick off with their demo. Please welcome Contractor. Hey, hello everyone. Share my screen for the video.
00:15:14.460 - 00:15:59.230, Speaker A: And welcome everyone. My name is Wesley Van Haye and I'm an independent tech and engineering lead. I'm happy to show you today my submission for the Hackmoney hackathon. For the past weeks I've been working on a tool called Contractor, which is a smart contract Explorer. It allows you to browse through common DeFi projects or any other verified smart contract. On Etoscan, you can find related smart contracts and different deployments on different networks. It helps you to visualize and interact with the contract resources and its state.
00:15:59.230 - 00:16:39.870, Speaker A: So why did I build this? It's specifically aimed at smart contracts, the definition and the interaction. So this is not another block explorer analytics tool. See it more as a swagger for smart contracts that really helps you to navigate and explore similar contacts on different networks. And of course, everything is open source and dependency free. Now let's dive into the demo. Starting here on the start page of my application, I've added a sample contract that you can search for. This is one that I deployed myself a few hours ago, mainly to display that any account address that is being showed resolves the ENS name of it.
00:16:39.870 - 00:17:30.156, Speaker A: Underneath that, you can see the definition of the smart contract itself. This one, of course, is still fairly simple, but let's explore a few other ones. For example, compound which have their governance contract. Over here you can see this is getting a lot more complex already, but every contract address that you see here immediately links to its own contract page as well. So for example, the time lock, it has a contract page. You can continue to navigate and explore other contracts related to it. So here again we see the admin relates back to smart contract and this way you can continue to click and explore related contracts that are linked to it.
00:17:30.156 - 00:18:25.932, Speaker A: I don't need that, of course, all the definitions and functions of that smart contract. Now let's look at another example. For example, Uniswap, who recently did their main net deployment. So right now you can see there are 342 pairs right now in the factory contract. But what does it look like on another contract on another network? Sorry, I'm going to connect my MetaMask here and switch to the cofound network. Going back to the factory contract, I can see here that there are 27 contracts and that allows you to easily check and test on these contracts on different networks. Of course, all the members are something that you can view and see the results of the same works.
00:18:25.932 - 00:19:14.524, Speaker A: Of course, for actual functions, let's say I want to execute this one MetaMask pops up in order to confirm assign my message. I'm going to skip that for now, but I guess you get the ID now here, from the logged in user, you can see as well that it resolves back my ENS name. That concludes the demo for now. So let's quickly go back to my presentation. For some of the future work, I still plan to support for unverified contracts that are being deployed by proxy or factory contracts, adding user and contract management so that you can keep track of your personal favorites and bookmark some of your contracts in your own dashboard. And to further decentralize the solution and host this on something like IPFS. That's it for now.
00:19:14.524 - 00:19:19.440, Speaker A: I'm looking forward to your feedback. Thanks for watching. Bye bye.
00:19:26.150 - 00:19:37.270, Speaker B: Thank you for the presentation. I think it's a really interesting tool for developers. I wasn't clear on what projects you use to build this solution.
00:19:39.770 - 00:19:40.950, Speaker A: Which projects?
00:19:43.210 - 00:19:46.070, Speaker B: What projects did you use to build this solution?
00:19:47.870 - 00:20:17.540, Speaker A: I've included or tried to include most of these contracts that are related to the DeFi projects and sponsors. So in there, I at least included Ave Compound, Uniswap, and ensure it can work or it work on any smart contract as long as I have the Abi. So I've linked it with verified sources on Etherscan as well, for example.
00:20:18.390 - 00:20:19.460, Speaker B: Got it.
00:20:20.790 - 00:21:10.786, Speaker A: Wesley, I think this seems like an amazingly useful tool and something that I wish existed, so thank you for building it. Two questions just quickly. Does it require you to do any work on your side to be able to read? Like, do you just need the Abi or do you need to process it in any way to make it work with contractor? It's just the abi. Indeed. Good documentation and coding standards, of course, help using proper naming for your functions, for your parameters. Makes it all easier, of course, to view the definition, but the UI can be generated just on the yeah, so this could be super useful for any contract you want to explore, is part of the idea here. Exactly.
00:21:10.786 - 00:22:07.320, Speaker A: And then separately, what gave you the motivation to build this? Was this a point of frustration you had in exploring and interacting with these contracts? Yeah, no, definitely. It was a lack of I don't think there's many tools or good tools, I guess, that exist for this. So it's one to really view the state, explore contracts, how they're linked together, but on the end, definitely as a developer as well, just see how something looks like. It also helps to explain other people, maybe less technical people, what a smart contract actually is and what it means and contains on certain points in time. Yeah, I think you did a great job. This is definitely a really cool tool. I've been frustrated, I think, like, you going through different websites and clicking through contracts, and it would be awesome to have something like this.
00:22:07.320 - 00:22:51.060, Speaker A: What do you think is the most underappreciated thing that you accomplished as you were building this project? I think it was mainly collecting all the different abis and contractors over different networks. I mean project their way of working of course deploying to different test networks. So gathering all together curating that list of Linked contracts was definitely took the most time. Got it? Yes. I think we're up. Yeah, thanks. Great feedback though.
00:22:51.060 - 00:22:59.062, Speaker A: Thanks. Glad to hear. Appreciate it. Hello everyone. Bye bye. Bye bye. Well, thank you so much.
00:22:59.062 - 00:23:26.762, Speaker A: And next up, we have our next team who are going to talk about their DeFi bot. Please welcome fabian from java DeFi bot. Hello, everyone. I will share my video. Everyone. I'm presenting to you the project Java d five bot. As the project name already tells you, this is a bot written in Java that used the Web Three library to make transactions in the DFI ecosystem.
00:23:26.762 - 00:24:26.270, Speaker A: It currently used the infuria API to connect to the Ethereum network and it is open source. I already started working on this project before the Hack Money hackathon started and used this opportunity to clean up the source code and get it ready for publication. What I worked on during the hackathon can be seen in the commit log. The goal of the Java DeFi bot is to do beneficial actions on the Ethereum blockchain for the DeFi ecosystem while earning a profit for the user. These actions include, for example, maintaining the DiePak, providing liquidity and liquidating under collateralized assets. You may ask what can the bot do? Currently, it sells Dionysus or Uniswap if the die price is above $1. It buys die on Oasis or Uniswap if the die price is below $1.
00:24:26.270 - 00:25:17.278, Speaker A: These actions add liquidity and help maintain the die back. The bot even earns interest on compound if there has been no market action for a while and this action is profitable. The Black Thursday showed that it might be beneficial to have a diversified range of keybare bots running. Therefore, the bot also bids on flip auctions if the auctions offer cheaper Ethereum than the market price. Let me show you the bot running for this demo. I anuminize the balances. If you use the bot for the first time on an address, it performs approval transactions on the dying web smart contracts.
00:25:17.278 - 00:26:06.130, Speaker A: For such a bot, it is very important to make sure nothing goes wrong. Therefore, it has certain inbuilt security features such as a cyclic breaker that stops transactions if too many failed in the last ten minutes. Or there is also a maximum gas price. There is an easy to use big decimal wrapper to handle smart contracts that you scale big integer numbers with 18 or 45 decimals. The handling of the gas price or the price feeds can also be an inspiration for other developers. The bots creates an extensive log that makes it easy to comprehend what is happening. Currently it is successful.
00:26:06.130 - 00:26:53.038, Speaker A: Currently it's a successfully TradeSmith die, but it looks a bit just like moving the capital value between die reps and F. The bot also does not very much if the die pack is off for a long time, which happened recently. I also integrated Travis, CI and Solarlint. This makes sure that Maven install always works, or that you can also see the code coverage and get information about code smells. Trading on OSS and Uniswap has been tested. Sometimes the transactions can fail because others have been faster. Sadly, I couldn't see the flip auctions yet live due to market circumstances.
00:26:53.038 - 00:27:35.360, Speaker A: You can see that I have lots of ideas on how to improve this bot in my list of feature ideas, but sadly I don't have enough time to implement them all. Thank you for your attention. Hello, everyone. Hey, how's it going? Great. Very cool. I love this idea. I think there's so many opportunities for arbitrage, right? When you have all these different pockets of liquidity out there.
00:27:35.360 - 00:28:53.540, Speaker A: I'm curious how defensible do you think something like this is over time, right? We're in the early days of DeFi. There's clearly people doing these arbitrages, but not too many. But in the future, I think we'll have a lot more. How do you see products like this kind of maintaining their edge as we move forward? That's a good question. I think it depends on what kind of arbitrage opportunity you are looking for. Which opportunity do you take? For example, I think if you had a look at the diet pack, then I might think that because the pack is off for such a long time that this opportunity might be always there. But of course, then you have problems with the S Volatility or in which other assets you are gotcha.
00:28:53.540 - 00:29:34.864, Speaker A: Fabian, I'll back up what Spencer was saying in that this is a very cool project and I think it highlights the money Legos aspect of DeFi. The fact that anybody can run these bots to extract these arbitrage opportunities. I think it's one of the coolest things you mentioned in your video. You have a long list of feature requests. I was kind of curious to hear from you. What are the top features you'd want to add to this next? I think the next thing I would care about the code quality. So making the code coverage higher so I make sure there's no bugs left.
00:29:34.864 - 00:30:07.730, Speaker A: And then of course, I would like to add that you can use Megadao to get Dai via ethereum, or that you also use Compound to get Ethereum in exchange for dai. And I think there's lots of adding new exchanges or think there is now also so many new projects here. So it's very interesting.
00:30:10.660 - 00:30:25.880, Speaker B: Cool. Curious if you've run this bot over a period of time and seen what kind of data points do you have, if any, in terms of how it's performed, what profit it's gotten, so on and so forth.
00:30:26.300 - 00:31:03.540, Speaker A: Yeah, so I rented for the last week and the performance always depends on mostly on the ethereum volatility because most of the time the assets or the value is in ethereum. And then it heavily depends on the ethereum performance. In the last week, I made around, I think, according to the statistics of my bot, around like 40 west dollars. I think my time is over. Thank you for your attention.
00:31:04.520 - 00:31:05.510, Speaker B: Thank you.
00:31:06.520 - 00:35:41.430, Speaker A: Awesome, well thank you and with that we are going to move on to our next project called Safe and they will be talking about this on top of over the video as a voiceover so I'll let them kick off hi everybody so we are safe, we did a chat to onboard people to crypto so let me play the video so the problem we are trying to tackle is that many people find it difficult to enter the world of crypto because it's full of words that people never heard about before and so the concept is a bit hard to grasp sometimes so we thought a chatbot interface to make it easier and people to learn at their own pace might be a good idea so also leveraging on DeFi to let people be onboarded with their own wallet and not letting their funds on centralized exchange so here we have already wallets first I want to hear what's ethereum and so yeah the idea is to save time and to reduce risks by educating people and to bring them also the basics of what we could call Mimology so all about cultural aspect of crypto that was but yeah so the onboarding is thought to be regarding how risk averse are the users there will be proposed different type of investments in DeFi protocols so there is a risk assessment that is being made and also enough education to inherent risks within the crypto space and explaining all the trade offs in term of risk and returns provided by these protocols so namely Adai so from AV and for some more risk averse people maybe some token sets as well and the onramp we chose to do it in stablecoin to avoid risk exposure again so we restricted it to some stable coins so that's the idea so helping users make informed decisions when it comes to investing in DeFi and while saving money at the same time we think already about extending it to social pooling and yeah we have some ideas we could not reach the point where we thought we would be at partly because of some unexpected problems we lost many stories in the chat yeah I'm up for your questions emerick as well.
00:35:49.740 - 00:36:23.030, Speaker B: Really interesting concept of implementing a chatbot for education in a lot of these onboarding sort of guides forms of education I think the biggest challenge is curating content curious to hear where you're sourcing that content from how you're segregating it and in terms of just the feedback I would keep it as concise as possible because this is a chat format. But yeah, curious to hear your process.
00:36:24.680 - 00:38:01.472, Speaker A: Yeah, so, an interesting one because we thought about our target groups first. There was dexblue released some market research that they did about who are the users of DeFi. And so that was always an arbitrage between how much content is too much, how many emojis are too much emojis because we found out that the DeFi users are mainly under 30. Obviously, the chat bot has to talk to you in a way that you can relate to. And that's a very challenging one because when you address users that already use DeFi who might refer it to their loved ones, who they cannot on board one by one, that's also the second target group that is targeted. So, yeah, the curation, of course, is happening on the long haul, being ourselves in crypto since a few years, we have time after time, gather some content, some storytelling. Alexis, just so, because we don't have much time left.
00:38:01.472 - 00:39:17.210, Speaker A: I mean, I'm a huge fan of the chatbot concept and I think you guys, I think it's very cool to see what drew you to this. Why did you want to pursue this chatbot idea? Because the interfaces of buying crypto are most of the time trading interfaces or trading like interfaces which might not be so much appealing, I think, for first time users or people who are completely stranger to crypto. Just very cool directing the monastream in a more conversational way. I think we're out of time, but that makes a lot of sense. Awesome. I'm not a judge, but I think just as in terms of feedback, if you already have the content part of this ready, you should also try to see if you can integrate with other chatbot services like Telegram and make it easy for users in each of those messaging platforms to get access to this thing. I'm sure this is already on your list, but this is great.
00:39:17.210 - 00:39:38.876, Speaker A: Thank you so much. And with that, we are going to move on to our next panel, and that is Team Slingshot. So I know they're here, I'll let them share their screen. Thanks, Karthi. We're just going to play the video now. Hi. We are slingshot.
00:39:38.876 - 00:40:23.788, Speaker A: The team is made up of myself, Harith, Edward, Ben and Eason. Our product is an on chain incentive system to encourage regular participation in Ethereum Meetups, which have long been a backbone of efforts to increase awareness and adoption of Ethereum. Inspired by Kickback, our project takes the Stake reward idea and applies it to communities that meet up regularly. Members stake ETH to RSVP for an event where their attendance is taken. Attendees of the current event receives payout from the stake in the previous event, whereas stake from the current event is used as payout for the next event. Let's walk through a demo. This is slingshot.
00:40:23.788 - 00:41:09.650, Speaker A: Without signing into MetaMask, I can't interact with events first. Let's do. That the last meetup we organized was huge. Online event managed to attract lots of attendees from around the world. Because the event had such star power, it didn't need much incentive to get people to attend it. The high attendance meant stake was divided up into more pieces, meaning I got only a small payout for attending. The next meetup in the schedule isn't as highly sought after.
00:41:09.650 - 00:42:08.050, Speaker A: Getting people to celebrate the end of their hackathon with a party just isn't as exciting. In the current climate, people are still reluctant to leave their homes and risk contact with others. Naturally, we'd expect their participation rates to be low. As the organizer, I RSVP to support my own event, but I don't expect many others to do so. Sure enough, only a few people RSVP and only four people showed up in the end. Here's where a slingshot comes into play for meetup organizers. Large stake carried over from the previous event and less attendees means more payout per person.
00:42:08.050 - 00:43:15.890, Speaker A: Members are incentivized to show up even when the event isn't at the top of their list. As an organizer, I have certain functions available to me, such as pausing events and creating proposals. You clicking on the user profile. I can see a list of my activities across various meetups. To build slingshot, we combine two contracts deployer and meeting ENS and proof of meetup attendance to improve reputation and admin functions to limit the power of a single organizer. In the future, we'd like to implement version two of the Smart contract on the website, including governance functions and Integrate Pool Together Builder to customize rewards as well as other items. You can try out the demo yourself on this link.
00:43:15.890 - 00:44:23.350, Speaker A: Thank you very much for listening. Yeah, so that's our video and open for questions. Awesome. Guys. I think that is definitely a really cool concept and you're clearly leveraging Ethereum in some pretty obvious ways, but I really like it. A question that I have is just around the mechanics of how this works and I want to know how do you combat the adverse selection problem, right? Where you kind of want people to go to events in order to be a good either contributor or maybe they actually want to be there. Whereas when you introduce this gamification and the ability to make money, do you worry about that potentially making it not as great of an event? And what are some things that you can do to combat that? I guess.
00:44:23.350 - 00:45:01.544, Speaker A: Yeah, so the whole putting money into relationships always kind of complicates things. What we want to do, to be honest, is just to start it off with meetups. So I run my own meetup and we can try it out with the attendees and try it out with smaller groups that know each other and with less fees, so that the money part is enough of an incentive but not enough for you to try and game it too much and make money at the expense of guys. I'm sorry, Monsey.
00:45:01.592 - 00:45:02.830, Speaker B: No worries, go ahead.
00:45:03.700 - 00:45:38.830, Speaker A: Building off of Spencer's question, have you guys tried this in the real world yet? Have you actually done this with a Meetup yet or not quite, no. So we finished the first version of the product, but we haven't tested it out with real Meetup attendees and real money. But that's going to happen shortly, I'm guessing, right? With one of your meetups? Yeah, that's the plan. That's going to be very cool to see how it all works. I'm quite excited for that.
00:45:41.440 - 00:46:05.430, Speaker B: As a Meetup organizer myself, this is definitely a challenge where attendance ends up being 50% to 60% as opposed to what people are RECP. So really interesting to see projects like yours. I think maybe I missed it, but what's the difference between Slingshot and what's the other one that you mentioned? Kickback. Yeah.
00:46:06.680 - 00:46:32.940, Speaker A: So Kickbacks are focused on Singular Meetups, so you stake for the event and if you don't show up, you get your stake taken away from you and given to other attendees. We want to sort of innovate a bit more on that idea and make it for a sort of regular series of Meetups so that it's not just incentivizing a single event, but you're also incentivizing a continuous sort of culture of attending and participating.
00:46:33.440 - 00:46:45.810, Speaker B: Got it. And do you plan to integrate in some way with Meetup.com or some way to collaborate so that attendees don't have to be on two different platforms and it's an easier user experience?
00:46:47.320 - 00:46:50.550, Speaker A: Yeah, we'd love to, but I guess it's one step at a time.
00:46:51.560 - 00:46:52.950, Speaker B: Sounds good. Thanks.
00:46:54.360 - 00:47:22.364, Speaker A: Awesome. No, that's really cool because this is a thing that we as ETH global struggle with all the time to ensure that we're doing events, especially when there's no cost to the end developer to show up and come in. We really had to think about ways to ensure that the attendance and star logistics are in order. So this is really cool. Hopefully we get to try this out in the future too. And more importantly, we hope that actual Meetups can resume this year. So thanks again.
00:47:22.364 - 00:48:08.190, Speaker A: And with that, we'll move on to our next demo, and that is Anonymous Credit. And they've made a really cool way to do loans without KYC. I'll let them take over. Hi. This is Kai from anonymous credit. So I'm going to share my kai, it looks like you may have forgotten to check off the Share audio on Zoom, so we're not getting any audio here. Would you mind just resharing your screen? Okay.
00:48:08.190 - 00:49:01.878, Speaker A: Our hacks on. Project called anonymous credit. You can find our demo and code in the following links. As a brief introduction, the project as its name is going to create a missing part of DeFi application, non collateral lending and borrowing. So the user can borrow crypto assets only by the credit. The simple credit system we have built in this project is called Markovian Chain Credit. The credit and interest rate for each time of borrow is updated based on the previous borrow.
00:49:01.878 - 00:49:54.380, Speaker A: If pay off in time, the credit will increase and the interest rate is half every eight times. Here is a demo we will show later. It is claimed an account in my MetaMask has certain credit line in US dollars and current outstanding balance. The second part is about how to create credit identity here. Our innovative solution is address mining protocol. Everyone has to use their computation power to create value address which is a total decentralized and fair credit by honoring Bitcoin. The mining rule is simple a value new address in ten minutes and hashing difficulty is adjusted every two weeks.
00:49:54.380 - 00:50:48.810, Speaker A: The demo shows last hash and target hash difficulty and we can mine address in the browser. Other integrations include boring crosschain BTC aka CBDC, a decentralized map ERC 20 BTC issued by SBTC chain. Also we integrate chain link to use the price fee to calculate the amount of CBC one can borrow. The credit line is in $1 unit. You can find the integration code in the link here we will walk through the demo. So we open the home page and there are mining and long center mining. We start mining.
00:50:48.810 - 00:51:48.230, Speaker A: It takes a while, sometimes freeze. So finally get a gas and then we transfer gas. After it's confirmed, we import this new address and see the balance here and we mine the address. Actually mine address means that we record this new my address to the contract. Then we go to the loan center. We click on borrow to borrow some CPTC. After it's done, you will see here the credit line is one dollars and the current balance you get from the repository is this value and the offstanding balance is plus the interest.
00:51:48.230 - 00:52:44.692, Speaker A: And later this account should pay off with the total offstanding balance in once so you can recover a new credit. That's all my demo. Thank you. Thank you. Okay, Kai, I got a million questions here because I think this is really fascinating. So just to understand the mechanics a touch better quickly I mine an address and then after I mine an address, I'm initially given my initial credit limit and I can borrow against that, right? Yes, that's correct. Who is lending to me initially? Who's the initial lender? My future idea is try to do a peer to peer lending.
00:52:44.692 - 00:53:35.610, Speaker A: But right now I just put my for the hackathon project. I just put some token in the repository and as a pool to lend to this address. And then the idea is that every time I pay back my loan this Markovian credit chain my interest rate goes down based off of my previous good behavior. My good credit behavior. Is that the yes, yes. But right now the model is very simple. Yeah, still it's pretty you that idea of this Markovian credit chain is that something that exists anywhere else in traditional finance or anywhere? I'm very curious about it.
00:53:35.610 - 00:54:27.272, Speaker A: Previously, I talked to my friends who are doing in the traditional market about credit. He's working in a credit card company and all his work is very sophisticated. It's complicated, but I just show him that this simple idea model seems that it might work. And basically I think in the future we might looking at the actual borrow history, whether for those users or for those address who are in sequence of borrows, what's their performance and default rate? And we can get much better industry rate estimation. Fascinating. Very cool.
00:54:27.326 - 00:54:53.360, Speaker B: Okay, thank you. Yeah, cool concept. Similar to building your credit history. So your next loan will be based on your history. But curious as to what's the starting interest rate and then how sustainable is it to half it every X times, eight times or something you mentioned. What does that end up coming to after a few iterations?
00:54:54.580 - 00:55:17.850, Speaker A: There's a complicated sheet in my slides as appendix you can check out later. Okay, a little bit complicated. We just make sure that each time you can make some money not losing anything by sanction gets a default rate.
00:55:19.500 - 00:55:24.380, Speaker B: Yeah, curious how that works, but sure, happy to look at the slide.
00:55:28.080 - 00:56:12.810, Speaker A: I'm curious kind of what you think the largest attack factors are for something like this. And maybe if you designed around them. I think the first one is like doing the KYC less loin. One thing is you cannot find how to create the identity. So we use the mining strategy so people cannot create as many address to borrow something initially as possible. So this is the first one. And second one I just try to simulate real world credit model.
00:56:12.810 - 00:56:44.710, Speaker A: Due to the time limit, we don't have too much time to work on a complicated one. That's something we can work on later. Gotcha. Awesome. Well, thank you so much for that amazing Markovian chain demo. And with that, we'll move on to our next demo and that is Team Hell. I'll let them take it away from here.
00:56:44.710 - 00:57:08.350, Speaker A: Thank you. Thank you, Kartik. Hi, I'm Jimiliano from Hal and I'm here with Mario and Mateo. Hi. Here we are. Let me share the screen. Great share computer sound from Hal team.
00:57:08.350 - 00:58:16.930, Speaker A: In this video I will explain the hack that we did, the codeless hack for the WBTC bot. So the hack that we did was to celebrate an important event for WBTC. The first tokenized version of Bitcoin on Ethereum for basically the mining of 20 20 million of Torahs of BTC. So this basically minting 1500 BTC. And we built this very nice spot that notify about events on WBTC contracts on Twitter, I will explain how we built it. So we built a platform, Hal, that basically helps you to connect Ethereum to traditional application, centralized application, but also to execute on chain action to build a bot. We basically built a trigger watching an event.
00:58:16.930 - 00:59:29.044, Speaker A: If you see the transaction of Minting you see that the transaction will fire a specific event. I mean several events. The mine, the transfer, the mine confirmed. So what we did is take the contract basically insert here automatically the hull, retrieved the API from Etherscan and we basically choose to be notified or execute an action when the mind confirm event is fired. So we have several actions email, Twitter, Slack, Telegram, Webhook, discord and fuck shared the wrong video. Sorry, if you have the new one we can quickly switch over to that. Yeah, let me see if I can recap.
00:59:29.044 - 00:59:54.480, Speaker A: Okay, I thought the video you had was great. Let me recap from here. Okay. Maybe fast. Okay. Yes, I give a name. Can you hear the audio? I think you turned off screen sharing so I have to just share that again and make sure you check off the audio.
00:59:54.480 - 01:00:37.184, Speaker A: Sorry guys, but I have the previous. Okay, here will be fast. Okay. And here we go basically okay, create and here we go. So basically as you may see in very few minutes I'm able to create an off chain action shortly. Also on chain action just in few clicks under the hood. The system is composed by a front end react app.
01:00:37.184 - 01:01:54.600, Speaker A: The one that you saw that basically help you to build triggers. A backend written in node that basically manage all the API for getting the triggers to be created and a backend Zoaster written in go that basically look for the blockchain and at the end of the day execute the off chain action. But Hal as you may see is similar to an IFTT platform but to be honest it's a state channel connector. So it's an entity between decentralized one and a centralized one that basically connect the two worlds. We are going shortly to introduce the on chain automation partnering with Gelato for megastation network to have more complex flow that help you to build hybrid automations. The idea is to be able to build anything without writing any kind of code but just while in a graphical way. All the parts.
01:01:54.600 - 01:02:28.256, Speaker A: Hope you enjoyed. Thanks. Okay, thank you guys. Sorry for playing the wrong video but shit happens usually real time. All good man. So this seems like a very simple useful tool to monitor if I get this right. Monitor smart contracts and the actions that they trigger inside them and also filter what you actually trigger based on some of the input parameters that you guys demonstrated.
01:02:28.256 - 01:03:28.512, Speaker A: Is that right? Yeah, to be honest I would like to use monitor. What you can do is to track and look for what happens on chain but also off chain. So it's something that let you connect moreover so you can execute if you want. Like in this example, off chain action that in this case it's just a notification on Twitter but could be also something happening in a backend system, something that maybe execute a trade on a centralized exchange or anything. So right now we are just connecting the on chain part with the off chain because in this way it's easier to build something and to create automation without bothering about this service that should be managed to realize it. Yeah, I mean I'll tell you guys that I've actually been looking for something like this and it looks beautifully done and very professional and very clean. So like excellent work on that technically.
01:03:28.512 - 01:04:36.510, Speaker A: Just very quickly the back end of it, where is it hosted? And since this is something that you want it to be very reliable, have you guys done any thinking around how to keep the resilience or redundancy or reliability up on it? Yeah, right now it's pretty centralized. I mean that we manage our nodes and we have a resilient backend service infrastructure but as soon as we are going to introduce on chain action, basically we are going to leverage a network of executors, basically the one provided by Gelato and others players. So the idea is that in the medium term we are going to decentralize that specific path just for the on chain action. Very cool guys. I was just playing around with your website as you were talking and it's just awesome. I mean kudos to you guys for building something that's so user friendly and I think this definitely solves some pain points and use cases that people want to do. I mean there's so many actually that my head is spinning right now.
01:04:36.510 - 01:05:31.644, Speaker A: What are some of the what you would say maybe like v two use cases? You mentioned centralized exchanges. Walk me through kind of that and maybe there's a core user that you had in mind as well. Absolutely. So one case that will be available shortly with the fee too is basically you can re implement the phi saver using Hal. So basically you can monitor the qualification ratio of a vault or whatever, any added debit position and then you can trigger an on chain action that maybe execute the refinancing process. Or if you want to realize an arbitrage between Dexis and centralized parties you can do because you can monitor what happens in maybe Binance or whatever and what happens in Kyber and as soon as the condition verifies you execute the flow. That's the idea.
01:05:31.644 - 01:06:03.288, Speaker A: So these would be what we are calling recipes, so pre made flows that user can share and can collaborate to. So there will be an open platform like Dune Analytics where people can basically build their own recipes flows like you know, you do with furocombo but will be shareable and will span both the decentralized world and also the centralized world. That's the idea. Got it? Yeah, no it makes perfect sense. That's really cool. Thanks. Awesome.
01:06:03.288 - 01:11:39.094, Speaker A: Well, thank you so much Hal. If anybody wants to check this out, you can just go to hal XYZ it's live on production. And with that, we're actually going to kick off with our break. So we're going to take a five minute break here and we'll resume all demos in five minutes. And I'll give some of the teams and our judges a quick opportunity to stretch their legs and just make sure that their scores are up to date. So we'll be back in 1 minute, okay? Thank you. All right, we're going to just get set up for our next demo, and this is the one where I am playing the video on my end.
01:11:39.094 - 01:12:01.730, Speaker A: So I just need 10 seconds to get settled. All right, so we have Opala as our next team and I will kick off their demo video from my end now.
01:12:08.010 - 01:12:47.430, Speaker C: Greetings, humans. Opala is a civil resistance system for the apps and a decentralized identity in the future. Opala provides human uniqueness score in dollars. The main idea behind Pala is explosive bots protocol, meaning that any user of the system can delete their ID at any time and run away with an amount of money. And this amount of money is this user score. The main building block of Apala is a group. Users join groups, they gather a pool by depositing money and the groups assign scores to its users.
01:12:47.430 - 01:13:48.310, Speaker C: Now, if someone decides to explode, they grab their score from the pool and run away, betraying other members, in a sense, so that they won't let this person in again. The system ensures that a group is able to provide the scores as long as it has sufficient funds to pay for at least one explosion. The same way users join groups, groups gather in the hierarchy. Superior groups may require deposit from its subgroups and in turn, add extra scores to their users. This way, large group emerge. And now an attacker chooses a group with the highest score and all they need is to prove membership by providing a path through group's hierarchy to the top group. Any group can provide scores to the apps, but it makes sense for the app to check the topmost group as they are the largest.
01:13:48.310 - 01:14:25.086, Speaker C: And this group may require fee for providing the score. Groups can choose any governments or incentive models. They only need to follow bot explosion rules. They also can choose any entry test. Here is a hierarchy based on reputation and personal social connection. Here is a hierarchy based on using Dao membership as an entry test. Or here's a hierarchy requiring simultaneous membership in other identity systems and hierarchies, which could be very valuable.
01:14:25.086 - 01:15:16.440, Speaker C: And in general, the system works similar to insurance. Good identity reputation means low risk of explosion, and it allows core providers to give the highest score to the user. The Upala score may be used as a very reliable threshold for the apps to interact with or even as a collateral. It is even possible that Upala score will be higher than a black market cost of a state ID. So it has a potential to be a substitute for that. During this hack, we made a single group using impala protocol which requires zero deposit, has no entry test, and it just auto assigns $3 to anyone who joins. So let's have a look.
01:15:16.440 - 01:15:40.890, Speaker C: First we register our ID. Now we join a group. The group assigns us a score of three die. Now we can explode. Have a look at pool balance and our balance. We still have an ID. Now our ID is exploded.
01:15:40.890 - 01:15:47.780, Speaker C: The pool balance decreased, our balance increased. So this is how it works. Thank you very much.
01:15:55.220 - 01:16:23.220, Speaker A: Peter. Thanks, man. I think this is very cool. I want to make sure I grock it. This is very cool. Is it kind of like a microfinance group where you have a group of people that all sort of vouch for each other at the base layer? Is that like a reasonable analogy for how to think about this? Yeah, you can use it as an analogy. It's a social responsibility.
01:16:23.220 - 01:17:13.076, Speaker A: So if someone messes up, everybody messes up in this person's group. And then the idea is that you've got the nice kind of graph structure of taking these microgroups and expanding them to extend kind of like one type of credit score or type of loan characteristics for the whole network. Yeah, it works kind of like that in a sense. But now the analogy breaks a bit. Now it looks more like insurance. So when users join groups, the group will assign score based on risk. So if user deposits one dollars, this user may receive $10 if this user is reputable.
01:17:13.076 - 01:17:31.280, Speaker A: And in the same way, if a group deposits to a top group, so the top group assesses the risk and multiplies its deposit so it goes up and up and users at the top get more and more scores.
01:17:32.500 - 01:17:41.060, Speaker B: So curious, how is that reputation checked? Or what is that Identifier to give scores to people or individuals?
01:17:41.720 - 01:18:10.620, Speaker A: There may be several or maybe a lot of score providers. Basically, any group can provide a score for the app, but the apps are it makes sense for the apps to choose the groups with the largest amount of people beneath the group. So basically any group can provide a score. The score is just this amount of what a user can run away with.
01:18:10.770 - 01:18:18.480, Speaker B: Right. And what is the mechanism that any group uses to provide that score? I'm a little confused.
01:18:19.700 - 01:18:45.480, Speaker A: It's provided by the protocol. So the mechanism ensures that every group through the path will pay out the score that they added through the hierarchy. So first group added $10, then next group added $4, then another $5. So they pay in backwards. All this sums to an attacker.
01:18:47.580 - 01:18:48.330, Speaker B: Interesting.
01:18:49.900 - 01:19:49.420, Speaker A: I've got a question. So if you had more time to hack on this, how would you have improved it? I wanted to build a Blade Runner dow, which is a group governed by a dao so that they decide which DAOs to let in or which entry tests to use and to plug in into their group and what scores to assign to different entry tests. Entry tests. I mean, I interchange with group. So a group is basically an entry test. So we can use group to check if all members of this group are members of a Medicare tail Dell, for example, this group becomes an entry test. Gotcha.
01:19:49.420 - 01:20:08.252, Speaker A: Cool. Awesome. Thank you so much for that really cool sort of way to manage repetition. And with that, we'll move on to our next demo, and that is Project Learn and Earn. Thank you. A really cool way to save. So, Victor, I think you're muted.
01:20:08.252 - 01:20:22.484, Speaker A: Here we go. Yeah, cardik, just a quick heads up. We're missing one team member. He's on the phone currently, so he can't find the hands up. We can manually promote them. So we'll do that right now. Yeah.
01:20:22.484 - 01:20:43.788, Speaker A: His name is Daniel Steinbach. I added it on the chat. There we go. Right, we're all here. So, guys, I'm just going to start playing a video and then we'll take questions after and open Share. Computer sound. All right, pressing play.
01:20:43.788 - 01:21:21.050, Speaker A: Hi there, everybody. I'm Edward Bushi from team learn. And, Aaron, I'm a designer, and I'll be running through the demo with you. We are a team of very talented developers and crypto researchers, and we have a special problem that we want to deal with in the world today. We want to help people save, because right now there's not a lot of systems helping us save money. And we want to solve the low completion rate for online learning courses. And we think we can solve it by using crypto economics and blockchain interface for that.
01:21:21.050 - 01:22:09.000, Speaker A: So here are essentially the rules for our app. And we could see this further in our flow diagram over here. So how this all works is students as well as donors are able to fund a staking pool. And each staking pool is dedicated to a course. And while students learn the course for three months, that's how long it's locked in for. These same students, once they complete all the tests, are able to earn interest on the stake that they put down and are also able to get their stake back. Students who don't finish give it to students who do, and funds are returned to donors.
01:22:09.000 - 01:22:54.330, Speaker A: Here's a very quick glance at our tech stack. We have portis, Ave and Chainlink, and that's what we're after today. And for a demo, I'd love to share with you a video of our run through here's. Our student flow here, Meet is actually signing onto Khalid Academy. We have a chrome extension, which is able to inject buttons and interact with the blockchain. From here, we also have a backend that manages the tests and the students staking in right here. We're at Arch History, and we are going to learn and earn for this course.
01:22:54.330 - 01:23:44.650, Speaker A: Very simple. You go to a page where you have to pair your portis wallet to the app, learn and earn. And then while you're here, students are able to stake 100 die and be able to take tests. And this is a test very quickly run through. So once the test is done and every test has a little course, once students pass the tests here, the idea is that they're more eligible to gain the interest at the end of their term. They just need to complete the other tests in the time period allotted, which is three months. This is zoomed in three months later.
01:23:44.650 - 01:24:32.776, Speaker A: What happens after three months? You pass all the courses. Well, you get your stake and your dive for participating in this course. And here is the donor flow just very quickly. The intention here is that students can earn way more when a donor helps out as well. The idea is donors can give as much any amount they want and the dai that's staked into these pools are going to funds that can support any course. The nice thing is they can support any program that they want, specifically if they want to. But I have to go back to this page over here.
01:24:32.776 - 01:25:26.730, Speaker A: Let's see. In the future we want to scale this up by giving alternate reward schemes, partnering with Moots to get better courses. We want to also think of a revenue share with the interest that's gained and profitability also by partnering with corporate donors. So yeah, check out our documentation at Notion right here. And a big thank you to the folks who helped us for this month. Yeah, so yeah, that's our video. We realized that there isn't a lot of tech talk here, so we're ready to take any technical questions and any crypto model questions if you have any guys.
01:25:30.700 - 01:25:48.080, Speaker B: I don't necessarily have a question, but just a comment. I think this is a really cool concept. I've started so many courses over the years that I haven't finished and this would definitely motivate me to finish them and while earning some money. So really cool concept.
01:25:49.140 - 01:26:20.250, Speaker A: Thanks so much. Yeah, I would just piggyback on that. I think even more than making A Student put money down, because maybe they don't have it, but just having Sponsors Come in over the top and Say, we're really interested in this topic and for you to learn it. And if you complete this course, then you get this Prize. I think that could be really powerful. And it really demonstrates the Power of Crypto. So great job, thanks for that.
01:26:20.250 - 01:26:52.870, Speaker A: I'm going to echo again that I also have a bunch of courses I've never completed. Need that economic incentives. And you brought up about this idea of diving deeper into the technical underpayings of this. I think not everything is about being super hardcore on the tech. This is a very clean application. I'm more curious about kind. Of the origin story and how you as a team got to this idea and sort of found this problem.
01:26:52.870 - 01:27:55.912, Speaker A: Well, very quickly on our side, I'm part of a company called Bitcoin Bay, and our main mission is really to grow the blockchain ecosystem here. And my background as a designer is to solve a lot of UX problems in this. When Victor approached me with this idea, I found it to be very well researched and it was a great opportunity to tackle two major problems at the same time. I wasn't concerned about any specific ideas, but when we started this but when Victor came up to this, I saw an idea that we could tackle really quickly, had a lot of legs and something that we could implement. But yeah, other people have other stories too. Yeah, in term of the saving part, because of my background in investment and economics. So I saw the low interest rates really discourage people to save.
01:27:55.912 - 01:28:18.830, Speaker A: And I want to create an incentive so that especially younger people, the people who just finished school, just start a job, give them incentive to save for their future, whether it's a retirement or for their future investment. So we try to combine these two problems basically once, don't try to kill two birds. Saving and incentivize learning.
01:28:21.920 - 01:28:38.390, Speaker B: And sorry. And then for me, it was definitely like you Hart and Manasse. I just don't ever finish courses that I start. And I think when you have something at stake or something to gain, it just makes it a lot more fun.
01:28:42.870 - 01:29:28.706, Speaker A: Amazing. Very quickly, is there a next step for you guys of where you want to take this next in a sentence? Sorry, I thought I was going to chime in here because from a sort of a security perspective, the way so far that we're functioning is we are basically an oracle. Since people's stakes are recorded on the blockchain, we have to confirm that their answers are correct when they send us their answers. And we can't distribute the answers because then people can cheat. The issue right now has to do with how we're dealing with the Khan Academy tests. Sorry. Basically, we want to administer our own tests so that we can receive people's answers and check them.
01:29:28.706 - 01:29:46.054, Speaker A: People don't have an opportunity to take the tests via Khan Academy in advance and then just know the right answers. Yeah, sorry. Yeah, that was good. Don't worry about it. Great. Well, thank you so much. No, this was awesome.
01:29:46.054 - 01:30:16.580, Speaker A: Because especially when we have projects that actually plug into things that people already use, especially in the millions, I think that's when we truly get to sort of make this accessible and useful to everybody else. And I'm also guilty of taking way too many MOOCs that I have not finished at all. There's a starting point here. Perfect. So with that, we'll move on to our next demo. Congrats again on demoing. And we'll have cronchain come up and share their video.
01:30:16.580 - 01:31:03.808, Speaker A: I'm happy to present Cronchain project for atMoney. I'm ISO. Donk Jafalo. And I'm a developer. I'm building a protocol that can support centralized and decentralized finance. How this works, any user of Crunchen can use their assets as collateral for token and those tokens will be automatically swapped for Quinn. Quinn that can be added to liquidity pool.
01:31:03.808 - 01:32:06.040, Speaker A: A quick demo. So I'm in the wallet of a user. So the user will just have to select its wallet to select its certificate and click on collateralize. And when he will click on collateralize, you can see in the collateralized he's been granted of an amount of $20. So if he decided to pay back, when we have the fund to pay back, we'll see that the asset will leave the collateral and will go back to his wallet. Here is the admin interface. So the administration role will be to verify if those assets are legit and also to inject liquidity.
01:32:06.040 - 01:32:52.410, Speaker A: The protocol is developed from scratch and has node JS connecting the clients to the blockchain. Also, I've implemented uniswap partis and eve. In the future, I would like to support shared to token and token to shared swap. And I will also go Mainet. Thank you. Okay, it's all I've done with the presentation. Do you have any question for me? Please.
01:32:56.460 - 01:33:03.132, Speaker B: Hey, were you the only one on the team? Are you the only member of the team?
01:33:03.266 - 01:33:05.310, Speaker A: Yeah, I'm the only one who have other team.
01:33:05.680 - 01:33:23.120, Speaker B: Cool. Really interesting project. So curious to hear what type of assets do you collateralize on a platform like this? And then how does the pricing mechanism work as to how are these assets valued?
01:33:23.560 - 01:34:22.950, Speaker A: Yes, the kind of asset I'm collateralizing is those assets that have been added in Crochet protocol. So before working on the protocol, I have a certification platform that I've built already. So when an asset will be certified from my platform, the value and the ash also the fingerprint also will be added in the wallet. So those information will be took sorry, automatically. And the owner can be funded and his asset will be collateralized to Cronchain. And when he will pay, he will have his asset back. So the value are predefined when he gives his proof of ownership and those information.
01:34:22.950 - 01:34:32.490, Speaker A: It's like a KYC for assets that have been done already. I have a seat wave already. The application already working.
01:34:33.100 - 01:34:36.650, Speaker B: Got it. And who's paying for this? Who's on the other side?
01:34:38.160 - 01:34:39.564, Speaker A: I didn't get it. Sorry.
01:34:39.682 - 01:34:42.236, Speaker B: Who's paying for this? Who's on the other side?
01:34:42.418 - 01:34:46.380, Speaker A: Yeah, the other side is any asset owner.
01:34:48.400 - 01:34:56.210, Speaker B: Asset owner. So say I am collateralizing my asset, I get the money. Who's giving me that money? Is it your platform?
01:34:56.660 - 01:35:24.120, Speaker A: Yeah, it's the platform. So the platform have a bank. The bank is done with parties have a bank that will fool anytime we generate a token. So it's a swap that will be done already with our USA 20 token to take some ath from uniswap and give back to the user.
01:35:27.100 - 01:35:27.850, Speaker B: Cool.
01:35:31.040 - 01:36:26.156, Speaker A: So I have a question for you. This is definitely really cool. Anytime I see projects that deal with real world assets, I always like to dig into this question, which is what do you think the blockchain enables here? And could you do this without a blockchain? And would there be kind of similar experiences that users would have? I really want to kind of get into that fundamental unlock that the blockchain is giving you. Yeah. What the blockchain is doing there is that without the blockchain, we can do it because currently we have many projects who are certifying like a diploma. So in the real life, I can refuse to give you my ownership. I can be funded and refuse to pay back.
01:36:26.156 - 01:37:10.036, Speaker A: But with our smart contract, you'll have a time to pay back. So when you didn't pay back, you will lose the ownership of the asset. Got you. So there's like an element of, I guess, programmable ability is what you're saying? Yes. Got it. What's the next step here? What's the thing you want to do next if you had more time? Yeah, the thing I want to do next is to implement F, because I didn't implement F is the only thing I didn't implement. And after implementing EV, I will go mainnet.
01:37:10.036 - 01:37:57.432, Speaker A: I will go mainnet. And after going mainnet, I would like to do to being able to do swap from crypto to fiat. And the user that I'm targeting is user who are not able to use technical to use the technical to deal with private key, public key. So those user I'm targeting, and there are many, those user who just want an application that they will click, they will have their phone, and they don't really want to deal with the blockchain anymore. So those are my customers. Awesome. Well, thank you so much and we hope you keep on building this thing.
01:37:57.432 - 01:38:22.944, Speaker A: And all the best for pushing this to mainnet. Let us know when that happens. Thank you. Great. Next up, I'd like to call up Team Redefine and I kind of got a chance to look at the video beforehand and it was really cool. So actually, before you play the video, I'd love for you to tell our judges what Finfloor Explorer is and sort of the context around that first, and then we'd love for them to see how you've extended it. Okay, sure.
01:38:22.944 - 01:39:07.350, Speaker A: Marcus, do you want to take that one? We are trying to think of a new financial system that rewards sustainable action. Communities can create tokens and community members can obtain these tokens by proving they actually did something sustainably. They planted a tree, they helped an elderly person, they took the bike instead of the car. There are thousands of possibilities and the idea is that it's bottom up and communities can just use the platform to do exactly that. Okay, then I would share the video. Yeah, sounds great. All right.
01:39:07.350 - 01:39:32.568, Speaker A: Coming up welcome to Team Redefined's presentation. During the hackathon, we extended our existing D appfinfo Explorer with the functionality to add underlying sources of value to tokens. A simple workflow would look like this. You plant a tree. You prove it with a picture. You obtain a tree token. Now I will show you how the DApp looked like before the hackathon.
01:39:32.568 - 01:39:55.316, Speaker A: This is the landing page. It's responsive design, so it also works on MetaMask mobile. For instance, I will create a repair token. Basic ERC, 20 properties I can change. I will leave the default. So, regarding Minting and I will set the verified type picture. This is basically extended in the hackathon to two steps with a lot of functionality that you will see later.
01:39:55.316 - 01:40:12.980, Speaker A: Creating the token. Now I'm switching persona. I'm no longer the token creator. Now I'm someone who can repair bikes. And I just repaired the bike for someone. And I want to claim my repair token. And now I have to submit the proof, which is the picture.
01:40:12.980 - 01:40:36.412, Speaker A: I have to give someone's address. Who will approve this? This is the person I repaired the bike for. He has to approve. Now this person has gotten a message. Yes, definitely looks like repairing. All right, got verified. And now you can see I have a balance of one on this repair token.
01:40:36.412 - 01:41:13.820, Speaker A: So let's have a look at how the D app looks now, with options implemented to back positive action tokens with different underlying sources of value, I created the repair token again, and we are in that step where in the previous version, there was only a free text field. But here, it's two steps now, and I'm going to run through them rather quickly. Add a sorcerer. I need the address of my collateral. I added a collateral token called collie, which could also be a TBTC or P tokens. And when I created that, I minted 100 to myself, so I can deposit on the collateral. I created a contract that implements the interface.
01:41:13.820 - 01:41:50.040, Speaker A: All right, the token is created. We can see that the repair token has these collaterals. Furthermore, it has two external sources of values. One with a contract that implements our interface and one free text for this one. I will and we can see nothing happened and I have to deposit something. So there is some funds on this. And now someone else can come claim that repair token.
01:41:50.040 - 01:42:19.916, Speaker A: And what I wanted to show you with the console is now this changed to that worked, meaning that external contract was called through the interface. Upon a successful claim, this person has a balance of one on the repair token and wants to redeem that for the collateral. So we can convert this one. The repair token gets burned. One collie for it. One collie and no more repair token. So the swap one is sort of the default case, we imagine.
01:42:19.916 - 01:43:10.304, Speaker A: So you back a tree token, a repair token with Ptptc or another ERC, 20 collateral that is considered valuable, let's say, after a campaign, for instance, token owners merge their different sustainability tokens into one token that has specific properties, like disloc. For some time, someone deposits 100 CO2 tokens that represent 100 tons of real world emissions. Various CO2 offsetting tokens that are proven to do so through our proof types can be used to burn down this hundred. This one, we imagine, could be possible to, for instance, trigger cross chain communication or start a business process in a Dow. Token creators can promise free museum tickets to their token holders. And we also discussed a way to create decentralized liquidity via a mesh network of trusted personal coins, which also comes with a universal basic income. Obviously.
01:43:10.304 - 01:43:29.120, Speaker A: That's it. All right, that's it. Yeah. Sorry for the quick run through. I had to compress it a lot to get into the four minutes. It I mean, amazing, guys. There is an awful lot there that's pretty compelling.
01:43:29.120 - 01:44:36.412, Speaker A: Okay, so I'd actually love to know, because there's so much here and it's so damn cool, what would be the first use case you guys really want to tackle? Like, if there was one first initial use case that you really want to see happen today or tomorrow, what would that be? Well, I can tell you what we're trying to do in reality in the next few months, which is two use cases. One is with an NGO that does time banking in Switzerland, and the other one is, let's say, a collective in Berlin that got an old industrial area and they would like to, well, run their community there. And they are already thinking about local currencies and so to reward people without using fiat. And so that would be the idea to try this system out in the next, hopefully the next few months. And in general, we try to be open. There's a demo site where everyone can try this out. I think there's a lot going on in this local currency space that I'm personally super excited about.
01:44:36.412 - 01:45:20.180, Speaker A: So this is going to be fun times for sure. If we don't have any other questions, we'll move on to our next demo. Ben and Marcus, thank you so much for this hack and for staying up late for this demo on your time zone. With that, we'll move on to our next team, and that is Project Xops. And they made a really cool options protocol, so I'll let them kick off with the demo. Hey, everyone. Let me just quickly share.
01:45:20.180 - 01:46:03.646, Speaker A: Let's take it away. Hello and welcome to Axeopts. We are Team Interlay and we have built trustless Bitcoin native options. So what is this and how does this work? So we built Bitcoin put option as an insurance. So if the Bitcoin price drops relative to the US dollar or die, then Alice can buy an insurance to protect against that. And what's cool about it is that we don't require any kind of wrap tokens. We don't require anything special on the ethereum side except for SPV proof.
01:46:03.646 - 01:46:51.218, Speaker A: So Alice can just use her bitcoin. How does this work? Bob essentially underwrites an option by using Dai. An option contract has a specific expiry date, a strike price and a premium. And then Alice buys that insurance by paying the premium and saying how much bitcoin she actually wants to insure. What Alice can then do is if she wants to exercise the option, she sends the bitcoin to Bob, and in return, she can claim the die that Bob has locked. And she only can do so by proving that she actually did that bitcoin transaction on the bitcoin blockchain by using our TC relay. And if at the end of the expiry date, some unclaimed dye are stolen, the contract, bob can obviously refund those.
01:46:51.218 - 01:47:31.822, Speaker A: So let's take a quick look at how that works. Okay, let's look at this from Bob's perspective. So what Bob can do is he can sell additional put options for a certain contract. So let's say he selects this one, which will expire next Sunday with already a certain number of die issued. But he knows that he can earn like eleven die per bitcoin that's going to be insured on this contract. So what he's going to do is he's going to add some die that he wants to put in, he's going to put his bitcoin address in there and then he's going to select pay. And what Alice will do is she's going to buy some options.
01:47:31.822 - 01:48:02.150, Speaker A: And we can see here those expire in about a week at a strike price of 9000 die for bitcoin. And there's like 7200 die locked in there. And we're going to buy some of that. We have to select a seller so we know in the background where we have to send a bitcoin in case we have to execute. And we're just going to say we have a very few bitcoins. So Alice wants to have like a small insurance. We can see here she only has to pay like about $0.01
01:48:02.150 - 01:49:11.550, Speaker A: for that option we're going to pay, which approves this on the Dai contract. And then as a next step, we confirm and pay the option in our option contract. And then now what we can do is we can go to Alice's screen and then we can see here that she has purchased this option at that certain strike price. And now what we can do, assuming directly that this is profitable, we can exercise the option. This is the one that we have available that we just bought, and then we would technically be scanning the bitcoin payment here. So what we would do is when we scan that QR code, we get a bitcoin address of the seller, which is Bob, send the bitcoin to that address and we then wait for the Bitcoin payment to process. So essentially, what happens in the background there is that we are doing the payment and we can then add the proof.
01:49:11.550 - 01:49:44.906, Speaker A: So let's just add something randomly here. This is kind of mocked at the moment. We're exercising this and then we confirm the transaction and we have successfully exercised our option. So when we reload the page, we will see that this option is gone from the view here. Right, cool. That was our presentation. Thanks for watching.
01:49:44.906 - 01:50:31.554, Speaker A: And yeah, so this is a project done together with Alexey and Greg, who are also on the call and happy to take your questions. Now, guys, this is super impressive. You can kill the screen share so we can all see you, but super impressive. How was it working with BTC relay? Were you guys able to get that implemented and working? And I'm actually kind of curious, just your experience of actually using that SPV proof concept. So I'll take that one. So we implemented bituseri in solidity. Essentially, Interlay is a company that works on Interoperability solutions and we previously built this in Rust and now we built it in Solidity.
01:50:31.554 - 01:51:16.600, Speaker A: Basically, we got it to work. I mean, it took a bit of time to get used to the Bitcoin nitty gritty things below the but essentially we have some experience with that from implementing it in Rust before. And then, like, one more technical question I was just going to also ask, how are you guys setting the premium that you pay for the Put option right now? Because it's not market based. You guys are just setting a premium price based on a model. Yeah. So how it basically works at the moment is anybody can just go in and create an option. And to be honest, what we did in the video was just more or less a random data.
01:51:16.600 - 01:52:32.480, Speaker A: What we should be using or would be using would be some sort of skolls model or like binomial models or some proper pricing, but we didn't get around to do that. But, yeah, since ultimately we just allow anyone to create an option, really, people can just create their own thing if they wanted to, using a pricing strategy that they feel is right. Guys, I think you did a great job. Yeah. Sorry to interrupt part, but it seems like, I mean, there's a lot of Bitcoin holders, right, who could be looking for something like this. What was the biggest technical challenge that you guys overcame while doing this project? Yeah, great question. I guess the biggest thing was that options expire, so we had to create a new kind of, ERC, 20 variation of that very much inspired by Open that would just expire after some time, so you shouldn't be able to really trade those tokens after that time.
01:52:32.480 - 01:53:10.486, Speaker A: So I would say that was probably the most challenging part because it's such on a low level detail that we had to change it. And I guess another one was to make this as easily usable as possible. So basically right now you just need the Bitcoin wallet. So you just scan the QR code. And what we do, we basically would fetch the TX proof from blockstream and then submit it for you. Or you can just do it yourself. But the idea was that the user really doesn't have to care too much about copy pasting something from the command line, which is not that easily done in Bitclair.
01:53:10.678 - 01:53:16.970, Speaker B: Since we are running out of time quickly, are there any attack vectors here where Bob could grieve? Alice?
01:53:19.010 - 01:53:51.400, Speaker A: So currently Bob could relay an old transaction of the same payment type. So currently we only check that an amount has been paid to Bob's address and someone could replay that from any point in time. The next step in this will be to add additional information that an attacker, say Eve, can't replay in the future. So we potentially add like an Op return for Bob's Ethereum address, which we could collaborate with what we would expect on the Ethereum side.
01:53:52.170 - 01:53:53.640, Speaker B: Got it. Thanks.
01:53:54.090 - 01:54:47.898, Speaker A: Awesome. Well, thank you so much, Xops. And with that, we have only two more projects to go for today and I'd like to call up the Dalp to share their amazing demo. All right, so Mitchell is going to be sharing the video. Here we are team Hmfb, and we have created the Decentralized autonomous liquidity Provider, otherwise known as the Dow. So the problem that we saw is that adding liquidity to uniswap to earn fees is not as simple as lending money on compound or Aave. You need the correct proportions of each asset to start, and moving from one uniswap pair to another that is generating more fees is especially time consuming today.
01:54:47.898 - 01:55:42.890, Speaker A: This requires you pull out liquidity swap to new assets, try to get the correct proportions of those assets, add new liquidity, and then deal with all the token dust left behind. Zapper can help with some of this for uniswap V One, but not V Two. Regardless, you would still need to monitor your liquidity and manually invest in a different token pair if it starts generating better fees. Our solution, the doubt solves all these problems. A user simply buys Dalp tokens and the Dao manages their liquidity for them, always seeking the uniswap pairs that can generate the most fees. It works by performing on chain calculations to rate uniswap pairs by their ability to generate fees. This is done by comparing the percent growth of a pair's square rooted K value to the total notional value of the pair's reserves.
01:55:42.890 - 01:56:26.050, Speaker A: This notional value is calculated using the new uniswap V Two Oracles. In theory, this tells us which pairs generate the most fees for the least liquidity. As you can see right now, that is maker and we. When a user purchases Dalp tokens, the Ether they spend is added to the liquidity managed by the Dao. This liquidity is swapped to the appropriate tokens so the Dow can add it to the highest rated pair. So let's purchase some tokens right now, buy about 50 of them. If the Dow discovers a new pair that has a higher rating, it will remove liquidity from the old pair and swap to the tokens required for the new pair.
01:56:26.050 - 01:57:16.200, Speaker A: As you can see, there is an upcoming allocation to Die Eve. When a user wants to cash out, they can redeem their Dalp tokens. An amount of liquidity is removed from the active uniswap pair that is proportional to the number of Dow tokens redeemed and the tokens are swapped to ETH before being transferred to the user. So let's redeem some tokens now. We'll do another 50. So the risk for the Dow is the same as when anyone's dealing with an automated market maker exchange and it's impermanent loss. We're interested in exploring ways to hedge against impermanent loss, such as using LP shares as a collateral on Aave to take out a loan and purchase assets that we can use to hedge, like leverage, longs shorts or options.
01:57:16.200 - 01:58:25.550, Speaker A: We believe this project benefits uniswap because with just a little bit of refactoring polish, a number of functions developed for the Dow can be broken out into useful standalone periphery contracts that could benefit others trying to develop on top of uniswap. These functions are using Uniswap V Two router and Uniswap V Two library, and they simplify the process of adding liquidity from a single balance of ether, as well as simplify certain types of swaps moving forward. In addition to supporting more protocols, we want to improve the Dows decentralization. Right now there are a couple of function calls that require a contract owner, and we believe we can completely eliminate the need for an owner at all because we were able to perform our rating calculations on chain. We believe the Daop could be capable of operating truly autonomously with zero or at most, very minimal governance. With some extra work, the Dao could exist completely independent and immutable with no external entity in control. All right, that is the pitch.
01:58:25.550 - 01:59:19.214, Speaker A: It's pretty awesome. Will seems like a very useful project too. Two questions for you guys have you done any modeling around what you think the yield would be on this Delp token on an annualized basis? We do not have any good reports to show you necessarily right now. It's just kind of a hunch that this would be a cool, profitable thing. But maybe if I got one of the guys from the Will team at East Boston to run some data science stuff I could show you. I have a feeling like it actually might turn out to be very profitable, which would be pretty cool to see. And then other question.
01:59:19.214 - 01:59:49.900, Speaker A: The current design has the Delp only investing in one pool at a time and then switching between them, correct? Yeah, did you guys think at all about diversifying and potentially having an allocation between a few pools? And I was just sort of curious your thought process about that design decision. Yeah. So right now, it's only doing one. Just for simplicity. The project is end to end working. Right now. The smart contracts are working pretty good.
01:59:49.900 - 02:00:28.600, Speaker A: So we wanted to simplify it to start out with. But we realized that as the Dell grew, putting all the liquidity in 1 may tank the amount of yield that you could get from the fees compared to distributing it if you had a significant amount of liquidity to provide. So we were thinking of it as kind of like a liquidity aggregator. In the same way that, like one inch or Kyber aggregates on the one end, this could aggregate on the other end and optimize the deployment of liquidity. Very cool. Very cool. Thanks.
02:00:28.600 - 02:01:08.526, Speaker A: Yeah, I really like this. It reminds me of stakes. Robo Advisor product. I don't know if you guys have seen that before, but it's called Ray. So this is, I think, something that people really want. I'm curious, why did you guys build it? Was it just because you found yourself in these pools and think there's a product here? We built it because we do actually think there's a product here. We approached the hackathon as a let's build something like, independent of the sponsors, independent of the goal.
02:01:08.526 - 02:02:00.210, Speaker A: Let's build something we think people would use and see where sponsors fit into that, as opposed to the other way around of trying to build an idea around what prizes are offered. So we started out with, like, we wanted to create something useful for an actual problem that we see. Yeah, cool. And I guess my follow up question would be, I think smart contract security is just extremely important for something like this. How do you think about that, especially as you kind of get more complex over time with the product? Well, we started out from the very beginning doing a lot of testing, having automated unit tests. We weren't just trying to speed through it. Every component we were making, we were trying to test with the goal of having it prepared to be able to actually pass an audit.
02:02:00.210 - 02:02:23.900, Speaker A: Awesome. Amazing. Well, will Michael and Mitchell there you go. Sebastian is also on the call. Sebastian, too. Thank you so much for this cool demo. And I'm really glad to see I hope that as hard the yields ends up working out, so this would be really cool to try out.
02:02:23.900 - 02:02:48.580, Speaker A: And with that, we are going to move on to our last demo for the day. And I want to thank everybody on the live stream and this call for kind of giving us the time. So let's make sure that we do this thing really sweetly and nicely. Please welcome Pencify for the last demo for Friday. Hello. Hey, everyone. So let me start the video.
02:02:53.850 - 02:03:00.360, Speaker B: Hey, there we are, team Acropolis. Alex and Pavel are working on the backend side and Timmy is our front end guy.
02:03:01.370 - 02:03:12.380, Speaker A: We built pencil. There's a pretty big echo. Could you make sure that it's not coming through your mic? And you have checked the audio share box.
02:03:14.430 - 02:03:51.894, Speaker B: So what is Pensify and how does it work? It is built on Acropolis framework which allows automated revenue management, yield rebalancing and liquidity provision enabled by the Bonding Curve fund constantly generates interest from various DeFi protocols. By utilizing robot advisor for yield from staked ass members can also earn additional income by utilizing Flash loans and catching arbitrage opportunities between uniswap and balancer. Flash loans commissions are another source of yield for users. So let's test it out. So let's connect our wallet to Pencifi. We will be using Process for this. Great.
02:03:51.894 - 02:04:12.640, Speaker B: So here pencify starts. All deposits are converted to tokenized shares. The price changes based on Ponzi curve and rises along with liquidity. Here you can check current deposit and withdrawal price for shares. Let's move to the account. So I already deposited some die. I can deposit even more.
02:04:12.640 - 02:04:38.470, Speaker B: Here you can see a penalty fee for preliminary exits by default parameters. Your pension age starts in two days after deposit. This is distribution tab. Once per day you will see accumulated distributions from yield rebalancer and Flash loan commissions. Here is distributions history. Let's move forward to the arbitrage. So if you want to earn additional income right here and now, you need to create executor.
02:04:38.470 - 02:05:21.170, Speaker B: So for arbitrage, we are using Flash loans. You just need to choose token, choose Pools, choose Swap Amount, add Slippage, click Apply, then input amount you're willing to earn after transaction fees, flesh loans, Commission and slippage. Input private key from any of your wallets. We recommend using Hot Wallet. Then click Approve Tokens and click Run. Swaps will be executing automatically while your browser is open. Let's fast forward to our pension and withdraw our savings.
02:05:21.170 - 02:06:05.998, Speaker B: That's it. For this hack, we integrated portis that allowed us to build a mobile version of the fund. We also used balancer and uniswap pools as a source of Flash arbitrage opportunities. For flash loans. We took inspiration from Ava and our fund earns interest from Ava and Compound. So what's next? We want to add gasless network token support, enhance Ueux even more, add ability to create your own pension plan. Add community governance for main fund parameters, integrate a stack protocol to allow privacy transactions, add support for various tokens, and add support of different arbitrage strategies.
02:06:05.998 - 02:06:12.740, Speaker B: That's it from us. Pensify is deployed on Ethereum Mainnet and Covenant testnet. Thank you very much.
02:06:20.010 - 02:06:22.840, Speaker A: Yeah, so I can answer your questions now.
02:06:24.650 - 02:06:42.590, Speaker B: Thank you for the presentation. For pension funds, the usual end goal is to earn sustainable interest over really long time horizons, 30 40 plus years. Curious to hear how did you decide to build a pension fund on crypto?
02:06:44.050 - 02:07:56.642, Speaker A: Well, in this demo, we set up the deposit period for two days and withdrawal period only for one day. But in general, we think that this should be long term strategy. So if you want to invest long term or to have your savings for long term, this fund may be for you. Cool. So would the idea be, Pavel, that you'd have different funds with different deposit periods and withdrawal periods, or is the idea to actually have kind of one big fund and then have different payouts directed out of that single big fund? Yeah, the idea to have one big fund, and right now we only have one strategy for the whole fund, but we have plans to improve it and have individual plans. Very cool. I think it's a very compelling concept.
02:07:56.642 - 02:09:10.460, Speaker A: And I also will comment and say that the idea of using all of these risk free strategies to earn, yield, and creating a pool of investment fund to invest in those strategies, that's a very interesting and compelling concept that I think is pretty unique to DeFi. So congrats on kind of pursuing that. Yes, I think you guys did a great job. What do you think is an underappreciated aspect of your project? Under what? Underappreciated something that you'd like to draw attention to, maybe that you're proud of. It could be really anything. Well, I think there should be noted that there is two strategies. The one strategy for long term term savings and another one, if you just want to get money right now, then you can also use our Arbitrage board and the whole fund will benefit from this.
02:09:10.460 - 02:09:26.890, Speaker A: Not only you got it. Makes sense. Very cool. Awesome. Thank you so much, Team Pencify. And this concludes our Friday of Demo. And this is our Day five.
02:09:26.890 - 02:10:09.860, Speaker A: So I just want to make sure I give a quick reminder to everybody here on this call on the live stream that our finale is set to be on June 2. That's this coming Tuesday from two to 04:00 p.m.. Eastern, where all of our top teams from this entire week will be presenting to our judges panel that's on the screen we have Robert Lechner, Vitalik Buterin, Astani Kuluchov, ashley Shap, Thomas Bertani, and Andreas Antopoulos. So I want to thank our judges again for giving us the time and their feedback to all of our teams. And we will be following up on Twitter with some of our highlights from today and the rest of this week with all of our demos. And with that, thank you so much for watching Take.
