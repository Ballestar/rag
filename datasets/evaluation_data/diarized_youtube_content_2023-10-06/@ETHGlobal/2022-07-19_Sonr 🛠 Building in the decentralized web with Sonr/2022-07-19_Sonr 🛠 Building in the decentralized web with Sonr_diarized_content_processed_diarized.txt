00:00:06.090 - 00:00:31.890, Speaker A: Good morning, good afternoon, good evening. Depending on where you are, we have our second workshop of the day for Hack FS. We have Michael and Prad here from Sonar, who are going to be doing a workshop on building in the decentralized Web with Sonar. Questions go into the zoom chat and they'll answer them at the end of the workshop. And with that being said, I'll pass the mic off to the two speakers.
00:00:32.050 - 00:01:05.940, Speaker B: I guess. Let's get straight into it. The Internet world is at an impasse. With increasing pressure from users for freedom of speech and unwillingness from monolithic companies to loosen their indoctrinated moral grip, humanity loses as a whole. The Internet contributes to 12% of global GDP and has grown seven times faster than any sector in the past four years. It's clear that something so substantial to our economy should facilitate the proper measures in order to ensure that users won't be exploited. Correct.
00:01:05.940 - 00:01:40.734, Speaker B: Can we move? Next slide. This is precisely the problem that my team and I have been diligently working on for the past six months. My name is Prad. I started coding when I was twelve, making one of the first 5000 apps on the App Store. Over the course of 2021, I wrote the fourth most code on GitHub building key points of infrastructure that are used in Sonar today. And most recently, I was a guest lecturer at MIT's Sloan School with other notable speakers like Vitalik, the creator of.
00:01:40.772 - 00:02:11.910, Speaker C: Ethereum, and yeah, I'm Michael. I was in big tech prior to joining Sonar. Companies like Google and Microsoft joined Proud about a year ago and his mission to rebuild the Internet. As we'll kind of describe, we're hoping that by the end of this presentation, you'll also be bought into this idea of rebuilding the Internet for the next hundred years and also kind of get an understanding of what that will look like in practice and how you can start building with Sona.
00:02:14.010 - 00:02:14.760, Speaker B: Right?
00:02:17.050 - 00:02:17.800, Speaker C: Okay.
00:02:19.050 - 00:02:31.310, Speaker B: Rebuilding the Internet is not an easy task to explain. Luckily, I'm not going to do it myself. So here is a quick video we put together that provides a brief overview to the Sonar Ethos.
00:02:32.450 - 00:03:15.702, Speaker D: Imagine a world where you can register for an Internet driver's license, where companies can't sell your data away to advertisers without your consent. This isn't some far off utopian world, but an actively developed solution called Sonar. Every time you use a new app, sonar instantly verifies you based on patent pending blockchain technology. At Sonar, we realize that you'll have an infinite number of accounts to manage, but you'll always have a finite number of devices that are connected to the Internet. Be it your phone, TV, computer, or even fridge. All Internet connected devices will be recorded as controllers for your driver's license. We like to call these devices on Sonar.
00:03:15.702 - 00:04:20.160, Speaker D: The motors motors all run on the Sonar Highway system, a real time peer to peer network where users have full control of their data and interactions as opposed to being dictated by monolithic companies. The highway provides a full plethora of upgrades over the base Internet to facilitate all the active motors, including Discovery, Exchange, Transmission, Verifiable Objects and many more. The highway helps point motors to different destinations. And in our metaphor services and applications, developers can easily and quickly create user provided, secure and immersive Sonar powered apps. The possibilities are endless when it comes to application built on Sonar, Verifiable, social media, identity for everyone, easier contract negotiations, secure collaborative productivity tools, real time games with Transferable, in game NFT Assets and much, much more. At Sonar, we truly care about making this utopian vision possible and we hope we inspire you for the future to come.
00:04:21.570 - 00:04:45.640, Speaker B: Here's an open secret we're not the only ones who are working to build this. About five weeks ago, we had Jack Dorsey introduce Web Five. I know that they've been working really hard over there at the Square Team with almost 52 whopping code commits. I joke, but I truly believe that this is a good signal that we're working on core infrastructure that needs to be in place for this space.
00:04:52.590 - 00:06:03.570, Speaker C: With that, want to kind of go into how you as a hacker can get started in building in this rebuilt internapus. So the kind of mini example we're going to talk about for the next few slides is a hypothetical application called Join Me. This would basically be an application where users can create a group chat with all of the people presently located around them. So imagine you're in a physical room with other people surrounding you, and you want to be able to add everyone to a group chat without necessarily having to manually communicate with each person one by one and get their info. So to kind of understand how you might build this basic group chat creation app, you need to first understand some of Sonar's core modules. And the three primary ones that we'll go over are shown here. The first one is called Schemas.
00:06:03.570 - 00:07:05.380, Speaker C: So these are Verifiable types for the different apps and they're all backed by the IPLD spec, which you can kind of read more about in our documentation. There are channels which effectively enable you to make all of your applications multiplayer by default, meaning that you can have different peers subscribe to channels and have interactivity across peers in that way. And then there's storage. So leveraging decentralized storage like filecoin IPFS. You'll notice in our prizes we mentioned Filecoin specifically as an area of interest in terms of exploring. So definitely love to hear ideas involving that technology as well. So these are kind of the three core Sonar modules and we'll sort of illustrate how these can kind of be combined to create the type of application like Join Me.
00:07:05.380 - 00:08:32.240, Speaker C: So as part of rebuilding the Internet, we're also building out the tools that you need as a developer to actually build on top of this new internet experience. And some of the key toolkits we have are SDK known as Speedway, which will essentially be a portal to quickly produced decentralized web applications, coming with built in privacy and also allowing you as a developer to kind of focus on your user. And so in that kind of explanatory video, we talked about a sort of user centric view of data, meaning that users have full sovereignty and ownership over their data. And this is also kind of the core element of our SDK. And so as a developer, you're sort of building from this kind of frame of mind and then there's also compliance with the different kind of key specs like W Three and Fido. And this is also ultimately going to be a no code solution. And so beyond just developers, ultimately we hope that anyone will eventually be able to build in this decentralized web paradigm with very minimal kind of overhead in terms of code ramp up.
00:08:32.240 - 00:10:02.110, Speaker C: And then another kind of attached element to this is called Nebula. So we're going to basically have a component library that allows you as a developer to build an authentication, like basically replacing passwords and seed phrases with device oriented access methods like biometric authentication. So think like Face ID, Touch ID, really kind of making the access process for your data more intuitive and more aligned with what you're already likely used to in terms of your current and existing applications. And this would be compatible with different front end libraries like React Flutter, React, Native, and Swift. So trying to be as interoperable as possible with kind of the common frameworks that people are used to. And also kind of implementing a special series of encryption methods allowing this to be as resistant as possible even to quantum computing. So, going back to join me on the left, we have a kind of architecture breakdown of what this looks like when you combine the core modules and the key modules that you'll see here being primarily used are channels and objects.
00:10:02.110 - 00:11:15.830, Speaker C: So channels like we mentioned, are where you basically publish the key information that's either being listened to or published by the different peers in the network. One of the channels you'll want to have is like a nearby channel where let's say you're constantly publishing the actual locations of the surrounding peers, their visibility. So there could be a scenario where someone was once visible in the peer to peer network and their visibility has changed and maybe their display name. So I want to basically know that Prad is nearby, know that his name is Prad, so that's a display name and then know his actual location in the room, let's say. And then the other channel here is the chat group itself. So this might be where the actual messages are being published. So you'll see that the elements of message which is the object being published to chat group, are text but then also something known as a did or decentralized identity.
00:11:15.830 - 00:12:24.780, Speaker C: And this might be in the instance where messages are being signed or there's some way to basically secure access to your message data. So you'll only enable people to see the messages if they're able to sign the did appropriately. So this is kind of a very basic example of what a join me type of application would look like, where the key channels are nearby versus the chat group for the messages itself. And you can kind of deconstruct and rebuild this with the core modules of Sonar. Other kind of call outs are there's a concept of filtering. So channels can take a property where, for example, you can filter certain people from joining a channel. So this would be, for example, if you only want certain people in a group chat who appropriately satisfy the filter property.
00:12:24.780 - 00:13:42.018, Speaker C: And then there's open location code. So this is an algorithm for encoding actual location or longitude latitude information, which could also be a kind of important element in building this type of application. So this is actually not too far from one of the very first apps that the Sonar team is building internally, which will be a chat app known as Beam. And we basically aim for Beam to be the last chat app that you'll ever need to download because it'll be interoperable with other existing apps like Imessage, Slack, SMS. It'll also be compatible with crypto, meaning you'll be able to send the Sonar token and other key tokens in line with your chat experience. It's also coming with the built in kind of AirDrop style features like discovering which peers are nearby and being able to share data securely with them. And this is all kind of being built out again by the Sonar team.
00:13:42.018 - 00:14:57.100, Speaker C: But part of our goals in this hackathon is to challenge you guys to take our technology and build on top of it. So as far as what else you can build with the Sonar experience, so there's collaboration tools. So because you have the ability for devices to securely share data with each other, that means that you can enable more secure collaboration and data sharing experiences. There's also multiplayer gaming. So again, you have this built in peer to peer networking as virtue of the motor nodes and Sonar combined with the highway nodes. And so you can create leaderboard experiences, RPG gameplay and lobbies with the ability to join by different players, all as a function of the built in Sonar technology. And then there's also Linked services, so creating extensions for other applications given Sonar's compliance with the different specs that we mentioned.
00:14:57.100 - 00:16:16.038, Speaker C: So as far as progress up till now, as Prad has mentioned, just a few weeks ago we heard talks around Web Five. A lot of what Sonar has already built out is very much in line with the technology being described there. We've already sort of built out the key elements of the motor which facilitate the peer to peer network and the ability to kind of share data across devices. And we have several pretty exciting betas coming up, including the speedway or that dashboard for essentially doing no code app building on Sonar. We'll also be doing different tests for Beam, the chat application that we mentioned. And then we'll have a learning program where you can sort of go through learning modules to learn essentially how to build on Sonar. So we have our links posted in the kind of main Sonar landing page for Hack FS as well.
00:16:16.038 - 00:16:36.010, Speaker C: But just to kind of go over that. Sonar IO is our main site. You can find our github@github.com. Sonario, Docs. Sonar. IO. And if you scan the QR code here, it'll also kind of take you to all the main links.
00:16:36.010 - 00:17:19.430, Speaker C: So we'll be here throughout the hackathon. If you have more questions, we're kind of here to kind of guide you through the building process. And you can also email us at team at Sonar or contact us in the channel. So I'll keep up the QR code, and I can't see the chat since I'm screen sharing. So if someone wants to read out the questions, we can take a stop at answering them now or in the channel. Were there any questions?
00:17:22.340 - 00:17:24.710, Speaker B: No, I don't see anything right now.
00:17:25.960 - 00:17:33.156, Speaker C: Okay. All right.
00:17:33.178 - 00:17:40.650, Speaker A: Well, I guess we could just end things. Oh, I think you have a couple of questions popping up now.
00:17:44.060 - 00:17:46.090, Speaker C: Pratt, do you want to read out the questions?
00:17:46.940 - 00:18:54.352, Speaker B: Yeah. How does the authentication work to authenticate? So we're using a system called DIDs. So if you guys are familiar with MPC, which is a mechanism for essentially having multiple devices, being able to calculate this seed phrase through this direct peer to peer connection, and this is recorded on a did document stored on the Sonar blockchain and by leveraging device biometrics. So you would type in, I guess, Earl snr a Face ID would pop up if you're on your phone. Or we would be utilizing WebAuthn for Web, and it would be essentially that mechanism for that particular device. And in terms of business model of Sonar gas fees from Zach, sonar is built on the Cosmos ecosystem, so all the blockchain specifications are pretty standard, and it's like $0.01 gas right now, I think.
00:18:54.352 - 00:19:36.876, Speaker B: Seven second block finality. And in terms of our business model, we're currently partnering with Prism Group in order to have our tokenomics be completed. The first phase of that engagement has been done, and you should be having more updates on that after phase two is done in around three weeks. Yes. Earl, the idea is to have a smooth transition from Web Two applications into Web Three. And Carl's question, will users be able to maintain their anonymity? Yes. So since the data is in control of the users, they're able to provision what aspects of their identity that they do want to share.
00:19:36.876 - 00:20:45.280, Speaker B: Let's say you just only wanted to give your wallet address and just be completely anonymous on an application, like, I don't know, a burner instagram account powered by Sonar or something. You would be able to go through with that and that mechanism exists just like how it does in traditional blockchain systems. And will they be able to have an identity that's unrelated to their real world identity? Multiple identities? Yes. So like in the Didcument, there's a field known as the, also known as field. So basically leveraging that along with our HNS resolver that's built into our highway to make sure that all these Snr names are resolvable basically by all the motor nodes involved with the architecture. And as Michael pointed out, we know the docs need a little bit of refactoring. So a lot of these questions, these are good, we'll definitely add them to the docs to answer.
00:20:45.280 - 00:22:11.176, Speaker B: Zach so one of the cool ideas that we actually got this is what is it the blocker for this is for us having a Unity 3D plugin. But we were at Hack UNT for a hackathon and basically talking to a couple of college students and one of them suggested the idea of having a Pokemon Go, which is a real life AR puzzle. And since it would be able to be powered by this chain, storing the objects by location, let's say you collected like two or three pieces of a puzzle, put it together minted as an NFT, and you have that as a collectible in the game as an asset. I think a couple of blockers for this is number one, you have to have cool enough characters like Pokemon to actually make this possible because that IP is going to be crazy. And yeah, the Unity plugin would be really cool, but aside from that stuff that you would be able to build immediately, like a DocuSign for Sonar makes complete sense. Like digital signatures being powered by your identity here and sharing the file directly between peers makes complete sense. Aside from that, I feel like there definitely should be an email client because the HNS domains basically have MX records that we can host.
00:22:11.176 - 00:23:19.764, Speaker B: So let's say you email Prad at Snr or Zach at Snr, you would be able to hit their email address directly. But the problem is that we don't have clients for it to be. Yes, yes. So this is known as capability delegation, and you would be able to delegate different or other IDs to be able to access certain assets. Or if you do capability invocation, you would be able to delegate this permission for a completely new account to actually manage that resource. How is it access controlled, handled, if any? Yeah, and since it's on chain, you just get the document and you would be able to read which DIDs are part of the capability invitation or mean like to Osid's point. I guess that's one of the benefits of actually having a blockchain to structure data that way.
00:23:19.764 - 00:23:32.250, Speaker B: But we do like our friends over there at Ceramic. They definitely what is it? Have a really good toolkit for IPLD objects and all that stuff.
00:23:33.100 - 00:23:33.850, Speaker C: Yeah.
00:23:42.880 - 00:24:06.550, Speaker B: All right. If that is it, be sure to follow us on Twitter. Definitely. We'll be putting out an update later this week. And, yeah, if you want to keep progress of our GitHub, that's probably where you'll get all of our updates. We're always churning away. Yes, yes.
00:24:06.550 - 00:25:16.510, Speaker B: And let me know if I'm pronouncing your name wrong, but Osin following up on ceramics on our buckets are acting as folders for items like Ceramic streams. I think you could compare ceramic streams a lot more to the channels because it's like the real time data transfer and you can think of the buckets, like, let's say that you sign up for this Join Me application. The user would have a specific join me bucket where that application information is being stored on behalf of the user. And they would be able to delegate the access to these resources to other applications, like if you wanted. To build extensions or integrations with other services or users also have a specific bucket for being able to manage this authentication data. With the MPC I was talking about earlier. And yes, buckets hold a bunch of so, like, since the schema is defined on chain and that itself is just like the type definition of what an object is, the buckets in this case is basically pointing to where you can find the user data.
00:25:16.510 - 00:25:18.510, Speaker B: Yeah.
00:25:23.120 - 00:26:06.040, Speaker A: Cool. All right, I think that's all the questions we have for now. Thank you so much to everyone for attending and joining. The team is available on Discord in the sponsors on our channel, so feel free to reach out if you have any questions and otherwise they have their team email on the slide as well, so feel free to reach out there, too. And for Michael and Prad, thank you so much for taking the time to host a workshop for Hackfs as super interesting and informative, and I hope everyone has a great rest of your morning, evening, or after noon. Thanks, everyone. Bye.
