00:00:06.170 - 00:00:51.530, Speaker A: So how many of guys here have MetaMask? All right, almost everyone with the ones who don't have MetaMask, please install that. I think that'll be very helpful. The second thing is how many of you guys are backend developers here? So it looks like almost everyone knows backend or about front end coding. It 30, 40%. And what about solidity developers? Okay, so that's about 25%, I guess, right? And that's not a bad number actually, because I think all of us over here are basically here to learn new things. But then I think this conversation over here will be much more relevant to the ones who are front end and backend developers. And for smart contracts you need to use other layer ones like Polygon or ethereum.
00:00:51.530 - 00:01:52.910, Speaker A: Right? Now, quick thing about US stacko is a decentralized cloud. It is the world's largest decentralized cloud. And I'll go through the numbers soon. Talk about the vision first. Right? So first of all, the way we look at this thing is we kind of challenge the status quo by empowering humans, machines, dows to govern their application infrastructure that is decentralized, unstoppable and extremely easy to use, right? And by this basically we stand for ensuring we provide a freedom of speech and expression, right? So that's in a sense what you do because right now if you want to run applications the front end and the back end, all you have to do was rely on these settled cloud providers like Amazon, Web Three, Amazon, AWS and S Three for storage and then also comes along with GCP, Azure, you name them. Right? So that's where StackWise comes in. As fundamental mission is that we are a cross chain infrastructure protocol that is basically bedrock for all the future generations of applications to come.
00:01:52.910 - 00:02:30.010, Speaker A: That means not just your smart contract layer, but also your front end and the backend applications can be run on the decentralized web. A quick thing about myself is I am a finance and international business major from Harvard University. I came from US last year, moved here permanently, hopefully for some time at least. Mechanical engineer by background. But I worked in the cloud space since almost over twelve years, ten years. And I have got patent in Kagenic engines and basically helped build AWS during the early days of the start. That's 2011 ish.
00:02:30.010 - 00:03:14.682, Speaker A: So what are the current landscape? Right? So the first thing is that we talk about uniswap. And uniswap is something which everyone knows. How many of you guys know uniswap? Okay, that's a good number. But we all know this thing that they kind of delisted all the security tokens from their website and that is kind of very ironical for someone saying there's a Web Three project. But in a sense they can be forced by the governments and the Secs to kind of self regulate or have them remove the security tokens because it comes under the purview of the SEC when you talk about a parallel equal of Parla. So how many of you guys know Parla? Very few, I guess. A few hands.
00:03:14.682 - 00:04:16.720, Speaker A: That's it. So how many of you guys know Donald Trump? Everybody, right? Cool. So you probably also knew before Elon Musk came in, he was banned from Twitter, right? And that was because of whatever ideologies they had. But in a sense, if you think of it this way, not really talking about what ideology you believe in, but thinking of this as a bar on people didn't like what he said, so they kind of banned him from there, right? So Twitter kind of removed Donald Trump. They ended up using Donald Trump and his community started to use an application called Parla. And guess what happened, right? They used Parla and the AWS completely shut down paralla application from the servers, right? Not just that, apple App Store also removed it from their App Store. So that's kind of you see this is coming more and more in this world where when we want to start expressing ourselves, there is going to be a complete industry trying to protect itself and that's kind of what we kind of fight for.
00:04:16.720 - 00:05:38.802, Speaker A: Other thing is that why do you think Web Two has been so successful? Right? But what are the problems right now? Also I think which comes along so the first thing, a drawback of Web Two is that the incentive mechanisms are not aligned. And when I say that it's basically the shareholders of the company are the ones who benefit from the protocol or their services, but not the people who are using it. So that's kind of the dramatic changes in this outlook. It is pretty expensive to operate for the ones how many of you guys have built on AWS or create servers and launch there? Okay, so that's about 20%, right? And you are probably also familiar with DevOps and one of the most expensive engineering domains and it takes a lot of things to fall in place to make it work properly. So for instance, if you were to get a production environment up, it takes about six to seven weeks to get a stable production environment ready, right? Just to make sure everything works fine and not nothing falls and drops apart. But that being said, what really changes things is that is that something which we should be worrying about, right? Because first of all, it may take you that long, but yet we have seen time and time or time and over again that these services do not really even though they're production, all the secrets are lost, people get hacked and whatnot LastPass, they got hacked yesterday. So that's kind of concerning when you talk about someone who's a security company also can't protect their environment.
00:05:38.802 - 00:06:26.806, Speaker A: So that's something which is kind of concerning. So again, no anonymity, right? That means if you are deploying, let's say on AWS, you need to first give your grandfather's details to Amazon, right? And that's kind of ironical. How do you really work with this at scale? Something like a Dow can never ever kind of own it because again, Dow doesn't have a grandfather, unfortunately, right. But for people to really run this a community to govern this, the only way which we are aware of right now is a Dow. And that's kind of an issue which comes to Web Two and why it can't really be used in a Web Three world. Now that bars the question what we have so far. Yes, the Web Two provides us extreme easiness of use.
00:06:26.806 - 00:07:34.586, Speaker A: It does provide us lot of these benefits of great user experience. It has ways of ensuring people can access the software faster. But is it really decentralized if you're using AWS even though frontend layer? Because all that so far we've heard like in the last few years is we have smart contracts, they call it decentralized, but obviously they're using all these central services. So as an example of Facebook and how do you decentralize something like that. So, first thing is, as an example, I've just given like 12345 pillars and again there are many more. But just for simplicity and trying to fit something on the screen, one presentation layer, that is the UI interface, right? Then you have the data storage layer which has something like S Three or databases and whatnot then you have the AI analytics machine learning. Again, for integrations, also like for communication, you require services which can kind of message and you can receive messages, be notified when an event happens and then of course the data sources, right? That means that you need people to add data to Facebook so that you can actually use it as a social network.
00:07:34.586 - 00:08:57.266, Speaker A: So if today, if we have to build something like Facebook on the decentralized web, the two things which we have right now so one is the data layer, that is the storage, that means S Three, you have IPFS for data, then you have blockchains like Ethereum and Polygon as services and then you have chain link, right? For any others, of course, but chain link one of the prominent ones which kind of get off chain data on chain, right? So that is kind of something which we have so far, but everything else currently runs on AWS. And again, I'm not naming AWS alone, but I think it's a generational problem, right? And how do we solve something like this in this new Web Three era we're trying to talk about? So that's where Stackos comes in. Stackos is a replacement for all of your presentation layers, your AI analytics layer, your integration layer, and again, there are several of those, right? And I'm sure you guys can tell what are the different services which kind of rely we rely on AWS even though we are kind of supposed to be decentralized, right? So the real things which Stack OS really solves for you. First of all, the high DevOps cost is eliminated. That means you don't require to run infrastructure. You don't need to know AWS, you just need to know any of your normal regular applications and docker. So how many of you guys know docker here? Oh, that's the most number of hands I've ever seen in the conference.
00:08:57.266 - 00:09:13.914, Speaker A: So that's amazing. Right? So all you need to do is dockerize your application and you're ready to go. Right? And I'll come to the details of how it works. Really. Second one is environment preparation. Again, it cuts down from seven weeks to 30 seconds. So you can get your application live in less than 30 seconds on Stack OS.
00:09:13.914 - 00:10:03.946, Speaker A: That's kind of the power it kind of brings to you again, when you're trying to build something crypto native. How do you make sure that you can pay without your credit card? Because again, you don't want to share your grandfather's details to get access to a bank account and do whatnot right in a decentralized web at least. The fourth thing is the governance, right? That is again, as a dow, as I said earlier, that this is kind of what it kind of solves for. How do you ensure that if the community wants a feature to upgrade, they can vote for it and agree that the next version should come out, right? So that's kind of this thing works. Now, this is the older slide. The new version, which we have is probably makes this thing into two steps, right? But first thing is that to deploy anything on Stack OS, you need to do docker. So dockerize your application, right? Once you do that, you just go reserve Compute on Stack OS.
00:10:03.946 - 00:10:44.298, Speaker A: It's just say that you want to purchase 500 megabytes of Compute for Ram and let's say 200 millicores of Compute. And it can be very granular, as granular as you want. And after that you can just go to the UI and you just click a button and it just deploys those things on Stackos. So that's kind of how easy it is. I'll go through a demo just of that. So, as I said earlier, so we are the category leaders in the decentralized cloud and the number is talk for itself, right? But it is the world's most utilized and the fastest growing decentralized cloud. So we have total about this is 73.
00:10:44.298 - 00:11:22.198, Speaker A: It's an older version I think we have about morning or yesterday is about Aver hitting at 81 million requests website served to the network. You have about 3500 plus applications deployed and we have about almost 1600 applications running on Stack OS, right? And that's kind of the power of what we have. In fact, we went main net, we've been working for over six years. By the way, guys, it's not a new project, we just came out from nowhere. But our main net was last in month of August. Interestingly, after August in next five months. In January of this year, we overtook the largest competitor and now we are about four to five times larger as they are.
00:11:22.198 - 00:11:52.894, Speaker A: So that's kind of what our growth story is. Keep an eye on the version two that's coming and version two has got a lot more features and way to distinguish ourselves. We were trying to get it done through before this ETH India, but looks like it's going to be early January. So we kind of worked it out and obviously please be in touch and we can talk about those details as well. Again, if you want to contribute to Stack OS, reach out. We have a booth out there. We're really good and one thing to do is that you can join Ambassador program and also follow us.
00:11:52.894 - 00:12:12.390, Speaker A: Right again, this will be recorded and you can always stop by our booth. One thing I want to mention is for the ones who are starting up, we have some really good venture capital firms as well. So please do go to our desk. I'm not sure if we have forms here. Fill your details then there for that. And we have some contact with VCs as well. So if your product is good, please reach out.
00:12:12.390 - 00:12:40.622, Speaker A: Follow the seed. One of the best venture capital firms is kind of based from Australia is over here. Andre is here. He was very kind enough to accept a limitation here. So please reach out and I think we can make some great connections before this. Now let me just get to the next part of the section, which is next part of the presentation, which is kind of just showing you how it is and how easy or hard it can be for you to deploy. Right? So this is a new account.
00:12:40.622 - 00:13:23.958, Speaker A: So what I'm going to do is first of all, all of you guys, can you just try to see if you can import that wallet into your MetaMask? You've been able to do it. How many of you have been able to import the new wallet which is there? Okay, so does everyone have MetaMask? I know the crowd is increasing. Guys, FYI, if you're not able to hear me, please feel free to come in front. There is your headphones, which you can use to hear me. You guys, did you all find a barcode in front of you? All of you to raise your hands if you have found that barcode on your seat. Okay, so that's a good number of people. All right, so just again, open MetaMask on the polygon network, scan it and that ball will be imported.
00:13:23.958 - 00:13:52.134, Speaker A: It will have some credits for you to use. Use them. If you don't use them, it'll probably be taken away later on, but please use them. I think it'll be of a lot of value. All right, so once you have MetaMask, what I would do is if I'm using my phone to log in, I would just use Wallet Connect and then you can just scan that with your MetaMask. It'll automatically just log you in, right. For this presentation, since I want to show you what's happening here, I'm just going to use my laptop to really log in and stuff.
00:13:52.134 - 00:14:25.918, Speaker A: So I also have MetaMask on my laptop. I'll just say MetaMask and ask me to connect to a subnet. I'll pick authority and once I do that, I just signed a message. Once that happens, it will take me to this next section where you can basically see that you don't have any apps deployed. But this is kind of the screen you'll see in front of you right now. Let's say I want to do a few things. Maybe I'll start with giving an overview of this right of the dashboard.
00:14:25.918 - 00:15:21.986, Speaker A: Again, all the deployed apps will be shown here. And over here on the top left, you'll see different kind of things. So let's say first we'll show you the CPU, how much you have bought and how much is being used, your bandwidth, your memory and your storage, right? So you can basically pick what you need. And once you do that, you can go to the hardware place to basically show you what you can purchase, how much you can purchase. So you can actually just click here and purchase resources and then just add how much compute you need, right? And then you do next, and then you are able to pay, right? What I'm going to do right now is give you a much more simpler example. But if you have to go to the App Store, you could go to App Store and once you're there, you have a set of applications already here, right? So what I'm going to do is, as an example, show you how to deploy an app and without actually paying for it right now. But the workflow itself, I think it'll work.
00:15:21.986 - 00:15:57.742, Speaker A: So deploy custom image. But one disclosure here in good faith, this is a new UI which we have. So I hope you guys don't face any bugs here, but if you do, please report them. It'll help us in trying to just make it well. Again, the domain name, which I probably didn't mention earlier is app V two stackers IO, right? And that is a new domain for the new version of UI in case it's not working for you or there's some glitches here or there, go to App stackos IO. That is the older UI. So this is the older UI, but this is the exact same thing.
00:15:57.742 - 00:16:46.534, Speaker A: It's just a better experience over here. So let's say I'm going to pick this image in Docker. So this is an open source Ethereum Explorer. So in that when you kind of go down, you would traditionally, let's say for this example, you run this command to run this Docker image locally and get that application running, right? So on stack. Just keep in mind that you see is it clear enough? Yeah. Okay, can you guys read this? Okay, so you can basically if this is a command, you run your port 80 80 your image name and whatnot. So we just come here and do this exact same thing.
00:16:46.534 - 00:17:09.530, Speaker A: Copy your docker image name, give your tag name there and your application name. So I'll just keep it Explorer. Next. Here is where I put the port IDs. So this port is what, your container port and what do you want to exposed? So you say 80 80 and then you have your host URL. This can be any domain you want. I'll just take for now for this case, I'll just take this as domain which Stackhost provides you by default.
00:17:09.530 - 00:17:33.986, Speaker A: Once you're there, you can basically save it stateful set. You can basically set a Replica account. So let's say I want one as a Replica account and then if I want Stateful set, I can fill that up. Or if I have to pass arguments in docker, you can pass arguments as well. So you can pass arguments. If you have environment variables, you can just put them here. If you have a command which has to pass at Runtime, you can do that.
00:17:33.986 - 00:17:52.954, Speaker A: But in this case, for this example, we don't need any, as you saw already. So I'll just do next and I'll pick my compute. Keep this prices. You don't necessarily need to pay 100% for everything. You don't need a four gig machine to run smaller applications. And in most cases, if you don't have traffic, you can use less. Right? So that's something.
00:17:52.954 - 00:18:11.300, Speaker A: Just pick low and if you need more credits, that's fine. Please reach out. I think you get $5 worth of Stack tokens and like one dollars worth of matic. So if you need more for your application, please reach out to our desk and we'll give you more. For this example, I'll just pick 101gb bandwidth next. It's going to tell me how much I need and stuff. It's telling I don't have any subscription yet.
00:18:11.300 - 00:18:41.434, Speaker A: What I will do is I'll just try to purchase them on the fly, right? So I just do a deploy. It will send MetaMask to open. And here I can just pay for it now. It can take the polygon time to finish the transaction. All of us probably are aware that when there's a lot of load on the network, it intends to become slower. So I'm hoping nobody's minting NFTs, nobody's having NFT sales in the bear market. So the transaction should probably go very quickly.
00:18:41.434 - 00:19:01.486, Speaker A: But it is kind of still the cheapest chain, so it kind of works out really well. There you go. All right, perfect. So you just saw this application got deployed. I don't know, I think maybe like in 510 15 seconds. So I'll just copy the external DNS and the app is up. So that's how quick it is.
00:19:01.486 - 00:19:51.770, Speaker A: To deploy on stack OS, right? And I can assure you, and for the ones who have used AWS, it's going to be quite a while to get anything running. So that's kind of what we really bring in to this space. Now let me give you another kind of example here, right? So I'll just close this and let's say if you want to really see what's happening on the network, so you can basically go run a shell in case you don't want to do this, you can actually purchase your hardware directly instead of going through at that deployment time. So let's say I want to do 500 millicores of CPU memory. Next. Again, I'm lucky to just have 2 million stack in my wallet, but not everyone of you will have it. So please reach out if you need more.
00:19:51.770 - 00:20:38.986, Speaker A: So right now what I'm doing, I'm basically giving a demo of how you can purchase compute separately from a deployment, right? Okay, error, but that's fine. But I'm sure it's got already bought here. So if you see this 500 has been bought here, all I do is now I can just basically go and deploy any apps right as I want. In this example, let me just see if I can launch a shell to see what's happening there. So I can create some credentials and password, username passwords to log in. In fact, the shell is just as an equivalent of what you would as another application on the net web. So it's going to take some few minutes to start up, but let me see if it's already up here.
00:20:38.986 - 00:21:07.806, Speaker A: Perfect. It looks like it's there. So I can just pass the Credential, which I chose to create that service. And then you can basically save things, right? So how many of you guys know Kubernetes and commands for that? Okay, decent. You can easily just do the same thing. So all your Kubernetes commands will kind of work here. Get pods, right? So this is basically how you see the services which are running right now on my network.
00:21:07.806 - 00:21:45.136, Speaker A: My wallet is my network here. That's what controls everything. So you'd see Explorer webpdy and stuff. So the other two applications which are running, right. So you can again, troubleshoot, if you want to see logs, you could do cubectl logs and you can basically see what logs were there. And if you refresh the page more times, you can see that if you couldn't tail it again, the commands are just as it is the same general commands which you use for Kubernetes. It supports that I think it is F, if not wrong to do a follow, right.
00:21:45.136 - 00:22:22.012, Speaker A: So when people as and when people are serving the website so you just see I just press cementers here. I'll refresh this page and you should see that coming, right? So that's kind of you can actually see the logs as well as they're generated, right? So, yeah, I mean, otherwise you can go to your App Store and you can pick an app from this place pretty easily. So for the ones I'll just show a game, like how fast it can deploy. If an app is on the App Store, you can just click and run it. So for this one, I'll do hexgl deploy. I'll just use the same name. I can change the name if I want to, but I'll just keep it this way.
00:22:22.012 - 00:23:27.430, Speaker A: Next, everything is pre configured. It's saying I don't have enough compute here, but I will automatically buy as I'm running the transaction resources. Okay, looks like I don't have enough, but if you did, you'd be able to see an app here, right? Let me see if I can just delete something and create without paying. So I'll just go here. I'll just delete the shell because I think it takes pretty good amount resources. I'm not sure if I have enough again. Still.
00:23:27.430 - 00:24:27.360, Speaker A: Maybe I do. All right, so I'll just come here and let's say I want to deploy this Hexgl game and everything. As you see, I've got enough capacity available now deploy. So that game now is deployed on Stackos. So you can just copy that domain enter and app will be up in a second. So that's the Internet speed not my fault. In a second, it'll probably just load up completely and then it should be pretty easy to run.
00:24:27.360 - 00:25:19.020, Speaker A: So this entire game right now is I don't want to show off my skills of not being able to play properly, but that's kind of what it is, right? So this is a real game which is working on the decentralized cloud. And you saw how quick it was to really I hope you kind of enjoyed what I just showed you. If there are any open questions, please ask those questions. But yeah. All right. Yeah. Anyone have any questions here? Guys, there's a microphone which is going around.
00:25:19.020 - 00:25:36.890, Speaker A: Okay, there's a question there's running the servers.
00:25:37.390 - 00:25:41.926, Speaker B: Is it a group of operators or where is it all hosted?
00:25:42.038 - 00:26:15.174, Speaker A: Yeah, it's a good question. So what happens is that there are people around the world who can run these networks. So basically we have an orchestration layer on top of Kubernetes, right? So people or operators around the world who can run Kubernetes servers, they can basically launch it, install our services there, and then connect it with overall the blockchain network which we have. It's a layer one for infrastructure. So that's how that communication and everything gets handled. As I said, with the V Two version is much more complex and it's much more powerful as well. But that's kind of how it works.
00:26:15.174 - 00:26:33.100, Speaker A: Anyone in the world can basically create an account. And with your obviously MetaMask, not taking your grandfather's details, but you'll be able to just add your clusters to the network. And when people deploying, they just deploy in those servers and they get paid for the cluster operators get paid for hosting the applications there.
00:26:33.950 - 00:26:39.690, Speaker B: How are you ensuring that the cluster operators serve the right content and they're not acting maliciously?
00:26:39.770 - 00:27:17.478, Speaker A: Yeah, so that's question of verification. Right. And there are a few things. So what is done is that when people are running services, there is another service which sits on the cluster. And his job is to basically verify what's running there. And then what happens is, since his network, all the clusters are connected with each other, they can keep pinging to ensure that the version which is there is true version. And the moment they detect that there is a malicious cluster doing illegal things, they will lose their stack tokens and they have some more things in place as a collateral, which the guarantee is there for, and they just get slashed.
00:27:17.478 - 00:27:41.490, Speaker A: So that's kind of how it works. It's much like the new V two of ethereum. And same thing goes with polygon as well, right? Because if it is a malicious actor or a malicious node, it just completely removes them from the network and they lose their share of things. So that's how we do it. Great question, actually. Thank you. One last question.
00:27:41.490 - 00:27:43.794, Speaker A: Yeah. They never give me time to host this. I don't know why.
00:27:43.832 - 00:27:46.962, Speaker B: So I wanted to know hello? Can you hear me?
00:27:47.016 - 00:27:51.570, Speaker A: Yeah, I can hear you. Okay. Yeah, sure.
00:27:51.640 - 00:28:04.514, Speaker B: So I wanted to understand if let's say I have a microservices architecture, and you said that we have pods. So if I wanted all of the pods to be in a one particular cluster in a specific region because I know my users are coming from us, so why would I want to have it in India?
00:28:04.562 - 00:28:22.174, Speaker A: Can we do that? Yes. The concept of V Two, which is coming actually V Two makes it more easier. Right now, it's kind of distributed. But with the V Two, what happens is that you can create a subnet. So people don't create clusters, really. They create a subnet. And that could be for purposes more than this.
00:28:22.174 - 00:28:42.498, Speaker A: For example, for GDPR compliance, for the ones who want only European regions to be deployed onto. So you can have a custom subnet serving a specific problem. Let's say, for example, gaming, right? And you want high GPU kind of servers and clusters. You can add a subnet for that specifically. Right. So that's kind of the feature which comes with V two. Right now, you basically are kind of distributed.
00:28:42.594 - 00:28:43.960, Speaker B: It's random right now.
00:28:44.410 - 00:28:55.478, Speaker A: It is right now, but I think in January it should be more proficient that way. But talking of it from just this point of view, I think that's how we kind of work. Work, right.
00:28:55.564 - 00:29:06.586, Speaker B: And once that subnet is basically deployed, is it like, only my applications are going to be in that subnet, or is it going to be everybody's else? It will be shared across other, not mine services as well.
00:29:06.608 - 00:29:07.006, Speaker A: Or is it.
00:29:07.028 - 00:29:08.766, Speaker B: Like private to me.
00:29:08.868 - 00:29:58.554, Speaker A: So your application is always private to you. Okay. So the way it works is that any application, when you are signing with your wallet, it ensures that there is a separate isolation of your network just for you. Okay? So even though right now it's kind of protected that way, but it kind of extends it even more further, right? Because if you want to deploy actually, that's a good follow up. An answer to this as well is that let's say you have an application which requires back end, two different back ends, right? Let's say AI thing, as well as database as well. So what you can do is that you can give environment variables for the endpoint within the pod as a pod, so the back end can talk to your, let's say database, all internal to your network. So your wallet is your kind of a special network just for you, which only allows internal communication, right? So that's how it works as well.
00:29:58.554 - 00:30:23.220, Speaker A: If you want to build like a two application or three layer architecture. Yeah, cool. Thank you very much, guys, you're asking me this down, but please sorry. So please come to our desk and just ask if you have any questions, we'd be happy to answer them. We also have discord community. You can join and ask your questions there. So thank you very much for hearing me out and I hope you enjoyed this.
00:30:23.220 - 00:30:25.040, Speaker A: Sorry.
