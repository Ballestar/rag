00:00:06.410 - 00:00:30.810, Speaker A: So I want to introduce Alex Atala from OpenSea as our next speaker. Alex here will be talking about NFT metadata and off chain and how all that works out here. And there's so much to cover here. So what I'll do is I'll just let Alex jump in directly. And without further ado, please welcome from hey Alex.
00:00:32.510 - 00:00:55.140, Speaker B: Hey guys, thanks for having me on. Apologies about the background noise. I'm in a train station in DC. Everything is quiet as place I could get. Let's start with the screen share.
00:01:27.640 - 00:01:30.836, Speaker A: It's still just loading and I'll yeah.
00:01:30.858 - 00:02:38.684, Speaker B: It still says loading for me too. Let me try to do that again or can everybody see my screen here without me clicking? All right, I'll just do so I wanted to do a talk about NFT metadata starting from the beginning and go into decentralized versus centralized metadata and where we see it going down the road. So to start with, let's talk a little bit about NFTs and how metadata fits into the big picture. There NFTs we can break down into a couple different components or a couple different themes that go into them. There's property data. Property data is who owns what and how many of each thing does someone own. Some of these tokens are not truly non fungible, they're also semi fungible, tokens that people colloquially call NFTs, when really one user can own multiple copies of them.
00:02:38.684 - 00:03:47.760, Speaker B: It all of that is considered property data. But for the purposes of this talk, I'm just going to be referring to all of these media attached tokens as NFTs. We have property rights which is abilities that a certain token owner can access by owning the token. These could be things like oh, owners of this token can access another asset that's on chain. Owners of this token can participate in a game that's being run by another smart contract owners or partial owners of some semifungible token can interact with each other in a special method to play like an on chain engagement. And there's a lot of creativity that hasn't really been explored for property rights. There's also on chain history, what's happened to the NFT and when that happened, all the events that involved an NFT on the blockchain going back till it was minted or created.
00:03:47.760 - 00:04:53.830, Speaker B: And then there's metadata, which is basically everything else, what the content of the NFT is, what information there is about it, what media is really being attached to it, that is what we consider metadata. It's a bit of a vague topic, but we'll go into a couple specific examples really soon. So metadata itself we can break down into a couple of different components that we've seen so far. There's images, there's videos, there's animations, all of these can be attached to NFTs using metadata. There's 3D models which are typically GLB and glTF format. There's name, description, properties, information about which address or who created it, and also links to other resources like links to an external site. It could be links to other NFTs, links to the actual contract that you can interact with the NFT or links to other environments that make the NFT special.
00:04:53.830 - 00:05:56.132, Speaker B: So an important website to check out to understand this a bit better and really go into details. If you're a developer is docs Openc IO, there is a metadata standard attached to the NFT standards that you might have heard of ERC, 721 and 1155. But it's pretty simple. So what Openc has done is expand the metadata standard and add rich properties and new things that develop. We've just watched developers adopt over the last three and a half years. Openc started in December of 2018 and back then there was absolutely no metadata standard and most NFTs were just kind of guessing and throwing out random data inside of it from their smart contracts. Over time, more and more developers have adopted similar looking JSON formatted metadata.
00:05:56.132 - 00:06:25.024, Speaker B: And all this site is is a way of collecting the most common and our suggestion for what your metadata could look like. And if your metadata looks like something that represents the files described in this doc, it'll automatically work on Openc. So here's an example. You can create rich traits. Here's. Herbie Starbelly. This is the name OpenSea creature.
00:06:25.024 - 00:07:28.260, Speaker B: This represents the metadata around the smart contract which I'll get to later. There's no creator data on this item, but there could be and then it would display in the description pane right in the middle of the screen we have properties. These are fixed strings that you could just attach to a single NFT and you can give these strings trait type names. So like this is a trait type of base and a trait value of Jellyfish. And OpenSea will automatically compute the rarity of each of your properties so that users can figure out pretty quickly how rare something is and what makes it rare. Users can also click on these attributes in the Openc UI and it will show them all the NFTs in your collection or contract that have that property on them so they can easily visualize and explore your collection. There are stats, these are just numbers don't really fit in any other category.
00:07:28.260 - 00:08:15.312, Speaker B: And there's also levels which are numbers that are out of something that have some kind of maximum value that you want to configure yourself. So these could be things like generation Stamina, anything that has some kind of max value associated with it. Metadata can also apply to entire smart contracts, not just NFTs. Smart contracts are often represented as collections. On OpenSea, a collection is just a bunch of NFTs that belong to some common theme. Typically just one smart contract powers a collection. So we have name and description, we have the image or logo for the collection.
00:08:15.312 - 00:09:13.188, Speaker B: We have the royalty. This is the percentage of each seller fee that goes to whatever the royalty recipient is. And whoever deploys a smart contract can instantly go to OpenSea and configure all these attributes about their collection, even if they forgot to do it in the metadata itself, as long as they own the smart contract on chain. Here's the URL for going a little bit more detail about setting up contract level metadata. Notice that for contract level metadata we have a little code snippet here and I didn't show the equivalent in NFT metadata. It looks like this these code snippets are really important in your contract. For ERC 721.
00:09:13.188 - 00:10:22.768, Speaker B: There is a method called token uri. Token Uri accepts one argument Token ID and returns a string. And this is how Openc will pick up your smart contracts, the URL or the resource for your metadata given a single NFT token ID. In this example, we take the base Token Uri for the whole collection and we append the Token ID to the end of it. So if you had centralized metadata, something like this URL here is a heroku app URL. You'd create your own API that just takes in a token ID at the end and returns NFT compliant JSON JSON that looks like this name Description Image Attributes if your API returns an object that looks like this, it'll automatically show up on OpenSea and after indexing happens, which sometimes takes a few minutes to an hour. Everybody will be able to discover it and search by these attributes on Openc too.
00:10:22.768 - 00:11:07.070, Speaker B: So it's a very programmable web and you don't have to get Opensea's permission do that per se. As long as you actually own all the work and it complies with the terms of service, you will have an NFT up on OpenSea immediately. That's kind of the beauty of the whole concept permissionless innovation on top of Open blockchain. So back to contract Uri. This is the equivalent of Token Uri, but for the whole contract. So here's an example. We have OpenSea creatures description, an image, an external link, seller fee, basis points.
00:11:07.070 - 00:11:40.520, Speaker B: This represents the percentage seller fee that you want to take for all successful sales. So 100 would be a 1% seller fee and fee recipient. This can be a smart contract address or a wallet address. If it's a smart contract address, you can use it to split the royalty between multiple recipients. You just have to call the smart contract to receive it. Next wanted to cover a little bit about debugging metadata. So a lot of developers get their metadata.
00:11:40.520 - 00:12:56.850, Speaker B: Let me rephrase that. A lot of developers want to work on their metadata in real time, especially in testnets, and need some way to see if OpenSea is picking it up properly or if they've been following the metadata standards properly. So we have a validate endpoint. This is kind of a nice little bit to know in our docs that not too many developers know how easy or how simple this makes metadata development. But you can use the validate endpoint to take your smart contract address and a specific token ID and see what errors show up when OpenSea parses your metadata. This is especially useful if you're doing something unusual, like having both an image and a video attached to your NFD, or both an image and a 3d model, and you want to make sure that the image will show up in the Grid View on Openc. But the 3d model or animation shows up when you click into an NFT and see it large in a single item page.
00:12:56.850 - 00:14:10.570, Speaker B: Next topic I wanted to cover is decentralizing metadata. So metadata you can break down into two buckets. There's centralized metadata which just get stored on some Google cloud or some server somewhere, and there's decentralized metadata which can either be on a file storage, a decentralized file storage network like IPFS, a blockchain like system for storing files like Areweeds, or directly on chain, meaning the image name, et cetera. All of the metadata is actually in ethereum itself or in polygon itself, whatever blockchain the NFT is on. The latter is expensive to do because you pay to store all those bytes on the blockchain. And blockchains are typically not made for things like that. And that's why we have IPFS and Rweave, which are much lower cost ways of storing large amounts of data.
00:14:10.570 - 00:15:05.640, Speaker B: So centralized metadata has two major downsides. There's impermanence server can go down and then you can't find the metadata you had. And this is particularly important for NFTs that are cultural. You want them to last like decades or hundreds of years or more, so it really matters that they never go down, and that there's some kind of guarantee to the creator and collector that they'll always stay up. And then there's mutability. Collectors want to make sure that the metadata, the NFT that they're buying, is always going to look the same and that the creator or anyone else is not going to be able to change it. We have a bit about decentralized metadata in our docs.
00:15:05.640 - 00:16:10.540, Speaker B: If you use IPFS to host your metadata or Rweeve, it'll automatically work on OpenSea. You should omit the part that specifies which gateway you're using for IPFS and re. That way if the gateway goes down at some point in the future, it doesn't really matter. Gateways are just a way for miners or relayers on file networks to relay files to any consumer. And you don't really want to be dependent on a gateway. We will automatically ignore your gateway at OpenSea, but it's usually best practice, it's usually pretty interesting or something that hardcore collectors will look at to see if your decentralized metadata is truly gateway free. So here's an example of a gateway free IPFS URL and a gateway free Rweed URL.
00:16:10.540 - 00:17:37.720, Speaker B: Another interesting thing about metadata on OpenSea is that we've added a couple additional elements to the ERC 721 and 1155 standards so you can improve the way your metadata shows up. One is emitting a new type of event called permanent Uri. So if you have the ability, if you let users change metadata for tokens that are creating on your contract, you can emit this event and then OpenSea will automatically see that, oh, this developer think that according to this contract, this token Uri has metadata that is no longer changeable. So we will consider it frozen, meaning collectors will see that no one can ever change this metadata. And if you want to tell us that your whole smart contract is frozen and you don't want to admit permanent Uri events for every single token ID, you can contact us on our help center and we can help you set that up. A couple of different types of metadata storage backing up to what I was saying a few minutes ago, we have centralized and decentralized metadata. And even if you want to go with centralized metadata, you can make it verifiable on chain.
00:17:37.720 - 00:18:40.268, Speaker B: So a really good example of this is CryptoPunks. CryptoPunks doesn't have the images on chain itself like on Ethereum, but they do have a hash that's stored in the smart contract, a hash of the combination of all 10,000 images. So you can check that hash to see if at some point in the future someone who stores CryptoPunks images has changed one, because then the hash of all 10,000 will be different from what you see on Ethereum. Likewise, in the decentralized camp, you can have both decentralized metadata that is stored somewhere in Reweave or Ripfs or directly on chain, but isn't necessarily immutable. Someone can change it later. It's important that if you're a collector and doing due diligence on NFTs to go into the smart contract and look that up yourself, OpenSea will try to do that diligence for you. You should always do it on your own.
00:18:40.268 - 00:19:40.100, Speaker B: And when we detect that something is not only decentralized but also unchangeable by the creator, we mark it as frozen and it shows up like this. You can hover over it and you get a tooltip. This item's metadata was permanently locked and stored in decentralized file storage. There's a bit more I can cover about these four types. They're covered in our blog, though. Encourage people to check it out if they're interested. If you want more details about centralized and verifiable NFTs and different examples, examples of decentralized versus decentralized and frozen NFTs, and the differences between Areweave and IPFS, we'll gloss over those details, but feel free to ask me about them in Q and A.
00:19:40.100 - 00:21:04.220, Speaker B: In terms of the future of metadata, I'm not going to go into lots of details here, but have a couple of guesses of what's to come. Seeing new kinds of 3D models that are showing up as animations models that aren't necessarily GLB and glTF. One example, see if I can just navigate to it right now there's a cool collection called Bonsai, and these NFTs, they're loading kind of slowly so I'm just going to wait for a bit. They actually have USDZ 3D models attached to that. USDZ is Apple's 3D file format and it lets you your tree at it through your iOS devices camera. You can use it for modeling and iPad apps. This is what they look like, some fogs not loading, but you can take a look at it and experiment with new 3D models.
00:21:04.220 - 00:21:25.664, Speaker B: And we're very excited to work with projects that want to do something different in the 3D space. There's also NFT hyperlinks. I really haven't seen much of this. It's very surprising. I think that we haven't seen a lot of good examples of NFTs trying to link to each other. A really early example was CryptoKitties. Every CryptoKitty had parents that bred.
00:21:25.664 - 00:22:17.512, Speaker B: It was considered an NFT Hyperlink, but it wasn't directly in the metadata in a way that was easily parsable. You had to look on chain and figure it out. There's also interesting metadata around multi chain items. So an item that's created on another blockchain and then bridged to Ethereum or vice versa will often have information in the metadata about Wallets that exist in non EVM chains and which Wallets created it, which Wallet currently owns it. And OpenSea is very excited to work with developers building bridge metadata standards. There's also richer unlockable content right now. If you want to give owners the ability to unlock content on OpenSea, you can only use text.
00:22:17.512 - 00:22:59.024, Speaker B: Right now there aren't a lot of standards around unlockable content because something is being hidden and can't be revealed on chain. But I think it would be really exciting to figure out how to enforce secrecy with some parts of the content and support that in secondary marketplaces like Openc. Lastly, there's legal attachments and licenses. Licenses are an incredibly undertapped area of NFTs. Imagine font licenses, for example. Every time you buy a font, it's important for fonts to be scarce. Otherwise you just see it on too many websites and it's not special anymore.
00:22:59.024 - 00:23:47.430, Speaker B: So imagine buying fonts and being able to trade them on the secondary market to find the true market value. But also provably show that you own the license to a font and not have to jump through these really strange, centralized and obscure or opaque marketplaces that currently power thought licenses. But point is that metadata standards are not supposed to constrain creativity around NFT, so this is really the beginning of them and it's likely going to change dramatically in just a year's time. So if you're working on something new, sorry about the background noise. Don't let these standards constrain you.
00:23:52.140 - 00:24:29.110, Speaker A: Awesome. Alex, thank you so much for that amazing talk. Interestingly, so many of our listeners are developers. I think that Q A turned into customer support for the devtooling side. So I'll try to filter some of those questions out. But two kind of obvious questions that I have from our chat is people are very curious to hear about how the split or just sort of the developer experience has been like on RV versus IPFS. And if you've noticed anything that's either easier or not easier compared to as people are maintaining NFTs and adding metadata there.
00:24:32.200 - 00:25:22.420, Speaker B: Yeah, good question. We've seen a lot of adoption recently for and there are parts of it I think that are really exciting. It's a bit more like a blockchain. With IPFS, it's important to know how many nodes have copies of your metadata, and I think they're working on making the redundancy more transparent and easier to check out from a collector's point of view. But to answer your question directly, we see a lot more NFTs using IPFS than areweed on Ethereum. On other blockchains, the IPFS dominance is a lot less and I think that's where we're seeing the most. Are we growth?
00:25:23.320 - 00:25:45.268, Speaker A: Awesome. Another sort of questions on that same topic is what happens or how often do you run into scenarios where anywhere from the metadata to the underlying asset just isn't available? If the permalink kind of disappears, do you run into invalidation of content or is everything actually permanent? You haven't prioritized these types of scenarios.
00:25:45.284 - 00:26:30.408, Speaker B: As much OpenSea caches metadata in our own cloud, and if we see that we can't access the metadata because the centralized server is down now, we keep whatever copy we had before in our cloud. So it's a way of giving collectors a little bit more peace of mind in case something disappears. We have seen this happen a few times, and sometimes the metadata just goes back up on the original server a few weeks later, or sometimes the game or the server really does go down forever, but we've just kept our copies and maintained redundancy in those places. Awesome.
00:26:30.574 - 00:26:46.190, Speaker A: And the last question is, a lot of people have asked if they can go through the slides in more detail on their own pace. So if you can send us a link to the slides, we'll be able to share that either on the chat or post this summit to everybody online.
00:26:49.600 - 00:26:50.588, Speaker B: Will do.
00:26:50.754 - 00:26:54.440, Speaker A: Perfect. Thank you so much, Alex, and hope you enjoy the rest of your trip.
