00:00:00.410 - 00:00:32.998, Speaker A: Hi, everybody. Welcome to the integrating the Zero X API for Fun and Profit workshop. We have Megan here who is from our sponsor Zero X Project. He's going to be teaching you guys a lot about it. And, yeah, if you guys have any questions, just throw them in the chat. She's going to try to get to them in the Q A section. But if you don't get to answer your question in this call, or if you have other questions later on, feel free to message her on Discord in the sponsor Zerox project channel.
00:00:32.998 - 00:00:36.774, Speaker A: Okay, Freddie, Megan, thank you so much.
00:00:36.812 - 00:01:38.570, Speaker B: Misha hello, everyone. Thank you for the introduction, but just also a little bit more about myself. I'm an integrations engineer for the Zero X API and today I want to talk to you about integrating the Zero X API, especially in the context of a project for this hackathon. So to do that, I want to just give a little context about what Zero X is, how that works on sort of a high level, and then really dive right into the Zero X API, how that works, why you'd use it a little bit about what you need to know about integrating that into a project. And then I want to just talk a little bit about the prices that are available. Right? Like, this is called for fun and profit. So there's also some profit to be made if you choose to work on integrating the Zero X API.
00:01:38.570 - 00:02:31.338, Speaker B: And then I will list some resources that could be helpful for just anyone who wants to learn more about Zero X. Maybe you don't want to hack on it this time, but you're intrigued about the project and want to learn more, or you are hacking on this for the hackathon and you want to have some resources and places to go for your questions. And then, as Misha said, I would like to just answer any questions that you have right at the end. So diving in about zero. X Zero X was founded in 2016 by our co CEOs Will and Amir. They really wanted to build infrastructure for what they saw as the emerging crypto economy. And over the years, we have seen this economy emerge.
00:02:31.338 - 00:03:46.434, Speaker B: I think it's just really exciting to see the future of finance and just tokenized value that should be able to flow freely now in a way that just was not possible before. So that is really what Zero X is all about, when value is tokenized and it can be sent around on public blockchains to different places where it needs to be, we can do that hopefully in a more efficient, transparent and fair way than maybe what has been possible up until now with more traditional systems. So through all of this infrastructure that we're creating, we've seen that it just enables the creation of markets that literally could not have existed even a few years before. So something really exciting there. We've seen just an explosion of integrations with the Zero X Protocol and Zero X API across four different blockchains. Now different networks we're on, just in the last year we've added three. So not just ethereum.
00:03:46.434 - 00:04:35.330, Speaker B: Now we're on Polygon binance smart chain and just recently Avalanche that launched last week. We have kind of two sides to the ecosystem. So you could think of this in traditional trading terms as like makers and takers. So what is shown here is supply on the left side. That is what you could think of as makers. So different decentralized exchanges and other liquidity sources that are putting liquidity into our system in order for it to be consumed by takers. So we have just a lot of different decentralized exchanges there and also some private market makers and different liquidity sources.
00:04:35.330 - 00:05:45.002, Speaker B: But then on the taker side, which could be interesting, especially for if you're thinking about building an application that would utilize the Zero X API, maybe you would be more on this side, on the right side of what is shown here, this little graphic that you would be consuming liquidity from the Zero X ecosystem from these makers. So we have of course Macho, which is a product of Zero X Labs. This is our trading platform that makes it easier to access these new markets. So it's really like a user interface for the Zero X API, which it's built on top of, which I'll get to in a bit how that works. And we have some other really interesting projects integrated here. We have Coinbase, Wallet, MetaMask, Sapphire, DeFi, savers such as some really big names in DeFi and in crypto who are consuming from the Zero X liquidity sources. So that's really cool and exciting, I think.
00:05:45.002 - 00:06:57.294, Speaker B: I believe we have some other integrators who aren't on this graphic. So if other ones are left out, I'm sorry, we were just growing all the time and yeah, maybe your application can be the next logo here that we will add. How does this work? Let's really get to the core of this which is the Zero X Protocol. The Zero X Protocol is essentially we like to describe it as an off chain order relay with on chain settlement. So basically that consists of two kinds of components which are some smart contracts and then some off chain infrastructure that just relays orders that exist. So say you want to swap a token, you can go and look and see what our makers that you would see on that left side of the ecosystem graphic, what they have provided in terms of liquidity that's available. And these orders are then relayed across the network and you can actually choose one, sign one and submit it on the blockchain to actually realize that transaction.
00:06:57.294 - 00:07:55.146, Speaker B: So it's off chain in that sense, but then the settlement is on chain, of course, for that. So I like to think about this. This is a very basic little graphic that this is just how I think of it in my head. We have the Zero X protocol as the core here of what we do at Zero X, but then on top of that sits an Http API for easy access to these orders, and that is the Zero X API. And then on top of that are just a lot of applications like Matcha and some of those other ones that you saw on the taker side, consuming the liquidity that are doing this on top of the Zero X API. So that leads to the question, what exactly is the Zero X API? The zero X API is aggregating liquidity. Especially dex liquidity.
00:07:55.146 - 00:09:04.202, Speaker B: So decentralized exchanges that have liquidity available, you can swap your tokens through them. And this is all aggregated. So instead of just having to go one by one through all of the sources on the supply side of the ecosystem graphic and like, okay, I want to swap my ETH or, I don't know, USDC, what's the price that you can give me? Actually, since these are integrated with Zero X, you can just query the API and it will return the best price to you. Just that simple. Why would you want to do this? Well, DEXes are usually very fast and permissionless, and they're often the best places or the only places to source certain crypto assets. So when you are swapping through the Zero X API, actually the tokens never leave your wallet until you're actually submitting your order on chain. So that's the difference also with the centralized exchanges, in case you don't know what the difference is, there why we do this in a decentralized way.
00:09:04.202 - 00:10:06.062, Speaker B: We don't actually have custody of your funds at any time. That stays in your wallet until you actually submit this transaction. Yeah, so this will hopefully return to you the very best price that you could possibly get for the order that you would like to or the transaction that you'd like to submit. And we can do this through smart order routing capabilities that actually the Zero X API has that would actually split up your transaction across different DEXes and all those liquidity sources that I mentioned. So you really can get the best price in that sense. You can almost think of it like a search engine, like a flight search engine or something. You know how Google Flights or something like that would show you all the best possible price for flights that it finds across different sources that are selling tickets for flights? That's sort of what the Zero X API is doing.
00:10:06.062 - 00:11:04.154, Speaker B: But in this case, for whatever tokens you want to swap, zerox API has different endpoints. Today I'd just like to talk a bit about the swap endpoint because I think that's the most useful for building your application that you might choose to submit to the hackathon. But for sure, check out the documentation. We have everything there that you need to know about the other capabilities of the API. But this swap endpoint is going to return information on different tokens prices and just return to you the easy to consume quotes that you can actually then sign and submit as a transaction. And I'll get to that in a second how you would sign that. So these quotes are coming from off chain sources like the Zero X Protocol.
00:11:04.154 - 00:11:40.586, Speaker B: Like I said, that's the core of everything. That's what Zero X API is sort of built around. But we also do have some other on chain sources, or some sources like SushiSwap or uniswap. So there are just a lot of different liquidity sources that are being aggregated. And then this is returned to you by the Zero X API. You might ask yourself why using Zero X API, especially, there are some other dex aggregators out there. And what makes the Zero X API so special, other than the fact that I work on it.
00:11:40.586 - 00:12:24.326, Speaker B: Right, okay, that joke, sorry. It's very important to us to be highly aware of how the Zero X API performs. And we measure that across different categories. So we are always looking at, for example, the adjusted price. So after fees, how much money or funds are then actually going to the trader after the swap is complete. Right. We can do this by being really efficient with gas usage, among other different techniques.
00:12:24.326 - 00:13:05.414, Speaker B: So we want to make sure that we, we are really returning a very good adjusted price. And we also look at revert rates. So if you've ever tried to send a transaction, submit a transaction on chain and it's using your gas, and then in the end the transaction fails, it reverts. And you can see this when you're trying to investigate what happened with your transaction, for example, on Ether scan or something, and say transaction failed revert. Yeah, that is not good. Obviously it's costing you money and then your order doesn't even go through in the end. So we closely look at revert rates of transactions and are always trying to improve there.
00:13:05.414 - 00:14:16.906, Speaker B: And then of course, the classic API benchmark, I guess, is checking how reliable is our API and what's the response time that it's giving. So we actually run simulations across different Dex aggregators. So not just on our API itself, but just on all the different sources or possibilities for deck segregation that exist on the market. And we really are checking to see how we compare in simulations, but then also running analytics on data from previous transactions and everything to look and see what actually happened and in this sense, measure everything that we can around these different benchmarks. So this is just one small example. This is actually coming from one of those simulations that I just discussed. So we ran this and to see how our reverse rates compare to some other aggregators.
00:14:16.906 - 00:15:00.390, Speaker B: And for Matcha, which is our product, we are doing quite well. And again, we're always trying to improve that. So this is just not live, but this is an example of a live simulation that we did just a few days ago. All right, so how does this work under the hood? What do you need to know to get this up and running in your application? The API? This zero X API is an HTP API. So how you would query it is by sending get requests. You can do this. I have a small example using Curl.
00:15:00.390 - 00:15:39.042, Speaker B: So this would be if you just want to send it in your terminal from your command line. Say you wanted to get a quote from the swap endpoint, which is what I said I think is interesting for people building on top of the API in the hackathon. And you want to sell your ETH for some USDC and you want to sell this amount. Be careful here. This is not actually like the amount. This is also including decimals. You can find other specifications for different parameters, other required parameters, and also optional ones, including some advanced functionality.
00:15:39.042 - 00:16:28.790, Speaker B: So if you want to set certain parameter for Slippage or any of the other advanced functionality that we offer, you can find all of that in the API documentation and just build your query from there. So this is how you could do it with your command line. But I actually ran this as a request using my web browser as an API client. And then what you will have returned from the API. So you call it and then it returns a response. Just very simple functionality. There you will get a JSON object that includes everything that you would need to submit as a transaction on the blockchain.
00:16:28.790 - 00:17:19.830, Speaker B: But this is still unsigned. So that's the next part of this. If you are thinking of the request flow, you send your Http request, your get request to the API, it's going to return your unsigned JSON transaction, then you would need to sign it. And finally this signed request is submitted on chain. So what that could look like is you would need to sign first. You can do this in a lot of different ways. You can do that by either running your own node, using MetaMask, anything like this, and then after this transaction is signed, you would need to actually submit it and send it over to the mempool on the blockchain to be included in the next block.
00:17:19.830 - 00:18:04.306, Speaker B: You can do this with a service like Inferior Alchemy. Also again, using your own node, whatever you choose to do. And then you just have to wait until your transaction is mined and the trade is completed. So this is actually some code that is coming from a guide that we have available that I've also included in the resources slide with interesting links. You can do this very easily just by including this is a different request than what I just showed. This is not with ETH, obviously this would be with Dai instead. But you would perform your request, just querying the API, wait for its response.
00:18:04.306 - 00:18:49.682, Speaker B: You do need to set allowances before you would submit on chain, but then after you do this, you just have to send a transaction. So this is like some very simple code example of something you can do. And again, that guide is going to be available in the resources section. And that's it. That's all you have to do to integrate the API into your application. So you just have to, again, be sure to include the unsigned transaction, which is returned to you by the API, sign it, and then send it off. What's returned to you by the API will include everything you need the call, data and gas.
00:18:49.682 - 00:19:31.486, Speaker B: And you don't have to worry about that. You just have the order there ready to go. All right, so I hope that was fun. I hope that now you have an idea of how you can integrate this functionality that the Xerox API offers for getting the best price for whatever token swap that you would like to do into your application. But now let's talk about the profit part of this equation. Right, so we are sponsoring the ETH online hackathon this year, and we have a total of eight K in prices available. And I just want to kind of go through this and give some ideas.
00:19:31.486 - 00:20:19.410, Speaker B: Again, it's not that you have to make this certain application that is listed here. This is just to get kind of your creative juices flowing. And if you think of something else that would fit into the category that we offer a price for, then please, we would love to see it. We're really excited to see what everyone is going to build, but we do have just some suggestions, so I just run through that really fast. We would like to see what people would build on top of the zero X API in DFI and in NFTs. So we have a price of two K for each of these categories. And for something like DFI, it could be interesting, maybe if you wanted to build, I don't know, an application for option swapping or a cross chain swapping.
00:20:19.410 - 00:21:24.982, Speaker B: In the case of NFTs, if you really feel like a challenge, then you can add support for ERC 721 in the version four of our protocol because it's currently unsupported and maybe that's crazy, but if you would love to tackle that challenge, that's an interesting idea. Or you could make an application for fractionalized NFT swaps, for example. We're also very interested to see what people would do with the Xerox Data API. So this presentation didn't really dive into that. But I'll also include this in the list of resources available. We do have a Data API and also zero X tracker, which is just an easy to navigate way to explore data from zero X and zero X protocol. So that could be something very interesting in building some kind of application that uses historical data.
00:21:24.982 - 00:22:16.038, Speaker B: For example, you might choose to build a multi chain analytics portal or real time trades panel, or you could even build a Twitter bot of positive slippage that's returned to the user. So a lot of possibilities there. Again, those things will be in the resource section. And we also have finally a category for anyone who has an idea that doesn't fit into any of these, the above categories, so to speak, that just has an idea that they would still like to build. We have an open track. So, for example, if you felt like building an SDK for the API that could fit into this open category. So the long awaited list of resources I promised you.
00:22:16.038 - 00:23:24.640, Speaker B: Again, we have all our documentation and the guided swapping tokens, which I think is really helpful for beginners to learn how to implement this functionality. We also have our blog and we have a Discord, and we would really love it if you wanted to come and join our community and meet us there on Discord. We'll also be available, I believe, as Misha said in the beginning, on the Zero X sponsored channel for the ETH Online Discord. I will be posting some office hours occasionally there throughout the duration of the hackathon that you can sign up for on calendar and you can talk about any questions you have or just ideas with our development team. But if you have any questions at any time, you can also just throw those on the channel and we'll be happy to help you there. In terms of just general developer support, we have now switched to Ethereum Stack Exchange. So if you tag your question with Zero X on Ethereum Stack Exchange, we'll be monitoring that and we can also help you there.
00:23:24.640 - 00:24:07.302, Speaker B: And lastly, just check out Mata. It's a really nice application, really simple to use, way simple to use and a nice way to just swap tokens. And finally, we do have also reddit. So thank you so much. I believe there's a bit of time for questions. If anyone has any questions for me, I don't see any in the chat, but I'd be happy to take them now. Oh, I will post the resources in the Discord.
00:24:07.302 - 00:24:07.980, Speaker B: Yes.
00:24:13.960 - 00:24:33.384, Speaker A: All righty, if we don't have any other questions, then I'd like to wrap up here. Thank you so much, Megan, for this really great workshop. And thank you to Zero X for sponsoring ETH online this year. Oh, there's a question in the chat that just snuck in, Megan, if you want to answer it.
00:24:33.582 - 00:25:15.016, Speaker B: Is there a case of using Zero X data for Web Three that we can think of? I'm not sure. I'm not sure what that means. Does that mean like, building a separate Web Three application? I'm sorry, could we actually take this conversation maybe in the Discord so I can understand a bit more what you mean by this. I'm not on the zero x eight API, so maybe I'm just like getting a quote from that. Okay, yeah, we'll take it to discord there. Thank you very much for the question. And we'll help you out there.
00:25:15.016 - 00:25:59.954, Speaker B: In discord revert rate is what? The number of swap transactions that didn't go through? Yeah, exactly. That would be the number of transactions that just reverted after they're submitted on chain. So maybe they ran out of gas. There are some other reasons why transactions would revert, and actually you can debug those. We can also help you if you did have a reverted transaction, we can help you get to the bottom of Y, for example. Yes, that's correct. Any other questions? Okay, I think I'll pop on over to this code.
00:25:59.954 - 00:26:11.340, Speaker B: We'll see you there. Thank you so much, everyone, for watching this presentation in and for being involved in our community. And we're really excited to see what people are going to build this year. Thank you.
00:26:12.750 - 00:26:15.030, Speaker A: Yes, thank you so much. Bye.
