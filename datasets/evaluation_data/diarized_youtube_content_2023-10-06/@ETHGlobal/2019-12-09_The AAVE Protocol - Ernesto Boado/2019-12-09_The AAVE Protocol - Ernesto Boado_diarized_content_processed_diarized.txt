00:00:01.370 - 00:00:36.374, Speaker A: I will jump a lot on the slides but okay, well the thing is that we are here for the other protocol now. So first of all a bit about me. I'm Ernesto, I'm a blockchain engineer. So I come from Spain. I was just a software developer, I like play football, this kind of stuff from thing. And at some point like I suppose your case or whatever, I discovered bitcoin and they were trying to disrupt the bank economy. So I say yeah it's fine.
00:00:36.374 - 00:01:30.540, Speaker A: I'm also kind of revolutionary but not so interesting. Then I discover Ethereum, ethereum came up and I say okay, this is a bit more interesting because more like programmable bump in that sense. So if we want to disrupt it's better to make it build new stuff and changing from the inside. So basically I joined the company and I start to build inside it. So basically Abbey is inside the DeFi ecosystem. That is completely our field and we really believe in how the DeFi ecosystem works. Basically everything about composability and building we do that, we have the pieces that we use previously from DeFi and we hope that you guys will do the same and the rest of the people.
00:01:30.540 - 00:02:12.770, Speaker A: So I suppose, you know more or less what is DeFi. But DeFi is like the centralized non custodial protocols and all the services around. So it's more or less like the classical financial system in terms of functionality but with the complete control on the users. In practical terms, it's basically the financial software build on Ethereum and not only in Ethereum. Well, this is a bit old diagram of what is considered more or less DeFi. Some of the products here are not anymore, some of the new ones are not there. But this is more or less the picture.
00:02:12.770 - 00:03:12.870, Speaker A: You have payments, infrastructure, wallets, whatever. So we can say that Abe is in the Credit and Lending square, for example. There is there italand and usually people ask, oh, but Abe, you are the guys from Italy and yeah, basically before Abe we built Etheland. That is like a peer to peer lending protocol of borrowers and lenders, but now it's a little bit different. So how we came with Abe which is the problem that Abbey tries to solve. So the first building block that we needed, it was a decentralized and stable medium of exchange because that generates that people wants to borrow money. For example you can deposit money and have a stable earnings on top of that money and kind of die was the foundation piece because it scaled everything in a decentralized way some other currencies.
00:03:12.870 - 00:04:14.350, Speaker A: So that is the initial piece. Another really important advance that we took inspiration on and basically our model is like that is the earningtonization models. So what they mean is like the E tokens in BCX or the C tokens in compound and what it means is that you can just grab the normal tokens that you deposit in a lending service and that new token has a growing exchange rate, decreasing exchange rates actually. But what it means is that it gets value over time because the protocol is getting interest. So that opens the huge possibility that you just deposit in a lending pool and you get interest. Possibly it's not like in P to P before in the sense that it's not direct, so the profit is smaller. But let's say the user experience is in orders of magnitude above because you just deposit, you just kind of forget and you just get the returns.
00:04:14.350 - 00:05:22.260, Speaker A: So those are the main things that we use. We get inspiration from because they afford the backbone economical. It will be like the stable coins and then the composability that is more the part of the tokens. So we say okay, from there let's build something like BCX or like compound but we are going to make it a bit better in our opinion. So what you can do with Ave is like I say, you can deposit, you will earn from those deposits, you can borrow and everything in a really liquid way. You go there, you deposit, you get your a token that represents the growing deposit and if you want to borrow, you go there and you put a collateral and borrow. But the thing is that as almost everybody in the ecosystem we since the beginning thought okay, the most important part of our protocol is actually having the people building on it because that is the way of how you get a network effect.
00:05:22.260 - 00:06:31.420, Speaker A: The product can be quite big by itself, but you will never scale above that if you don't have the composability. So that's it more or less about Abbey, I hope it's clear it's just a money market for borrowers and lenders. About integration, more or less the integration of protocols like ours is similar but of course open to creativity of whatever anybody comes with and there is different levels of complexity. The normal integration is like the kind of on chain off chain integration but it's more user facing. So you just create a kind of client wallet or with some smart contract based wallet and from there you just grab the functionalities of the protocol and you just offer a better interaction than the protocol itself. Application or that in our case. For example, right now we are running in COVID the contracts and we will have the release on mainnet soon, like during this month.
00:06:31.420 - 00:07:33.514, Speaker A: And we are running both the protocol level like the smart contracts and we have a client application also like in mobile and in web. But the idea is that we want people just to integrate in their own clients and build more network effect. So that will be the first type of integration that is not the simplest but is the most straightforward and it's like argent coinbase waltzerion. That is what they do. Then the next level that is quite popular lately is like the derivative tokens on top of kind of the interest accumulating tokens. In our case it's called a token so it will be like Airdai GDI or DDI that is more a smart contract grapple on top of the other contract that allows you to do something simple like Airdai. You assign the interest to somebody GDI, you pay the grass of operations in the blockchain with the interest that you earn in the token, et cetera.
00:07:33.514 - 00:08:45.460, Speaker A: I suppose you are familiar with it and of course the next one is the last one right now is the ecosystem actors and the ecosystem actors is completely relatable of how ethereum works. When you build a system and you want it to be completely decentralized and based on economic incentive you need actors like for example keepers that liquidate fire, the liquidation of positions or the liquidators themselves. That in our protocol. For example, it's like people that has the capital to liquidate so they kind of repay a liquidated position and they get the collateral with a discount so they can play with that. If they have capital they have the tools to liquidate then the collateral to another currency is perfectly fine or for example the DeFi sabers and refinances that is more like in the derivative tokens, I would say. So those are the three typical examples of what are seeing right now in the phi that people is building. But this is like four last months so probably in two months more there will be like two more.
00:08:45.460 - 00:09:40.790, Speaker A: But the thing is, okay, we have a lending protocol similar to VCX or to compound but what is different in app and what you can do it for developers. The feature that actually is getting more excitement is for sure what we call the flash loans. And the flash loans the thing is that it allows you it's about the use case because it allows you to borrow in under collateralized way so you don't have capital but it's under collateralized way but within one transaction. That is the point. So it's kind of a bit tricky saying that it's in under collateralized way but factually it is because during the transaction you can do whatever you want with that capital. We call flash loans because of that. So I will spend a little bit more later.
00:09:40.790 - 00:10:13.460, Speaker A: But an scenario will be like you want to make arbitrage trading in different decentralized exchanges and you don't have any capital to do it, but you see opportunities. So you just borrow for one block. You make in the same transaction, multiple trades in different decentralized exchanges. You get some profit. And the only condition is that you need to return before the transaction ends. You need to return the same capital you borrow plus a profit for the pool and the rest is your profit. So that is the main use case.
00:10:13.460 - 00:11:24.642, Speaker A: The stable rates. For example, in other protocols like VCX or actually Fulcrum or compound, they only have the variable rate because the interest rate of money market protocols, the most heuristic and how it needs to work in the core because of the economic model is variable rate because it's depending on supply and then demand, utilization of the pool, borrowing money, deposit money, the equivalent of those creates interest. So what we offer is another type of interest that we call a stable rate. We don't call it fixed because it's not fixed, but we call it stable because it's based on local stable points. So what it means is that you have points of stability over time and you can borrow. For example, today at 3% and Probabilistically you will not be a change of 3%. You can be changed under certain condition of the protocol.
00:11:24.642 - 00:12:21.562, Speaker A: That will be if the earning rate of deposit in the same currency is higher. Than the rate you borrowed. So for example, if you borrowed a 3% fixed but then the utilization rate of the pool changes and the earning rate is four or five, that will generate a situation where you actually borrow. Money and you deposit and you get profit. So at that point you will get rebalance and you will get changed to another stable rate. But during the previous time you will pay fix. And that is quite useful because fixed interest is important for institutions to calculate, to accounting, that kind of stuff and what we allow also is the rate swap that is consequence of the previous one so you can basically change at any point the borrower can change at any point between a stable and variable rate.
00:12:21.562 - 00:13:07.278, Speaker A: The variable rate is just the algorithmic rate depending on the utility change. Those three are the new stuff basically that we do with ave protocol and of course the rest is just a money market and completely open and decentralized. So now I will go a bit more in detail of what is available to do. Right now we have a GitHub. Like I say, we have the contracts running in coban and in the GitHub we have the code of the smart contracts. It's not the final version but it's the one running in coban because we are with an audit in process. So once we finish the audit, we will actually open source everything and it will be fixed.
00:13:07.278 - 00:14:25.842, Speaker A: We will introduce also some governance to upgrade some parts of the contracts and we'll stand from there but the main function for sure will be the same and probably the interfaces will not change. Well, I will go function by function because it's better. Basically, you can deposit to deposit the main contract of the system is what we call the landing pool in the user facing because it's the contract where almost every action needs to be interact with. So for example, the deposit you call the lending pool contract and indicate which is the reserve is the token you want to deposit. So you indicate the address of the reserve, that is the token, the amount you want to deposit. And we also have an on chain referral system that right now is not active, but it will allow potentially through Evans to catch referral codes and to reward a theme that actually is quite new because usually those kind of programs are not implemented in the smart contract level. This doesn't affect the state so much.
00:14:25.842 - 00:15:01.210, Speaker A: At the end we just store the reference but it allows a lot of staffing at a decentralized way. So the deposit is this. You need to make an approval actually to another contract. That is the storage contract we call Lending Pool core. That is the one that makes the transfer strong from the user. That is the only requirement before calling this deposit. Then the redeem is one of the functions that actually you don't need to interact with this Lending Pool contract, you need to interact daily with the Atoken.
00:15:01.210 - 00:16:11.700, Speaker A: How it works in our architecture is that we only have the Lending Pool core for the data and for us reserves or tokens are just registers of data there in other architectures, like for example compound for them, the A token itself has all the logic of the lending and borrowing of each currency. In our case it's not like that. Our logic is in A core smart contract that keeps the data and then maps everything there, the funds and everything. So the deposit goes to the Lending Pool core and you receive in exchange the corresponding A token. So to redeem actually you need to go to the A token and transfer that you call a redeem function, this function and it does a transfer from of the A token and it talks to the core to say okay, return the funds accrue with the accrued interest to the people that did this. This is the reason why actually the redeem needs to be called in the A Token because it's completely token functionality. But A token is completely ERC 20 compatible so you can do whatever.
00:16:11.700 - 00:17:00.366, Speaker A: The only addition is this function and logic related with the exchange rate, with the underlying token. So for example, the exchange rate, A token and the normal token, it starts at the beginning of the protocol with an arbitrary number. Actually we are going to put 100 and then that exchange rate as the protocol accrues interest paid by the borrowers will go down. So the token will be more valuable as the time goes on and people repays. So this is the redeem. The borrow is completely simple like through the Lending Pool. So the same you indicate which reserve you want to borrow from here the reserve amount, you indicate the interest rate mode.
00:17:00.366 - 00:17:57.366, Speaker A: If you want to use variable or stable, that is just the uint reference and the same the referral code. For now the referral call is not important at all. So it can be just a zero and that's it in the code. In some parts we have the fixed terminology, but we identify that it's not for us it's perfect, but in the sense that it's a good reference and we understand and for developers it's also understandable, but it's not exactly so. In the documentation we use stable. The repay is also a really simple function, it's through the lending pool. So the same you indicate the reserve and address the amount you want to repay and then you are allowed to repay on behalf of somebody else.
00:17:57.366 - 00:19:08.970, Speaker A: Then you can actually find use cases to do that even like tip people that actually repay their loans or even I imagine cases with derivative tokens building on top of that. And it's really interesting, it's a really simple functionality, but some of the protocols don't implement it. Yeah, nothing interesting here liquidation this is for what I say about the actors, the kind of keepers, but it's more liquidators because it's not the keeper model. Usually they just fire the liquidation, but here you need to deposit them in the currency. Let me be a bit more clear. The liquidation is over a particular position of a user, so that user usually has different collaterals combined and in our protocol each collateral has a different liquidation threshold and liquidation parameters. So it's kind of granular in the sense that more risky collateral currencies will have a higher threshold.
00:19:08.970 - 00:20:03.690, Speaker A: And the liquidation point also will be you will have more channel between when the liquidation starts and when it actually is completely liquidated. Because that way you have more flexibility to actually take the collateral and go to the exchange. That discount. If not, we experience. For example, in Ethland, our previous product cases were even with important margin of discount, like we have like 5%, but we also were considering 10% and even with 10%, with some tokens where it was not possible, you get the collateral, but if the price is going down, that is usually the case. You try to liquidate it and you are not able to. Basically you need to do collateral by collateral of people to make the liquidation.
00:20:03.690 - 00:21:09.854, Speaker A: So it's a user position. I will liquidate this part of your collateral because then you also allow the liquidators of certain currencies because some people has optimized system to liquidate, for example, I don't know, Dai or to liquidate some other coin with the collateral. The reserve is what they borrowed, the medium of exchange. So it's what you are going to transfer to cover the liquidation. And the purchase amount is the amount the user is for them to refer to the user position that's liquidated. And also there is the possibility of receive the a token instead of receive the token instead of getting the normal. So yeah, there is more information here and everything the liquidation depends on this health factor that is basically a factor that means that when it's in Guang it's open to liquidation.
00:21:09.854 - 00:22:41.840, Speaker A: So the borrower should avoid always be below one or in Guang should be always okay. And the most important and kind of new thing is the flash long. And basically, like I explained before, the flash long function, what allows is to at the beginning of the flash loan function, the funds are borrowed from the pool from whatever reserve you indicate here and these funds are sent to the receiver. That usually is not usually should be a smart contract because could be a wallet, but it makes more sense a smart contract to do something with the funds. Actually it will not work with the world and then the amount but how this works is this is transferred to that receiver contract after the borrowing, then that receiver contract does whatever is necessary to do or whatever is the profit model and then at the end that will return. So it's really simple function that you borrow, you send everything to the receiver contract and then you have a requirement that the receiver contract needs to send you back the same plus a fee that is fixed for the depositors, for the protocol and that's it. And the rest is for the receiver contract or whatever that contract does.
00:22:41.840 - 00:24:29.342, Speaker A: How to implement this? I'm going a bit more on the technicals because it's the new thing is that we have this flash loan receiver base, there is another contract and you should inherit from there from this thing that basically implements basically implements myth which allow internal borrow and stuff like that. And you have an execute where is this? Yeah, it's not here the example, but basically this control has an execute operation function, should have this execute operation function and then you put the custom logic you want there so that's it at the end, if you inherit from there, it gets back to there and that's it. And how you fire the flash loan is however you want, like the flash loan function in the lending pool you can just fire with a normal wallet or you can have a smart assistant with a smart contract that fires the flash loan. The flash loan redirects to the receiver, the receiver does whatever it wants and returns the fund. Something interesting is about the use cases. This is a real use case, for example, in being a liquidator in compound but not having funds like you just use the funds of our protocol and there are really big opportunities of liquidation in any lending protocol. So you borrow for one block, you deposit that to cover the liquidation in compound, you receive the collateral.
00:24:29.342 - 00:25:57.902, Speaker A: Then you go for example to Kyver with the collateral, you fire the swap because you want to recover the currency you actually borrow from our pool and then you return probably you trade in the middle with what you swapped and you return to the pool and that's it. And the pool receives a fee that is basically sharing to the depositors and it actually puts the earning rate up because basically, theoretically, you can have, block by block, all the blocks doing flash loans, people doing flash loans and using the resources to do operations generate profit. And part of the profit, even if it is smaller, is block by block to the protocol. So it can be quite effective for that and that's it. But there are, of course usually kind of endless use cases for the flash loan is on you to think about. Yeah, and yeah, just the reference to finish developer talks is the GitHub and the discord and this is my telegram, but I will be around. Stani and Jessica are also around.
00:25:57.902 - 00:26:05.580, Speaker A: So just contact me and I can help in whatever you want and that's it.
