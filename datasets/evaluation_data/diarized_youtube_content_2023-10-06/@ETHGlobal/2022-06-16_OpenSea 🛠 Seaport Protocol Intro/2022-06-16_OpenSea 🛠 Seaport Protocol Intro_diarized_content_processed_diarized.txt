00:00:10.720 - 00:02:14.236, Speaker A: Hey everyone, I'm Zero Age, I'm the head of Protocol development at OpenSea and we're very excited that you're looking to build on top of Seaport brand new protocol owned by the community. So Seaport is an NFT marketplace that in contrast to many other NFT marketplaces where you have a distinct item that's being bought or sold in Seaport, you have an offer, which is an array of items where an offerer or user can elect to include as many items ether or native tokens. ERC 20 ERC 721 ERC 1155 they can include as many items as they like and they also include as many items as they like as the Consideration, another array that is a group of items along with the recipient that should receive back those items. So a fulfiller can then come and spend those offer items as long as all of the Consideration items are received back. So Seaport doesn't have any notion of fees or special permissions embedded in that gives offerer a lot of flexibility as to how they want to list or make offers on NFTs groups of NFTs and has a couple different new mental models for how to approach this when you're coming from other NFT marketplaces. So as a high level overview offerers lay out exactly the terms that they're interested in. In addition to the offer and the Consideration, they will also specify an optional zone that they'd like to give a thumbs up or a thumbs down on.
00:02:14.236 - 00:03:44.804, Speaker A: The order's validity zones are a really interesting concept for extending what Seaport can do and adapting to different types of order listing like auctions and commit, reveal and a number of other novel mechanics for how orders are validated. There's also a notion of a conduit. The offerer can specify a conduit that is where they approve their tokens. So the core Seaport contract, the marketplace is totally unowned, unupgradable, hyperstructure, whereas the conduit each offerer can decide their own conduit as well as the fulfiller can specify their own conduit and that is what they approve. They give their ERC 27 20 111 55 token approvals to the conduit and then Seaport or other marketplaces will tell the conduit how to transfer tokens. So that is a way that the protocol can be broadly composable with other marketplaces and upgradable. But it's totally up to the offerer and the fulfiller what conduit they want to use or if they want to just approve Cport directly.
00:03:44.804 - 00:05:11.440, Speaker A: You don't have to use a conduit. So you lay out all of these terms, every single order that's created has the same structure, the same syntax, and you'll be presented with an EIP 712 payload to sign that lists out exactly what items are going to be leaving your wallet and exactly what items are going to be received back and by whom. And the way that fees often work is that they're additional consideration items on a given order. You can also extend those Consideration items when you're filling an order by adding additional ones. That's called a tip from the perspective of the offerer, they don't mind it's the filler that's choosing to apply this tip, especially when paired with zones which can look and see what the tips are, enables more dynamic consideration items. So the standard flow is an offerer will create an order that lays out exactly what they're interested in listing or putting out an offer for an NFT. And then a fulfiller can choose a number of different ways to fulfill the order depending on the type of order or if there's multiple orders, so on and so forth.
00:05:11.440 - 00:06:25.224, Speaker A: The most simple is to just call fulfill order and you start with the order you're fulfilling and you take the mirror image of it. Create this second implied order and all of the offer items, the fulfiller will just take them as consideration items for itself and all of the consideration items the fulfiller will pay out as offer items. In addition, you can specify fulfill advanced order and an advanced order has two additional tools in its toolkit. The first is that it can resolve criteria based items. Every item can specify in place of an identifier, a specific token ID for the NFT you're interested in. You can also supply a criteria which is a merkel route that contains a number of token IDs and then the fulfiller gets to decide I would like that token ID and they provide a proof that that particular token ID is contained within the merkel route. In addition, advanced Order fulfillment, you can specify partial fills.
00:06:25.224 - 00:08:11.404, Speaker A: If the offerer indicated that the order supports partial fills, then all of the offer items and all of the consideration items will be scaled down with the condition that the scaling factor has to be exact for every single item. And then you can fulfill some portion of the order and that's effectively the advanced orders. There's a number of fulfillment methods you use fulfill advanced, but it's once again the fulfiller that gets to choose which method they want to use. There's a subset of orders that are called Basic Orders that if you have a single offer item and one or more consideration items where all of the additional consideration items share the same item, type token and et cetera with whatever the item that is not an NFT. So if I'm putting an offer to purchase an NFT, then I might have WEF that I'm offering and then there would be some consideration items in WEF. As long as the order has that and a few other conditions, then you can call fulfill Basic order as a fulfiller and that is a heavily optimized version of fulfill order where you can bypass certain approvals because you don't need to take all the tokens and then pay them out. In the example I just gave, I wouldn't necessarily have to have WETH approved because it gets sourced from the offer item and the order that's being fulfilled rather than paid out to me and then paid again.
00:08:11.404 - 00:09:44.856, Speaker A: And it utilizes extensive optimization and inline assembly to make it as cheap as possible to fill those orders and provide a subset of the call data that you would normally need to supply. Then there's also a number of methods for fulfilling a bundle of orders or a group of orders all at once. The most straightforward is to call Fulfill Available orders, which takes a mirror image of a number of different orders and tries to fulfill as many as it can, skipping any that have been canceled or already filled or are expired, and just processing the ones that the orders are still available up to a limit that's specified by the fulfiller. And the last method for processing orders and fulfilling orders, the fulfiller can choose to use what is called match orders in which the fulfiller explicitly supplies all of the orders so there's no implied mirrors. And then the fulfiller chooses how to move the tokens in whatever manner they want. But each of those fulfillments will then be applied to the orders that are specified. Take these offer items on these orders, these ones all are the same item type token and they're all coming from the same source or headed to the same recipient.
00:09:44.856 - 00:11:03.232, Speaker A: Basically they can be aggregated into a single transfer and then crunch through all those fulfillments that the fulfiller has supplied. And once that's done, then we'll just check all of the consideration items on every order and make sure that all of those considerations have been met. If they have, then all of the offerers terms have been met and the fulfillments they can execute token transfers. So it lets the fulfiller choose novel ways of transferring token a to B, B to C to A. You can fulfill that in three transfers or routing through interesting paths to get to everybody being happy. So really puts a lot of power into the hands of offerers where they can choose exactly the terms that matter to them as well as fulfillers. The users that are interacting with the protocol and fulfilling orders can choose exactly the method that makes sense from a gas perspective, from a token approvals perspective, from the perspective of sourcing orders from a bunch of different sources and really excited to see what everyone builds.
00:11:03.232 - 00:12:10.808, Speaker A: One last thing I'll mention is that EIP 1271 is supported as a first class citizen. So any offerer can also be a smart wallet and sign listings off chain. You can call validate which lists on chain. And when you use 1271 you can also do clever tricks like bulk listing. You can sign a merkel route of a number of orders and then when a fulfiller is taking those orders, they just choose a particular order and provide a proof that the order is in the merkel route that you signed for. There's also interaction with zones by default, no need to even use a zone. Cport is a single contract and handles everything inside this contract apart from telling the tokens where to move and the conduits likewise.
00:12:10.808 - 00:13:57.740, Speaker A: But you can also specify as part of the order that it's a restricted order and then that order will call into the name zone supply a zone hash that's also specified by the offerer that can be used to commit to the state of the zone or extra data which can be supplied on that call to a zone. And for instance, you could supply a whole bunch of extra data that needs to hash to the zone hash and then that zone will give a thumbs up or a thumbs down on if the order can proceed. So imagine you have an NFT collection with dynamic on chain metadata. Now all of a sudden I can use that on chain metadata to construct valid orders and make adaptive trait based orders something to that effect. So some of the cool things that you can build with Cport, first example is anyone can come and build on top of this unowned unupgradable contract and it's just going to work out of the box. So if you want to build a marketplace for swapping NFTs directly for other NFTs or any kind of interface that really requires moving NFTs around, seaport is a really good tool for that because it's been very thoroughly optimized embedded and will also be broadly composable. So if you have users that are creating orders and making listings, then you take those listings and surface them in other domains.
00:13:57.740 - 00:15:11.428, Speaker A: Another really interesting application is to explore what you can build with zones so you can do English auctions in a totally native format. One very interesting application of zones is for doing whitelists or blacklists. You can combine a number of tricks on Seaport to effectively run a primary sale that would be available on any NFT marketplace that supports Seaport. What you do is it's a restricted order. So you have a zone where you whitelist for everyone that's eligible for the Mint and have the fulfillers that are minting supply proof that they're in a route on the zone. You have the NFT contract, auto approve Seaport and set it up for lazy Minting so that by default 10,000 NFTs are all held by the creator. They don't actually have to be minted yet.
00:15:11.428 - 00:16:59.252, Speaker A: But on that first token transfer hook, as long as it's coming from Seaport and the owner is this known creator address, then it will mint them as part of the transfer. If you have a single criteria based partial fill support order as well, that as soon as that order is a piece of it is fulfilled, the fulfiller just chooses a token ID that they want or you could even pass through the zone and increment along the way and then basically this primary sale would populate. Here's 10,000 tokens or work really well for 1155 tokens that now it's going to show your primary sale directly on a marketplace and the contract is still going to be a contract that's owned by the creator. But you'll have this broadly composable primary sale mechanic that does not actually require reapproving tokens on a sketchy mint site somewhere. Everyone's already going to have their approvals set on some aspect of Seaport. Another really interesting thing that is worth exploring is better simulation of Seaport. As we mentioned, there are a lot of different ways that a fulfiller might choose to fulfill a given order or group of orders.
00:16:59.252 - 00:17:54.010, Speaker A: The power is totally in the hands of the users as to how they want to fulfill these orders. And so really good tooling around, okay, I've got this order. What is the best way to fulfill this? That would be really interesting to see, to simulate what's going to happen, show what NFTs are going to leave the fulfiller's wallet and what's going to come back and where those NFTs are going to go and what method to call on Seaport to make that happen. And that's really just a broad overview. Oh, one other functionality or piece of functionality that's worth mentioning. Every item can specify a start and an end amount. The order itself also has a start time and an end time.
00:17:54.010 - 00:18:26.240, Speaker A: Assuming you've got a start and end amount that are different, then Cport will figure out based on what time the current block is. It'll interpolate, a linear fit and pick. Okay, so the start amount is one WETH, the end amount is ten WETH. That's an ascending amount item. Say the ten WETH is a week later. I fulfill that order halfway through. Now that's going to be five and a half WETH.
00:18:26.240 - 00:19:01.850, Speaker A: So you can do ascending and descending reverse Dutch auction type mechanics and that pairs with partial fills as well. Both the start and the end amount just gets scaled down depending on how much you're filling that's Seaport at a high level. Really excited to see what everyone kind comes up with and builds. We are all building this together at this point. Seaport is a community resource and I'm looking forward to seeing what everyone builds. Thank you.
