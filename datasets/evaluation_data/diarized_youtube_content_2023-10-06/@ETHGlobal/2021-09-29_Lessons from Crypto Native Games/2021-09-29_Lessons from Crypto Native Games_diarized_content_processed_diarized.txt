00:00:07.850 - 00:00:43.270, Speaker A: Cool. So thanks again to ETH Global for having me for this year's ETH Online. I'm gub sheep. I am one of the creators of Dark Forest, and today I'm going to be presenting on lessons from fully on chain gaming. So so first, for a little bit of context about what my team works on, we're building Dark Forest, which is a procedurally generated MMO, real time strategy built with zkSNARKs for the EVM. So currently Dark Forest runs on XDI. Previously it's run on the Robston test Network.
00:00:43.270 - 00:01:33.318, Speaker A: It's a game that can be launched onto any EVM compatible blockchain. And basically how you can think of Dark Forest is it is a game that is fully on chain. So all of the data, all of the state, all of the game logic is on chain, can be deployed by anybody. And as such, it is a quote unquote, infinitely hackable strategy game where players can write scripts or interoperable contracts or any other modifications that they might desire during the course of gameplay. So yeah, like we mentioned, all the logic runs on the EVM. Formerly we ran on Robson, now we run on XDI. During Dark Forest rounds, we have a whitelist system and we generally see about 2500 players or so during these rounds.
00:01:33.318 - 00:02:16.966, Speaker A: And over the course of the weeks that we run these monthly rounds, we'll see these players consume more gas than all of Ethereum mainnet combined, actually. So another impetus for scalability if we haven't seen enough arguments yet already today. And a little bit about myself. I'm Gov sheep. I work on Dark Forest more broadly. I work on Applied Zero Knowledge, crypto research and development, and I also work on a number of educational and ecodev projects. Okay? So to dive into crypto native games, we first have to answer the question of why build games on the blockchain at all? And I'm sure many people here are probably familiar with this experience.
00:02:16.966 - 00:03:25.040, Speaker A: But when I talk about DApps in general or games on blockchains or whatever other applications people today are interested in building on blockchains, the thing that I always want to be wary of and the thing that I see in a lot of projects, is that basically a decentralized version of something is oftentimes just like a centralized version, but worse. And we really want to lean into the unique affordances of decentralization without just taking purely many of the obvious disadvantages that come with building on a blockchain. Blockchains are slow, they're difficult to program on, they have certain scalability limits, all of these different things. So make an argument for why we care about building games on the blockchain. And this argument sort of has three parts. So I think that there's three answers that we've seen over the last couple of years to why crypto games are interesting or important. There's a broke answer, there's a woke answer, and there is finally a bespoke answer.
00:03:25.040 - 00:04:32.366, Speaker A: So the broke answer is that people are interested in building games on the blockchain because it is easier to build Ponzi schemes or Scams. So I think in a lot of the early days of Ethereum, we saw applications like if people are familiar with FOMO 3d from 2017 2018, kind of the last Bull run, FOMO 3d was sort of a tongue in cheek, pyramid scheme, exit scam application where people would basically put in ether into a big pot. And every time you put ether into this pot, a timer would increase and the timer is ticking down, and if the timer hits zero I e. No one has put in any contribution in the last five blocks or something like that. Then the whole pot would go to the last person who had put ether into the pot. And I think that these sorts of quote unquote games are what characterize a lot of the early experimentation around crypto games. And FOMO 3D was, in my opinion, one of the better ones, honestly.
00:04:32.366 - 00:05:44.134, Speaker A: But a lot of these things were just like straight up like pyramid schemes or Scams or whatever else and I think it left a bad taste in a lot of people's mouths. And so I'm glad that the space has moved away from this sort of thing being like the dominant narrative in crypto gaming. But obviously there's a lot of lessons to be learned from this. So the woke answer to why build crypto games, which I think is more the dominant narrative today, is that with crypto when you build applications you have APIs into the native concept of money or value. So that means that it is really easy to make, for example, your game assets be worth real money and consequently it makes it much easier to build digital worlds where your actions have, quote unquote, real or economic consequences. So, for example, if you lose a particular item or you manage to find a particular item or something like that, then that has economic consequences for you as a player, which kind of makes the game experience more immersive. So a lot of collectibles projects I think fall into this category.
00:05:44.134 - 00:06:44.110, Speaker A: So I think everybody pretty much is aware of has seen Crypto Punks, we've seen games like CryptoKitties and these days Axie Infinity is drawing a lot of attention. And also we're seeing a lot of games like for example SkyWeaver or Gods unchained where you've got these trading card games where gameplay happens off chain, but the ownership layer of the game lives on chain. So cards are ERC 721 tokens and ownership is recorded on chain and these can be transacted on Marketplaces like Openc. So yeah, like we mentioned, the fact that you have access to these money native APIs so easily in crypto games means that you can build these games with real consequences or economic consequences. And that's really exciting for two reasons. This does two things that traditional games cannot really tap into. The first is that because there's something at stake, the game is more immersive.
00:06:44.110 - 00:08:00.134, Speaker A: immersivity is a concept which you can measure along a bunch of different dynamics. One is like how graphically immersive is a game, another is does the game feel like something where you've really got something at stake? And I think crypto uniquely enables that dimension. And the second thing that's really powerful is that the fact that these are economic universes means that it might be easier to incentive align the community members of a game or the players and the devs. So when everybody can share in the ownership of a protocol, then everybody is incentive aligned to grow the community and build out the community. Unfortunately, I think that the current state of crypto native gaming and a lot of the games that subscribe to this thesis is incomplete. I think that a lot of crypto games currently are more speculative asset classes really than they are games in that either the gameplay is very limited or the game itself is just not very fun. Or most of the attention that's being driven to these games is surrounding the financial value of the assets rather than sort of the intrinsic value of owning these assets in a digital world.
00:08:00.134 - 00:09:29.730, Speaker A: So I saw a great tweet where basically someone claimed crypto games will never be sustainable as long as the market around the game is more fun than the game itself. And I think this is super true. I think that another way in which games that subscribe to this currently dominant thesis is incomplete is that many of these games aren't fully crypto games. So for example, ownership is on chain, but game logic or identity know account logic or permissioning is off chain. So Avsa tweeted this out earlier this summer but basically he noted that this was a really popular game that had banned a large bot farm and Absa was sort of calling into question like wait a second, is it really a crypto game? Is it really a blockchain game? If there is someone who can ban people or if there's someone who can prevent people from playing the game, I think it comes into conflict with a lot of the ethos around permissionlessness and censorship resistance that's so important to blockchains, not just for ideological reasons, but also for practical reasons. So the third part of the crypto gaming thesis that I want to talk about is the bespoke reason for building crypto games. I think that the most exciting reason to build crypto games is that building a game on a blockchain enables something that we call permissionlessness or sorry, permissionless interoperability.
00:09:29.730 - 00:10:33.830, Speaker A: Rather than explaining what this means abstractly, I want to show a few examples from Dark Forest of things that we have seen players do that are uniquely possible because Dark Forest is a quote unquote crypto native game. So one thing that emerged very early on was that we saw players were scripting very heavily in order to gain advantage in the game. And one of the interesting consequences of building a game, or honestly, any application on the blockchain is that blockchain applications are client agnostic. In other words, you can talk to the blockchain. You can hit a function in a smart contract from a script that you write, from a default or vanilla web client provided by the developers, from a modified client that you have forked, from the developer provided client. You can do any of these things. You can go into your Chrome dev tools and you can just spin up a transaction, sign it with a private key that you're storing locally or anywhere, and send that off to the blockchain.
00:10:33.830 - 00:11:41.354, Speaker A: Access to the game cannot be gated. And therefore what that means is that players can actually build out things like automations or bots or even AIS as first class features into the game. So early on, we released a plugin system that allowed players to essentially take snippets of JavaScript code and inject those snippets into their client. And from this we saw players build like a ton of interesting utilities, from data visualization tools to remote snarkers, which allow you to prove these zero knowledge proofs that are at the center of darkforce on web servers that are user maintained and offline. We saw players writing even very complex AIS to assist them in playing the game when they were offline or to allow them to play at a higher level. And all of these things have kind of become first class features of the game, these snippets that are passed around between the community and that's added a whole nother dimension to the gameplay experience. We've even seen some folks fork or write entirely from scratch new clients.
00:11:41.354 - 00:12:44.900, Speaker A: So, for example, Giorgios and Kobe did a lot of work to put together a Dark Forest Rust client that allows players to play Dark Forest in the terminal. And there's a lot of sort of performance boosts to being able to do this, especially because you're able to prove your snarks with a different tool stack that's actually a lot more efficient. And one thing that Georgia and Kobe had to do was actually do some reconciliation work between these two different snark tool stacks. The first that's meant to be used in browser and the second that's meant to be used inside, like a Rust web server. And this was super cool to see and something that is much harder to achieve in a traditional game with a canonical developer provided client. Another central concept to Dark Forest is the idea of there's a cryptographic fog of war in the universe that you uncover via something that's pretty similar to proof of work mining. But we saw some players come out with GPU Miners for playing Dark Forest, which was also really incredible to see.
00:12:44.900 - 00:14:35.010, Speaker A: And I think the step function that we saw in the last couple of months that really changed the game and really opened the community's eyes to, I think, what's possible with these permissionlessly interoperable crypto games is building new features on top of Dark Forest as well in a way that fundamentally is not possible with traditional centralized games. So as an example, because Dark Forest is a smart contract, anybody can deploy a smart contract, an auxiliary smart contract, onto the blockchain that talks to the core smart contract. And essentially these auxiliary contracts can look like things like Escrow contracts or marketplaces or player corporations or anything else. In this case, the very first example of this that we saw from a team called Project Sophon was Project Sophon built a broadcast marketplace which would essentially allow you to trade information with other players via a third party contract that talked to the core Dark Forest contract. So you can kind of imagine someone uploading a simple Escrow smart contract that says anybody who deposits one ETH into this contract will cause the contract to programmatically trigger a release of some resource from my Dark Forest planet to your Dark Forest planet. And then what a third party developer can do is they can write a plugin that essentially exposes a UI for connecting to this Escrow contract and share that plugin around, or they can provide a third party client that other people can use. And what we essentially see here is that players have come in and they've written a new feature for the game without any input whatsoever from the developers.
00:14:35.010 - 00:15:36.338, Speaker A: Contrast this with a traditional centralized game where if you wanted to add something like a trade feature, there's pretty much no way for this to be done except through the core developers. So if JAGX wants to add peer to peer trading in RuneScape, then they have to write a data transformation on their proprietary data stores that live in their web servers. Then they've got to write API routes that will trigger these data transformations. And then in the canonical RuneScape client, they've got to write like a UI component that's a button that's hooked into their APIs, those API routes that are running on their web servers. There's no way for player like players can do so much more in a decentralized game compared to in the case where JAGX or Blizzard or whatever else owns the stack from end to end. So we also saw, for example, a bunch of different marketplaces pop up in the last round of Dark Forest where again, these were entirely player made. They were not built with any input from the core devs.
00:15:36.338 - 00:16:55.138, Speaker A: And we think that this is a very early example of some of the richness or complexity that we might be able to see once players can actually impact the land that they're playing on. This was taken from this is like a little mock up from a presentation that someone in the Dark Forest team gave internally recently. But you could imagine a world where someday game objectives or even totally new resources or even nested games are plugins that anybody can install in the game where logic is run in these smart contracts that are maintained by the community or by players of the game itself. Whether it's like game modes and objectives or competitions or we've got here like oil and uranium resource plugin or something like that. Those are things that can live in auxiliary smart contracts outside of the core smart contracts deployed by the core devs. And I think the last thing that I'll tease here is there is another game that we have been collaborating with coming out from Ludins on Twitter who's building a ZK Dungeon game. And this is something that we're really excited about because we think it's going to take a lot of these ZK mechanics and interoperability mechanics to the next level.
00:16:55.138 - 00:17:53.054, Speaker A: So keep an eye out for ZK Dungeon and the Ludens account on Twitter. So now that we've covered those three reasons for building crypto native games, it's finally time to answer the question like what is a crypto native game? We've been tossing that term around a lot, so let's actually get to something that looks more like a definition to us. A crypto native game is a game that is maximally on chain and that can maximally leverage the unique affordances of the blockchain. So this means that the source of truth for game data is on the blockchain. The game logic and the game rules are implemented via smart contracts. The game is developed in accordance with open ecosystem and open source principles, the game is client agnostic and the game embraces real world digital value. So we think that this is a superset of what is currently going on with a lot of the efforts that we're seeing in crypto gaming right now to also provide a few negative examples.
00:17:53.054 - 00:19:21.598, Speaker A: Things that we don't consider to be crypto native games under this definition are things like a mobile shooter game with a crypto wallet integration or like a trading card game where c 721 NFTs but all the gameplay and the battles happen off chain. And this example is kind of funny to me, especially for just looking back at DeFi summer DeFi apps that have a playful skin or are very gamified or have a lot of emojis for all of these categories of applications. We think that this isn't to say that only crypto native games can be successful commercially or artistically, but we do think that crypto native games are the most interesting and important to look at, to understand the full potential of blockchain for building digital worlds and to build a picture of where the space is going. So that's the what the why is something that we've sort of answered by example from some of the previous slides. Just to lay it out explicitly. The reason that we think crypto native gaming is exciting is because it enables permissionless interoperability and that means that players can build the game experience, not just the core devs. Beyond just being able to build on top of crypto native games, it also means that multiple different crypto native games can have strong interoperability mechanics between them.
00:19:21.598 - 00:20:23.374, Speaker A: So other games can hook into your game to share assets, identity systems, reputation systems, mechanics and more without needing to talk to a support team or a BD team or anything like that. So for example, imagine if you could take your sword from World of Warcraft and take it with you into the RuneScape universe or something like that. Currently that would require some sort of integrations effort between JAGX and Blizzard. But if ZK Dungeon wanted to hook into the Dark Forest Artifacts contract, that's as simple as just saying, you know, anybody can take their Dark Forest Pyramid and deposit it into their ZK Dungeon Dungeon heart. And if they do that, that powers up all of their units in their ZK Dungeon. And that means that these crypto native game assets become almost these real, physical, tangible goods that you can pick up and carry around with you throughout the ecosystem of these crypto native worlds. So in short, there's all sorts of things that you can build when a game is crypto native.
00:20:23.374 - 00:21:26.086, Speaker A: From marketplaces to dows to nested games, on top of or inside of games, to new resources and mechanics, automations, alternate clients, interoperable mechanics, shared reputation systems. And I think that for all the hype around the M word lately, if you're looking for what might eventually seed the metaverse, I think crypto native games are an interesting place to look. There's still a very long way to go to realize the full potential of permissionless interoperability in games. For one thing, scalability is a huge bottleneck. So right now Dark Force is in a private whitelisted beta where we allow a couple thousand users at a time onto the game. This is for scalability reasons because current blockchains and even side chains plus roll ups can't support more than thousands to tens of thousands of users. How do we get to a place where crypto native gaming can be mainstream and can support hundreds of thousands or millions of users? That's an open question.
00:21:26.086 - 00:22:34.958, Speaker A: Developer experience is an open problem. If we care about interoperability, then we care about it not in theoretical or abstract sense, we care about it in the practical sense. We want people to actually be able to build these marketplaces on top without it being a huge headache. So that means that there's a lot of developer tools and infrastructure that needs to be built out all sorts of these public goods that will be required to sustain this ecosystem. It's also going to be important to find more developers who are able to program comfortably with Solidity or with the ZK Tool stacks that we think are going to be important for building out a lot of these next generation apps. And there's so far to go in terms of understanding like application, usability, accessibility, design patterns, all of these things necessary to really make crypto native games usable for a mainstream person who isn't a crypto enthusiast. As a baseline, we think that all of those things are currently being worked on and a number of them are quote unquote, just engineering problems.
00:22:34.958 - 00:23:50.486, Speaker A: But one of the biggest open problems that we think will be necessary to unlock the full potential of crypto native games is ZK technology and more advanced crypto. So Dark Forest itself is made possible by ZK snarks because ZK snarks enable the cryptographic fog of War, which is a really central mechanic in Dark Forest as a strategy game. But Snarks are in fact a very general purpose tool that can be used to unlock all sorts of new game mechanics that aren't currently possible on chain today. So, for example, this is a slide from a presentation we gave a couple of days ago. But one thing that zkSNARKs can be used for is to enable rich procedural generation algorithms essentially executed or verified on chain. So if you wanted to build a decentralized Minecraft, then a decentralized Minecraft analog. So a fully on chain procedurally generated very rich three dimensional sandbox world, what you might do is you might start by taking a procedural generation algorithm like Perlin Noise and putting that inside of a ZK snark and then putting that ZK snark inside of your crypto game.
00:23:50.486 - 00:25:23.566, Speaker A: And we actually do have in both ZK Dungeon and Dark Forest very primitive examples of procedural generation algorithms that are now implemented in ZK circuits. Another example of a place where ZK snarks are very important is in allowing things like car card games or private asset inventories in MMO games. So one of the tricky things about card games in decentralized settings, whether that be a blockchain or a state channel or whatever else, is that a lot of the operations involved in playing a card game are things that naively seem impossible on a decentralized system. So, for example, like randomly and privately drawing a card in a way that is uncheatable seems very hard on a system where all applications have totally transparent data layers. But we've been working on some constructions and we have a few proof of concept implementations out of different card game mechanics where you can essentially use ZK snarks to privately and randomly draw cards, for example, from a shuffled deck. This is also interesting because ZK snarks actually allow you to go one level further than commit reveal schemes in terms of both usability as well as what is fundamentally possible. But yeah, all of this basically points to we believe that games are a part of a larger ecosystem and that games are actually where we're likely to find the frontier of application, research and development.
00:25:23.566 - 00:26:37.610, Speaker A: For those of you who saw Vitalik's talk at ECC a couple of months ago one thing that Vitalik mentioned was that today sort of the major production use case of Ethereum is finance. And a lot of times we're seeing that a lot of the application level work being done on Ethereum or these decentralized systems is applications that are simply iterating on or permuting different mechanics or primitives that we already know how to use. So I think the example that Vitalik gave was something like people are building tokens on yields that allow you to tokenize the yield captured by yield tokens or whatever. And we think that to really unlock the next generation of Ethereum applications, whether that be games or coordination mechanisms or Dows or whatever else, we're going to need this sort of new technology that's going to allow us to fundamentally move the needle on what is possible to do inside decentralized applications. So yeah, that's pretty much it for this talk. If you are interested in getting in touch, Darkforce is hiring. You can check out a hiring announcement on the Darkforce blog.
00:26:37.610 - 00:27:23.818, Speaker A: One thing that we're going to announce soon as well, which we'll just give a little preview of here, is that we're forming a new research and development foundation to support application level research and development into the next generation of DApps. And if you're more broadly curious about or interested in working with us on ZK Research and Development, you can email me at gubsheep@zeroxpark.org. My DMs are also open. I'm pretty active on Twitter. And also check out Ludens who is the developer behind who is one of the developers behind the ZK Dungeon game. Ivan, who is the lead developer of Dark Forest, Twitter and ETH University, which is some of the educational initiatives that we support. That's about it.
00:27:23.818 - 00:27:27.978, Speaker A: Thanks so much for having me and yeah, I'll pass it to you.
00:27:27.984 - 00:28:06.120, Speaker B: Karthik, thank you so much for that awesome list of things to do and not to or how to prepare for this. We'll just do one question. I think I may have asked you this a variation of this in the past, but given the nature of how these things work under the hood, how do you kind of think about or balance programmability to game versus kind of making it fun for the person? Like what would you see bots competing with bots and sort of drive out all the people who are doing playing a game for fun or do you think they'll just section off into a separate sort of subcommittee or group or universe and play those games somewhere else?
00:28:06.570 - 00:28:43.618, Speaker A: Yeah, this is a great question. Definitely still an open question in our head. There are a couple of different approaches here. One approach is basically that we encourage all the players to and we try to bake it into the culture of the community that knowledge and tools is meant to be shared. This means a couple of things. One is lowering the barrier to entry to building these automations and tools and providing players with building blocks which they can construct. Bots or other things out of, and this means clean APIs or whatever else.
00:28:43.618 - 00:30:11.070, Speaker A: The other is encouraging players who are very active and trying to reward players who are active in open, sourcing their work and making it accessible for new players and creating those touch points like an easy to use plugin system so that there can be sort of a level playing field. This also has a dual effect of making Dark Forest something of an educational program for its players, where people can steadily onboard, depending on how deeply they want to go into the game, they can go deeper and deeper into playing with the programmability of the game. So I think another possible outcome here is that if you're building a strategy game, you want to build a game with a fair amount of strategic depth to the point where chess was not boughtable for many, many millennia. It's a game where you've really got limited resources and it takes strategy and intelligence in order to be a good chess player. Similarly, here with RTS games, there is some degree to which bots can help you, but ultimately, naive strategies are still going to be beaten out by players who are playing manually and have a deeper understanding of the strategic landscape of the game. So in fact, a lot of the top players of Dark Forest are still primarily manual players or not developers. And I think that what we're evolving towards is sort of like a human AI hybrid competitive gameplay style towards the top ends of Dark Forest.
00:30:12.850 - 00:30:39.514, Speaker B: That makes a lot of sense. And also, I guess, to maybe just sort of think about how things are evolving in NFTs overall. People are really going into derivatives of kind of games and NFTs overall and sort of branching up into their own sub communities too. So as things kind of get either more heated or complex or complicated, I do think people just self select into zoning into their own world.
00:30:39.712 - 00:31:11.700, Speaker A: Exactly. Yeah. And I think that we're already starting to see it's becoming difficult to place highly in Dark Forest without being a part of a player dow, whether that's a group of people sharing a multi SIG or sharing a burner wallet private key, or who have some more advanced smart contract infrastructure, and then you can start seeing specialization. Like, this person is responsible for building out the automation and bot tooling, this person's responsible for piloting the account during this time zone. This person is responsible for negotiations and diplomacy. So that's been really exciting to watch as well.
00:31:12.710 - 00:31:23.160, Speaker B: And maybe just one last question before we end. From what you just said, is that in line with what you wanted it to be or is that you were just kind of talking about what's happened so far?
00:31:23.690 - 00:32:25.290, Speaker A: Yeah, I think for the Dark Forest team, we've always speculated that some of these directions might be possible. But really it's up to and we want to make this true. As much as possible that it's up to the players in the community to see what third party tools or what additions to the game dictate the gameplay experience. I would say, obviously, it's hard to measure this quantitatively, but I would guess that more than 50% of a top player's Dark Forest experience actually now lives in actions that are going through third party code rather than the Dark Forest core client or contracts themselves. So for us, it's really about creating that room for experimentation and trusting that a community of players who is currently at least culturally aligned and maybe even someday economically aligned will have better ideas than just us. And we can try to provide an unoppinionated base layer with just enough creative direction and just enough to play. With that, players can run wild with their imaginations.
00:32:27.390 - 00:32:36.426, Speaker B: That's amazing. Well, with that, I want to thank you so much for doing this amazing talk, and I think one day we'll definitely get you to play this game live on one of these talks.
00:32:36.538 - 00:32:38.494, Speaker A: Yeah, maybe a hackathon or something like.
00:32:38.532 - 00:32:43.520, Speaker B: Around don't do it justice. Awesome.
00:32:43.970 - 00:32:45.254, Speaker A: Thanks, Karthik.
00:32:45.402 - 00:33:26.062, Speaker B: Thank you so much. Cupsheet all right. With that, we are ready to close off today's NFT and Creator Summit. I want to thank everybody who stuck around and asked questions and engaged with us on the chat. We had so many amazing talks and speakers and questions come in from the audience and also want to give a special shout out to everybody who reached out to us last week about giving feedback on the new eGlobal TV design. We got a lot of bugs still to fix, but we're slowly working on them. One of the harder pieces here is that we can only test these things on production when Real Time Summit is going on, because a lot of these are latency and race condition related bugs that only happen when a few hundred users are watching in real time.
00:33:26.062 - 00:33:50.290, Speaker B: But we're slowly working on this thing. So thanks again for everybody with that feedback and hope you are enjoying some of your new profile photos. So with that, we're going to sign off, and we'll see you next Thursday for the Ave Grants Dow Summit and then next Friday for our Dow and Governance Summit. In the meantime, check us out on Twitter and we'll see everybody who was participating at the hackathon on Discord. Take care, everybody. Bye.
