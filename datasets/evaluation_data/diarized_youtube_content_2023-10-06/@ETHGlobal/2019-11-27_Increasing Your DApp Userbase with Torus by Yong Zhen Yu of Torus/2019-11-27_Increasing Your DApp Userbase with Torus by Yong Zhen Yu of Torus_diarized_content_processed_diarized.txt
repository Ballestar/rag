00:00:09.310 - 00:00:36.022, Speaker A: Hi guys, thanks for coming down today. My name is Zen, I'm one of the co founders of Taurus. And Taurus is basically frictionless logins for DApps. So yes, this is us. I'm super excited to see all the hacking that's been going on so far. And I'm just here to introduce use what we do. So basically what Taurus is, is that we are replacement for MetaMask.
00:00:36.022 - 00:01:36.958, Speaker A: We are a web wallet. The interface is exactly the same as MetaMask for what a developer would get. The advantages of using Taurus over MetaMask is that for one, a user doesn't have to download a code extension and secondly, you get an interesting name resolve. So how does this work and why can Taurus do this? Also, I guess users can log in by Google accounts relative to creating an account on MetaMask, having to understand public private keypads, we try to abstract that all away from the end users and provide them with a very seamless experience. So why we can do that and how ToRs works behind the scenes is we use this scheme called we build on this thing called Chamir Secret Share. And what this means is we split a user's key into multiple different shares. These shares are kept on a network of nodes which are run by large ecosystem stakeholders like Logical Theorem Foundation binance, several other large ecosystem stakeholders like Kyber as well.
00:01:36.958 - 00:02:07.794, Speaker A: And we basically use DKG to generate these keys in a distributed manner when a user logs in via OAuth. So this can be a Google login, this can be a Twitter login, it can be a Facebook login. It doesn't really matter. What we do is we send off token to the backend nodes. These nodes kind of in MPC style, verify your off token against, let's say, Google public key. We return shares which you sum up only in the front end context of browser. So this key is only held in memory.
00:02:07.794 - 00:02:58.918, Speaker A: When you close your browser, the key is destroyed, it's not kept anywhere on your laptop and the key is only ever loaded in a secure iframe context, which is kind of verifiable through a shard integrity cache. Yeah, so that's how we work. And what this means for you guys is you guys can integrate us, our docs at Docs tour us. Basically you guys can either use the one line script tag to include Taurus and you guys instantly get a web free instance. That was the way people used to do it. But nowadays with people having multiple wallet providers and a lot of wallets in the space, if you're looking to integrate Taurus with other wallets, I would recommend going for the NPM package over here. This one gives you a provider which can wrap around the webtree library that they're using.
00:02:58.918 - 00:03:48.562, Speaker A: And it's like the standard way that you just get a web tree and then you can start interacting as you would normally. So you can ask for submissions of productions you can do eve calls, everything. That's not very cool because I mean, we're all used to that, right? We're all developers, we've all coded MetaMask using webtree is not awesome. I just want to get something coded and get that out. So what is cool with taurus is that because we map oauths or logins to public private key pairs, we also have a name resolver. So basically this is the API and this is what you would get. So if I enter in anybody's email, this is inclusive of somebody who's registered on taurus and somebody who's new and who hasn't registered on taurus.
00:03:48.562 - 00:04:07.678, Speaker A: So if I just put in a string here, I can get a public private keypad, sorry, not a private key, just a public key. The public key of somebody who you basically want to interact with. So I mean, a very simple example of how I would use this name resolver is that if I wanted to send sorry, what's the name?
00:04:07.764 - 00:04:08.170, Speaker B: James.
00:04:08.250 - 00:04:38.114, Speaker A: If I wanted to send James hi, nice to meet you, James. I guess we'll talk later. So if I wanted to send James like ETH, I would just get his Gmail address, I would name resolve it to a public address, and then I would send that public address e. And only James can access that ETH ahead of time. So this is a very simple explanation of maybe dealing with the address. But you can do a lot of nifty things with this. You don't even have to interact with blockchain because these are public private keypads.
00:04:38.114 - 00:05:13.522, Speaker A: You guys should be doing implementing signatures on top of it, doing interesting things like ring signatures, p to P, communication through encryption. The possibilities are endless. And that's what you guys should play because this is more fun. So right now we're integrated with Google, but in the future we'll be integrated with several other Oauths as well. Coming down the pipeline is Facebook as well as WeChat, we're integrating GitHub as well. And you guys would be able to name resolve to those things. So you'd be able to name resolve to your GitHub, handle name resolve to your Facebook panel and all of that? Yes.
00:05:13.522 - 00:05:37.602, Speaker A: And we have prizes. We ultimately have six prizes. So there's one grand prize which is going to be 2000 USD, and the four runner ups get 1000 USD each. This is the criteria. Of course, you guys have to integrate taurus to be eligible for this. The first one is the best DAP. Second one is the DAP, which fill the industry need.
00:05:37.602 - 00:06:02.354, Speaker A: Third one is the one that's the most seamless. Fourth the one with the best overall UX. And last but not least, the DAP is the most creative design. So please do integrate for us. Any questions, guys, before I move on? So no questions right now, but we also have an online hackathon, so I'm shilling this as well. You guys can double apply. We don't mind.
00:06:02.354 - 00:06:31.274, Speaker A: So what you guys hack on here? You guys can apply for an online hackathon as well. It runs through September and ends just before DevCon, and you guys can just double. There's also no fees of winning. Right? So I think right now we have our team back there as well. Chai is our lead engineer. If you guys have any trouble with integration, feel free to just talk to Chai or myself. We'd be free to help out, and I think that's all we have.
00:06:31.274 - 00:07:15.958, Speaker A: Although we have a lot more time, we can walk around and help you guys with integration. Does anybody have any questions before we do that? No. Cool. It was nice talking to you guys. If this was a DAP which used MetaMask, you would have to download Chrome search if you see no MetaMask. And to log into this DAP, it's a flow which users are already very I can just log in via Google just like this. What's happening in the background is the authentication that's happening.
00:07:15.958 - 00:07:27.520, Speaker A: I'm aggregating shares. They're coming back, but Wi Fi is slow. And there we go. I'm logged in. It's just as simple as that. It's like a Web 2.0 app, which is what we really should aspire to be.
00:07:27.520 - 00:07:28.800, Speaker A: Okay.
00:07:31.330 - 00:07:34.800, Speaker B: Do you know your address before you log in?
00:07:36.530 - 00:07:43.200, Speaker A: Yes. You do? How it works when I'm a thing is you are literally mapped an ETH address.
00:07:44.050 - 00:07:45.618, Speaker B: You as a user, you as a.
00:07:45.624 - 00:07:55.800, Speaker A: User, are mapped a public key, the private key, is never reconstructed before you log in, but after you log in is reconstructed in. Ifrin contact.
00:07:59.560 - 00:08:09.370, Speaker B: Could you, in theory, let's say, send ETH to someone who hasn't even created an account with tourists yet. They just have a Gmail account.
00:08:13.260 - 00:08:56.250, Speaker A: That's the main use case. I guess. In general, we aim to become like, the sauce key. We want to be the bridge between Web 2.0 world and the Web 3.0 world, and that's kind of where we go. Anything else? So Chai works really hard on our wallet.
00:08:56.250 - 00:09:26.702, Speaker A: It's definitely very well done, I have to say. I mean, self praise is no praise, but we have all the wallet features. You can sign signatures, you can do e calls. Coming up soon would be a transaction firewall. So you guys would be able to kind of like permissions. You guys would be able to basically not bother the user with pop ups every time. On approval of DAP.
00:09:26.702 - 00:09:45.962, Speaker A: You could trigger transactions freely after that, and that provides for a much better user experience. In general. We also basically have all your typical I mean, just to show you guys something in action. What's your Gmail address?
00:09:46.096 - 00:09:48.378, Speaker B: Let's do Alex@squarelink.com.
00:09:48.464 - 00:10:02.074, Speaker A: Okay. So Alex actually has logged on before, I think, or have you done? I'm not sure if I did with.
00:10:02.112 - 00:10:02.700, Speaker B: My.
00:10:04.590 - 00:10:30.180, Speaker A: I hope that this is a new account because then you guys can really see. But as you can see, I'm sending to an email address and I'm not sending to a public traffic key pair. And I confirm the transaction. And it's here logged in. Now he received the e even before he has interacted with ecosystem before.
00:10:35.270 - 00:10:38.260, Speaker B: Yeah, sorry, can you say the last part again?
00:10:38.870 - 00:10:41.154, Speaker A: Basically, you can interact with somebody even.
00:10:41.192 - 00:10:45.418, Speaker B: Before even what if they don't have a wallet yet?
00:10:45.504 - 00:10:48.406, Speaker A: Even before they don't have yeah, even before they have a wallet.
00:10:48.438 - 00:10:54.022, Speaker B: Because you set up the pairing between the Gmail and where is that private key stored?
00:10:54.086 - 00:11:40.746, Speaker A: So that private key is are you familiar with show me a secret churn? So just a brief refresher on show me a secret churn. It's really quite simple. You know how when you have a graph and you have a line on a graph, if you have one point on that line, you can't define the line, right? But if you have two points, you can define the line. This is true for higher powers of x. So when we're talking about like x squared, three points, x cubed, you need four points, and the list goes on for us. The public private key pair is always actually more the private key is always the Y intercept on this function. These points are generated in a distributed manner via a scheme called distributed key generation is an implementation from 2004.
00:11:40.746 - 00:12:11.640, Speaker A: And I think no, it's not even goldfell's one, but it's very similar. And basically these points are split across a network of nodes. So the nodes are permission. Right now you can compare the model to be very similar to Libras. It's basically large ecosystem stakeholders run nodes. And these guys are Berger from their foundation. Binance runs a node, kaiser network, several others.
00:12:11.640 - 00:12:16.760, Speaker A: Yes.
00:12:17.850 - 00:12:19.686, Speaker B: In the example you just showed us.
00:12:19.708 - 00:12:20.854, Speaker A: Or the demo you just showed us.
00:12:20.892 - 00:12:31.126, Speaker B: Where somebody who doesn't have any wallet, some app, let's say. Does Taurus have a service that notifies them that they disrecee?
00:12:31.158 - 00:12:55.198, Speaker A: So that's coming up. Try. When is it coming out? Next spring, two weeks. That's possibly something to build this weekend. Yeah, no, actually, if you guys build it for us, we'd be really glad, for sure. You guys can definitely leverage it and build it. It doesn't just have to be like email notifications.
00:12:55.198 - 00:13:53.070, Speaker A: When we get like, let's say Twitter integrated, it can be tweets, it can be DMs through that. Something which we are working on as well is opening the API scopes, the DApps themselves. So right now the API scopes are kept within our iframe. So whilst you guys can access some information, like name the profile information on the user's approval, you guys aren't open to, let's say, sending an email out via the Gmail class or accessing their Google drive. But we're looking to generalize API scope such that you're able to do this and leverage on the Oauths as well so that you can do more nifty things. I don't know, do something with Google. I think we'll just cut it here and help out people with integrations and stuff like that.
00:13:53.070 - 00:13:54.640, Speaker A: We have some shirts to give.
00:13:55.090 - 00:13:55.930, Speaker B: Shirts?
00:13:56.090 - 00:14:19.590, Speaker A: Last few shirts. It's limited edition, guys. We also have a YouTube channel. We have a YouTube channel. Channel. No, I didn't let her. YouTube Channel Please do subscribe.
00:14:19.590 - 00:14:48.080, Speaker A: There's a Twitter account. Please do follow. I have no followers. Singapore is not Twitter. It's just when I tried to import my friends, I had, like, ten followers, and I've been working my way up from there, but I really appreciate that. What's your Twitter handle? It's Zenzen you. That's my face.
00:14:48.080 - 00:14:52.250, Speaker A: Thanks, guys. Bye.
