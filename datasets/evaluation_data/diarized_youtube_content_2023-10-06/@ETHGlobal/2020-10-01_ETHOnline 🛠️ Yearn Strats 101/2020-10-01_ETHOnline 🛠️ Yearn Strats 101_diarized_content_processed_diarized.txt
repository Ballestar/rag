00:00:05.870 - 00:00:27.100, Speaker A: Great. Awesome. Thank you so much everyone for joining us. We've got the Yearn team here who's going to teach us all about strats. So Doug from Yearn is going to take over now and we'll have time for questions at the end. Thanks, Ed.
00:00:28.350 - 00:00:41.810, Speaker B: Sure. Just share my screen here. Let me know if you can see my screen.
00:00:45.320 - 00:00:50.630, Speaker A: Not yet. Maybe make sure you hit the share button.
00:00:53.320 - 00:01:09.390, Speaker B: Leave it hold 1 second. Sorry, I need to grant access to.
00:01:21.690 - 00:01:25.610, Speaker C: Yes, sometimes you may have to drop back out if you haven't granted access yet.
00:01:25.680 - 00:01:26.506, Speaker D: Come back in.
00:01:26.608 - 00:01:38.880, Speaker B: Yeah, let me see if I can open the yeah, I have it here. Let me try. Let me jump out and hop in real quick. 1 second.
00:01:39.650 - 00:01:40.400, Speaker A: Awesome.
00:01:45.750 - 00:01:50.818, Speaker B: Now I'm able to share, I think. Let me know if you can see my screen.
00:01:50.904 - 00:01:51.860, Speaker A: It's working.
00:01:52.470 - 00:02:25.466, Speaker B: Nice. Okay, cool. So we can start. Yeah. My name is Doug. I'm here with Brian Luciano. Orbal X 48 and Faku were working on different pieces of wiring and yeah, we want to bring you here the small workshop where we go into what the vaults are, the strategies, how they work together, and hopefully the requirements that you know a bit about solidity.
00:02:25.466 - 00:03:16.762, Speaker B: But hopefully by the end of this you're able to feel confident and go into trying to tackle building a small strategy when you go ahead and hack into the event. So jumping ahead, wiren ecosystem overview. Overall it's growing rapidly. It's different protocols and features, but by far the most used one are the vaults. So the main topic that we're going to be discussing today are vaults, the mechanics of how they work and combine with the strategies. So the concept that usually gets thrown around for vaults is that they're yield aggregators. So wiring is just yield aggregator.
00:03:16.762 - 00:04:29.910, Speaker B: What that means is that you deposit funds and you don't necessarily know what's happening or need to know what's happening, but somehow those funds get deployed and earn you more yield on those deposited funds. So we're going to go into how that works at the low level, the mechanics, and dive deep into the code. It's required for you to understand how do you go about building a strategy. So when you dive deep into this, it sounds complicated at the beginning, it's a lot of moving pieces, but hopefully the way we compose this demo and presentation, it sort of like simplifies the overall picture. And by the end, hopefully you can take away how all these components and pieces work. When we're talking about bolts, the core components that are in question, there are the bolts, the controls and the strategies. So those are the components that will do a deep dive within the stock.
00:04:29.910 - 00:05:19.778, Speaker B: Right. So the vaults are the user facing interface for the protocol. So that's where most users interact. Taken by Andres quote here are simple token containers. They're meant to be normal tokens with added so as an example here in the diagram you can deposit coming and deposit die and you get back this y die which is a representation of your shares within this pool. And some magic happens here in the middle. The strategy that does something with those funds and at the end the output is you get more of the initial target token that you deposited.
00:05:19.778 - 00:06:28.554, Speaker B: Right, so more die in this case. So we're going to dive deep into what's going on with those strategies. How do they get those deals and how will you go about thinking about designing one? So overall with those properties, the bolts are again meant to be simple talking containers, as simple as possible just to keep track of the shares of the users, what is the balance of each user within the pool and the overall supply of the pool and so forth. It complies to their UC 20 standards. So on top of all the methods that the vault has to achieve its goal, it's also meant to be transferable. You can move it around, use all the normal ERC, 20 methods and that means that you can compose the vaults themselves because at the end of the day they're tokens. So we've seen that with curve that they use them in their own pools and who knows, hopefully we see some cool use cases of composability within the event.
00:06:28.554 - 00:07:21.234, Speaker B: The other design goal is for the pools, the vaults to be efficient when you go in and out. So that means that when I'm depositing, the only thing that's happening is you're minting shares for that deposit. And when you withdraw in the same fashion, you're just returning balance that's with a caveat. Because if the vault currently has the balance to return the amount that you're requesting, then you don't need to go to the strategy, you just have it there and you return it back to the user. So that's less gas. But if the amount exceeds the current balance, then it needs to go downstream to the strategy and we'll see how those pieces work together. But that is extra steps and the extra step in ethereum is more gas.
00:07:21.234 - 00:08:09.014, Speaker B: So that's the caveat. But at the end of the day it's really a cool design the way that you're basically scaling this same interaction. If users came in, wallets came in trying to do the same thing that the vaults are doing in the strategies directly mining curve or mining compound, all the wallets will be individually fighting for that block space which we know is limited in ethereum. So this makes it so all those interactions are compressed into a single transaction that interacts with the protocol overall. So it's sort of like a scaling solution as well. All the vaults map one to one to a back token. So it's yDAI.
00:08:09.014 - 00:08:58.410, Speaker B: Usually it handles dai vault is backed by ETH and so forth. By design, the vault has a dependency on the controller and the governance and that's by design because the vaults themselves do, they're very simplistic. They do one thing well. And I will keep repeating this concept because I think that that's the core of the design. Each of those components are meant to do one thing and one thing well. And that sort of makes it easier to audit, easy to come up with new ones and deploy new strategies as they go on. That means that the legwork and the complexity of handling this yield strategies, it's taken downstream from the vault, it's abstracted away from the vault itself.
00:08:58.410 - 00:09:40.182, Speaker B: We'll see that in the code as well. The controller has full access to the vault to deploy the fonts to the strategy. And that controller is meant to only be called through governance and the multi SIG. So that makes the vault in themselves simplistic because they're agnostic about what's going on in the strategy. We'll see that how that fits in within the overall system in a minute. So this is the normal vault interface that you will see. So the main things that the users interact with are the deposits you have deposit, all you can withdraw.
00:09:40.182 - 00:10:30.310, Speaker B: Again, those are the main functions that the users will be working with when they talk to the vault. But there's this Earn function that if you come back to what I said before, you deposit funds, but their funds are dormant until something happens to them, until we deploy them to the strategy to invest them or make the liquidity mining. So that's where Earn comes in and I'll show you a diagram where it shows the whole interaction shortly. But that Earn method is not necessarily meant to be qualified by the users. The users for the most part will be interacting with deposit, withdrawal and withdrawal. And this is sort of like the interface for the vault. But you also have all the, ERC, trending methods available, but this is just the specific ones for the vault use cases.
00:10:30.310 - 00:11:28.646, Speaker B: Then downstream to the next step is the controller. So the vault knows about the controller, and the controller as you can see, is this glue in the system registry that keeps track of what vault has, what current strategy active at this point. And each of those strategies are doing something with a specific defy protocol or maybe many defy protocols depending on the complexity of the strategy. But the controller is this routing mechanism that keeps track again, that knows this vault is currently at this strategy. And whenever the funds are funneled, it routes that funds to the correct strategy that is active at this point. So that decouples the system in way that the vault only knows about the controller and the strategy doesn't know about the vault and so forth. And this is the interface for the controller.
00:11:28.646 - 00:12:28.414, Speaker B: So the controller is not meant to be called by anybody outside the system. It talks only with vaults and the strategies and the components. So you see here, the withdrawal is meant for the vault to be when the vault says I want my funds back and pulling back all the funds for the position depending on what the strategy is doing. Earn is the method that when you call the vault earn, that's the method that funnels the funds to the strategy that's active at this point for that particular vault. And we have the admin methods that are notable here, that approved strategy and set strategy. So approved strategy, you have a candidate strategy that's signed by the multisig and it goes into this queue of candidate strategies that can go live and SEC strategy is flagging that and putting it active basically. So it has this process of migrating funds from the previous strategy to the new one.
00:12:28.414 - 00:13:06.774, Speaker B: It's going in. So now when you go into strategy, going back to the Android call here, they're meant to be simplistic in a way you can see strategy is they do one thing and one thing well. They should be meant to, not to be as simple as possible. Given DeFi is complex as it is, you don't want to over add more complexity if you can avoid it. So they have this concept of a one token. So one token comes back to the vault. The one token is the goal that they're trying to achieve to increase or maximize returns on that specific token.
00:13:06.774 - 00:14:16.942, Speaker B: So going back to example here, this strategy is meant for Dai. So Dai is the one token. So once the strategy has control of the Dais, it funnels it to a specific protocol that does something with some liquidity mining and with those dice and funds through that liquidity mining process, you get a secondary token. And that secondary token is usually a reward token. And that reward token is a non zero value token that you can come into the market and swap it for any token. So what the strategy does is it does this loop periodically depending on the strategy and the nuances. And you call harvest which is a method that grabs all the rewards that we have collected so far and we swap them into whether we use converter type interface like uniswap or balancer or curve, depending on what pairs you're working with to avoid slippage or too much slippage.
00:14:16.942 - 00:15:04.926, Speaker B: And at the end you'll get profits on that one token and that one token can be reinvested into deposit and you get this feedback, there's this loop that you're constantly doing this. So the takeaway here is that this is the pattern that you'll see time and time again on all the strategies that are alive. If you go into the code, you want to identify this pattern, you have this one token. Something happens here that makes yields that eventually become more of that initial one token. So for the most part, all strategies fall into the similar pattern. But you'll see, like orville may talk more. That why each strategy has considerable more steps to achieve the same goal.
00:15:04.926 - 00:15:44.970, Speaker B: But at the end of the day, the basics are still the same. You're trying to increase position on a specific token. So what are the considerations and strategies? Like I said, the fight in itself is complex. That means the strategy for the most part should strive to be simple, doing one thing. One thing well. I mean, if the strategy is working with curve, you would need knowledge in depth of how curve works to deploy that strategy to make it work. What are the risk involved in that? And again, the strategies are compared to the vaults, are more dynamic.
00:15:44.970 - 00:16:40.270, Speaker B: They're upgradable, they're meant to be. Sometimes they're ephemeral, meaning that they may only last for months. DeFi moves so fast that it may make sense to deploy a different strategy to target a different yield mining mechanism. So they're aggradable, they're cohesive, they do one thing, one thing well. And again, going back to the risk, we'll talk more about risk specifically, but the main point here takeaway is that doesn't matter if your strategy is like it has the best code, it has no exploit or anything. If the protocol that the strategy is relying on is not safe, there's nothing you can do if your funds are drained within that protocol. Where it stands, the strategy doesn't have any mechanism to save you on that point.
00:16:40.270 - 00:17:29.694, Speaker B: So you need to be careful about it's. Not the same to build a strategy on top of a protocol that's well tested, production ready, has a great team compared to building a strategy on top of the next one. Protocol that was just out came out two weeks ago or something, so it's a big difference. So there's no way to save the strategy if the funds underlying in the protocol are drained. So that's a big concern that we take seriously when we're building strategies. So the interface for the strategy we talked about with the one token, that's like the token that the gold, the strategy is starting to increase. We have the harvest method, we'll see the mechanics, but the harvest really the one that collects the rewards and swaps it and makes more.
00:17:29.694 - 00:18:22.030, Speaker B: One tokens to redeposit deposit is the method that the controller calls to funnel the funds from the vault and withdrawals, they're all the same, they're pulling back. It's the way that the controller target signals the strategy. I want my funds back, give me all the position. And that has some implications. It's currently heavily discussed in the protocol team because depending on the strategy or where the position is, it may not be easy to do a full withdrawal. So that entails other systemic risk that I think Orwell and Brian will touch upon. But yeah, the withdrawal and the mechanics is essentially the controller saying, I want my funds back when we're switching strategies.
00:18:22.030 - 00:19:41.574, Speaker B: Okay, so we touch upon each of those individual components. So how does the use case work end to end, right? So the main thing, the things are of interest here are for example the Air method we talked before, when I'm depositing into the vault, nothing happens necessarily. The token is lying there doing nothing is not being deployed until somebody calls Earn and that Earn funnels to the controller and says the vault says to the controller here, take these funds to do something with them. And the controller has this routing mechanism that we saw before that says this is where the funds are going to go to the current strategy. And that strategy is the one that actually does the interaction with the defy protocol. So the other method of interest here that now we're no longer hitting the vault directly, we're talking about the strategy is the harvest which is also not meant to be called by the users necessarily. So the harvest here we call the strategy and the strategy claims rewards in that specific protocol.
00:19:41.574 - 00:20:32.890, Speaker B: And by the way, this line here is not meant to be taken as DeFi. Protocol calls back the strategy or somehow it's just to represent that we have rewards. Our balance increase in those reward tokens that we got from the strategy and the swapping. We get those rewards and we convert them back to one tokens, whether that's uniswap for this example, diagram or other protocol that's able to convert to the one tokens and we can get more. One tokens and those are transferred for a fee to Controller, which eventually goes to the treasury back to the WiFi holders and we deposit the rest back into profits and make it work again in the cycle. Awesome. So that was the high level concept design.
00:20:32.890 - 00:21:19.334, Speaker B: Now I want to get into the repo that we have here. So we made this repo for the event. It contains what you need to get started on making strategies. So I have here you just do your normal Git clone and through the folder that you want to start working with and here I already have one. So I'll walk through what you expect to see here the README. First thing that you can take on is the requirements. The repo needs brownie, so it has the setup here.
00:21:19.334 - 00:22:27.166, Speaker B: You can go here, install brownie and install the dependencies. Next step would be install Ganache. So I'll talk why we need Ganache to make the repo work. And then you have this environment sample which you input each scan token and your project ID because the tests are doing some integration with infuria and you need it for the Nash fork as well, which I'll just explain shortly. And once you have that you're good to go. You can compile here the code that we have and running it, compiles the code and you have your starter cycle to set up well. Also you can do test there's example tests that are very thorough about testing the vault, the strategies and I have it run here in the interest of time I already went ahead and run them and you can see here.
00:22:27.166 - 00:23:43.954, Speaker B: They're exercising the controller, they're exercising the strategies, they're exercising the vaults themselves. And yeah, it has to set up for you and go out as an example to take. How do you go about building your own strategy? So with that said, I want to go into the code here and dive into what I was mentioning in the slides. By the way, it also has all the interfaces ready for the protocols that we're interacting at this point. So it's a good way to learn about if you want to get familiar with specific protocols you have the interface of how to add liquidity curve. All of those interfaces are really set up already and if you want, for example, if you're thinking more about doing something with the UI instead of doing the contracts then this builds also the artifacts, the abis that you want to pick up from your website and call the vaults and everything. So yeah, jumping into the code of y vault.
00:23:43.954 - 00:24:30.834, Speaker B: So the main thing is the takeaway is narrow down those patterns that I mentioned before like the earn and deposit here. Once you understand the simple patterns that are going on, I think you're able to stray away from that. For example, say the deposit, this is the user's deposit and the violence maybe you want to give them an NFP here at the end, I don't know. So it depends. You go into the shares and what it's doing is just minting the token and giving you the shares. But you need to sort of understand the basic pattern that is happening here to improve upon it and come up with cool ways to iterate on what we're doing. The other one that we mentioned is earn.
00:24:30.834 - 00:25:36.202, Speaker B: So here the earn we get the balance that we have to work with and we pass it along to the controller. We say the controller take it away, do something with this funds and that's for the most part the vault are really simple. Like I said, they're keeping track of the accounting of who is in the vault and the pool and for the most part so now we prefer I'm going to the strategy that we built just for the event here. It's not a strategy that's live but it's something that helps it's instructive to help how a strategy works. So this strategy mines die using a compound setup that you get rewards and comp and then you invest them again into. So the one token here it becomes my die token. So you are always coming back to the one tokens and dimension here.
00:25:36.202 - 00:26:25.930, Speaker B: The compound is the system that we're interacting for this strategy. The comp is the reward token that we're getting. CDI is an interface that we need to work with compound and uni is our interface to convert those tokens back to the one token. So the main things that you want to see in the strategy is the deposit. Remember, the controller is calling the deposit when it funnels the funds from the vault. So what is the deposit doing when it comes to compound? Okay, we need to get the balance of Dai and mint it into C tokens and that's it. If we have something to mint, we have some balance left.
00:26:25.930 - 00:27:06.070, Speaker B: We mint more. That means investing more into the protocol. But you'll see, this is the line that you'll be changing for the most part when you're saying, I want to do something else here, you're going to come here and say, now I want to do who knows? I want to interact with more protocols. And you can see it another strategy that I'll show shortly. This is the thing that you want to change because you're interacting with a different protocol that's not compound. But for the most part, this is really basic. Like you're minting, you're lending your die into compound.
00:27:06.070 - 00:28:07.740, Speaker B: Then we jump into the other notable here is Harvest. So now that I'm invested in compound, how do I do what the strategy does? So the interface for compound claims the comps every so often when you call Harvest. Now that means after this I have balance to work with compound righteous. So here I'm checking how much balance I got out of my rewards. If I got something, then I go to uniswap and pass it along from comp into my one token. And if you see here, this is really generic because this could become any token that you get rewards out of any other system. Right.
00:28:07.740 - 00:29:03.274, Speaker B: Again, I think that the best way to see this is pick up the patterns that are going on here and see how you switch them to whatever is the target system that you want to do the mining. So here uniswap could be another different AMM to get you that pair. But for this particular use case, we use uniswap and that way we swap the tokens. And then after we swap them, yay, we have more die. What do we do with those die? Then we subtract the performance fee. We send them to governance here and then we deposit more. So whatever is left, we go back and deposit into the same strategy.
00:29:03.274 - 00:29:54.430, Speaker B: And that's the cycle until the strategy is replaced by another one. So if you take away that same pattern across all the defy protocols, I think you're in a pretty good spot to think about cool things that could happen within Harvest. You maybe could add insurance when you're depositing within the strategy. Just thinking on the top of my head, yeah, that's the code example. And I wanted to hand it off to Brian and Oval. They're going to talk more about what are the main considerations and risk regarding strategies and what to think about when you're trying to build one. Take it away, Brian.
00:29:59.510 - 00:30:44.830, Speaker D: I wasn't recognizing my keyboard. Okay. Yeah. So thanks a lot for the overview, Doug. And like he's saying, we have these common patterns that have been working very well with this whole yield farming craze. But as we get more complex into the ecosystem and find different ways of earning higher returns for strategies, you need to start thinking about risk. So Doug already mentioned one form of risk that is kind of at a higher level protocol risk of your strategy interacting with the ecosystem.
00:30:44.830 - 00:31:43.666, Speaker D: So if uniswap has an issue and then all of a sudden you're losing 90% of the swaps you're doing from the yield token back to the want token, then you could be in a problem. Or if the protocol itself that you're interacting with has a problem and it basically loses all your deposits on you, that's a form protocol risk that's kind of at a level a little bit higher than what you as. A strategist need to consider it's how the strategy is applied and who's in control of it and how they can get out of it. So getting out of the strategy is an interesting question for these simple yield farming schemes. It's kind of easy. Basically, you've deposited something and it's sitting there and you can withdraw basically all of it at any time. There's no real risk to it.
00:31:43.666 - 00:33:16.930, Speaker D: You might lose some of the yield token when you withdraw, but most of them, you won't lose the underlying token that you've deposited. As things get more complex, we're starting to find ways where that's not always true. So I think some of the curve pools are interesting in that regard because you might deposit one of the three or four tokens in the curve pool and then it'll actually do a bit of a swap to the other ones to balance it. So when you go to withdraw, there is a potential for loss if the token you want to get out of it is operating at a loss compared to the other tokens in the pool. So that's something to consider with curve, and then there's lots of other little things to consider. And just always think about how of course, think about how you're going to get into the position of the strategy takes, but also have a plan for how to get out of that strategy and if there is a loss, that can occur during that process. Because right now, the way the system is set up, basically the user wants to withdraw a bunch of funds and they own, let's say, 80% of the vault, and they go to withdrawal at once, that means we're going to take out 80% of the entire ecosystem and that could have some impact.
00:33:16.930 - 00:34:00.350, Speaker D: So that's something you need to think about. Basically everything that your strategy has could be taken at any time, and you have to be able to recognize that and make sure that if that's ever called you minimize losses as much as possible. Now also, as the ecosystem gets more complex, we've started playing around with some strategies that are not, quote unquote, lossless. You're not just farming a yield token, you're actually using debt or something of that nature. Like the Dai strategy is you're using the ETH to open a CDP.
00:34:02.210 - 00:34:02.526, Speaker A: To.
00:34:02.548 - 00:35:10.470, Speaker D: Acquire, die, invest the Dai, earn some yield on that and then hope that you have a pretty safe ratio for the CDP. And that's a part of what the Dai strategy manages when every time it's, I think, earn or whatever is called, so every time that's called, it actually updates the CDP to, I think, a 200% threshold or something like that and that's called pretty frequently. So you're sort of tending your crops if you think about it. Like the farming mean you're sort of tending it every so often to make sure they're healthy and happy. And as the ecosystem gets more complex, debt based strategies and other forms of strategies that can actually incur loss are going to start to be a thing. And that was one of the actual problems we had with that strategy, is that unwinding out of the position would have caused a larger loss than the strategy could have sustained. So we ended up backing out out of that strategy, rethinking how that occurs.
00:35:10.470 - 00:36:04.514, Speaker D: And I think this was only in the terms of upgrading to a newer version of the strategy. So those are things you should consider. Upgrading is actually another thing you should consider as well. So eventually your strategy might need to be tweaked a little bit, there might be a better way of doing what you're trying to do and that's fine. So when you upgrade, you have your strategy's address and it may own a certain amount of stuff and you want to basically move all the ownership of that stuff to a new strategy. Now you can do that by transferring some sort of underlying LP share or something like that, or you can have it actually withdraw all the funds. So this was the problem with the dai strategy, is that it would try to withdraw all of the dai basically out of curve.
00:36:04.514 - 00:37:23.570, Speaker D: And that was more than curve even had at that point. So it would have caused a large slippage loss and then the strategy would be at a negative, which is something we're trying to avoid. So really just keep that all in mind. The designs of these strategies is to kind of minimize risk as much as possible, both in terms of the protocol risk so be thinking about that and also in terms of the economic risks of the strategy, changing its position over time and the strategy having to go through these events such as upgrading or being shut down where it needs to unwind everything in a short time frame. So always have that in mind and if you don't necessarily have a solution for it at. Least note what the risks are so they can be accounted for and how governance decides to give debt from the vaults to the strategies in order to earn the yield. So I'll let Orbal take it over a little bit and he's going to talk about more about actual strategy development and the specific issues he encountered and ways that the Yith strategy was being designed.
00:37:26.550 - 00:38:07.358, Speaker C: Hello, guys, I'm marble. So I think Brian covers most of the risk and the online risk and the upgrading of all the strategies very well. So I'm just give more consideration on the actual part. So I think the first things that everyone should keep in mind is the simplicity. As we know, solidity cannot handle very complicated calculation, at least for now. So we have to keep as simple as possible. So I believe everyone knows this famous equation from Dr.
00:38:07.358 - 00:39:09.540, Speaker C: Einstein. So e is equal to MC square. So my motto is to decode this as error is equal to more complicated code if you write more complicated codes and you create more errors. So in the Ye strategy, it do a very simple task. So its only goal is to automatically manage the collateralization ratio and make sure the collateralization ratio is always in the safe threshold. And I also create another safe threshold to use or leverage the crowdsourcing power to make sure that it won't get liquidated. So I just managed to use the force of these two to make sure the C ratio, collateralization ratio is between a very high number and a very appropriate number.
00:39:09.540 - 00:39:59.090, Speaker C: So this is for the simplicity and the other one is risks. But I believe that almost everyone knows risk is very important. But I would divide them into two. So first one is exogenous risk and the other one is endogenous risk. So for exogenous risk we can also view it as composability risk. So when you are using others protocols, you have to keep in mind that maybe some volumes or how it works that is very important. If you combine it with something that you invent or your design, is there any security flaw or is there any economic flow.
00:39:59.090 - 00:40:48.260, Speaker C: And for endogenous part because like the Ye link or Yep strategy, we are using some parts in the internal system. So we also need to care about the endogenous risk. And the opposite of the risk, I would say it's benefit. So that's like a side effect. So if your strategy can also benefit other protocols, I think that's very good for the whole D Five ecosystem. And that is also encoded in Ye because one of its goal is to pack Die back to one dollars. And that is a long exist problem that bothering maker team for a long time.
00:40:48.260 - 00:41:49.160, Speaker C: In our experiment we proved it works. But as Brian said, this is v one y strategy. We have unwinding problems because in the Die strategy, the curve is an LP token. It bears unwinding risks but in the YV two we actually mitigate this problem so we will ship it in the future as the upgrade. So this is for the benefit so you can just keep the benefit in mind if that works and it will bring same side benefit. So in conclusion to abstract all out I guess there are three things that we should keep in mind and I will put them in priority order like this. So when it shut down conflicts with each other in some situation and the priority will work.
00:41:49.160 - 00:43:20.286, Speaker C: First is the safety. So according to the linguistic definition and people's understanding a vote should be safe and secure so just make sure that there's no smart contract risk and mitigate the exogenous and endogenous risks as much as possible and that's the first priority and second is the gas efficiency. So in the original design we put all asset and YVote and operate them together to save gas. So this is the main economic incentive for users perspective, they use YVote because they can save gas by accumulating all others asset together then that's why there should be another incentive should be put in for strategies to make the whole economic machine work with aligned incentive. So from my perspective, the third one is the return. Of course the return is important. If we can create a better strategy to get more return, that's good, but compared with the former two, it's less important because the value of return may bear higher risks and in some sense, if it breaks or it crash, not only it will affect the wiring system, but also other protocols because in the DeFi community composability it's the infrastructure.
00:43:20.286 - 00:43:55.040, Speaker C: So I would say when you get more power to create a strategy you're going to take more social responsibility on that. So I think we should put return as the least important part. I think that's all we have to keep in mind and that's my actual experience when designing the Yu strategy and let me hand back to Dr. Malia for the rest of the part.
00:43:55.490 - 00:44:40.042, Speaker B: Hey thanks Brian and Obel that was great. Yeah one key aspect of the wire ecosystem is the way that to achieve that Y e strategy the strategy itself needed to be whitelisting to get the Oracle directly from maker to be able. That's another key aspect. That's great. That the way the strategies create this synergy around the DeFi space. Finalizing more tips. This is another way that you can go about learning what's currently on chain and what's going on.
00:44:40.042 - 00:46:09.382, Speaker B: Feel the wire and it's a really nice website that came out of the community and you can click here, see the current vaults and when you dive into you can see the etherscan contract code of the current deployed vault. We saw vaults, it's not different from what we saw but we can also see the strategies here and the strategies are different for each vault following that pattern that we showed and you can come in, paste the code from Ether scan into remix and start hacking away and changing stuff and it compiles and all that. So that's another way to go about learning what the strategies do, what happens if I change something and so on and so forth. Yeah. And finally, it's not like we wanted to scare you, but we really want to emphasize the risk you need to be thinking when you're building strategies. But at the same time the upside for the strategist gets a percentage of the performance fee. So we're incentivizing strategies to come up with cool ideas that make sense within those constraints about risk that Orbal was mentioning.
00:46:09.382 - 00:47:14.240, Speaker B: Try to be efficient, try to think safety first and the returns at the end. So yeah, if you come up with something cool through the event and it really gets to go to mainnet, you get that incentive as part of being a strategist. These are resources that we'll publish in Discord, the slides. These are resources that you can dive deeper. We did a great effort for the event to boost our developer documentation, the Wire, and we'll be available on Discord as well throughout the event, the repo, if there's anything that you guys need or you feel that we need to add to the repo, we're happy to help out throughout the event. So with that said yeah, in any case, these are our social media accounts and just open it up for questions.
00:47:14.850 - 00:48:14.770, Speaker D: So we already have a question in the chat here. So his question was currently the system works in that the controller basically maps a single vault to a single strategy and that's entirely correct. So there can either be no strategy or one strategy for a vault and the vault is a single token pair. Do you foresee a future where this is not the case? Perhaps a vault that contains a pool of many currencies and many strategies. So part of our design iterations that we're going through now on a version two of the vaults is to allow a vault which will still be a single currency token vault will allow to be connected to multiple strategies. So there's a lot of considerations in that regard. And part of that design change will actually be removing the controller from the protocol design.
00:48:14.770 - 00:49:04.282, Speaker D: So that will allow it to basically map to multiple strategies for a single vault. And then we'll have to integrate some of the controller functionality about how the vaults are able to withdraw from strategies to make sure that when a user calls withdrawal, they get the full amount that they asked for on the withdrawal for a specific amount of shares. So that's sort of the current design strategy we're working through now. I don't think it's planned that a vault would ever be composed in many currencies. I think the solution there is if you wanted to deploy a vault that is a composed token of many currencies, like we have with, I think the Y curve.
00:49:04.346 - 00:49:20.886, Speaker B: YUSD. As well, just recently. Something that's like aggregating bolts within it. It's one step away, right, for keeping simple the bolts and then it's another layer on top of that.
00:49:21.068 - 00:50:37.882, Speaker D: Exactly. So if you think about that, that's sort of high composed protocol risk, because now you're having it loop back on itself. And you're also having a loop into a pool that splits out into four underlying tokens. Some of which are decentralized stablecoins like Dai, some of which are centralized fiat coins like USDT and USDC, which have their own legal and risks themselves, as I'm sure people are frantically checking their phones for USDT today. But, yeah, currently we're working on that redesign and that will basically allow vaults to contain many strategies and that will help stabilize the returns for particular vault and try to increase them over time and also allow us to more efficiently and easily add and remove strategies without affecting the earnings that evolve can take. Because right now it's either on, it's earning or it's off and it's not earning. And that's been problematic.
00:50:37.882 - 00:50:49.250, Speaker D: So we definitely want to solve that with the version two. All right, thank you. Is there anything from YouTube?
00:50:52.170 - 00:50:54.120, Speaker A: Let me just grab 1 second.
00:51:02.490 - 00:52:04.880, Speaker D: And just to expand on that, I was fooling around with the V Two design this week, and we're going to take some of those ideas and put it into the V Two and other ideas, keep iterating on it, and see if we can get further with them. Part of the design idea was with debt based strategies. I think there will be a lot more of them in the future. So we need to revisit some of the assumptions on withdrawals because withdrawing from a debt bath strategy does have the potential to cause like a large fluctuation or slippage is also always a concern. Stuff like, oh, so there's two. How is the team delegated? So, right now there's Doug and I and also a few other people. I think Luciano and a few others.
00:52:04.880 - 00:52:49.290, Speaker D: So there's four or five of us now. Yeah. So Andre is really kind of the mastermind strategist and where Ball is also experimenting a lot with strategies. And part of what we want to do is get more strategists because that's how the vaults continue to earn the reward and their yield. So the core protocol team actually doesn't really involve Andre much anymore. We talk with him, we get ideas from him, but it's mostly a separate team at this point. Heather got a few from YouTube.
00:52:49.290 - 00:53:48.014, Speaker D: Are there integration tests with all the protocols Urine uses? So, yes, currently we're trying to add as much as possible. It is very tedious, as you noted, but it's actually hard to do against testnets. That's a really excellent point. So, as Doug showed you, the strategies actually use hard coded addresses and that's for gas savings, but also you can't really test these things unless you're testing against the live system. And most of the live systems, the only place where all the live systems live in the same place is on main net. So there's some deployed on Robstein testnet, there's some deployed on Gorely testnet and the other ones it's something I experienced with New York last year. A lot of people were complaining about the different testnets and how there's not a lot of support.
00:53:48.014 - 00:54:36.334, Speaker D: There's also not a lot of activity happening on them as well. So the best solution we found is that Brownie has a main net fork mode using Ganache and Infura. So how it works is basically you get a snapshot from Infura at the time you're doing your test and then you're running that locally on Ganache against the main net fork and it's calling out to Infuria in order to get state from mainnet ethereum at the time that you're running it. And you're running your tests against a fork of what exists on mainnet. So that solves one of the problems. All the protocols are now in the same place. However, the activity that's going on around it, that's still something.
00:54:36.334 - 00:54:43.570, Speaker D: We're trying to figure out the best way to simulate that activity. It's a very difficult problem from the testing infrastructure perspective.
00:54:43.990 - 00:55:28.778, Speaker B: Yeah, totally. In that sense, I guess you could delete the hard coded and inject those in rinkbeat, but still you're not simulating the real thing. Like you said, the problem is like compound has its own dye that is not the same test dye that the maker may have in that particular test. So the only way to do an end to end, really as close as it's before mainnet, it's just the Ganache work at this. Like like Brian and Orville mentioned, there are economic tests that you need to that can only be done, I mean, when you have a specific amount of funds. I guess it's a problem that all protocols are facing.
00:55:28.874 - 00:56:12.462, Speaker D: I think a lot of people give Andre grief for doing that kind of testing production. But really what he's doing is experimenting. And that kind of experimentation just cannot happen in a simulated environment like a testnet. It has to happen in the real environment. So when do you want to do that kind of experimentation? I mean, Andre has a lot more experience and a lot more free capital for himself to do that. So just try to think of ways that you can test and validate your assumptions usually just by running the kind of strategy that you're doing and maybe a Python script or something, which is another reason why we like Brownie. And then translating those results over to your strategy for a more longer term thing.
00:56:12.462 - 00:57:18.190, Speaker D: Because the strategies have access to the large pool of capital in the vaults and not just your little plague capital that you've been using to help test the strategy and do your experiment. I'm scrolling down in Heather's comments here. Are there safeguards against front running the vault, I guess? The vault? No. So since we are dealing with a large amount of money being deployed by a vault, are there any safeguards against front running? So that could either be safeguards against withdrawals and deposits or calls to earn or safeguards against harvesting a strategy and that kind of stuff. So earn usually is an unauthenticated mechanism, but it doesn't do anything unsafe in that regard. So anyone can call earn. So that's been something we've been watching because that could lead to a potential for abuse.
00:57:18.190 - 00:57:38.838, Speaker D: So in the V Two design, basically the mechanisms that synchronize capital between the vaults and the strategies is now fully authenticated so we won't have that kind of issue anymore. And then the harvest that is authenticated. So basically only certain I think it's.
00:57:38.934 - 00:57:41.766, Speaker B: Authenticated strategies and governance.
00:57:41.958 - 00:58:49.262, Speaker D: Yeah, exactly. So usually somebody runs a bot and the bot will call the harvest at either a predefined interval or it'll call it if it sees like it's going to earn a good amount. A lot of the strategies are basically fully automated now in terms of how often that is called. So there's less of a concern there unless people are watching for those transactions and then trying to run around us. Yeah, I might have to look into that new dark pool thing that Spark pool is having basically the ability to get transactions mined directly without them being broadcasted. That's an interesting thought. Could the V Two vaults help roll out new strategies safely? As in could we could deploy new strategies and only delegate 1% of the assets in the vault and slowly increase over time? Yeah, so that is one of the core design goals with the V Two vaults is that when you add a strategy, you basically specify the amount of seed capital that it gets.
00:58:49.262 - 00:59:14.120, Speaker D: And then I was trying to get it to work where it would actually increase over time as basically it's proving itself to work and then it would kind of level out at the best yield curve that it can manage. But part of the refactor might be that we give a debt limit to the strategy and increase it through governance as we see fit.
00:59:14.890 - 00:59:34.590, Speaker B: Yeah, it's like a way to ease into it and get real data on before we go further in the caps. But like you mentioned, if we have several active strategies then one strategy is always earning something while we are sort of test driving the new ones that they're coming in.
00:59:34.740 - 00:59:52.306, Speaker D: Yeah, that's really important, especially if we let the vaults get bigger. Having it shut on and shut off like that is really kind of bad design. But Orbal wants to share a little bit more insight on front running, so hopefully yes.
00:59:52.408 - 01:01:18.814, Speaker C: So frontrunning is an interesting problem for the current consensus layer. So this is not the only problem for vault, but like in our research lab we are also digging into some cryptographic schemes to use on front rounding protection. So if there are more information in the academia we'll also try to implement that and test it on the vote. Just subscribe to wire finance to make sure that you get the latest information on the front end protection. I can also give in some candidates on that. So first using secure multiparty computation is one of the method to make sure front running can be somewhat mitigated. The other one is using Zkstark or zkSNARK as the base layer to do commit reveal method with time lock and the third one is still under progress by author research lab.
01:01:18.814 - 01:01:42.582, Speaker C: It's about using Verifiable delay function and that is just an initial ideal. So still need to verify the underlying mathematics work that's the submarine swap, right? Haven't looked into submarine swap, so cannot verify they use the same okay, yeah.
01:01:42.716 - 01:01:45.014, Speaker D: It'S the same lab at your school though, I think.
01:01:45.132 - 01:01:45.800, Speaker C: Okay.
01:01:47.710 - 01:02:57.230, Speaker D: So Brian had a question which I want a little bit more expansion on. What kind of due diligence do we do on protocol hacking? Risks of counterparties. So if you could just expand Brian on what counterparties means. Definitely like to answer that question in terms so like we were saying, there is definitely risk of protocol, risk of interacting with other protocols. That is part of the risk assessment that has to be basically considered by the team and watched for with the V two vaults design. The way I was trying to set it up is it would actually define emergency shutdown scenarios that can be executed automatically. Basically I think for the strategy the Strategist can call it or governance can call it at any time and it'll basically divest as fast as possible even including for slippage.
01:02:57.230 - 01:04:35.674, Speaker D: And then for the vault there was this emergency shutdown procedure that basically recalls all the debt from all the strategies at the same time to try to get all the debt back to zero and then people are withdrawing the entire time depending on the withdrawal scenarios. Once that gets to zero hopefully there'll be no withdrawal fee on that because there's no debt to pull out of. So yeah, you know, we, we are definitely looking at hacking of external protocols and that you just basically have to respond as best as possible and have good communications with the individual teams, which is another reason why we don't want to just do some random in on deployed potato meme farm. We want to do things with real teams so we know how to get in contact them and have good communications with them. If all DeFi projects were on the same testnet with a large amount deposited, would it make testing possible? Yes. Fundamentally there is a divide here and the divide is that on main net people are earning money. So money is a pretty strong motivator of continued activity and because you don't really make money on testnets and this is something that could be offered at least to compensate people running infrastructure that simulates that kind of environment.
01:04:35.674 - 01:04:58.870, Speaker D: But if people aren't making money, they're very not incentivized to put their energy into creating activity on the test nets and therefore you can't really see that kind of thing working on other test nets. That is a good question. I mean, it always comes back to this testing and production. Meme.
01:05:01.050 - 01:05:24.350, Speaker B: It's also like everybody, it's putting its hands in their own data if the state is shared across the board, if you're using a testnet, you're fudging your die and that die is going to affect the other protocols testing that same die. So that's why they don't do it that way. Everybody mints their own die just for their setup.
01:05:26.050 - 01:07:13.620, Speaker D: I think for test notes, they're very useful for testing under a live environment how your particular protocol works and then you can set up any sort of simulations you need for external mocking external behavior basically, but for real live economics that can only really begin live from mainnet. So one thing I definitely want to explore and if anyone's interested in building tools over the hackathon, here tool for not only being able to do fork testing, so like forking a snapshot of mainnet and then doing your testing against that, but also forking some of the activity that's happening, at least for the protocols that you're interested in interacting with. And this is why I really like Python for this purpose, create that behavior and just re execute it or at least try or attempt to do some of that behavior so you can get some of that simulated behavior into your test suite and be able to see how it performs over time. So these kinds of economic analysis tools is something I see as very lacking in the ecosystem, something that could go a long way towards not having to experiment directly on main net. Although that will always be something you have to do because you can't see how your idea interacts with other things unless it actually has an impact on other things. So you can see if the simulated behavior works. And that's a good first step to getting to the next step which is actually trying it, seeing if it does the same thing or seeing if there's reverse impacts from those protocols interacting on you.
01:07:13.620 - 01:07:17.810, Speaker D: Because not everything is in a vacuum and you can't test in a vacuum.
01:07:20.150 - 01:07:31.560, Speaker B: 100%. Where are we at in time? I think we're past the hour, but Heather I know. Do we have time for more questions?
01:07:32.010 - 01:07:38.040, Speaker A: Yeah, we are just past the time, but we can hang out and answer questions.
01:07:38.410 - 01:08:13.070, Speaker D: Let's just answer one more question. I see Brian and it's really quick. Already entertaining strategies for new token. So yes, if you have a token for a vault that already exists and you think it'll do better than the existing vault, strategy, then, yes, do that. If you have a new vault that you want to create, that's also something we can consider. The vaults are meant to be for a particular token type. And if you think with that, the concern is that there has to be a lot of people that want to deposit into the vault in order for it to be useful at scale.
01:08:13.070 - 01:08:32.780, Speaker D: So that's the kind of consideration there. If you want to replace a current strategy, then the money's already there. We already know. I was talking with Tarun from Gauntlet about some of these economic analysis stuff.
01:08:39.470 - 01:08:56.800, Speaker A: Awesome. Thank you so much, you guys. This is a great presentation. I know. I learned a lot, and we had a lot of interest on YouTube and here. Congrats on all the exciting work you guys are doing. And thanks for participating on ETH online.
01:08:56.800 - 01:09:00.110, Speaker A: Where's the best place to reach you on Twitter?
01:09:01.250 - 01:09:07.880, Speaker B: Twitter. We'll be hanging around the discord for the event. Any questions? Welcome.
01:09:08.730 - 01:09:20.342, Speaker A: Awesome. Thank you so much, you guys. Just a reminder, the last day to stake your spot for the hackathon, so make sure you do it cool. Thanks, guys.
01:09:20.476 - 01:09:21.400, Speaker B: Thank you.
01:09:22.090 - 01:09:24.290, Speaker C: Thank you. Bye.
