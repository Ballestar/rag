00:00:01.050 - 00:00:23.600, Speaker A: Good. I guess I'll get started. So my name is Daniel. I work at Coinbase. I'm a software engineer. I work primarily on backend systems there, but also work on USDC specifically. We have a USDC bootstrap fund which makes investments into different DeFi protocols to help them grow.
00:00:23.600 - 00:00:52.350, Speaker A: So you can come ask me about those later on. But yeah, so this talk is about DeFi and risk. So, yeah, DeFi risk considerations. And you must have seen this coming. This is not investment advice and I have to put this up here for informational purposes only. We're all smart here. We can do our own homework and yeah, not advice.
00:00:52.350 - 00:01:52.560, Speaker A: Our lawyers made me put this in. All right, so DeFi so DeFi is this thing that's been on a lot of people's minds lately and it's grown quite a bit in the last two years. And a lot of it is due to lending protocols. And the metric used here is Total Value Locked, which isn't necessarily like the best metric, but it does do a decent job at measuring the growth. And you might wonder, why is it growing so much? So if you come into DeFi, this is kind of the things that you see. You see that you can lock up some of your investments that you are planning to hold anyway and you can earn interest on them. And here we have like 6%, 7%, and it was pretty typical to see like 15% just a few months ago.
00:01:52.560 - 00:02:42.414, Speaker A: And that's kind of crazy, especially when you compare it to say, savings accounts, which give you like 0.1% high yield savings accounts, which are two to 3% and even stonks, there's a rule of thumb that on average they perform around like seven to 8% per year in the long term. So 15% kind of blows that out of the water and you kind of start to wonder what's going on here. Right? It's very exciting. But you can't compare them apples to apples. And that's basically what this talk is about, is all the risk that comes with this stuff. And the people who are getting into DeFi lately tend to be younger, as in they haven't lived through a financial crisis, which would really impact your perception of these things.
00:02:42.414 - 00:03:23.760, Speaker A: Right. Like if you lived through that when you were young, then you're going to be a lot more risk averse. And typically people also come from a computer science background, myself included. I actually study at the University of Waterloo here in computer science. So a lot of this is a reflection of myself too, in computer science. Things are very theoretical, discrete. Often it's like deterministic and there are a lot of assumptions and things just work versus in engineering or in finance, you think a lot more about things going wrong and you expect them to go wrong and you have a lot of fault tolerance and yeah, it's like the real world.
00:03:23.760 - 00:04:32.290, Speaker A: So, yeah, what could go wrong? That's the question here. But before we get into that, I'm going to do a little overview, a little review of how lending protocols work, just to have some context. I'm sure a lot of you are familiar with it, but generally they follow this kind of pattern where you have a pool and you have lenders and borrowers. So the lenders can deposit assets, which the borrowers can borrow and they can withdraw and do whatever they want with it and they have to come back later and pay back with interest. So because smart contracts, each address is pseudonymous, you can't just lend out money and expect them to give it back to you, because if you can't track them down, then they're just going to run away and keep your money. So to combat that, we have collateralization over collateralization. So it's quite typical to see something like this, where in order to borrow funds, in this example, USDC, you first have to provide 150% collateral, in this case ETH.
00:04:32.290 - 00:05:24.900, Speaker A: And the value of the collateral can fluctuate and so can the borrowed token as well. Actually, like, it doesn't have to be a stable coin. And if the collateral falls below the value of the borrowed tokens, then the borrower is incentivized to just run away with that and there's no reason for them to come back and pay. So before that happens, at maybe 120%, they would get liquidated to recoup the funds. And in this liquidation, there's a liquidation penalty or reward, depending on which side you're on, to incentivize liquidators to keep the system solvent. And the rest of it goes back to the lenders. All right, so here are the risks that we're going to cover today.
00:05:24.900 - 00:06:01.194, Speaker A: And the first one is smart contract risk. So smart contract risk is probably the most well known. It's pretty like self explanatory. Basically, it's just the risk that there's an issue in the smart contracts, whether it's a bug or a vulnerability that it gets exploited and it could result in locked funds or lost funds, which are pretty similar as a lender, whether you lose them or they're locked forever. There's this quote that I like. There's a finite amount of time to write code, but an infinite amount of time to hack it. And this is because smart contracts are immutable.
00:06:01.194 - 00:07:04.418, Speaker A: You can't just push a hot fix. And on top of that, not only is it a finite amount of time, but it tends to be really compressed because these teams are trying to meet deadlines and push out code quickly. So it's very common for bugs to be introduced in a high pressure environment like that. An example, like probably the most notorious example is the Dow in 2016, where $150,000,000 worth of ETH was locked up and resulted in the Ethereum classic fork. It's important to keep in mind that all of this DeFi stuff, it's being built on emerging technology, which is bound to fail at some points along the way to being more mature and also worth considering, which some people don't always. So while the smart contracts are immutable, the platform that it's built on top of isn't necessarily immutable. So Ethereum has upgrades all the time and they change things about how it works.
00:07:04.418 - 00:08:08.990, Speaker A: For example, there could be a change to an Opcode that changes how much gas it uses and this could actually introduce an issue that can mess up your contract. It's very specific, but it's a risk nonetheless. So how can you mitigate these? For one, better coding practices? For sure you can separate critical components of your contract from secondary things and make sure that the critical stuff which moves money around is working well. And when you separate it in that way, it's also easier to test it and verify it. For example, I've seen some protocols that have a separate vault contract and then the other contracts just communicate with the vault and the vault will manage the allowances and move all the funds around. So as long as the vault is secured, then funds are secured. Also for coding practice, you can add circuit breakers and time delays.
00:08:08.990 - 00:09:08.620, Speaker A: So for example, before an impactful change takes effect, there could be like X days before it actually takes effect so that people can kind of audit the diff and decide to pull out or exit if they want to. And this was actually crucial in the Dow example from earlier where there was like a period of time before funds could actually be withdrawn. So they were able to basically use that time to work on the hard fork and prevent all the funds from actually being lost and cashed out. Another mitigation is monitoring. At Coinbase we have a lot of monitoring stuff. Basically you want to learn about these changes in these contracts as soon as possible and you'll alert engineers with something like PagerDuty. These tools are pretty new for crypto and there aren't great solutions out there right now, but they're being worked on and they'll be here soon.
00:09:08.620 - 00:09:36.100, Speaker A: The next thing is auditing. It's very important for smart contracts. The audits should be from a reputable firm. Ideally there would be multiple audits as well, just to have extra assurance because one firm can always miss something. And there's also typically two kinds of audits that are being done lately. It's like manual and formal verification. Formal verification is quite new.
00:09:36.100 - 00:10:13.780, Speaker A: It works really well because it can give you this mathematical proof that you can sleep a little bit more soundly at night. But there are still issues with it. For example, you have to come up with the rules that you're formally verifying and that will always require some amount of manual work. And the other issue is that you can only check the code against the spec. But if there's an issue with the spec itself, then formal verification is not going to catch that. And for that you'll need like a manual audit. So it's always best to have a combination of both.
00:10:13.780 - 00:10:49.546, Speaker A: And finally, it's also important to look at where the audits came from. So oftentimes, or most of the time the protocol teams will hire an auditor and the auditor, since they're being hired to do this, it's in their interest to make the team look good. Right, and you don't really see official audit reports that make the team look bad because there's a bit of an incentive misalignment there. Yeah, you have to read the auto reports with a grain of salt and keep that in mind.
00:10:49.728 - 00:11:03.498, Speaker B: Typically we work with now before you've released the code, you'll go back and forth them a little bit, you'll find things before you've actually pushed it onto the main chain and then they can respond and their audits can say we reported that they fixed it.
00:11:03.684 - 00:11:58.660, Speaker A: Yeah, but typically it's a good extra precaution to do an additional independent audit that's not tied in any way financially to the protocol. So the smart contract risk is kind of like it's tail risk. And what tail risk is, is basically something an event happening that's like three standard deviations away from the mean given like a normal distribution. So it's basically something that's quite unlikely. But with smart contracts specifically, it's somewhat systematic. Like you can't completely eliminate the risk, you can only mitigate it. So you should always be prepared for an event such as this and be prepared to move forward with things and not have this be like something ending event.
00:11:58.660 - 00:12:55.070, Speaker A: All right, so the next type of risk credit risk. So credit risk is the risk that a borrower doesn't repay a loan. But with these smart contract protocols we kind of solve that, right, because we have over collateralization. So you don't have to worry about that as much because you can just liquidate the person if they're not going to pay back. But then you would just replace credit risk with liquidity risk because now you have to exit these positions which may not always be possible. So one example is if you have an illiquid asset, for example, let's say you deposited USDC and someone else is borrowing that and they're using a random token to collateralize it, it may be very hard to liquidate. That also worth noting is the slippage.
00:12:55.070 - 00:14:08.460, Speaker A: If the books aren't very healthy, then liquidating that much of an asset might move the price and the 5% liquidation discount might not be enough to incentivize liquidators to. Liquidate issues can also arise during network condition or network congestion. Basically, when there's a lot of price action, people use the network more and it takes longer to get transactions through. So this delay could be like those extra 30 seconds can be crucial sometimes. And crypto is not hurt for being pretty volatile during a price crash, the price might be moving too quickly to liquidate because when you're liquidating, you're still constrained by the block time. And in addition to the price crash, specifically with these lending protocols, when you liquidate someone, it's basically like a market sell order, which can put more sell pressure and cause more people to get liquidated because the price is going even further and it can cause this kind of downward spiral. And the more funds are at risk of being liquidated, the more of a risk like this downward spiral is.
00:14:08.460 - 00:15:21.540, Speaker A: So in these lending protocols, the losses are socialized, so all of the lenders would just take a cut so everyone gets a haircut. Another type of risk that kind of falls under this liquidity category is bank run risk. Basically, when you put money into the pool and someone borrows from there, they're withdrawing the funds from the smart contract, so they're not in there and they're not available for you to go and withdraw them. Similar to in a bank run situation, if everyone's trying to pull out their cash at the same time and the bank doesn't have enough cash on hand, then they're not going to be able to pull it out. So that's something else to be aware of in lending protocols specifically. So mitigations, if you focus on liquid pairs and don't deal with illiquid assets, you can mitigate a lot of those risks. You have to make sure that both sides of that pair has to be liquid, because even though USDC has a lot of good liquid pairs, or ETH has a lot of good liquid pairs, if you pair ETH with some very low market cap coin, then there's not much liquidity there.
00:15:21.540 - 00:16:03.714, Speaker A: Another thing is the collateralization ratio and the liquidation discount. Ideally, they should be tuned per pair because every pair of assets has a different risk profile and therefore a one size fits all doesn't work here. A good history of liquidations and a good healthy network of liquidators is also good to have just like some redundancy and finally monitoring. Once again, you want to be aware of market conditions and be ready to take action if necessary. All right. Admin risk. So a lot of protocols have admin access.
00:16:03.714 - 00:16:46.430, Speaker A: They're kind of like backdoors. They allow things such as pausing, so pausing functionality in the network, tuning parameters like collateralization ratio or liquidation discounts, and upgrading. And these are very sensitive things because upgrading specifically because of the way that they're implemented, you can upgrade the implementation to something arbitrary. And this new arbitrary implementation could allow an attacker to withdraw everything for themselves. Admin risk is the risk that these capabilities are exploited. And this could happen through a hack. Let's say the private key is leaked and someone gains access to it.
00:16:46.430 - 00:17:33.520, Speaker A: Or it could be like a rogue employee gone wild and trying to mess with the system. And even if it's not like upgrading and you can't withdraw the funds, just pausing the system can have an effect. For example, someone can lock the contract and demand a ransom. And if there's a lot of money in there, then it might be worth it for people to pay that ransom. So to mitigate this, one thing you can do is separate the roles. You don't want to have one private key responsible for everything. Ideally, each role is separate and with this increasing severity of the roles, you should have like increasing severity of security or increased security.
00:17:33.520 - 00:18:21.470, Speaker A: So better coding. Once again, if you have time delays to give people time to react to changes, then they can exit. Secure key management is very important and this is for both external and internal. So externally you don't want someone to be able to take your keys, obviously and do stuff, but internally as well, it's important to have processes in place to prevent employees from accessing these things and doing something accidentally maybe. Finally, multisig is definitely worth considering. It helps to spread out the risk of the keys and you don't want to have like a very high value key in one place. All right.
00:18:21.470 - 00:19:09.500, Speaker A: Oracle Risk. So Oracles provide real world data on the blockchain and they're very essential for DeFi. Oracle Risk is the risk that an Oracle malfunctions or is exploited. And an example of this that happened somewhat recently is actually synthetix which shout out to synthetics over here there was an Oracle that reported the price of the Korean wan as being a thousand times higher than it actually was. And there were some trading bots that would do like some Oracle front running so that whenever they see a large delta in the Oracle, they would buy or sell right before and then sell or buy right after. So a bot took advantage of this and made a billion dollars in profit in under an hour. Yeah.
00:19:09.500 - 00:19:59.820, Speaker A: So it's important to note that they couldn't actually cash out that billion because there was only like maybe tens of millions of funds in the system at the time. But it still would have been a disaster if they had tried to maliciously exploit this. And luckily the owner of the bot agreed to reverse the trades in exchange for a bounty. So good guy. So you can mitigate Oracle risk by having multiple sources and perhaps taking an average you want to discard outliers. You can do that by discarding the max and min. But it's also good to be more sophisticated and do maybe discarding the top and bottom like standard deviations because just maximum can still have issues.
00:19:59.820 - 00:20:44.662, Speaker A: Let's say if there were two Oracles that were providing an erroneous value, you can also limit the price deltas per time. So for example, you only let the price move by 10% per block and anything above that will either fail or just be capped. So this is another great way to mitigate. You have to be careful with the tuning of that because sometimes the prices actually are very volatile. So you have to make sure that you're not misrepresenting the prices because that could lead to other issues. There's also this question of centralized versus decentralized oracles. Centralized oracles tend to be a lot simpler and more efficient, like faster.
00:20:44.662 - 00:21:36.490, Speaker A: Decentralized oracles have a lot of stuff in them and a lot of things need to be gotten just right. And the more moving parts there are, the more chances there are for things to go wrong. So there's a bit of a trade off there and as more research goes into decentralized oracle they'll be more viable over time and finally you want to monitor them just like everything else. So now we have dependency risk. So this is the risk that dependent contracts fail. So in DeFi there's this meme like money Legos. Everything is very composable and they're built on top of each other, they're very intertwined and this is very powerful because you can build applications very quickly and stand on the shoulders of giants.
00:21:36.490 - 00:22:30.982, Speaker A: But the issue is that if a cornerstone primitive contract fails then it can affect everything on the stack and it kind of reminds me of NPM dependency management. But now you have to do that with your money and it's just a bit of a mess. So to mitigate this you want to audit your dependencies. And when you're coding these smart contracts you want to treat them not as a black box but as a white box. You want to be aware of all of the edge cases, the corner cases, instances in which they can fail. One example is a lot of ERC 20 tokens can be paused and it's like a surprising number, like almost half of the top 20 or something like that. And basically pausing there's a flag in the contract where if it's set to true then transfers will just fail.
00:22:30.982 - 00:23:35.794, Speaker A: And the issue with this is it not only affects that token itself, but it can affect other tokens in the same system. Like if you try to withdraw a bunch of ERC, 20 tokens at the same time and one of them fails, the entire transaction will revert so it could result in loss funds. So you have to consider how the underlying things work in all their many and many different ways. So the last risk that we're talking about here is Centralization risk which is somewhat similar to Admin risk. It's the risk that the team developing the protocol is centralized and makes bad governance decisions such as maybe they go too risky with the collateralization ratio and it just results in losses from liquidations. So this can kind of be mitigated with decentralization but then you have decentralization risk. The answer to centralization is often like oh, we'll make a Dow and everything will be fine.
00:23:35.794 - 00:24:20.714, Speaker A: But Dows are very hard and they're not a silver bullet. Technical solutions can't always solve social problems and yeah, dows tend to be like slow, they have low participation, not everyone is an expert, so you don't get the best signal necessarily. And there's a lot of work being done here, and hopefully we'll get to a point where this is truly viable. But for now, I think it makes sense to decentralize over time. You don't have to be 100% decentralized from day one. You can be somewhat centralized, make compromises, get something working, and then over time, decentralize it. So in conclusion, you should be aware of the risks.
00:24:20.714 - 00:24:45.026, Speaker A: And this is not a comprehensive list. There are many other risks as well. Remember that you can mitigate, but you can't fully eliminate these risks. So they'll always be there. They're somewhat systematic. Not all risks are equal. For example, with smart contract risk, if something does go wrong, it might be rare, but you might lose everything compared to liquidity risk.
00:24:45.026 - 00:25:28.680, Speaker A: It might happen more often, but you'll only lose, like, some percentage of your funds. And finally, things are still maturing. So expect the unexpected things are going to go wrong and you should be prepared for that. So the real conclusion is that you should make your own conclusions, and this is not investment advice. Thank you. And we have two minutes for questions. Does USDC have a pause function? It does, yes.
00:25:28.680 - 00:26:03.460, Speaker A: Would you say decreasing interest rate is a threat to DeFi? Decreasing interest rates? Yeah. Right now, like Compound and all these guys, it used to be like 10% or double digits. Right. I'd say it's a risk in that it's less exciting and it's not going to bring in new users as much like liquidity. Yeah. But on the other hand, I'd have to think about that a bit more. I'm sure there are some downstream effects from that.
00:26:03.460 - 00:26:30.410, Speaker A: What is Coinbase doing about DeFi? So we have a couple of things. Coinbase wallet is one example. We have the mobile DApp browser. The USCC bootstrap fund is another one where we're investing in these protocols to help them grow more. Yeah, we have a bunch of different projects related to DeFi.
00:26:32.430 - 00:26:36.682, Speaker B: Regulation somehow part of the DeFi risk when you're putting.
00:26:36.736 - 00:27:09.640, Speaker A: Money into yeah, yeah. Regulation risk is another issue that we didn't cover here, but that's definitely worth considering as well. And it's kind of related to the centralization risk. Like, if the company developing the protocol is centralized and they're in a certain jurisdiction where they can get shut down, then it can impact the protocol. All right, we're out of time, but thank you very much for coming and have a good hack. Bye. Like.
