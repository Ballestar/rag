00:00:32.840 - 00:00:50.916, Speaker A: Okay, our stream is up. Looks good. You cheers. Thank you, everyone, for joining us today on this fine Wednesday. Thank you, Adrian, for presenting. Really excited to see what you have in store for us today.
00:00:51.018 - 00:00:52.356, Speaker B: I will let you kick it off.
00:00:52.378 - 00:01:10.956, Speaker A: We're going to be taking questions during so if anyone wants to funnel their questions in through the chat, you're more than welcome to do so during the presentation itself. If we miss it, we'll come back to it, flag it. We're trying to have a pretty practice session here, but, Adrian, I'll let you kick it off. Really excited to see what you have for us today and take it away.
00:01:11.138 - 00:01:44.170, Speaker B: Hey, thank you so much, Luke, and happy to be here. Hello, everyone. I'm here today to talk a little bit more about block art, eveblock art, and especially the process of creating your own block style. So I'll be sharing my screen. I'll be walking through a little bit. What does that mean? Maybe do a little bit of life coding and answer any questions that you might have for the next, I guess, half an hour. So let's get started.
00:01:44.170 - 00:02:15.292, Speaker B: I'll be doing something kind of brave. I'll share my whole desktop here. I hope nothing bad happens. I assume you all can see this. So to give an introduction, thank you. For those that don't know the site, this is Eve blockart. We do deterministic art NFTs using Ethereum blocks.
00:02:15.292 - 00:02:53.388, Speaker B: So this is a creator first experience that combines creative coders creating what we call a block style NFT. And any general participant minting their own block art NFTs using any block on Ethereum and using these block styles as templates. So you can think of it a little bit as I'm sure we're all familiar with, Etherscan, for example. So this is a pretty analogous experience. You get to navigate to any block on Ethereum's history. So you get to go to, for example, block two. And I hope this works.
00:02:53.388 - 00:04:04.388, Speaker B: There you go. So here we are looking at the data of the real block number two with a style selected, a block style, which gives you this cool visual representation, which you get to tweak to your desire, and you get to then mint an NFT out of this. Of course, right now you can't, because all NFTs have been minted from the style. But and I guess can show a little bit here how. These are the existing styles on the platform today, which they're live here, but they're also not a lot of people know they're also NFTs, which you can navigate through OpenSea, for example, which you can trade or give to a friend. I guess something interesting to talk about in this workshop is exactly how do you code one of these? Or what do they actually mean? Right? So here I'll switch to Rinkav real quick. And just a reminder, feel free to stop me at any point in time if you have any questions and I'll go a little bit through.
00:04:04.388 - 00:05:15.684, Speaker B: What exactly is a block style and how do you create one? So, for starters, a block style is an FD, an ERC 721 on Ethereum. It has a bit of a different implementation than the standard ERC 721. And that means that it has a few things like it allows the owner to set a supply or to set a cost value which is written to the storage of this one NFT. And he allows the owner to also write a Ipfscid which represents the code which this NFT contains. So you can see here an example of the editor interface that allows you to create your own block style. So you get to do traditional things like uploading an image, which becomes like the thumbnail and the image within the metadata. In the token Uri of the token, you get to add a title and description, use your things and you get to upload a component bundle, which is the more exciting thing here.
00:05:15.684 - 00:05:48.150, Speaker B: Right? This bundle can be in a few different flavors. So we have things like reactive fiber. Exactly. We do use 3D things. You can do things in P five JS, which is really popular out there today. We can use things with GL React and you can also bring your own solution, right? We allow for any dependency. You can use a vanilla canvas, you can do basically whatever implementation that your heart desires with a few limitations that I'll go through in a few minutes.
00:05:48.150 - 00:07:13.020, Speaker B: And you can provide options to the participant on the other side with some default values as well. So what I wanted to do is to show during the hackathon, we are giving a few prizes for hackers who above all wants to work at the protocol level. So integrating with the contracts, extending our contracts, building more composable solutions, or helping with the discoverability of all the 10,000 Lochart NFTs that have been minted already. But we are also giving prizes for someone who doesn't want to or doesn't have the experience to work at the smart contract level, but is experienced with React, or is a creative coder, or is an artist who wants to collaborate with a developer. And I guess that's what this workshop will be most useful for. So, to start from the beginning, actually, there's one page that I haven't opened which would be this one how to Mint Block Style. So if you are an artist or a developer and you're interested in experimenting, creating on block style, first of all, feel free to reach out in our sponsor channel in the E phone hackathon Discord.
00:07:13.020 - 00:08:05.170, Speaker B: But also feel free to join our Discord where you can ask more technical questions from other artists who have gone through this process before. But we also have this guide that you can also find in our documentation which covers the steps. So creating your own block style is super easy and you can do yourself as a self serve process on Rinkabee. So you can get a little bit of Rinkabee ETH, which is free as you know, and you can buy yourself. Go to this page, create your NFT token. You can pick up the open source template that we provide, you can iterate on that for as long as you like, and you can later compile your code and then upload it to IPFS and associate it to your Blockstyle NFT. So exactly, this document covers all of the steps a little bit more in detail.
00:08:05.170 - 00:09:11.444, Speaker B: Once you have your Blockstyle NFT minted, you have of course this nice NFT that you get to show your friends that you get to potentially trade. But the more exciting thing that a lot of creators want to do is propose your block style to be added to the Block Art Registry. This is the step covered here. So adding your block style to the registry means that other participants get to come in later and they can do the minting from your block style, right? So they can create whatever supply that you determine of Block Art NFTs using a template, using Ethereum blocks. We have this registry process for many reasons. I think one of the most important ones to highlight is the fact that people are able to write some piece of malicious code, right? We are literally fetching a common JS bundle from IPFS and injecting that into the app during runtime. So some bad things can happen that way.
00:09:11.444 - 00:10:13.720, Speaker B: So we try to do a little bit of QA on the code and make sure things are working properly at the very least. So one of the things that you'll find in this guide is a link to this repo. Yeah, pretty much dangerously set in HTML is a no doubt friend, basically. So we have a few open source templates boilerplates on GitHub, which I'm really happy that it's being mostly community made. So there's a lot of contributions from community members that put together this little project and it has all the pieces required for you to develop your own blockstyle. So one thing I can do actually, there's a little trick that I'm not sure a lot of people here know. Do you know that with any GitHub repo URL, you can just add box to the end and then you get sent straight to code sandbox, loading the repo in the sandbox.
00:10:13.720 - 00:11:04.472, Speaker B: I wanted to do it this way, but I think it's not going to load, so let's just see if let's give it another chance. Yeah, I don't think it's going to take a little bit too long, but to save my ass a little bit, I did load this locally as well, so you can have an idea of what that project kind of looks like. So I'm basically just loading the same thing from here. Let's see here. Yeah, so this project is the same thing as this project here, and I guess I can just very briefly cover. Let's say I'm a creative coder right now and I want to create a block style. So I just fetch this repo from GitHub and I start running this code.
00:11:04.472 - 00:12:05.230, Speaker B: The first thing you'll see is you have a blocks JS file which will give you three blocks. This is more to give you an idea of what the data structure of an Ethereum block looks like. Right, so this is literally a whole block with all the whole array of transactions with the full data of all of the transactions, you have some metadata related to the block, which I don't think we have the time in this workshop to go through each field. And you have basically a lot of data from each individual transaction that you get to parse and get to create cool visuals or interactive experiences or animations, et cetera, to your heart's desire. The number one rule here is that everything needs to be entirely deterministic using the block data. So you wouldn't bring a Silda random function or library to your style. You just derive all the entropy from the data that's already available.
00:12:05.230 - 00:13:17.348, Speaker B: And to make developers life easier, we have a few different flavors here as basic examples. So when you first load the project, you will find a code example which uses actually, never mind. This is a custom project so you're not going to see the default one will load like a vanilla canvas implementation and you will find a few of the different variations like reactri five or p five right here, which you can just rename to just custom style and basically start working on your code. For a sake of demonstration. What I thought of doing is recently I released this block style called Ether marbles. And I figured doing this workshop I can show the process of modifying the code a little bit and then uploading it here and then having the experience of seeing how that reacts to block data. So here pretty much what you could do.
00:13:17.348 - 00:14:13.636, Speaker B: I think pop DA DA DA. Let's say I want to change all of these to just be I'm going to do something very simple here because I think if I start to really live code, it's not going to work that well, but I'm just going to make everything black. So the moment I upload this code, you're going to see a marble that's basically just going to show actually, let me just maybe not do everything black. Let's just do some random values here. So you get an idea like that. So I would go here, I would open my terminal and I will do yarn bundle. So what this is going to do, first of all, this is just like a create react app, basic app frame.
00:14:13.636 - 00:15:21.500, Speaker B: Actually. I can just run that here and you're going to get an idea for react compile. Good thing I'm multitasking. Yeah. So now we get to do two things at the same time. So while that is loading, just going to open this. I'm going to get file upload and I will go to the file that I just created mainjs that came out of this NPM task.
00:15:21.500 - 00:16:01.530, Speaker B: I just uploaded here and I didn't notice. But this CID should change in front of you, and that indicates that your JS bundle have been uploaded to IPFS. And then I get to just go here and update. So this will create a transaction. It will be a very cheap transaction. You're just writing a new tax field pretty much. So I got to just confirm it and I got to close this window.
00:16:01.530 - 00:16:50.622, Speaker B: And things should be super fast because it's a rinkabee. And while this Loads, I can show you the sandbox. So this is the experience that you get locally, right? So let's say you want to develop your block style. You start that mini app and you get the code that you're writing here visible on this website. So you have the controls here that you get to play with and something that was added recently by a community member. You have MetaMask connection. So instead of looking at the same three boring blocks that you saw on that file earlier, you get to connect your MetaMask and you get to go through it will basically keep on fetching blocks for as long as you have this page open.
00:16:50.622 - 00:17:20.342, Speaker B: And you will have always like a new deterministic seed to be looking at your style as you develop it. And of course, you get to navigate through it. So you get to go to a previous version of what you created. I was not supposed to do that. So now I believe, yeah, my update has happened. So I got to go to create block art, hopefully loads. There you go.
00:17:20.342 - 00:18:10.034, Speaker B: We have live. So one thing I didn't realize before getting in this workshop, I was working on this style before, and I was working on this style to integrate this new other NFT that came out, recently called Palettes, right? Which are just color palettes on chain, very simple, kind of inspired by Loot. It's just a NFT with five hex color values. So after talking to the dev, we did a cool integration together. And I think this shows like a really cool strength of composability, I guess, especially with NFTs. So you just saw me create the block style, and one thing that I didn't talk about this block style is that it receives the palette as an input type. So just as a little refresher, these block styles are just react components.
00:18:10.034 - 00:19:02.978, Speaker B: So we get to pass in whatever we want into it. Just writing a new prop. So what I've done here is that when I press this button, it's going to load my wallet and it's going to fetch all of the palette NFDS that are in my wallet right now. And it will allow me to select one of my palette, NFDS, and they will colorize, I guess, the block style. So I have these ten beautiful palettes in my wallet right now, and I get to okay, I like this marble and I like it with this palette and I want to mint it, right? So you'll be able to open the mint model. This is a rinky B, so I'm not actually going to do it. So basically this is the process that you've submitted your block style.
00:19:02.978 - 00:20:09.494, Speaker B: It's already live. Other folks are interacting with it. They are curating what the output they want to mint. And when they find something that they like, they get to come here and they get to write a title and a short description for what they're going to give their NFT and they press this button and they basically mint it. So the Palate integration is actually something that should be going live soon. And since we're here, I actually very much suggest folks, to explore how else can we combine different NFTs, especially primitive ones, into cool interactive solutions like this that I guess at the end of the day, it makes multiple communities very happy and everybody get to enjoy something fun to do. And I guess I'll kind of wrap it up there and I'll open up the rest of the call for calls, if anybody has any calls.
00:20:09.494 - 00:20:10.640, Speaker B: Sorry. Questions.
00:20:14.930 - 00:20:15.680, Speaker C: Hello?
00:20:16.370 - 00:20:17.120, Speaker B: Hi.
00:20:17.570 - 00:20:46.390, Speaker C: Yeah, I have a question. First of all, it's amazing what you've built there. I was wondering if, let's say my block art is using rack free fiber and I have a camera, and the user would be able to navigate within the 3G model. Would that be possible as well, once it's minted?
00:20:46.750 - 00:21:29.810, Speaker B: So the kind of guidelines and rules that we have is that the sketch should always be deterministic. It means every time you reopen it, you kind of get the same output. It's also kind of delicate once we do this thumbnail generation, right, so this happens in the client. It just takes a photo of the style as you have it. So to answer your question, yes, it is doable. It is possible. You get to come to the code and you get to bring all of the libraries that you need, as long as the library doesn't make a third party API call, doesn't require any outside third party resource, and doesn't bring in any randomness.
00:21:29.810 - 00:22:10.530, Speaker B: Right? So given that applies, you could very well create like a whole 3D model as a minigame, for example, right? Like a mini 3D CD, which you can bring in different blocks, bringing this deterministic entropy. So you can make each 3D model unique to the block. And you get to add this second layer of interaction, right. You get to navigate using a mouse or using a camera or something like that, as long as you can still reopen it, and you can reliably still get the same version.
00:22:10.950 - 00:22:23.158, Speaker C: It's going to be always the same scene containing the same objects that are going to be loaded, just that the user will be able to navigate around the art.
00:22:23.324 - 00:22:48.762, Speaker B: Yeah, that's amazing. So one of my dreams out of this is for someone to eventually build something like a minecraft where you're literally walking over newly generated terrain, which is kernistic, which is based on data which we all create on Ethereum. It kind of gives you the vibe of we're walking over dinosaurs, but in a very digital way to some extent.
00:22:48.826 - 00:22:58.514, Speaker C: Right, right. I was more thinking of a mini space where you could explore some planets or something.
00:22:58.712 - 00:22:59.362, Speaker B: Yeah.
00:22:59.496 - 00:23:01.220, Speaker C: All right. Thank you.
00:23:01.670 - 00:23:52.470, Speaker B: Thank you. Since I'm here already, and while I get other questions, one thing I also would like to show is once you mint the block art NFT, it's really not just the image, right. We see a lot of NFTs out there. Actually, let me just go a little bit higher. So what you get, once you finally mint that you paid the fee, you got your token. The token will have an image which you took yourself. So whatever thumbnail that you capture in the client side will be the thumbnail that will be uploaded to IPFS and written to your token.
00:23:52.470 - 00:24:36.600, Speaker B: You also get the animation URL, which is we do this just on our API, which is something that OpenSea, for example, expects to be able to display the Live Canvas representation on the OpenSea page itself. These attributes are actually written by the block style creator. So you get to customize not all of them. Actually, these last ones here, you get to define these inside your style using whatever logic that you create in the algorithm. But the most important thing about the whole token is this object with settings. Right. So if you look actually, this is another good one.
00:24:36.600 - 00:25:47.792, Speaker B: Let me just do one thing here. What am I going to do? I'm going to open mainnet. Well, my computer is really not helping me. I guess what I wanted to say is the NFT itself each holds the exact parameters that you set in the editor, which allows us to reconstruct the Live Canvas experience. So also answering a question from before, the other things that the block card NFT has, which I wanted to show, but I don't think my computer is going to help me right now, is that it's also a different implementation than a standard ESC 721, and it contains on chain. So I was going to open Etherscan and show you some of the call functions. It contains on chain, the token to block, the token to style ID, and the token to value.
00:25:47.792 - 00:26:13.690, Speaker B: So this information is like the most critical needed to inform what consists of your token. Right. So I minted this NFT using this block and using this tile. So that is immutably recorded on the NFT itself. And this is the metadata file that gets uploaded to IPFS. And it has some more granular pieces of information. Right.
00:26:13.690 - 00:27:17.370, Speaker B: This information here is actually editable, right? So after you minted your NFT or if you buy the NFT off the market from somebody else, you will not be able to change what is the block number or what is the style chosen to create that NFT, but you are able to change the individual parameters that the block styler enabled. In a style, you're able to change the title or the description if you find a typo, maybe, or if you don't like what you see. So the block art NFT is semi mutable. The most critical pieces of information is entirely immutable on chain. Well, the more additional layer of more granular information is something that you can kind of tweak over time if needed, when needed. And yeah, I would just open up for more questions and then we can wrap this up.
00:27:32.620 - 00:27:41.820, Speaker A: Well, thank you, Adrian. That was an incredible presentation and I'm really excited to see what people do with it throughout week online, as I'm sure you are as well.
00:27:41.970 - 00:27:44.748, Speaker B: Likewise, likewise. Thank you, Luke. And thank you everyone.
00:27:44.914 - 00:28:06.710, Speaker A: Thank you everyone for participating today. We look forward to seeing what you guys build and thank you for coming to the session. We're going to be closing the live stream right now, but we have another one, I guess in 30 minutes or so, so don't miss out. And if you'd like to continue the conversation, I would encourage you to go over to discord and follow up there.
00:28:08.840 - 00:28:09.410, Speaker B: See you all.
