00:00:06.250 - 00:00:21.840, Speaker A: Okay, cool. Awesome. Yeah. Thank you for coming. So we'll be talking about Aluo. There's really two parts. I'll talk for like, 510 minutes about what Aluo is in general, and then we'll dive deeper into the Code for all of you guys who might be building on top of what we do.
00:00:21.840 - 00:00:48.970, Speaker A: So Aloe's mission is to democratize access to financial services. We do this in multiple ways. So, yeah, so the main topic is we'll explore the protocol side of what we do, rather than we're building another side, which is a non custodial mobile wallet. Presentation is mostly about the protocol side of what we do. Cool. So, quick agenda. What's Aluo? I'll introduce the streamable interest bearing Aluo Tokens.
00:00:48.970 - 00:01:24.082, Speaker A: Then we'll talk quickly about decentralized governance, because it's quite important to understand how do we make interest on that streamable token. It's a big part of our governance. And then we'll dive deeper into the streaming Aluo. And that's where we'll touch. At the Code, we'll give a few examples of people that have built on top of our Token standard and then a few ideas of what people might want to build this weekend. Just FY, we have a ten k price pool for anybody that builds on top of us this weekend, so it's split in three. There's six K that will be split between all the projects that build on top of Aluo.
00:01:24.082 - 00:01:46.942, Speaker A: So if there's six people, it'll be one k each. If there's five people, we'll split it that way. There's a two k prize for the most futuristic idea. The most futuristic idea on Aluo. And there's two k price on I forgot, what's the last one? Oh, the best use of streaming tokens. So there's other stuff that Aluo does, but specifically, there's a price for streaming tokens. Cool.
00:01:46.942 - 00:02:24.154, Speaker A: So what's Alua? Like I said, two things. First thing is a non custodial mobile wallet that looks and feels like a neo bank. We've been live since February. We're live anywhere on the App Store. So both Android and iOS, the idea is that this is the interface for people that don't know crypto, that want to have all the benefits of crypto. The mission is really, can we give this to the average Joe in the street, somebody that's used to use Revolute or any other neo bank, and they'd be able to use it just like any neo bank. Main feature of the app today is that it gives you a 7% interest on your deposit, 7% on US.
00:02:24.154 - 00:02:44.766, Speaker A: Dollars. Does it say five? Yeah, it's seven today. So actually, this is an interesting why it says five and seven today, but I'll get into that in a SEC. So it's seven today. Cool. There's also a DAP. So the DAP is exactly the same if you want in the mobile app, but it's for people that understand what crypto is.
00:02:44.766 - 00:02:58.646, Speaker A: So if you have MetaMask, if you have a ledger, so on and so forth, you can do exactly the same in the mobile app than in the DAP. It's just a bit more crypto friendly, let's say. Like that. Yeah. So the DAP looks like this, it's on app finance. Yeah. Please have a look.
00:02:58.646 - 00:03:28.590, Speaker A: It's just an interface for the protocol, basically. Cool. So the interest bearing token, streamable interest bearing token. I'll first explain what I mean by streamable. So Alu is the first super token that's been built other than what superfluid has done with their token. So we're built with superfluid in partnership with them. What I mean by streamable is that you can send some, ERC, 20 token to another address every second.
00:03:28.590 - 00:03:47.480, Speaker A: So the balance goes up every second. It's actually more than every second. Yeah. And we'll do a demo of that later on. Very interesting. You can think about subscription model, you can think about programmable cash flow. There's a lot of ways that you could send money to something else, somebody else, every second.
00:03:47.480 - 00:04:02.890, Speaker A: Yeah, that's what I mean by streamable. It's on polygon, by the way. The streamable aspect of things is on polygon. Sorry. Yeah, well, per block. Yeah, per block. You'll be able to refresh your balance per block.
00:04:02.890 - 00:04:34.190, Speaker A: Again, we'll show that at the second part of the demo. Cool. And what I mean by interest bearing is that the token that we have built, the St IV alluo carries an interest. So today US dollars makes 7%. We have US dollars, we have Euro ETH and BTC each have a different interest associated to it. I'll explain how do we make that 7% or whatever the APY is in a SEC. But basically it's managed by the Aluo Dow.
00:04:34.190 - 00:05:15.022, Speaker A: So every governance cycle, two weeks, aluo token holders vote on where do the liquidity that comes either via the DAP or the mobile app gets invested to into DFI. So today we support anything on curve, anything on convex and on harvest, on polygon and on main net. So every two weeks, Allua token holders vote and they're like, okay, we want to put 10% of the total liquidity in the protocol into this curve pool, 20% into this harvest farm and so on and so forth. Alua token holders do this because they make the difference between the advertised APY and the realized APY. Advertised API. Is that 7%? Whatever we give in the mobile appoint adapt to depositors, realized APY is whatever we can make at the back end. 10%.
00:05:15.022 - 00:05:45.690, Speaker A: Let's assume that it's 10% that we can make at the back end. Allure token holders that will vote will make 3% of the total value lock that is in the protocol. It'll be split to them, to all the people that have voted. Yeah. So you can watch your money live, you can watch your money grow live. If you want to download the app, there's a nice animation where you can see your money going up. So I did say USD euro ETH BTC on polygon and on mainnet.
00:05:45.690 - 00:06:17.094, Speaker A: Yeah, that's that the streamable aspect of things is only on polygon wouldn't be efficient on mainnet. Cool. So the governance and how the liquidity direction work, it's obviously quite important. If anybody knows, there's a bit controversial things to say but if anybody knows Celsius, the big company that went down yeah, Alu is somewhat similar to Celsius but it's fully on chain and it's fully transparent. So at no point Aluo, the team or the protocol is in custody of the funds. All of it happens on chain. We never take the funds off.
00:06:17.094 - 00:06:51.610, Speaker A: We cannot take the funds off chain even if we wanted to. But ultimately it allures a Dow and token holders direct where the liquidity goes somewhat what Celsius was doing. So this is an example of our snapshot and an example of our governance rounds. Every two weeks there's a series of votes that happen. First one is liquid direction. So where do we put the funds? Second one is percentage of the treasury that gets invested into our own protocol. So today I don't remember where we're at 60 or 70%, something like that of the total treasury of the Dow is invested in our own protocol.
00:06:51.610 - 00:07:22.810, Speaker A: We put our money where our mouth is, we actually use our own stuff. The Dow also sets the APY for each Iblo. So I mentioned 7%. You saw 5% at the beginning because it varies. So the Dow might vote on 5% for these two weeks, 7% for the next two weeks according to whatever we can realize in the back end in whatever D five product we invest our money into. So it's stable for two weeks. To give you an idea of range, I think the highest we went to was 16 or 15%.
00:07:22.810 - 00:08:10.050, Speaker A: We've gone all the way down to I think it was five was the lowest on US dollars. Today it's at seven. Really depends market conditions and whatever we can achieve on DFI. And then finally the last vote is anything else that might affect the token economics or anything else that is a core part of our token is also voted cool. So I think that's really important that we've worked really hard on is decentralizing the voting, obviously, but a lot of people do that. Snapshot is not exceptional but we've also decentralized the execution of our vote and so for us that's really big part. It's great to have a decentralized voting but then if to actually execute the vote you need some sort of multisig or you need some sort of signer behind the scenes that does the transaction.
00:08:10.050 - 00:08:40.814, Speaker A: The thing is kind of pointless because if that signer goes away then right, you can vote but then nothing will ever happens on chain. So we've also decentralized the whole execution of the vote that happens cross chain. So between polygon and mainnet we use multi chain to do that, to do cross chain messaging and yeah, all the votes happen automatically. Today. There's a script that is operated by the Dao that works in GitHub actions that facilitates this. But anybody could run the script, really, it's an open source script. So, yeah, decentralize the execution of the vote.
00:08:40.814 - 00:09:04.620, Speaker A: It's really important, really hard to do as well. Cool. Quick example of things that have been built on top of allure superfluids. So we've done it both ways. They've built on top of us, and we've built on top of them. Example of a use case for this today, all the core contributors that are being paid a salary are being paid a salary using this. So we're using, again, our own product.
00:09:04.620 - 00:09:21.578, Speaker A: We're using our mobile wallets. We're using our stream board tokens to pay salaries for people that get salaries. Yeah. Something else that's been built is by a team called Ricochet. Maybe some of you guys know Ricochet. They build a DCA protocol. DCA stands for dollar cost averaging.
00:09:21.578 - 00:09:51.474, Speaker A: Basically, you can buy an asset every block or every second at whatever the spot price is. So you could buy ethereum at whatever the spot price is. Ethereum every block. There's an economic theory that goes into the details of why this is the best way to buy an asset. Rather than impulsely, you say, okay, I want to put a buy order at x price. This is probably the most efficient way to buy an asset. And so what Ricochet has done is they've done this with interest bearing tokens.
00:09:51.474 - 00:10:30.040, Speaker A: So with the Iblu tokens, what that means is you make 7% on your US dollars while it's buying ethereum, that you're yielding four and a half percent on your ethereum on the other side. So it really is probably the most capital efficient way to buy ethereum today is to make yield on the dollars that are buying the ethereum that makes yield on the other side as well without having to do anything. Today, I think they have USD to ethereum, ethereum to bitcoin, bitcoin to USD, USD to bitcoin. Yeah, you could build any other markets if you wanted to. Cool. So we'll dive a bit deeper in the code. So penta we'll do that.
00:10:30.410 - 00:11:10.900, Speaker B: Okay. Hey, guys. So I'm one of the developers in the protocol, and I think what I just want to make sure I want to do in this workshop is not so much go into the technical details of each line of code. Each function in our own contracts, but rather show you how you might create a protocol that would integrate DCAing from Iballo USD to Iballo ETH. So the objective, what we're going to do is we're going to create a contract where users can deposit USDC and go into iballo USD, and then we're going to stream that iballo USD directly into iballo ETH. And I'll show you real time how you can see your ETH growing. So let's just jump into it.
00:11:10.900 - 00:11:40.220, Speaker B: Cool. So this is a code. Is it a bit small? Do you think? Should I zoom in? Sorry. Oh, no, that's not right. Can you can you guys see it? Okay? Or is it a bit small? Best small. Okay, let's zoom in.
00:11:41.710 - 00:11:42.342, Speaker A: I don't know.
00:11:42.416 - 00:11:45.630, Speaker B: I've never zoomed in before. It makes it look smaller.
00:11:49.970 - 00:11:50.606, Speaker A: Oh, here you go.
00:11:50.628 - 00:12:18.182, Speaker B: Here you go. Is it better now? Okay, cool. So this is a really simple contract where I just really strip it down to the bare bones of how you would go through the process. So first we have just a bunch of imports. But I'll walk through the imports when I explain the constructor and what the key things you have to set before you write the contract. So let's just go into it. I inherit from two contracts.
00:12:18.182 - 00:12:43.402, Speaker B: One is access control and ERC seven seven seven recipient. So about access control, it's pretty self explanatory. I put access control on the functions so people can't take my money. So here's the constructor. We're going to set three parameters. First one is Iblo from and Iblo. Two, the first one Iblo from, we're going to set as USD.
00:12:43.402 - 00:13:25.558, Speaker B: So I actually deployed this contract, and I'll show you the contract afterwards. But let's say Iblo from is USD and we're going to go to ETH. Okay? And we're going to set the last one of the Ricochet DCA contract. So what is a Ricochet DCA contract? It's a contract that will take all the streams of incoming iballo USD streams. So I could be doing it multiple other people can be streaming. And what they're going to do is they're going to turn that into USD, like USDC, for example, swap it to ETH and then reinvest it as iballo ETH. So they handle all the logic of converting streamed iballo's from USD to ETH.
00:13:25.558 - 00:14:02.934, Speaker B: But they do like all the other markets as well, like USD to BTC. And they even do USDC to Iblo USD. So there are multiple ways you can on ramp onto these streams. So here are some key flipper fluid parameters we're going to set. I don't use all of them in depth, but I just wanted to show that you might find them very useful if you've built on SuperFlip before, you'll know that there are these things called these libraries which work with this one is called the constant flow agreement. So this is what the streaming function, this is the instant distribution agreement. So this is how they AirDrop tokens in superfluid.
00:14:02.934 - 00:14:42.098, Speaker B: So it's just a bunch of initialization. And then the second part is here, we're granting permissions to the iballo contract to create streams on your behalf. So it's analogous to how you would give an ERC 20 approved to a contract to do transfer from. It's this exact same thing, but it allows you to create streams through the Iblo contract function called create flow. And here we have two things. These are actually super important because you can see it approves their subscription to Iblo ETH. And Ricochet's Ric contract.
00:14:42.098 - 00:15:14.960, Speaker B: So this is how once Ricochet takes in all your streams, they convert it into Iballo ETH. But the way they actually send it to the users is they use instant distribution agreements to AirDrop them to people. So if you don't set these up, your money will be just flowing into this contract and you'll never get your E. So please don't forget to set these two parameters up. I'm more than happy to explain what these numbers mean later on if you have any questions building on top of it. And then last one is just setting up some key things. This one is access control.
00:15:14.960 - 00:15:32.594, Speaker B: This set interface implementer has to do with technicality in the superfluid contract. So we can talk about that if you're interested as well. But you need to set this cool. So here are the key functions. So let's go through in order. So how we're going to get iballo. So we're going to set an amount and the address of token.
00:15:32.594 - 00:16:04.030, Speaker B: So let's say, for example, this is USDC. We're going to do transfer from from the message sender. Let's say I call this contract and I'm going to send 100 USDC. I sent 50 actually, to this contract. And then I'm going to approve this contract. I'm going to approve the Iballo USD contract, and then I'm going to deposit and when you deposit an amount of USDC, you're going to receive a receipt token. And that's our Iballo USD.
00:16:04.030 - 00:17:05.026, Speaker B: And then now the contract owns a bunch of iballo USD. Now that you have Iballo USD, you don't have to worry about wrapping it into a super token and everything. If you call this function called Iballo create flow, it handles all the wrapping for you. And actually all the functions inside Iblo take care of all the technicalities of moving between Iblo and st Iblo if you're familiar with superfluid. So if you do this, there's an additional benefit where once you start streaming a flow rate per second to the DCA contract, you get two types of protection. I'm sure if you worked with superfluid, you know that they have this thing called liquidations, where if you fall below a certain amount of STIB extreme token, they will liquidate you and take 4 hours worth of your stream. So if you're streaming like $10 an hour, they'll take $40 from you, which is kind of crazy.
00:17:05.026 - 00:17:39.834, Speaker B: So if you create a flow through our Iballo contract, we have gelato resolvers to prevent that. So if you're close to eight, if you're 8 hours away from liquidation, we shut the stream down before. So your stream just stops, right? And that prevents you from ever being liquidated. And number two, there's an overload function here where you can set a timestamp, an end timestamp. You can't do the superfluid actually, but you can set an end date for your stream. So if you set 600, it'll run for ten minutes and it'll just shut down and we will close the stream at the end of the ten minutes. It's not a native feature built in superfluid.
00:17:39.834 - 00:18:07.458, Speaker B: So if you use this, you could just work around it and interact directly with superfluid contracts. But it's just a pain. If you just use this, you get your added protections and you don't have to worry about STI b alloy, really. And then self explanatory. This just closed the same stream. Here, we just check the balances and I just return both the from and the two balance. So the first value is going to be your real time Iblo USD balance.
00:18:07.458 - 00:18:37.794, Speaker B: Your second one is going to be your real time Iblo ETH balance. Okay. And then these are just a bunch of functions so I can get my money out of the contract. So let's have a look at how it's actually working on chain. So I deployed this today morning. And once you call create flow, start DCA stream in that contract, you can see on superfluid that this is a contract I deployed and this is superfluid's DCA contract. And you can see I'm sending 49.25
00:18:37.794 - 00:19:02.966, Speaker B: stiblo a month. And you can see it's streaming. And here's what I meant by the buffer. So they take a buffer of 0.2736. If you fall below a certain balance, they'll take this money. So please use our create flow in our Iblo contract because we'll protect you from all that liquidation. And you can see here in the contract, if we call that check balance function to see your balance of Iblo USD and ETH.
00:19:02.966 - 00:19:31.970, Speaker B: So I did this right before the project. So you can see it's 51 point something dollars. And here, it's like some really small amount of ETH. If you query it, you can see the numbers change, right? So the first one went down because every second your Iblo USD balance is going down, it's streaming into the DCA contract. And Ricochet, I think it's every ten minutes or something, they convert all the pooled Iblo USD and convert it to Iblo ETH. So I think if I call it again, it should change. You can see this one increased, but this one decreased.
00:19:31.970 - 00:20:10.734, Speaker B: Those are the key things. If you have any questions about the technicalities of the Iblo USD and you'll find in our docs. But I'll be here throughout the whole hackathon to help you guys on this. So I guess we can move on to what kind of projects you might think of to build on the hackathon and here, so let me show you the DAP ideas. I'll go through the streams. So the first one is tokenizing these Iblo streams. So, yes, we have all these streams, but we can't trade these streams right now.
00:20:10.734 - 00:21:04.626, Speaker B: So an example of what you could do is if you can tokenize these streams to be tradable into NFTs, then you can stream. Like if Alice streams $100 to Bob every month, and Bob receives NFT of the stream and you create a super app, which is a fancy word for a contract that works with these streams. Then you can allow the owner of this NFT to be receiving this cash flow. So if Bob sells it to Celine, she gets the cash flow instead. But this will unlock other applications, we think, such as lending, using NFT streams as collateral. So whoever owns the NFT can put it as collateral their income against, and then get USDC in advance, so they have to wait the whole month for the salary to build up. And number two, it might be quite interesting.
00:21:04.626 - 00:21:28.434, Speaker B: You can create more structured products where you can build up multiple of these streams, package it up into something like a CDO, and we can build some more transparent versions of the same products that you have in TradFi. And I think, Remy, do you want to talk about yeah, briefly.
00:21:28.482 - 00:22:10.258, Speaker A: How long do we have? Okay, so we've only got five minutes, so I'll talk quickly about Boost. Boost is nothing to do with streaming. It's a new product that Lua released about two or three weeks ago. It's an improvement in our original Token Economics. So, in brief, what we're doing is we're allowing you to boost your yield that you will make on Cvxlps. So if anybody is familiar with Convex, when you deposit into Convex, you get a Cvxlp, we loop that LP around and allow you to boost. I don't know, it's why it's a 30% boost, something like that, about 30% boost on your original yield of your CVX.
00:22:10.258 - 00:22:49.298, Speaker A: Again, if you want to know more about how Boost works, maybe find us at our table. I can go in a bit more detail on what you can do with Boost, but yeah, that's something new that we released like a few weeks ago. Cool. So if you wanted to build something on Boost, these are the two things that we think you could do. You can expand the sort of boost pools that we have to fracs convex, finance that's one. Today we only support convex or traditional convex, and then the last one will be to enter Mainet Farms from Polygon. So to do some crosschain stuff.
00:22:49.298 - 00:23:20.794, Speaker A: Again, if you're interested in how crosschain would work, we've done a lot of stuff with multi chain Bridging assets, but also messaging cross chain for our governance process. So, again, that's something that we can help with, but yeah. Cool. Anything else that you can think of? So, like I said, we've got a ten k price pool, so quite a substantial price pool, and anybody that builds anything on Allua will get at least something out of that price pool. So, yeah, these are a few links. Find us on Twitter. So at alu app.
00:23:20.794 - 00:23:52.790, Speaker A: Discord is there documentation is pretty straightforward, docsoluo.com. It's technical and non technical. So there are bits for if you're not a technical user, you can read and it's still easily understandable and then there's a bit more code stuff in there. And that's the GitHub for the repo for the contract that we just showed the GitHub for the rest of the protocol, where everything else is. I think it's just getaluo. That's it. So GitHub getaluo and that has all the rest of the contracts.
00:23:53.130 - 00:23:53.590, Speaker B: Cool.
00:23:53.660 - 00:24:09.140, Speaker A: That's that yeah. I think we're out of time, but if anybody has any questions, I'll be around. Anybody that has one of these jumpers and that is close to the table. Yeah, we're all from the Aluo team, so I think there's, like, four of us here, so yeah, cool. Thanks, guys.
