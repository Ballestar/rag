00:00:01.450 - 00:00:20.000, Speaker A: Nice. Hey Adar, how's it going? Good, Arthur. How's Portugal? Nice. Yes. Really enjoying offline trip with our team for the first time.
00:00:23.010 - 00:00:36.914, Speaker B: Well, sorry to interrupt. Let's started. We do have the stream live on YouTube now, so anyone on YouTube can join. Awesome. Okay. Hi everyone. Good afternoon.
00:00:36.914 - 00:00:54.160, Speaker B: Good evening. Good morning. Depending on where you are, we have Arthur here from Volt doing the workshop on building the future of DeFi on Volt Protocol. Questions will go into the zoom chat and Arthur will answer them all at the end. And with that being said, I'll pass the mic off to our.
00:00:56.370 - 00:01:12.450, Speaker A: Awesome. Awesome. Thanks a lot, Anna. I guess I'll start. So welcome everyone. Thanks a lot for attending this workshop. We'll be focusing on kind of building on the future of DeFi on Vaults Protocol.
00:01:12.450 - 00:02:00.446, Speaker A: And I guess without further ado, I'll just introduce myself. So, my name is Arthur Beigan. I am the CTO and co founder at Vaults Labs, the company behind Volts Protocol, which is kind of a non custodial automated market maker for interest rate swaps, which I'll talk through a bit more later in this workshop. But if you want to reach out to me, you can always do it on Twitter, on Discord. And yeah, if you have any questions, concerns, or would like to build on top of Vaults throughout Hack money or beyond, then I'd love to talk to you and our team would love to kind of help you out and get you up to speed with the protocol. So I'll start off with the agenda. So the agenda is kind of split into kind of a few key kind of points I would love to lend.
00:02:00.446 - 00:02:49.330, Speaker A: So first we'll talk with the Bounties for hack money. Then we'll kind of dive into what Walters Protocol is and then explore the concept of concentrated liquidity that kind of underpins the mechanics of how fixed rates are created on Vault's Protocol. Then we'll move on to the developer resources, followed by a discussion on kind of LP optimization, which will then lead up into our kind of workshop where we'll try and build an LP optimizer together on top of Vaults. And then by the end of the talk, we'll be able to kind of go through some questions as well. Cool. So I guess starting off with the fun part. So, for the hackathon, we have prepared $8,000 in Bounties.
00:02:49.330 - 00:03:56.630, Speaker A: So the first prize will get 4000, the second prize will get 2000, and then third price will get 1000. Cool. So I guess before diving into the workshop, I would love to kind of describe at a high level kind of what is Wolf's Protocol? And at the core, Walls Protocol is an automated market maker for interest rate swaps. And you can kind of think of it as dYdX. But instead of kind of expressing your views on kind of directional price movements, volts enables you to kind of express your views on directional interest rate movements. So if you think of Volts as an ecosystem, you can think of like three key actors that make this ecosystem flourish. So on the left hand side, you got fixed takers who are agents who you could think of them as kind of risk averse individuals who could be kind of interested in kind of gaining yield by depositing funds into variable yield protocols such as ave or compound.
00:03:56.630 - 00:05:18.602, Speaker A: But because they're risk averse, they might want to kind of hedge the variability of the rates and secure a fixed rate that will be stable for a certain duration of time. So what they can do actually is they can come to vaults, they can give up their variable rate of return and in return get a fixed rate which is secured by the other side of the market, which is defined by the variable takers on vaults. And the variable takers are kind of like taking the opposite side of the market where they are having a bullish view on the rates and are ready to kind of insure the fixed rates for the fixed takers in return for the variable yield that comes from the fixed takers. And finally, we also have market makers or the liquidity providers on the protocol which are kind of like the backbone of this mechanism. And the liquidity providers effectively enable and provide liquidity within fixed rate ranges, which means that they're always ready to kind of enter into both fixed taker and variable taker sides of the market while kind of collecting fees. And if liquidity providers are kind of choosing their tick ranges consciously, then they're able to kind of effectively execute a market neutral strategy with respect to interest rates while collecting fees. And that can be quite powerful.
00:05:18.602 - 00:06:32.540, Speaker A: And so, if you also look at the core of the protocol, you can see that it's effectively made up of two key modules so the Volts VAM and the margin engine. So, let's first kind of talk through the VMM. So, the VAM on Volts is a virtual automated market maker which effectively is used for price discovery only, meaning that the Volts VMM is the so called Oracle that defines the fixed rates at which interest rate swaps are kind of created and then eventually settled. And the margin engine is kind of like the beating heart of the protocol. It ensures that the positions on the protocol are sufficiently collateralized, it ensures that liquidations are taken whenever they need to take place. And also when we think about the settlement mechanics and the settlement cash flows, they're also managed by the margin engine. So the margin engine effectively is holding all of the underlying tokens of both fixtars variable takers as well as liquidity providers with the VMM is doing the role of kind of pricing the fixed rates, the swaps that are being provided to both sides of the market.
00:06:32.540 - 00:08:01.938, Speaker A: If we want to think about the more traditional applications of interest rate swaps in traditional finance we can think of like mortgages, fixed rate loans, very kind of traditional products that retail investors and retailers tend to be really familiar with. But what they don't really realize is that behind the scenes this sort of financial products are actually powered by swaps. And if you look at the overall interest rate swap market it's about 1 quadrillion notional traded which is kind of one of the biggest markets in the world. So if we want to dive a little bit deeper into the mechanics of the protocol, I would love to kind of explain the idea of concentrated liquidity which we have kind of borrowed from Unison V Three in order to make the protocol around 3000 times more capital efficient than kind of alternative models that kind of produce fixed rates of return. So if you kind of think about bolts you can imagine a grid. So like a two axis AMM where the x axis is the fixed tokens and the y axis is the variable tokens and the fixed tokens effectively represent fixed yield. So if you hold 101% fixed tokens in a pool which has a duration of one year, that means that you're entitled to get 100 times 1% which is equal to one token at the maturity of the pool.
00:08:01.938 - 00:09:15.854, Speaker A: And the variable tokens are defined in a similar way. But the payoff that the variable tokens generate is a function of the variable rate in the underlying pool that the interest rate swaps are built on top of. So if you think about an interest rate swap pool on top of Ave then the variable tokens would represent kind of the variable rate of return produced by Aave. And by effectively exchanging variable tokens for fixed and the other way around you are able to kind of get into a long position in one direction and a short position in the other direction. And for example, if you're a fixed taker you end up having positive fixed token balances but negative variable token balances because you need to actually give up the variable yield to the other side of the market. And that's effectively kind of how the protocol works and how it manages to kind of create markets that are around 3000 times more capital efficient than kind of alternatives. If we want to kind of dive a bit deeper into kind of the liquidity provider persona we could think of liquidity providers as kind of traders who believe that an interest rate in a given pool will be around a certain kind of fixed rate which could be 10%.
00:09:15.854 - 00:10:29.794, Speaker A: And if they choose to deploy liquidity across a tick range which is relatively tight, which could be 9.5% to 10.5% then they're able to effectively enter into positions with both fixed takers and variable takers while generating fees from the trades that occur. And the beauty of this setup is that if you go back and look at this VMM is that if you're a liquidity provider and there is a variable taker who has consumed all of your liquidity which automatically makes you a fixed taker if then some other trader comes in and consumes a fixed taker position, this results in basically collateral recycling. Meaning that as a liquidity provider, you end up getting into two positions which are effectively netting each other out. Meaning that you can continue to enter into positions and just generate and generate fee income while still staying kind of market neutral relative to the interest rates. But in order to achieve this result, you need to be able to pick ranges which kind of have balanced trading volume from both sides of the market.
00:10:29.794 - 00:11:56.050, Speaker A: So fixed takers and variable stickers. And in that scenario, you kind of will be able to kind of find this double quintessential of wants and link fixed takers and variable takers while kind of generating fees from their trading activity. So if we want to think about kind of the liquidity provider persona, we would think about more sophisticated traders and kind of d five old creators kind of likely to engage in this type of activity. And the reason why the traders need to be sophisticated in order to kind of perform liquidity provider operations on the protocol is because of the complexity that comes with the fact that you need to manage the margin requirements. You need to manage the tick ranges and you need to be able to rebalance them accordingly in order to kind of get as much fee income as possible while still ensuring that the trading activity happens within your tick. Range while making sure you don't spend too much gas kind of doing this rebalancing operations, which makes this task quite challenging and tough for a passive retail investor to kind of perform in a way that's kind of meaningful and profitable. So, kind of before diving into the workshop and kind of the problem of LP optimization a bit deeper, I would love to invite you guys to kind of our developer documentations at Docset volts XYZ where you can kind of explore and learn more about the protocol and its underlying mechanics.
00:11:56.050 - 00:12:37.914, Speaker A: You can also check out our Discord, our Medium, our Bug bounty program. Light paper. And obviously, if you want to play around with the protocol, we're currently on Covan testnet so you can just go onto App Falls XYZ and start playing around. Cool. So let's kind of dive deeper into the problem of LP optimization. So, if you're thinking about building an LP optimizer vault a strategy on top of vaults, there are three key things that you would need to kind of optimize for and I think I kind of mentioned them earlier. The first one is kind of the rebalancing frequency.
00:12:37.914 - 00:13:49.426, Speaker A: So the frequency at which you make modifications to your position. So these modifications can be in form of kind of changes in the tick range or the fixed rate range at which you're providing liquidity, this can be modifications in the leverage. So in the leverage that you have on the protocol. One interesting aspect of vault is that it enables liquidity providers to be single asset LPs on leverage. Meaning that you can actually come to our margin engine, you can provide USDC as collateral, 1000 USDC as collateral, but you can actually end up entering into positions of ten x 15 x leverage even or even beyond because you effectively need to cover the delta between the fixed and variable rates and not the actual underlying notional. Meaning that this makes it a lot more capital efficient and heavily increases the kind of the APY upside that you can experience as a trader and as a liquidity provider. And the final variable that we would love to optimize is kind of the fixed rate range, right, the range at which you deposit liquidity.
00:13:49.426 - 00:15:09.854, Speaker A: And there are lots and lots of interesting tools at our disposal to kind of try and reason about these and try and think about how we could go about optimizing these. So we could start by looking at historical race data. We could start by drawing some bollinger bands, doing time series forecasting and sort of Arima models. We could kind of recognize that interest rates are kind of mean reverting stochastic processes and try and build out models that effectively build bounds around the APY of a given underlying pool in order to come up with ranges that are in alignment with those bounds. So on the picture to the right you can see kind of the depiction of how the margin engine in Volts is kind of constructing the APY bounds for a given pool. So if you look at the dashed line, it shows that variable API in Aave and you can see it's very volatile in the period under consideration. And what kind of the margin engine does behind the scenes is that it plots lower and upper API bounds which then uses to kind of estimate margin requirements by kind of estimating worst case cash flows for both sides of the market.
00:15:09.854 - 00:16:22.070, Speaker A: And as a liquidity provider, you could potentially do something very similar where you try to constantly estimate the bounds within which you believe trading activity will occur, which could be driven off by kind of the suggestions from like a mean reverting model or a time series model or some machine learning algorithm. And then once you have an idea of how you're kind of defining those and how you're optimizing those, you can then kind of dive into the actual execution and the building of the smart contract which would then kind of power an LP optimization vault. So, for the purpose of this workshop, I kind of prepared like a simple active LP optimization strategy on top of vaults and I would love to kind of share it and let you guys take some time and kind of scan this QR code. It basically redirects to our GitHub repository where we have all the necessary code. So let me just get there. Cool. So if we follow onto the Volt core repository, you will be able to see a section titled as Active LP Optimization.
00:16:22.070 - 00:17:07.470, Speaker A: And there's two key kind of files or files that kind of enable this naive simulation to run. First is the active LP strategy smart contract and the other one is the actual simulation itself. So first let's kind of dive deeper into the Active LP strategy contract and I believe I have it here as well. Cool. So an Active LP management strategy is just a smart contract which is ownable by a given user who has deployed it. And then it has references to a few key variables or state variables that we care about. So it has a reference to the margin engine of a given interest rate swap pool.
00:17:07.470 - 00:18:11.850, Speaker A: It has a reference to the VAM of a given interest rate swap pool. It has a reference to the underlying token that is being traded in that pool. So if you think of an interest rate swap pool on top of ave a USDC, then the underlying token in this scenario would be USDC and so on. And finally we have our periphery, which is a smart contract, which acts as an abstraction layer, which kind of makes interactions with the protocol a lot more streamlined. But basically what periphery does behind the scenes is that it interacts with the VMM and the margin engine in order to kind of enable LPs to interact with the protocol efficiently. And another state variable that we have defined in here is very simple, is the leverage that we would like to have when doing LP deposits. Right now it's like a hard coded constant, but I would expect kind of future evolutions of kind of like an LP optimizer vault to make this variable more dynamic and driven off of kind of market variables.
00:18:11.850 - 00:19:14.880, Speaker A: And it would really depend on the actual underlying and it would really need to be motivated by a range of different factors that stem from the volatility of a given underlying pool and kind of the trading activity and also like the health of the liquidation system in the contract in the protocol. Finally, we have two other state variables. So the tick lower and tick upper of a given liquidity provider. These ticks effectively define the fixed rates at which we are providing liquidity. The definition of what a tick is can be explained very easily. So the way it works is that if we represent price as 1.1 on the protocol, then if a tick is equal to 60, for example, then the actual price defined by that tick would be equal to this value to the power of 60 and so on.
00:19:14.880 - 00:20:42.540, Speaker A: And then once we have this, we can then convert our prices into fixed rates which then kind of define rates at which interest rate swaps are settled. So first we have a function that lets us kind of set the margin engine and the VMM so that the LP optimizer vault can start interacting with the given pool. Next we have a function which lets us burn liquidity from the pool in situations where we would like to rebound and get rid of our kind of current position which we no longer want to support. Then we have a function called Mint all which effectively picks up all of the inactive margin in the contract, which is basically margin that hasn't been used or deployed into vaults. And then if there is any inactive margin, it calculates the notional amount to mint which is equal to the amount of inactive margin times leverage. Then it kind of approves the underlying token to be able to be transferable from the LP optimizer to the periphery which then kind of does the minting and burning. And then once that's done, we're able to kind of call the mint or burn function the periphery where we kind of define the is mint boolean as true.
00:20:42.540 - 00:21:55.790, Speaker A: We pass our upper and lower ticks which are state variables in the contract. We pass the notional to mint the margin delta, kind of the amount of margin we'd like to provide to support that notional. And once we kind of provide all these variables, we're able to kind of mint liquidity as a liquidity provider. Then we got a mint function which does very similar things as mintol. The deposit function is the function that lets a given trader passively deposit liquidity into the protocol and then let the protocol, the vault manage liquidity provision on their behalf. So as a passive retail investor, you can just come in, you can deposit liquidity, you can define the amount in underlying tokens you would like to deposit. And then once that's done, behind the scenes kind of the vault will mint liquidity on your behalf and then constantly rebalance your position depending on kind of changing market conditions to ensure that your liquidity is in a range which is active, meaning that actually trading activity happens in there and fees are being generated.
00:21:55.790 - 00:23:07.538, Speaker A: Following from here, there's a very interesting function called rebalance which can only be called by the owner of this contract. And all it takes as its input is an updated tick lower and then updated tick upper. So the first thing it does is it burns all of the liquidity that's currently available or rather deposited by this vault in order to kind of then extract the margin and deposit into another range. So in here I've also put an option to unwind, meaning that there might be scenarios, whereas a liquidity provider you might get into a position with a given fixed taker and then choose to kind of burn the liquidity and rebalance and put it into a different range. If you choose to do so, you still need to kind of have some margin to support your unneted position. And if you don't want to support it, you can always unwind it. Meaning that if you had an unneted variable taker position, you can enter into a fixed taker contract and kind of net out the cash flows and release your capital to then have it free to be redeployed into the protocol.
00:23:07.538 - 00:24:08.054, Speaker A: But in order to keep the workshop simple, we kind of ignore it for now. Then once we burn all the liquidity, we kind of calculate margin to withdraw, which is basically all of the margin that currently doesn't need to support any unneted positions. So if there's no unetted positions, then as a liquidity provider you should be able to kind of withdraw all of your margin and then redeposit it into a different tick range. And so if the margin to withdraw is bigger than zero, then we call the margin engine and we withdraw that margin amount by calling the update position margin function. Once that's done, our address of this contract should have the tokens ready to be redeployed. So once that's done, we can then update our tick toe lower and tick upper to be equal to the updated ticks. And then once all of that's done, we can then finally mint liquidity in the updated tick range.
00:24:08.054 - 00:25:19.838, Speaker A: So if we go back to this mint all function, we should be able to see that at this stage we collect all of the margin that's currently in the pool that has been withdrawn, calculate the notional amount and then mint the position. So that's kind of how the Active LP optimizer works. And if we want to run a quick simulation to prove that it works, we can head over to the file Active LP management strategy which you can also access from here just to show you guys actively simulation. If you click it, it should kind of redirect to the same file. So once we're in the simulation, there are a few key things we need to set up. So we need to initialize our VMM, we need to set the fee in a given VMM pool and the fee parameter effectively defines how much fee income LPs can generate. And in order to calculate the fee income, we need to take the notional amount traded, multiply it by the fee parameter and also scale by the time in years from now until maturity of the pool.
00:25:19.838 - 00:26:32.460, Speaker A: So if we think about it kind of intuitively, the longer the duration of the pool and the longer the position which you support, the higher the probability of you kind of ending up in a situation where you might experience a loss as liquidity provider where you end up kind of getting into an unneted position, which then kind of drags on until the maturity. In order to compensate for that extra risk, we scale fees depending on how much time it's left until maturity. So there's very little time until maturity entering into a variable taker or fixed taker swap as a liquidity provider is relatively riskless. But if you're entering at the beginning of the pool of like let's say one year pool, then the risk is much higher, hence the scaling. So in this particular case we set it to 1%. Then we define the starting tick range for an active LP strategy and an updated tick range. And these values are effectively centered around fixed rate of 1%.
00:26:32.460 - 00:27:37.626, Speaker A: Once that's done, we can then deposit some liquidity in underlying tokens into the protocol. So let's say we take 500 units of a given token. In this case the token is called VUSD. It's just a mock token we created for the workshop purposes which has 18 decimals. So if we are supplying 500 times ten to our 18 as our kind of margin into the vault, once that's done, we can then deploy the LP Optimizer smart contract by calling its fixture, then setting its kind of margin engine and VMM in order for it to be able to interact with them. Once that's set, we perform a few checks to ensure that the variables have actually been set correctly. And then we kind of call our first rebalance which sets the starting tick lower and starting tick upper in the protocol and kind of checks if there's any liquidity to mint.
00:27:37.626 - 00:28:59.990, Speaker A: If there's no liquidity, it just sticks those upper and lower ticks into the protocol until some trader comes in and starts depositing funds. Then once we are ready, we can approve the LP management strategy vault to take LP deposits from us. And once the approval is done, we can deposit into the contract. And as soon as we deposit into the contract it will trigger the mint. So if you go back and check out the deposit function it will trigger the mint function which in turn is going to trigger a mint operation which takes us input the margin delta supplied by a given trader, calculates the notional to mint by multiplying it by leverage. Once that's done, it then kind of calls the mint or burn function, sends the mint boolean as true and then mints liquidity on behalf of the trader that deposited liquidity in here. Once that's done, we can then run a simple scenario where we have a trader who comes in and trades and gets into like a fixed taker swap.
00:28:59.990 - 00:30:20.100, Speaker A: Once we have that, then we also have a variable taker swap. So effectively you can think of a scenario where a variable taker trades in one direction and then immediately after that a fixed taker trades in the other direction. And as this is happening, as a liquidity provider you generate fees while still staying market neutral towards the rates. Because all that happened in this particular scenario is that variable and fixed takers end up being paired together and you as a liquidity provider, you just get fee income and let the variable and fixed takers kind of manage their collateral and their positions. Once that's done, we can then call the rebalance function with an updated tick lower and updated tick upper to burn our liquidity and redeploy it into a different tick range. And then if we scroll further down, we can see that we got two more traders, this time variable taker followed by fixed taker who are trading in the newly established tick range. So if we hadn't bounced our position beforehand, we wouldn't be able to support this new trades, meaning that we wouldn't be able to actually generate income, fee income, by doing that.
00:30:20.100 - 00:31:06.240, Speaker A: And that's kind of the key idea behind why you would want to rebalance your position is you would want to do that because you want to support more trading activity in case the markets have shifted and gotten into a different fixed rates profile. So that's effectively it. We can just quickly run this test and see what sort of results we get. Cool. So we can see that deposit amount is around 500. The fees generated before the rebalance are about 0.9 v USD the fees generated after rebalance are about 1.9.
00:31:06.240 - 00:31:45.170, Speaker A: So if we hadn't rebalanced, we wouldn't be able to capture this additional fee income. And if we do some bit of back of envelope math, we can see that kind of the API that the trader would expect to get as a liquidity provider. In this particular scenario, assuming that trading happens, kind of netting out of the positions happens once every two days, you could expect to earn around 100% to 200% APY. Cool. So that kind of concludes our workshop. And, yeah, I would love to kind of jump into questions in case you guys have any. Thank you.
00:31:49.360 - 00:31:51.980, Speaker B: Yeah, it looks like you have two questions in the chat.
00:32:01.120 - 00:32:20.020, Speaker A: So I'll just read them out. Okay. I'm not sure I understand why you need LPs. Don't fix them floating takers. Just engage in a zero sum game. One loses 101, gains 100 by doing the trade. Why do we need outside capital? Cool.
00:32:20.020 - 00:33:22.680, Speaker A: That's a really good question. So we can think of a scenario that, yes, it's true that, you know, in an ideal world, where there is, you know, double coincidence of wants meaning that at any point in time, a given variable taker and a given fixed taker happen to be on the protocol at the same time and happen to have the same need for 100 notional yes, in that scenario we would be able to immediately pair them. But in scenarios where that's not possible, we need to have market makers, we need to have liquidity providers who are constantly happy to engage in both sides of the market, meaning that they're able to keep the markets liquid active and keep the volume high. Meaning that as a trader, you don't need to kind of wait for if you're a fixed take, you don't need to wait for a variable taker to come in and trade with you. You can. Just come in trade with LP and then the LP will kind of net out their positions once the other side of the market kind of kicks in. And similar kind of logic also applies to kind of decentralized exchanges like uniswap.
00:33:22.680 - 00:34:03.270, Speaker A: Of course, they're effectively trying to solve for the same problem of kind of double coincidences of once by engaging liquidity providers to supply liquidity into both sides of the market. Cool. I hope that answers your question. Ben. Hey, David, let me just read your question out loud. So what's a good source of getting historical rate data? Getting historical rate data directly from ethereum, from on chain activity is very convoluted. So what I would recommend doing is just jumping into LoanScan and literally just scraping their data.
00:34:03.270 - 00:34:36.370, Speaker A: That has proven, for me at least has proven to be one of the fastest and hackiest ways of getting historical data on a range of different underlying so ave, compound dYdX and so on. Cool. Hope that was helpful. Let's see if there seems to be another. Okay. Loans. Cool.
00:34:36.370 - 00:34:59.620, Speaker A: We can't hear you, Anna. Cool. I guess that's it. This concludes the workshop.
00:34:59.780 - 00:35:21.408, Speaker B: Can you hear me now? Okay. Sorry about that. Yeah, I was just saying thank you so much for taking the time to do this workshop. Yeah, super informative apologies for the flag notifications. Yeah, and thank you for the rest of you for tuning in. I think you do have one more question if you want to answer that really quickly.
00:35:21.574 - 00:35:56.200, Speaker A: Oh, yeah, of course. Let me see. Retail, fixed rate products, mortgages okay, let me just read it out loud. So you mentioned retail fixed rate products before, like mortgages. Any categories you're interested seeing evolve with vaults? Yeah, that's a really good question. So I think that in the short term there's a range of opportunities that kind of vaults unlocks. So if you think of a very simple use case, it could be that you want to deposit funds into Aave or compound or urine.
00:35:56.200 - 00:36:49.660, Speaker A: But right now these protocols function in such a way that kind of results in kind of variable rates of return for depositors. And as a fixed taker on the protocol, you can kind of take your a tokens, C tokens or YV tokens. You can deposit them as collateral on bolts and kind of secure a fixed rate on kind of your deposit. You can also think of a scenario where you would like to kind of borrow funds from other compound and in that scenario you'll be able to engage in a variable taker swap in order to cover your variable liabilities and kind of effectively get a fixed rate borrowing. But as the ecosystem matures and as more and more products and primitives and structured products are built on top of vaults, we expect a range of other kind opportunities and use cases to be unlocked in DeFi and potentially even beyond.
00:36:53.660 - 00:37:04.950, Speaker B: Cool. Thank you once again. Yeah. And with that let's wrap this up, and I hope everyone has a great day. Thanks, everyone, for tuning in.
