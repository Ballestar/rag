00:00:08.610 - 00:01:22.220, Speaker A: It. Yeah, there's 14 people on YouTube, so that's good. Yeah, it looks like we have a couple whole bunch of people who've just been joining. We're good. Whenever you're ready, Jake. Yes.
00:01:24.350 - 00:01:27.980, Speaker B: I think we can get started with the stream. I'll kick everything off.
00:01:45.070 - 00:01:51.570, Speaker A: Okay, we're good. Awesome. Great.
00:01:51.640 - 00:02:31.726, Speaker B: Well, thanks, everybody, for trickling in and for watching on YouTube. Excited to have Pocket Network as one of our event sponsors, as well as running a prize that really almost any hack can take advantage of for this event. So be sure to check out what they're going to say here. And of course, on their prize page have we have Alex and we have Alberto from the team here. They're going to take it away and I mean, they're the experts, so I'll turn it over to them and yeah, feel free to, at the end, save time for questions or if they're open to it, drop them during the actual workshop. So, yeah, without further ado, I'll turn it over to the Pocket Network team.
00:02:31.828 - 00:02:38.734, Speaker A: Great. Thanks a lot, Jacob. I appreciate the introduction. So. Hi, everyone. I'm Alex Romani. I'm team lead of app solutions for Pocket Network.
00:02:38.734 - 00:03:16.934, Speaker A: So I'm here to talk to you about what is decentralized finance and is your app really DeFi? So what does decentralized finance mean? Decentralized, that's a word with many connotations. Finance is easy. Decentralized. Does it mean free from banking controls? Does it mean free from governmental oversight? Does it mean free from SEC? Oversight means different things to a lot of different people. I want to talk to you today about decentralized data. So decentralized data is the often forgotten part about DFI. Where are we all getting our data from? Almost 100% of us get it from centralized networks.
00:03:16.934 - 00:03:55.158, Speaker A: We probably all share the same sort of four steps. When we start a project, we open our IDE, we create a folder, we make it a git repo and we get an API key. We get an API key from a centralized provider because what are you going to do when you're developing a product? Are you going to spin up a node? Running full nodes isn't simple. Running archival nodes is absolutely getting ridiculous. It was a year and a half ago, I think, the last time I tried to spin up an archival node, two terabytes in size for blockchain data and it's just getting crazier as we go. We're up to five terabytes now. You can give it the most powerful hardware in AWS and it's still going to take you weeks and weeks and weeks to sync.
00:03:55.158 - 00:04:32.654, Speaker A: So no one does this, obviously. We all get centralized API keys as our application grows, we grow with those infrastructure providers and we get off of their free tier plans and we start going to bigger and bigger plans and we pay them. But is that really decentralized? Is that really can you call it really a DeFi app when we're all getting our data from this centralized database. There's got to be a better way. We all make these sacrifices for centralization, but we don't have to. So I want to talk briefly about what is Pocket Network? And I'm going to skip pretty quickly through these background slides because it's really not important to what we're doing with the hackathon. But I want to give you some background.
00:04:32.654 - 00:05:01.322, Speaker A: If it sounds interesting, please connect to us on our discord. Please connect to us on the ETH online discord. We have our blockchain devs there. Happy to answer any questions about how it works. And you can connect with me and the Application Solutions team about integrations. So Pocket is a protocol that incentivizes people to run full nodes for any blockchain or really any publicly verifiable database. Now, that little second part at the end makes it really interesting that any database can answer to a Pocket node.
00:05:01.322 - 00:05:32.982, Speaker A: So not only does it incentivize people to run those nodes, but it incentivizes node owners already running them to open them up to you. So for you to get to that RPC data, they, one, want to have security to their node, and they two also want to get paid a little bit. So we pay those with crypto economic incentives. We pay those node owners to open up their RPC data to everyone. We control that access through our Pocket protocol. So a quick overview of the protocol. We have SDKs that use that your clients use to get their sessions.
00:05:32.982 - 00:06:10.430, Speaker A: Those sessions then allow them to relay requests to external blockchains. Those external blockchains can, like we said, literally be any blockchain, ethereum based, bitcoin based, whatever chain based. It can be an external database as long as everybody can agree on what that database's content should be. So what are pocket sessions? Sessions are deterministic and stateless. And that's important because that's what makes the protocol trustless. You can get that same session of what nodes you're supposed to talk to from any Pocket dispatcher. You get a new set of five service nodes with each session, and one relay batch per session comes in to activate those payments.
00:06:10.430 - 00:06:43.374, Speaker A: Now, that batching is important because that's a bit of the secret sauce with the Pocket protocol and how we make the whole thing work on the blockchain. Briefly gloss over the finality layer. But again, if you're curious, please grab our white paper, come talk to our blockchain devs. Happy to talk about it. We use a tendermint consensus, pure proof of stake. We forked Cosmos SDK quite a while ago, and we've actually contributed back to their ecosystem with Pixis. And like I was talking about, our special sauce is the zero knowledge range proof that our blockchain devs came up with to validate and pay for relays in a batch system.
00:06:43.374 - 00:07:21.210, Speaker A: So you can imagine if you're doing thousands of relays per minute and node runners are taking in those relays and they're serving you this data. Well, they can't do that proof of work for thousands of relays. They have to batch that proof of work into one small little proof. And using this special merkel Tom index tree, we validate these relays and we pay out. So 89% of our block rewards go to the relays process, 1% to the block proposer validators of the Pocket chain, and 10% to our Dow. That Dow is important because the Pocket protocol is going to become decentralized. We're going to take ourselves out of the governance of the management of the protocol, and it's going to become up to the Dow.
00:07:21.210 - 00:07:43.294, Speaker A: So what happens when you normally get on a free tier plan? Well, your application grows and grows and grows past the free tier. 100,000 relays per day is the most typical. That's pretty quick to get through. That's not a lot of relays. And soon you're going to be paying month over month to this SaaS service charge. So with pocket it's different. You purchase your relays through an initial state, and that initial stake doesn't go anywhere.
00:07:43.294 - 00:08:07.354, Speaker A: You purchase that pocket, you stake it, and you get an X number of relays per day in perpetuity until you unstake the developer. Stake rates, like I said, are adjusted to participation rate and governance. All this, of course, doesn't matter to you. Your bandwidth is free. We're giving Ethanline participants 1 million RPC calls per day. That's ten times what you're going to get on another free tier. And we also include more chains than they do right now.
00:08:07.354 - 00:08:39.794, Speaker A: We have mainet ethereum archival, ethereum, POA covan, robson, rink, b goldly, and POA die. So that's really interesting. We have XDI already on our system so that you can do these cross chains. Interesting applications using us and more chains coming online soon. It can be anything. I'm advocating for Bitcoin and getting some other more older chains on, but right now we're focusing on our Ethereum ecosystem. So how do we get started as an application developer on Pocket? Super simple.
00:08:39.794 - 00:09:23.970, Speaker A: Sign up to the Pocket dashboard, create your application in the dashboard, and determine your integration. Now, if you're like me and you say, well, I have to sign up to a Gui, a dashboard that doesn't sound that appealing and you're like me, I would rather do everything through the CLI. And good news, you can't, you can do everything through our CLI if you're a normal Pocket customer not on the free tier. So, unfortunately, our free tier signs up through the dashboard, which we just launched today. You get all of your information, all of your data through the dashboard, manage your application, because we're actually the Pocket stakers that hold the private keys to your free tier relays. So let's go through real quick what it looks like to get that dashboard, get that free key. If you've done this before on other infrastructure providers, which I'm sure you have, it's going to look pretty familiar.
00:09:23.970 - 00:09:59.722, Speaker A: So talk about these integration methods real quick. There's two methods of accessing the pocket network. We have the fully decentralized method and we have a mostly decentralized method. The fully decentralized method is our base pocket JS SDK integrates directly into application, has the lowest latency between your clients and the nodes that are servicing them. So I mean, that's really important, right? When latency is important to your application, you want the fewest amount of hops, you want the most direct way of integration. That's definitely the way to go. It also gives you more ability with configuration files that you can modify yourself and how your application talks to the pocket network.
00:09:59.722 - 00:10:33.638, Speaker A: Now, we also have another service that we call the Pocket gateway. This uses a centralized dispatch system to serve your application the information on the sessions, and it also proxies the relays for you. So if you've used another centralized service provider, it's going to seem pretty similar. But the one caveat there, all that data is being served by decentralized nodes. You're no longer beholden to one stack on AWS, one stack in GCP. You're hitting nodes all over the world, serving you this data that is agreed. So a quick look at Pocket JS and what that integration looks like.
00:10:33.638 - 00:10:56.282, Speaker A: It wraps the JSON RPC call. So you communicate with Pocket network. Your clients have a direct connection to the blockchain nodes that are servicing them. Signs and verifies every request that's made. And it's also available as a Web Three provider. So if you're used to integrating with Web Three provider, it's the exact same integration method with our Pocket JS. If you look in our GitHub repos, you can find that Web Three provider pocket gateway.
00:10:56.282 - 00:11:34.470, Speaker A: If you're used to using the centralized services that we've all used before, the Pocket gateway will seem very, very familiar to you. You adjust the security settings of the gateway via the Pocket dashboard. Those settings include things like whitelisting origins, whitelisting user agents setting a security key that must be required within the request. Same sort of thing on the dashboard, you get your endpoints for any blockchain. So why do we have these two integration methods? And why is our ETH online prize pool split into two? Well, the gateway is easy. Anybody can do the gateway. Everybody's going to sign up for an API key for some service to get their data for this hackathon.
00:11:34.470 - 00:12:05.474, Speaker A: Might as well be pocket. Anybody can do this and get in our prize pool. So that's the gateway prize pool. 500 died out of 100 die. More interesting on the other side is if you actually do the direct integration method, which I'll show you in the end, probably takes you 1520 minutes at the most, much bigger prize pool and much more flexibility in what you do with the system. So let's take a look at where everybody's going to start because that's how you're going to access your free tier and get your free relays is the Pocket dashboard. Dashboard, pocket network.
00:12:05.474 - 00:12:29.854, Speaker A: These links are, of course available in our Ethonline discord. Feel free to jump in. We'll help you get set up. So the three basic steps sign up for an account, create an application and wait for the application to Stake. So this is the part that's different from other providers is that we are actually staking Pocket on your behalf when you go through this process. So we have to wait for a block to pass for that stake to activate. So create an application.
00:12:29.854 - 00:12:56.230, Speaker A: Very basic. Fill in a few fields, application name, email, et cetera. Create an app. Now, this is the important part where you're getting your application's private key file. So like every other screen that has a giant yellow information warning bubble there, this is important, right? You want to make a very secure passphrase. You want to download this file, keep it securely, lock it away in a password manager, that sort of thing. Once you've done that, save that file.
00:12:56.230 - 00:13:28.446, Speaker A: The next screen, you're going to choose your chains that your application wants to connect to. So on our Pocket mainnet, we have, like I went through before, all of the ethereum chains that I detailed. Now, you're not able easily to go back and change this. So with your free stake and your free tier app, I suggest just using all of the ethereum chains. You never know if you're going to want to eventually talk on Linkv or get an archival feed. So there's no harm in staking every ethereum chain that you ever might need to talk to. Your relays aren't split up.
00:13:28.446 - 00:13:46.162, Speaker A: You have the same number of relays for however you want to use them. That's it. On the next page you'll see, do you want to pay or do you want it free? Choose the free launch offering. Get started for free. That's it. Once you hit that join now, your application is going to start staking. Your application will be created.
00:13:46.162 - 00:14:06.606, Speaker A: You'll have a new selection on your left hand side. When you go to apps, you'll be able to select your application. And the Stake status is going to change after about 15 minutes. Somewhere, somewhere between one and 15 minutes. When the next Pocket block passes, your application will then change to Stake and a new button will appear. Gateway settings. So let's go through that really quick first.
00:14:06.606 - 00:14:35.794, Speaker A: Easiest method of integration. This is going to look familiar to the settings page of other centralized infrastructure providers. You have your application ID, your secret key, and here you select your endpoints for what blockchains you're going to access. Same sort of configuration you might be used to. Do you need a private secret key required? And do you want to whitelist user agents or agents? Once you've done that, that's it, you're done. You're set up to be Enterprise pool. You use Pocket just as you would any other service provider.
00:14:35.794 - 00:15:09.274, Speaker A: And you're entered now let's go to the slightly more complex, maybe 1520 minutes way to get involved and get in that bigger prize pool, and that's using Pocket JS. So as we went through that process in the Dashboard, there's two files that we need to fetch there. There's the AAT and there's the private key. So that private key is obvious. That one came from the big warning screen. The AAT comes from your application detail page. So there's a little box on that application page after you created it, and after it stakes that, you'll be able to copy those fields, save it to a file called AAT JSON.
00:15:09.274 - 00:15:42.614, Speaker A: Once you have those two files that you get from the Dashboard, you're all set to go. Now I'm not going to go line by line through code and bore everybody with what's going on these files. This example is on our repo in the README, so don't worry about noting anything down here. And you're able to go to the README and it explains it even in more detail than I'm able to do here. I'll go through a few of the Quick configuration options just to let you know what's going on here. So this is just boilerplate config code that's setting up the Pocket service for you to access. Now the two lines that you might want to change in there are the dispatch URL.
00:15:42.614 - 00:16:08.366, Speaker A: That's really what's making this decentralized. You don't have to trust Pocket. You don't have to connect to our pocket network node. You can connect to any pocket blockchain node that's running the pocket blockchain run by any infrastructure service provider. So right now we've launched with a couple professional service infrastructure providers, skills, Rivet, Quicknode, a couple others that actively provide these services every day. They're our service providers that are providing this blockchain data. We're also bringing in other nodes.
00:16:08.366 - 00:16:32.854, Speaker A: I run a node personally, so you can also run a pocket blockchain node without even staking. You can become a dispatch and get your own dispatch request. So that's the decentralization part. You don't trust us at any point. Look at the configuration there instance, you can look at that in the Pocket JS, it's pretty obvious. And the next thing you might want to modify is that blockchain. So that constant at the blockchain 22 indicates ethereum main net, easy switch.
00:16:32.854 - 00:16:57.410, Speaker A: If you want to talk to Rinky Covan or any of the other networks that I showed before. After that, we've got two requires to go in the file, the AAP that we talked about and the PPK. They say, I'm including this PPK in my file. Does it hold any funds? No. Your application that you get from the Dashboard, that private key does not hold the funds. The funds are staked by us. So this PPK is not going to cause any loss of funds.
00:16:57.410 - 00:17:24.970, Speaker A: That's it. You're done. Boilerplate code two requires and then a little block of code here. So admittedly there's about ten or 15 lines above this that I didn't put in the presentation. But it's just boilerplate stuff that unlocks the AAT. And you can see there the RPC query that's sending the relay to the external blockchains. So every time you want to fetch RPC data, you send it to that relay, and Pocket will answer you back, just like you were talking to your own personal gap or parity node.
00:17:24.970 - 00:17:41.038, Speaker A: That's it. What can you do with Pocket protocol? We want to find that. So like I said, our Pocket gateway prizes are lower. It's easy. Everybody's able to enter. Literally everyone in the hackathon has the need for this data. So anyone can enter and get in that Pocket gateway pool.
00:17:41.038 - 00:18:32.946, Speaker A: What's more interesting, if you do the longer introduction, the longer integration, what can you build? What can you do on top of Pocket protocol? Alberto is an expert in researching what things we might want to build or what things people might want to build on top of the Pocket Protocol. So he's happy to answer some questions, maybe give some ideas of what could be built. There's also the possibility of building niceties building, quality of life things on top of the Pocket protocol that would make things interesting to us if you built it on top of Pocket JS. Things that would improve quality of life for every person that uses Pocket JS. So to find out more about Pocket Network, contact us ETH online. Discord our discord and as our bonus for ETH Online participants, your Pocket API keys will never expire. That's 1 million relays per day for all of your projects in perpetuity just for signing up.
00:18:32.946 - 00:18:58.426, Speaker A: So that's it for Pocket Network and how to connect. So I'd like to take some Q and A. Alberto is here to answer any Q and A. I'm not sure if I'm supposed to be reading chat or if Jacob's going to read them out to me. I'll check chat here. How long does it take for you to add a new chain like Bitcoin from Kev? Great question. Absolutely takes us no time at all.
00:18:58.426 - 00:19:33.890, Speaker A: So the biggest time that it takes, the biggest time investment that it takes, is the node infrastructure providers coming on board. So if any of our professional node infrastructure providers already have Bitcoin nodes fund up, we could literally have it on Pocket. An hour, 2 hours. It takes a few database entries, some governance chain on chain mechanisms to add the new chain, and we're off to the races. And the cool thing about Pocket is actually anybody can add their own chain. So if you go through the governance protocols and governance mechanisms, you can add your own chain now. And if there's demand, please let me know.
00:19:33.890 - 00:20:00.798, Speaker A: Like I said, I've been advocating for Bitcoin for a long, long time. I really want to see it. We haven't made it a priority yet, but if Bitcoin is a priority to you, shout it out in our discord, and that'll help me echo that up the chain so that we can get more things that you want specifically added to Pocket. Yeah, very cool. Can existing ethereum nodes participate in Pocket Network? Absolutely, yes. We want that. We don't just want to incentivize new nodes to spin up.
00:20:00.798 - 00:20:33.442, Speaker A: That's actually not even a very green solution. We want these existing nodes that are already using this power in the world open up. Right? Like, open up securely through the Pocket protocol. Let us give some access to your data. Because you have spare CPU cycles, unless you're really slamming your nodes to the max, they're sitting there idle most of the time. You're probably not using the max capacity that an ethereum node can offer because it needs so much CPU and so much Ram and so much SSD power just to keep synced. The RPC calls are not very long time, so yes, up the chain.
00:20:33.442 - 00:20:59.060, Speaker A: So, yes, absolutely. Existing ethereum nodes can participate in Pocket to do that. If you have a node, and I don't want to touch too far on this and go too far what we're doing, but if you are a node runner, come hop on our discord, happy to help get you set up, get you the pocket that you need to stake and become a node. That was the last question in the chat. If there's any more, or if Alberto wants to hop in and maybe offer some grander ideas of what you can build on Pocket, that would be cool too.
00:21:01.350 - 00:21:37.690, Speaker C: For sure. Yeah. Thank you, Alex. That was an amazing presentation. But yeah, I'd also like to echo what Alex previously said. One, you can always build services on top of Pocket Network itself. For example, the Pocket Gateway is such a service that we built on top of the protocol, and what it essentially does is sits on top of the protocol like skin, and it forwards the RPC request to the underlying network of node operators.
00:21:38.350 - 00:21:59.570, Speaker A: I mean, to hop in there. But that was an idea that we threw around that I actually thought of it as something I wanted to run myself. I cleared it with our CEO. I'm like, Would you mind if I ran this as a business? There's an opportunity for we called it AATS as a service. Like, let me run this service on top of but it's like, oh, no, that's even better for us. Let's just start that us. But yeah, that's the sort of thing how can you use Pocket JS?
00:22:00.970 - 00:23:09.942, Speaker C: Yeah, exactly. Same thing with our pocket wallet and a pocket block Explorer. The same rules apply for that. But I also think Pocket Network is very uniquely positioned to build applications such as, like, a decentralized block explorer, because there's so many issues that plague traditional block explorers, or at least the way they're architected right now. There's usually a single point of view with these block explorers that end up, sometimes leading to issues around handling forks and block reorgs. And that might be because they are relying on a single node. So by being able to curie multiple nodes through a session and every application that connects to an external blockchain via the Pocket blockchain, really network gets connected to five random nodes in the network.
00:23:09.942 - 00:23:22.670, Speaker C: So they're going to be able to curate multiple nodes and essentially get the most accurate data and the best essentially like blockchain data. Tip.
00:23:24.690 - 00:23:50.566, Speaker A: Actually, I missed a configuration point that I wanted to make in Pocket JS. We've built in a consensus configuration in Pocket JS. So in case you're running something super sensitive, you absolutely need to trust this data that you're receiving. A simple flag in the configuration allows you to demand consensus. You can specify an OD number of nodes that must agree on the results of your RPC call. So say you demand a consensus of all five nodes. You send it out.
00:23:50.566 - 00:24:08.640, Speaker A: Four nodes come back with one answer, one node is behind it, comes back with a different answer. Well, then there's other configuration options. Do you want to either a retry that call, reject the answer, or accept it because four was enough for you? So all those configuration options are available in Pocket JS that you don't quite get in the gateway yet.
00:24:11.410 - 00:24:53.850, Speaker C: Awesome. So, yeah, piggybacking off of that. These node operators are essentially they're incentivized to serve the best, most accurate data to applications. If not, they get slashed and potentially jailed. So that reminds me, I should probably make some straight to jail memes referring Parks and rack. And I think another application that Pocket Network is uniquely positioned for is actual decentralized exchanges or DEXes. And they could potentially also be communicate like cross chain.
00:24:53.850 - 00:25:24.180, Speaker C: But a lot of the current iterations of DEXs that exist on Ethereum right now are smart contract based and then they have a decentralized front end. But with Pocket you can essentially have a decentralized back end as well and truly make it unstoppable. So for me, I'd say those are the top two use cases that Pocket is uniquely positioned for.
00:25:24.710 - 00:25:55.486, Speaker A: That's how you're going to get excited about the prize pool. You're going to cross chain or you're going to do something novel that we haven't thought of. Some sort of application pocket protocol. Yeah, so he's the judge, he's looking for something that is something that either we've thought of and not been able to get to or something that you're thinking of and it hasn't occurred to us yet. Kev had another question. Can anything go wrong? Where are the worst case scenarios, if any? So with a Pocket gateway, I've added some quality of life things to that. So it retries things.
00:25:55.486 - 00:26:47.018, Speaker A: If you have a networking issue, it does a retry automatically. Those are sort of quality of life things that any application would build in. If you're relying on any sort of external API, the gateway does that for you automatically. That's something that's pretty easy to build on top of pocket JS, so you don't really have to worry too much about not being able to connect. So the worst case scenarios, if nodes are continually or even purposefully returning wrong data, they will get slashed. The pocket JS, the protocol has it built in so that if you return wrong data in a consensus and you get challenged for that data, you will be automatically slashed and eventually you can get slashed to the point of a node where you get jailed and you're taken off the network. Now the gateway, on the other hand, has other quality of life things where if it gets repeated 500 errors back from a node, it ignores it in that session.
00:26:47.018 - 00:27:23.130, Speaker A: And those sort of quality of life things are modules that you can actually steal from the gateway. Like you can go to our gateway, it's open source and you can grab that relay. That node, I call it a cherry picker, that node system that will ignore things, you can use that on top of whatever application you're building with pocket JS. If you wanted to modularize that make that better, that's something interesting that would interest us too. But yeah, that's a straight to jail. That's about the worst thing that could go wrong in this system. If you simply decide to use the gateway, you're really not going to notice any difference from choosing any other centralized infrastructure provider except that now you know your nodes are decentralized.
00:27:24.850 - 00:27:58.920, Speaker C: So this actually kind of reminds me another point that you brought up in the very beginning of this workshop is that you could essentially call to any public Verifiable database. So another potential use case that someone could build is a decentralized version of a VPN, like a DVPN and I, so I like, I would love to see that as well.
00:28:01.470 - 00:28:21.440, Speaker A: Any publicly Verifiable database, and you could even get it yourself on the pocket blockchain yourself for new governance. So stock indices, exchange rates, all those sort of things that projects like Link think they have the Verifiable database market cornered on actually is doable through pocket as well.
00:28:24.210 - 00:28:28.514, Speaker C: And I'll be curious to see how someone could tackle the Oracle problem with.
00:28:28.552 - 00:29:09.406, Speaker A: Pocket as it, let's see it, does it make front running easier or harder for ethereum? Oh, good question. Yeah, I'm going to back off as not an expert and there are probably people more expert in this room than me to give an opinion. It's sad because I know some people on the core team that would talk for hours on front running. That makes me feel like I'm not expert enough to talk on it. So I'm not going to give a Verifiable answer either way, but please hop on our discord and talk to someone smarter than me who can answer that. That looks like that's it. If there's any other questions rolling in, if.
00:29:09.406 - 00:29:12.080, Speaker A: Heather or Jacob want to hop in?
00:29:14.050 - 00:29:19.702, Speaker D: I've been watching the YouTube stream, and there's a lot of excitement, but no questions.
00:29:19.836 - 00:29:33.358, Speaker A: Okay, great. Well, hopefully that's fantastic. Hopefully we made it easy enough to use that you don't need it. Yeah, obvious easy to use. And if there are questions, hop in. Awesome. Thanks a lot for the feedback there, Adrian.
00:29:33.358 - 00:29:42.486, Speaker A: Appreciate it. Are we all set?
00:29:42.668 - 00:29:46.962, Speaker D: Yeah, I think so. Thank you so much, you guys. That was a super good presentation.
00:29:47.106 - 00:29:48.650, Speaker A: Great. Thank you very much. Appreciate that.
00:29:48.720 - 00:29:50.486, Speaker D: A lot of excitement about Pocket.
00:29:50.598 - 00:30:03.420, Speaker A: Great. Everybody can use it. Hop in. Our discord, we're aiming for the maximum participation rate of Ethanline. Show me a project that couldn't use us. Right. So let's get it.
00:30:03.420 - 00:30:09.260, Speaker A: And also, spots are limited in our free tier, so make your application quickly.
00:30:10.390 - 00:30:11.234, Speaker D: Do that.
00:30:11.352 - 00:30:13.314, Speaker A: Yes. Everyone.
00:30:13.432 - 00:30:14.322, Speaker D: Thanks, guys.
00:30:14.456 - 00:30:14.802, Speaker A: Thanks.
00:30:14.856 - 00:30:15.330, Speaker C: Thank you.
00:30:15.400 - 00:30:15.982, Speaker A: Bye. Bye.
00:30:16.046 - 00:30:17.470, Speaker C: See you. Bye.
