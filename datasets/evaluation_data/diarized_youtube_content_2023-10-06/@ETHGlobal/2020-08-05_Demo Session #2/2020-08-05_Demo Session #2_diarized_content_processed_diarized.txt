00:00:00.090 - 00:00:58.810, Speaker A: Hear me? Awesome. We're going to get started here in one SEC. I'm just going to make sure we have a few judges not judges, a few people to get feedback. I think Michelle is one of those people. Who else? It so bear with me 1 second while we get this going. It so like the last few sessions, you can sign up for not really signing up, but you're welcome to add your name to this box I just dropped in the chat. That's the order we'll be going in.
00:00:58.810 - 00:01:24.290, Speaker A: I'm going to try to give space to people that haven't done a demo before. So just be aware, if you've already done something last week and we've given you feedback on your video, I may choose somebody else to go. But throw your name on that list and that's what we'll be using. Hey, Dietrich. Hey, Michelle. Thanks for coming. Hey.
00:01:24.290 - 00:02:08.540, Speaker A: All right, let's see. Josh, you are the first on the list, so why don't you go ahead? Remember to so this is just for anybody who hasn't been to a demo session before. We want to know. Basically give us the idea of what your project is, why it's important. Before you dive into how it works, the specific technical things that you've worked on for the past month, tell us why you think this is important, why you think it's useful, and then if you have a demo, hopefully you do that's. The other thing, we will be limiting this session to people who have some sort of demo. We're not going to be giving time to people to just talk about their idea.
00:02:08.540 - 00:02:30.672, Speaker A: So, Joshua, I'll let you share your screen. Do whatever you have to do and go ahead. Cool, thanks. So, yeah, I do have a demo. So this is hopefully self explanatory. It's user facing. So it's not a tool for developers.
00:02:30.672 - 00:03:01.390, Speaker A: It's a tool for your grandma and everyone in the world. And it's something that they are familiar with already. Hopefully contacts app or an address book. But this one, your data is owned by you. Your data, you own it and then you subscribe to other people's data. So it's all decentralized. You can see I have to do a little bit of work on the welcome page, but that's not too terribly important.
00:03:01.390 - 00:04:27.880, Speaker A: When you connect there, you're connected to MetaMask and then it goes and I'm using heavily, relying on three box, but you get presented with your address book and the idea is that you don't add contacts, but you request contacts. So right now, any channel that a person would have in their profile, you would be able to request access to their details with. So, in other words, a channel is what I'm referring to as their email, but it could also be bolden crypto. If you have a crypto account or ETH, it could be anything that is verifiable on their decentralized identity. And so I'll just, for now, type in an email and then that would be all you need to send out a notification to the user that has a verified email address of what you entered in. And what that looks like on that user's screen is something similar to this request here where you have a person who sent a request to hello at Bolden to get access to contact information. Do you want to allow it or reject it? The contact information is in the form of a profile.
00:04:27.880 - 00:05:19.850, Speaker A: Before I get to that, I can show you the log. I mean, like you have just a log of the different events that could happen. So maybe you had sent, maybe someone requested, maybe you requested someone contact information. You can cancel that request at the same time someone else canceled your subscription request, did not allow it, so you could resend it, but the profile information is here and you could have multiple profiles. So when someone sends you a request, you're choosing which profile to connect them to. So you could have coworkers that you want to share certain email and phone number information and then family who you want to share a completely different set of information. So you would enter in for work and some information and then all of this would then be yet another profile in your list.
00:05:19.850 - 00:06:03.384, Speaker A: That's basically it. In terms of the demo, I'm working on something to show more than just this screen. So a presentation showing about how the Orbitdb stores in the back end are connected to each other, how we keep track of subscriptions, those types of things. But that's basically it. Was there any questions? I want to do more than that when I submit it and so that's kind of what I'm working on. But for right now, this is all I have. Very cool.
00:06:03.384 - 00:06:49.610, Speaker A: Yeah, it's definitely clean. You've spent some time on the user interface, which I appreciate. Can you tell me maybe I missed it? Can you tell me the difference between a subscription and other ways to get contact information? Right, so people will be subscribing to other people's contact information. The way that is handled is through a confidential thread in three box. So whenever anybody wants to update their contact information, they would send that out to other people. That would be a note. So there's these threads in Orbitdb that everyone is subscribed to depending on what contact information they have a subscription to.
00:06:49.610 - 00:07:44.840, Speaker A: Yeah. So basically the threads are being able to subscribe to the contact information. What was the question exactly, though? I was just trying to remember what subscriptions actually did. Yeah, that's just subscribing to people's contact information so you don't have to worry about updating any of your contact every week. It seems like my friends or family has a problem where they don't have my phone number or I don't have a phone number for one of my friends. And so this would be, I think, a really good way to solve that problem and through using decentralized technology so that there doesn't have to be a central place where it's all stored and it doesn't cost money, it's not Google or Facebook, those types of things. Yeah.
00:07:44.840 - 00:08:02.952, Speaker A: Dietrich, I think you're muted, though. There you go. Hey, thanks. I saw this one in the list and I was kind of interested in it for sure. Because contacts are one of those things that, well, seemingly simplistic and a little bit mundane. They're part of everyday life. That's also the backbone of how a lot of these applications interact with each other.
00:08:02.952 - 00:08:39.770, Speaker A: A lot of the identity stuff that you see so far is around your interaction with a service or a project, but not necessarily around interactions with other people. So I think this idea of context replication is pretty interesting. A couple of questions I had were around things like modification. I see replication here, but things like deleting or unfriending. Also things like GDPR, how is my ability to remove my own data or ask for other people to remove my data to unreplicate? Things like that. Yeah, it's really tough. This is a problem.
00:08:39.770 - 00:09:46.432, Speaker A: So in the app itself that I'm creating, it would make sure to send an update to that person, and the application that I'm creating would respect that. But there's nothing stopping that person who had access to that store from being able to keep track of that one collection all by themselves, pinning that information or whatever. So, yeah, the application is built to make sure that when notifications come in that, say, delete the subscription, that that person doesn't have access to that information through this app anymore. Cool. One of the other things that I think is really powerful in this type of situation is the ability to take the same information and use it in other contexts. I think one thing that might make a really powerful demo for something like this is being able to integrate this with something else. So if there's an API that isn't just a regular HTP website, an example of how you might export or import or connect this to a different service would be a pretty powerful thing to show.
00:09:46.432 - 00:10:35.328, Speaker A: Yeah, man. So I want to be able to get to that. Definitely have a mobile app in the Play Store or available on Android and iOS, I guess, too, but making sure that this is a replacement for address books, especially on mobile devices. And then if it's on a mobile device, you could have a QR code associated. So instead of knowing someone's did hash, whenever you go to request information, well, you can just pull up your camera and point it at a QR code and it automatically sends a request or handles it for you. That would be nice. I think VCF export would be something that would be like super low bar integration option as well, because so many systems will just automatically one click support that what was it? I'm sorry.
00:10:35.328 - 00:11:05.960, Speaker A: Like VCF format, like super old school, but also a contact format that is basically supported anywhere and everywhere by yeah, totally. Absolutely. I was looking into that format, but I didn't look into it for too much. But standards would be good. Yeah, go ahead, Michelle. So interesting that Dietrich started us down the path of IO and integrations because that's exactly what came to mind. Right.
00:11:05.960 - 00:12:28.276, Speaker A: A network contacts app is measured by the value of how many contacts you can get in there and how comprehensive it is. So on two fronts, one is during the entry field, like when you can type in any kind of decentralized ID, I think it would be helpful to give users some hints as to what kinds of IDs are accepted, whether it's email address or whatever you've got. Right. Think of when you type in a credit card number and it kind of automatically highlights what type of credit card it is or patterns like that that kind of encourage you to get creative. Like, I don't really remember this person's email address, but I might remember their ID from this discord or whatever ID system you support. The second is that when you send the invitation, does the recipient need an account in your app to get it, or can you kind of reach break through that wall and send an email or send something else? So this current version, totally, it's within the app, but the goal is when you enter in an email, it actually sends an email to that end user, and then that end user will get on one hand, it'll be asking that person if it's okay for a user to subscribe to their data. But they won't have their data in the app.
00:12:28.276 - 00:13:24.052, Speaker A: So this would be a way to onboard new people into the app. The email would give them the details they need to add their information into the app and download it onto their mobile device, whatever it needs to be done, and then accept that request from their friend. And also, like, Twilio or being able to send an SMS if someone enters in a phone number is also pretty important. I'm trying to make sure that the final form of this is going to be usable through any channel that they're on. We'll see how far I get. Yeah. And then next time you do a demo or in the submission, if there's a way to show that the threading updating the other records, I think that's a really powerful aspect of yeah.
00:13:24.052 - 00:13:51.150, Speaker A: So I should show like I wanted to show two browsers and have them feed off of each other and I hope to get to that point by the time the demo actually gets submitted. Yeah, that would be a really powerful to highlight. Right now it happens in the console. I need to actually make it happen in the UI. Got you. Cool. Definitely.
00:13:51.150 - 00:14:10.950, Speaker A: Even if you can't build all of this necessarily, you can at least mention it in your video. Like, these are my next steps. This is what I plan to integrate in the future. Something like that would be good. The last 15 seconds of your demo video would be good to highlight there. Awesome. I will.
00:14:10.950 - 00:14:33.130, Speaker A: Thank you. That was great. All right, next up is Jay Carpenter. Hello. So I have a video. It's a rough cut and it's about seven minutes long. Do you want me to play that it has a demo within it, or do you want me to project? Yeah.
00:14:33.130 - 00:15:21.428, Speaker A: Is there a way that you can do that but in a shorter amount of time? Like maybe give us a short intro to the project and then show a couple of clips of the demo if you have it pre recorded. Sure, I can do that. Yeah. So what we've created is the Phoneword Workshops Global Directory, and it's basically a very simplified way for people to publish their public key and or peer ID along with basically an index. But the index can be easily converted into human friendly aiming. So that's basically it. It's on GitHub right now.
00:15:21.428 - 00:16:21.420, Speaker A: And the idea is that if you can find somebody's peer ID and then connect with their peer, then anything is possible with a IPFS node. So let's see. Let me see if I can screen Share and play a little bit of the video. Hang on. Let me believe this contains the video one. Yeah, here's the videota. Now I need to press something in the screen share correct for you to hear the sound.
00:16:21.420 - 00:17:03.644, Speaker A: Yeah, I mean, you can either talk over it now live, or if you have already recorded your audio, it will be a little pop up in the bottom of the screen Share interface. Okay. Share computer sound and optimize screen for video clip. Okay. And then share this. Can you maybe not. If you're having Internet trouble, I can play it for you, I think.
00:17:03.644 - 00:17:37.380, Speaker A: Just give it a SEC. Unless people can see the videos already. For me. It's still loading? Yeah, it's still loading. I do have an Ethernet connection. Hmm. This is looking promising and I can skip.
00:17:37.380 - 00:18:13.452, Speaker A: Okay. Can you see that? Yes, but it's pretty blurry. Okay. Hmm. Can you hear it? Not yet. Okay. Hello.
00:18:13.452 - 00:19:14.710, Speaker A: I'm Jay Carter, representing the filmward workshops team in the global competition. I'm going to step creating what's next for the decentralized and then show you a demo using terminals. AJ. I think it started to work, actually. It was playing and I could hear the audio over the last five years and things unfortunately slowing down a bit, certainly in terms of adoption. Do you want me to go back to the video? We have a global construct, but we are facing three so sorry. Let me just step through the presentation and which makes it hard to use.
00:19:14.710 - 00:19:53.970, Speaker A: There is a link machine friendly address, raises questions, trust for signing up. So we've got this tension between machine friendly versus human friendly. Basically, we could create something we created that is a global director, allowed machine friendly, centralized. Well, we solve those problems with whoa, I'm hearing both audio. I don't know if other people are hearing that as well. Yeah, I think we need more cores, we need stronger computers. It was definitely getting confused with that many streams going.
00:19:53.970 - 00:20:17.448, Speaker A: Yeah, we can hear the audio. It did stop now, though. I'm not hearing it anymore. Right, yeah. Here's proposal. Jay, could you send that YouTube link out? And then we can take about five minutes to watch it and then we'll come back here. Yeah, it's actually on the document where we signed up along with the presentation link.
00:20:17.448 - 00:20:48.080, Speaker A: But let me drop that into the chat. Do you know where the demo starts? Because I could just screen share for that. Okay, that'd be awesome. Yeah, if you just started about, I don't know, 30 seconds into it and then the demo starts somewhere around let's see about looks like we're three minutes in. How about I stream? Okay, awesome, thanks. Sorry about that. No worries.
00:20:48.080 - 00:22:14.844, Speaker A: It so this is a let's see, bear with me just a moment. This is how we normally connect in the decentralized web with an IPFS peer. We put in IPFS swarm, connect this long ID, and bingo, we're into connection. What if we could put in a simple bash, dial 1833 Hollywood and get the same result? Well, now we can with the directory that we've created. And let me switch over to show a Raspberry Pi connectivity. Okay, now let's switch to pub sub. So let's assume that we do a pub sub connection using the same human friendly phrase like this.
00:22:14.844 - 00:23:27.220, Speaker A: We hit enter and we're connected. And then we go over to another Raspberry Pi and we put in a message and bingo, we are communicating from peer to peer, node to node over pub sub using a very human friendly Identifier like this. Dial eight three three, Hollywood. Now let's go over to show you what can be done in terms of a contact list, which is also very powerful here. We're going to go to this. And now we can put in, again, bash and then dial. But instead of just Hollywood, we can create different contexts like Twitter, or we can create LinkedIn, or we can create the context of doing email addressing, or better yet, we can start to create services that are related to cryptocurrency transactions like ETH or Filecoin.
00:23:27.220 - 00:24:20.420, Speaker A: And again, boom, we are connected. But we've got a whole variety of different connection contexts that we can use. So up screen sharing again, get back into the presentation. So that's some of the power of having a global directory that combines human friendly addresses to dance with machine friendly addresses. So we have an experienced and seasoned It professional team, and we're looking to create a new realm of decentralized addressing such as Quad One Ethereum, quad One Protocol Labs 1000 Filecoin. And these are just examples. These are not operating addresses.
00:24:20.420 - 00:25:10.112, Speaker A: And Quad Nine Textile. We're offering an invitation to hack FS participants to stake claim to two phone Word Directory, global Directory numbers such as Quad One, your name or Quad Nine, your phrase. And you could just send a pull request to our GitHub account. To do that, you should follow along on Twitter. We're going to be announcing some workshops where you can learn in depth how this works and what the advantages are. We're also creating an invitation to hackfs sponsors, to become inaugural registrars and create and experiment with us a wealth of human friendly services in the decentralized Web. You can email me here and again follow us on Twitter.
00:25:10.112 - 00:25:41.264, Speaker A: So now with the phoneword workshops, Global Directory, you can connect the way you want to connect and you can control those connections yourself. You can find us on pub sub at Quad One. Phoneword workshops. And that's what we're creating. And we can now create and take the decentralized Web to a new level. Join us. That's it.
00:25:41.264 - 00:26:41.444, Speaker A: Great. Michelle Dietrich, would it be helpful if I went back to the beginning of the video and just showed a summary, or do you have some feedback now? I think overview of value proposition and architecture from Jay would be great. I don't know if that's in the beginning or if jay, you just want to walk through that? Yeah, sure. Why don't you just I can either play the video and you can talk over it, Jay, or well, why don't I just talk? You guys can review the video and the presentation. You've got lengths now. So the value proposition is that we're looking to create a human friendly experience in the decentralized Web. And we have all these different constructs that have very technical, very involved pieces to them.
00:26:41.444 - 00:27:48.520, Speaker A: And this is an attempt to usher in a new way that's as human friendly as we've been experiencing with Internet domains or phone numbers. It's more powerful than that than any of those because it's completely backward compatible to a rotary dial telephone. But it's as powerful as whatever you can create with an IPFS peer connected. So that's the value proposition and the key is the directory. How do you enter a public key and a peer ID into a directory? How can that be trusted? What's the process for curing title to that construct? What's the dispute resolution? I didn't get into all that stuff, but that's the idea. And to minimize, make it as friendly as possible for anybody and everybody to use. That's the value proposition.
00:27:48.520 - 00:28:52.364, Speaker A: Questions? Yeah. Leaning on a century of user experience with regards to familiar number groupings, that's pretty cool. I'd love to hear a little bit more about the architecture. So how the implementation works and what you're building on. Some of the questions I did have were around things like not just dispute resolution, but also like number collisions and things like that. Yeah, I think the number collisions are minimal because it starts with a 15 digit number we call a lookup number that goes from 15 zeros to 15 nine, which is a quadrillion records, basically. But the key is that you can kind of map or overlay those lookup numbers to existing telephone numbers, or in certain cases, there is no existing underlying telephone number.
00:28:52.364 - 00:29:57.392, Speaker A: But you can map the lettering to the numbering and create these phrases. And then once you've got this lookup number combined with the lookup number is a public key. And it could be IPFS peer public key. It could be any public key. It spans the spectrum from what I consider to be what I think will be absolute anonymity to absolute definitive identity. So the architecture is to create this bare bones, basic, basically text file that contains all these records, but there's hashing that goes on that assures the public that this hasn't been tampered with. And there's also a set of validators that with a whole community of rewards for validators and trusted validators and dispute resolution, all that stuff.
00:29:57.392 - 00:31:26.816, Speaker A: But the architecture goal, Dietrich, was to keep it as simple as possible. The question is, do we need another complex construct with PhD level mathematics behind it to introduce into the ecosystem? And so keeping it simple with just pure plain text. And the other thing is leveraging very simple bash files to do the lookup and the peer connectivity. So I don't know if that answers your question, but the core is how simple can this be made? I certainly appreciate that aspect of it. Can you talk a little bit about how the so when you talk about the index, I agree that's really kind of the crux part from an architectural standpoint. Is this something that you're running when you're running your IP fest node? Or is this an entirely separate architecture? And overlay on that network, where that utilizes different nodes, people are running? You could think of it basically like a phone book. So everybody in the world has access to pick up a phone book, look in, and find, here's the lookup number for Dietrich and here's his public key and his IPFS peer ID.
00:31:26.816 - 00:32:19.912, Speaker A: Boom. I have a confidence in the phone book, and therefore I can directly connect with Dietrich. Or you could do vice versa. So the lookup and the way people use these lookups is they can go to our GitHub and they can download a set of these very simple bash files that contain the phrase, the lookup number and the connectivity to an IPFS peer. Does that make sense? Yeah. One challenge that I would watch out for is things some of the architectures that we're seeing in other hackfest projects even, are people who are running their IPFS nodes where they are changing peer IDs. Pretty often they can be rotated.
00:32:19.912 - 00:33:05.496, Speaker A: So there's some potential breakage leakage there. And then one of the other things that I'd recommend too is maybe visually mapping out the pattern a little bit because one of the things I think is interesting here is the less the implementation and more the pattern that you've identified and that's something that could be applied. A bash script is maybe an example of how you might apply this pattern. But I think people are going to want to see this integrated into other systems. So a really powerful demonstration might be how this actually gets integrated into an existing situation where we would otherwise be faced with trying to parse out a CID or a peer ID or something like that. That's one recommendation for a final demo. Cool, thank you.
00:33:05.496 - 00:35:01.146, Speaker A: Any other feedback? A couple of questions about maybe clarifying how the phrases are generated. I know in some examples you can claim your own custom name, but there might also be a ton of utility in being able to send the service like 100 or 1000 different peer addresses, peer IDs and have it create them for you. And then another question is can these be mapped to kind of leaf nodes of a graph or is that kind of left up to the service after you've translated it or basically connected it to the service that's kind of behind the phone word? Yes. So I think it's totally mappable to leafs and different chunks of the graph. You just start to create this. So you've got your peer ID which is running your daemon and then you could map an infinite number of CIDs to that peer ID and have that peer basically presenting whatever CID you want. Does that answer your question? And then in terms of, let's say that you wanted four ones and then Michelle Lee as a hack FS participant, you could go in and state claim to that basically lookup number that corresponds to that phrase.
00:35:01.146 - 00:36:57.410, Speaker A: Now the lookup number itself is going to be a set of numbers, but because of the telephone number to letter mapping you can pick the lookup number that spells Michelle Lee and then point that and then have your public key for your IPFS peer basically bound to that lookup number. And then when people want to connect with you, they can see in the directory that they trust and they have a high degree of confidence that that is indeed your peer ID and they're going to be connecting to you. And then once they're connected to you, basically it's up to your imagination what you want to present to them, what sort of services you want to create that's associated with your peer ID. Does that make sense? So the key is the trust because with a peer ID now it's impossible to know who's behind that peer ID. This puts some sort of, if you will, a brand associated with that peer ID and all sorts of semantics and context and trust and a set of services like 1833 Hollywood. You're going to expect some sort of entertainment content, whatever associated with that peer ID. And then as time goes on and that brand has the opportunity to build, whereas a pure peer ID that's totally machine friendly without this mapping, has little to no branding possibility.
00:36:57.410 - 00:37:36.702, Speaker A: Does that make sense? It I could go on and on. I could spend all afternoon talking about this. Unfortunately, there are some other teams here that would like to present, so I will probably have to move on. But thank you for presenting. I know you sent your video to me, and I'll have to review it again, the whole thing to get the full picture, and then I'll give you feedback. But remember, the videos do have to be less than four minutes for the judging session. That's kind of the time slot you have.
00:37:36.702 - 00:38:29.242, Speaker A: So please be aware that your video needs to be edited down quite a bit. Another key piece, if I could just cap it off with this, is part of what makes this work, is to have a market for these lookup numbers. So there has to be an active market, just like there's an active market for Internet domains for this all to work. And I didn't talk about that, but that's a key piece to the whole model. And it has to be definitely mentioned that in your video as part of, like, you introduce why this is important, why you think this is a good product, how it works, and then what's next? Marketplace is next. What do you plan to do after the hackathon is over? These are important things to consider. And it also has to be non proprietary, completely Swiss, neutral.
00:38:29.242 - 00:38:50.576, Speaker A: Never be bought, never be gotcha that's? Okay. Thank you. Appreciate it. Thank you. Awesome. All right, Elvis, are you ready to go? I know you said you were editing some things. Christian, you are still muted.
00:38:50.576 - 00:39:55.688, Speaker A: Hello. Hey, how's it going? It's going not so easy. Do you want me to play your video or would you like to play the video? I tried to the whole day, make this video for like, a test of a demo video. So I tried a lot of technique and to crumble it, to treat four minutes. So I try to show you. Can you show it? The trial? Can I CI? Yeah, I could share it for you, unless you would like to. And please stop at three minutes and go to the four minutes because the comment distortion I haven't edited it yet.
00:39:55.688 - 00:40:27.844, Speaker A: Okay. I will share the video for you and play it and the language and spell and typo it will be adjusted to the day. I have some friends professionally. Okay, let's see this. They're good. Apologies. 1 second.
00:40:27.844 - 00:41:08.640, Speaker A: I committed the cardinal sin of screen sharing. Okay. I did share the screen sound. Share of me. Christian presenting. Can you zoom a. Little update tomorrow's rig I'm working on three buttons interface and is under Hackerface Protocol Labs and Eat Global.
00:41:08.640 - 00:44:24.040, Speaker A: First I have in a round PowerPoint make some little case study of intention, contribution and hacking. My challenge has been that it's not accessible and not use effectively documenting it's not easy to contribute and find out what privacy privacies are and if I should have research, should hack I need more focus it for me. Hack is a good solution or piece of advice. I try to make it here, for example, with three bi three buttons to interface press File Social Payment and use the functions directly and try to make a timeline with hack FS salesman forward with limitation and contribute. Work on privacy in the ecosystem and hack in Microsoft to be progressive as goal the web tomorrow's web and PBI the three button. The goal is more did you say you wanted me to skip ahead to four minutes? Yes. Okay you nothing what can you hear? Nothing like a tragedy.
00:44:24.040 - 00:47:37.500, Speaker A: I'm working on Bitcoin and try to make a better project with accessibility. Train ran in Microsoft system and the newest JavaScript work with Focus web apps. When in Microsoft it Microsoft Edge and Chrome will be conforming. I hope. I come to hack and send out three buttons, interface the defined button and social containment and it's more sensible, have more privacy and possibilities for help. You come to contact me after listening. Okay Christian can you just tell us in your own words what the project is you're muted? I try to make the context special with look at what the newest not yet published accessibility standards for UE or UX because I'm autistic and I need and will contribute with some ideas and I can't do the whole but I have example UX Copenhagen event people there to ask for help to this ecosystem.
00:47:37.500 - 00:49:12.830, Speaker A: So that's what my idea to go in and make just a little app accessible like EPFS desktop and then could save and edit. That was my context. It still are, but I can't give any code because all the documentation and the use of the home pages and the hacking I'm starting from scratch and I can't find around it. So all the big stuff with Commando and awesome can have not given me the hack option there's. Go ahead. Yeah, I think there's a really interesting concept here which is how do you take everything that's possible on the decentralized web and try to break it down into three buttons or three actions three links. That's pretty cool.
00:49:12.830 - 00:50:20.290, Speaker A: There's obviously a lot of work here that you could take on but one way to simplify might be to break it down into just start by having each of them be portals to a popular service. So you have a web page with three buttons each of those links so the file one maybe it links to filecoin and the social one maybe it links to MetaMask or another decentralized social service or matrix. And the payment one, maybe it links to a payment service and just start there. And then once you have something in place, focus on one of the three buttons at a time. I like that you're being so bold to say let's try to simplify the Zweb into three actions. So just keep simplifying until you have something that that you can click and use and then keep going from there. Yes.
00:50:20.290 - 00:51:26.820, Speaker A: Anything else to add? Yeah, I think the two things that, aside from what Michelle said that also just even the name of it, I was like, tell me more with about the three buttons, because it really is a lot of these applications, very complicated. But I think there are two things you mentioned that I would encourage you to lean more into as well, which is the idea of a PWA for this, using Edge PWAs, because I think that opens up the door to accessibility for a lot of people without having to install something. And second is the accessibility aspect that you brought up. Like you said, Ipvis desktop, it's a very simple application and we've started getting feedback from a couple of people who had accessibility requirements for the app. We made these changes to IPS desktop to make it more accessible. And then that person who reported the issue took it back to an accessibility slack with a bunch of different people who had different assisted technologies that they were using and they really appreciated the fact that it was accessible and that we had made those changes. So I think that's something too, where it's not often taken into account for a decentralized technology.
00:51:26.820 - 00:53:22.940, Speaker A: It's been often as afterthought. So I really appreciate that it's there in the design from the beginning. Yes. So what I first saw for C Five one year ago, I started in the EPFS ecosystem and get users in ESA and GitHub. And so it was the system to work as a send a bug in, not to email, but in the system and use the GitHub. I have, like you said, some idea you two were dear and it helped to the AHA, mine here be incorporated into the whole EPFS system before in the future can make the file button. That's not something I can do alone because why can I not just program, I think one button with File, press it and save or load a file.
00:53:22.940 - 00:54:11.684, Speaker A: But then I have not changed the desktop or the ecosystem. Yeah, one thing I was going to say earlier is I think it's okay if you said you're starting from scratch and you don't have a full demo. That's totally fine. A big part of the entire event was trying new technologies and working with Filecoin or IPFS. A lot of the people coming into the event were first time working with them. So kudos for trying something new and looking forward to see your edited video submission tomorrow. Hopefully you'll be able to edit it.
00:54:11.684 - 00:55:20.930, Speaker A: But yeah, thank you. Just as payment. I can't today or the next month make anything about payment because you only ask for stuff that can work in the testnet. I want, of course, later on using the main net of icon or other Ethereum payment and wallet, the new payment system. Okay, yeah, definitely. It'll be interesting to see when the Filecoin Mainet launches different integrations. Hopefully you'll be able to include anything else.
00:55:20.930 - 00:56:18.032, Speaker A: Yes, my journey through the last month and the journey future into the ecosystem will be very interesting. Even I not make the three button solution, except that it's been a very good time with tech and good people. Excellent. I'm glad to hear that. It's been fun for us as well on the other side. Thanks. All right, looks like we have a few other people who have signed up for feedback, but just before we move on to them, can I get everybody to turn on their cameras? It's the last session of the hackathon and we're going to do the same thing we've done for every week, which is just throw up.
00:56:18.032 - 00:56:41.290, Speaker A: The JRD knows it's week five. Here we go. And then we'll just take a little screenshot and that'll be our group photo for the week. Oh, zoom is cutting out my fingers. I've got to keep all five. Let's see how many we can get. Maybe two or three more.
00:56:41.290 - 00:56:55.490, Speaker A: Hold the pose. This is great. Your hands look great, everybody. All right, that's good. That equals a photo for an online hackathon. Great. Shop.
00:56:55.490 - 00:57:21.956, Speaker A: Next up is Dan and Viraz for the Shop FS team. Hey. Hi. Can you am audible? Yes. So hi again. Hi everyone. Excited to present our submission, which is Shop FS, a decentralized data marketplace.
00:57:21.956 - 00:58:55.910, Speaker A: So I'll just go through the presentation very quickly and then we'll move on to a quick demo. Right, so over the years, I think we have seen data has been rising as a commodity and over the years the data market size has grown linearly as every year has gone by. And what Web Three has done is with the advent of Web Three, the user adoption has really been very phenomenal. What we have seen either with Blockchain or IPFS, and with IPFS especially to focus on the IPFS here, that the data incentivization. We know that it is the key in monetizing and incentivizing data and data content, basically. And we have seen Filecoin taking good steps towards that. But although we feel despite the great work that's been done, we feel there is a lack of a good, sustainable, minimalistic UI interface through which potentially both buyers and sellers can interact and purchase and sell decentralized content over Web Three.
00:58:55.910 - 01:00:36.672, Speaker A: And also there is a bridge between Ethereum and IPFS that's missing in the sense that there should be more payment assets other than just file for. With Shop FS, we aim to dan can you just go back once to the presentation? Yeah. So with Shop FS we aim to cater to these two factors and we'll just quickly we are using these six tech stats in terms of categories. We are using three bots, obviously ethereum smart contracts, we're using Fleet Space Demon and throughout the DAP we are querying all the blockchain data through graph and we will be deploying the whole application to unstoppable domains. And also we have a subscription model on top of the normal buying selling architecture which is powered by Safelier which is EIP 1620 to incorporate streams. I think you can go to the next slide once. Yeah, so after the hackathon we have had some good ideas and after the hackathon we plan to have a dow build underneath where for every subscription right now it's free to create a subscription and subscribe to it.
01:00:36.672 - 01:01:25.984, Speaker A: But we plan to have a dow model on top of that where we charge some sort of a fee, a small fee which goes into development of that dow which can also use for curation of yeah, so that's it. And then we can go over to the yeah, so the team members include me, Viraz, we have Dan and Shubham who's not here and yeah, I think we can jump now straight over to the demo and I think Dan will take over. Yeah, so this is our roadmap. Currently we are at the second yeah, I think Dan, you can take over. Hey guys, can you hear me? Yep. Yeah. So this is our landing page.
01:01:25.984 - 01:02:47.910, Speaker A: So we trying to make it as simple as possible is just to upload a file, you describe the file and then you can earn fees for people accessing that file. We support Die for now, but you can use any ERC 20 token on our platform. So to upload a file you set a title. So actually before this, let us ensure that we have a Space Demon running locally. Space Demon is an app that Fleek team has built which helps us create private content on IPFS. Basically, I'm giving a very example description this thing to show you how this thing would work. So in the background, what is doing is I have space demand running locally so we have to give the local file path for it to run.
01:02:47.910 - 01:05:26.784, Speaker A: So it picks up this file, name the file, encrypts it and stores it on IPFS and sends the thread info which is needed to share that file to our database. I'm not sure if you can see my MetaMask but basically I'm confirming a transaction on the blockchain once takes some transactions. Okay, yeah, okay, there's some bug here but basically once the file is uploaded you can see the files uploaded here and you can explore the files. Like for example, this flows uploaded a song so I can buy the file which is basically as simple as sending some die. I'm going to switch over to another account which has bought some files because it takes some time for these transactions to complete so this person has already bought the file so I can just download the file. So there's some bug right now, I don't know why it always happens only while demoing bug comes so once the file is downloaded you can see the local file path appear here and you can view it from local hard drive. One more thing.
01:05:26.784 - 01:06:00.240, Speaker A: Sorry. The reason was I hadn't connected. There's some issue. Okay, so we also have a profile page for every user. So this is my profile page. When I'm logged in, I can see all my files for sale, the files I have bought, and I can anytime go here and download the files. And I can also see so this is the extra thing that we have, which is subscriptions.
01:06:00.240 - 01:07:00.644, Speaker A: So I can create subscriptions for my portal. So the way I do it is I set what token I want, the minimum number of days a subscriber should subscribe for and the amount of the fees that he has to pay for subscription. So once the user is subscribed so this is how I update my subscription info. But suppose this flow is subscribed to me. This guy can download any of the files that I have uploaded without having to make transactions at every point to buy these files he gets access. And at any point, as I, as a subscriber, as a seller, can come here and withdraw balance, which basically I get to withdraw the amount of die or whatever that is currently available for me from the subscription info. This is the total deposit is given for ten days.
01:07:00.644 - 01:07:54.630, Speaker A: But if it's two days, then I can withdraw to die. And at any point the user also can cancel his subscription, which I can show you 1 second. So I'm just changing my user. This is the view for someone who comes in and looks at another person's user, so you can click on subscription and cancel subscription at any point. When that happens in the background, whatever, the leftover balance will be sent back to me, as well as what is for the seller will be sent to the seller. I think that's it for the demo. We have some docs that you can explore to see how we built it.
01:07:54.630 - 01:08:29.730, Speaker A: Yeah, I think we should move into questions because we do have a couple more projects. Yeah. So Dietrich or Michelle if you want to start. Yeah, just a really I think this stack is interesting. You put together a bunch of different pieces. Space Demon using three box for identity and comments. Some of these what feel a bit like common ecommerce interaction metaphors but with the twist decentralized identity crypto payments and the subscriptions thing I think is pretty interesting.
01:08:29.730 - 01:09:24.832, Speaker A: I would like to learn a little bit more about the decision you made around how subscriptions are paid out. It seemed like in the UI, it was like per day. Like user can choose amounts per day or something like that. Yeah. Am I audible? Yes. So basically what we have used is EIP 1620, which has been introduced by sabler, where what we do is based on the like we have just an input field of number of days, minimum number of days that the seller wants to have the subscription at least, and then the amount per day that he wants to have. And then once that is done, a buyer can always go on to his profile and just add the number of days that he wants to subscribe, get subscribed to that particular seller.
01:09:24.832 - 01:10:19.780, Speaker A: And on the background we just calculate the start time, the stop time and call the create stream method on the sabbia on the EIP 1620 contracts. So what happens is for every per second, the amount is getting calculated for both the buyer and seller. So basically they are entered into a contract for that particular duration. Right. At any time during that duration, based on the number of days that the buyer has set, you can cancel your subscription. And based on the rate per second, based on the allocated balance calculated by the EIP 1620 contracts, both a buyer and seller will get the appropriate amount of share that they deserve depending on at what point that the stream was canceled. Right.
01:10:19.780 - 01:10:55.836, Speaker A: And same goes for the seller, if you like, anytime you want to withdraw and get the die lot in that stream back. So at that time, basically, we are calculating the current balance that the seller will be entitled to and at that point he can get only that much amount. Right. And once suppose the seller doesn't withdraw throughout the stream, so he can do that, once the stream expires, he can then withdraw the whole amount at once. Okay. Yeah, great. Thanks for clarifying.
01:10:55.836 - 01:11:26.170, Speaker A: I think it's really interesting to pair something like streaming payments like this with something like unlocking things from filecoin archive. And that pattern, I think, is going to be more and more common. So I'm excited to see people experimenting with it. One thing I would recommend when you're doing a demo is be able to explain that overall vision and architecture because I think it is one of the first times people are really kind of piecing these interactions together and I think that alone is pretty interesting. Thanks for the demo. Thanks. We'll take care.
01:11:26.170 - 01:12:04.650, Speaker A: Any other feedback, guys? It all right. Thanks for demoing, guys. Next up is unfortunately, I skipped over one team. So we're going to jump back one to codego team IoT and Ethereum. Okay? Hi, everyone. Can you hear me? Yes. Okay, let me share my screen.
01:12:04.650 - 01:13:38.384, Speaker A: Can you see my screen? Okay, so hi everyone. We're tim codigo. I'm planning to go over a couple of slides and then just play a short demo video. So we've built a decentralized app for contributing and collaborating on firmware development for the Internet of Things and also for device management for the Internet of Things. So first of all, that's our faces. Okay? And the project has started at the University of Ediba as a research project for making an open source community platform for contributing firmware and picking up from when manufacturers stop supporting a specific device and then it dies. The Codiga network, proposing a community where developers would be incentivized to continue upgrading these devices and users will be able to be able to use the firmware contribute from the yeah, as I said, this is the Codigo network.
01:13:38.384 - 01:15:12.546, Speaker A: But we've built the Codigo Hub on top of the Codeigo network, which is a decentralized app for doing all of the UI work for both the developers. So uploading firmware for users, for browsing firmware and also adding their devices on the platform and monitoring them in real time in terms of their status and also doing over the air updates directly through our platform. And finally, if a user has some device which requires an upgrade, but there is no available upgrade on the platform, users are able to put bounties to put bounties on their request and developers have a bigger incentive to work on them because they will get paid from the bounties of the users. I think you will like our tech stack. The demo video will explain how we're using quite a few of this. So let me go on the demo video. Is there something I need to do to share the audio of my welcome of my okay, Codigo Hub as an existing user, you can log in and you see a map of the devices managed by the Hub and their active status.
01:15:12.546 - 01:16:05.302, Speaker A: At the moment they are offline, but I'm running a device in the background called Humidity sensor. So let's add it. The forms have been out of field for demo purposes and the Hub will automatically identify that the device started because they are talking to each other through MQTT WebSockets. As soon as I want to find an upgrade on the firmware of that device, I can search the firmware repository and I find something that looks interesting. I can check the source code, the details from the developer itself, the community score and amount of downloads, likes from other users and reviews. But I can also check the profile of the developer. I can see how long they've been active, their community score on the Hub, how many firmware they've already uploaded to the platform and it looks good.
01:16:05.302 - 01:16:45.406, Speaker A: So I can either download it to my PC or I can actually just deploy it directly to my device. It's easier. And the Hub will fetch the file from filecoin and pass it through MQTT to the device. That's it. But now assume that I actually didn't find the upgrade I was looking for. I can create a request as a bounty and set some amount of money on it to draw some attention to the developer community of the hub of Kodigo. And now I'm waiting for the bounty to be registered on the bounty's repo smart contract.
01:16:45.406 - 01:17:10.834, Speaker A: The bounty went through and the codeico is already listing it. So let's see what the developer will do. Now. I'm back as a different user, as a developer and I can see the bounty that has been created. I'm interested to make some money, so let's check it out. I can see the device aforementioned and the amount of stake on it. It's open so nobody else has collected it yet and I can read the request.
01:17:10.834 - 01:18:05.610, Speaker A: I like it. So I have already actually implemented this fix. So let's upload you upload both the binary and the source code to allow easy collaboration and then Kodiva will read the file and upload it to filecoin and also register it with the firmware repository smart contract. The contribution has been submitted so I can just go and collect the bounty and I should see my balance to raise by 0.1 F. That's good. I collected the bounty so I can also check my historical learnings on the platform visually and for different firmware durations.
01:18:05.610 - 01:19:22.934, Speaker A: And finally, Codigohub is about building up your profile and making other users trust your contributions. So the more you contribute, the higher community score you get and the more people get to test and like and download your firmware and the more users get to trust. Okay, so just to finish up, if we had more time, we would also use the graph, apart from all the technology we're already using to track the history of a developer on Codigo. So it makes it easier for users to see if they trust the developer or not and also use unstoppable domains to allow developers to have their own crypto domain. So it would allow users to go check their website before they decide if they want to download their firmware or not. Thanks for the time and we would appreciate any feedback. That is super interesting.
01:19:22.934 - 01:20:21.526, Speaker A: And as somebody who worked in mobile phone devices before Ota, firmware updates are complicated and tricky business, especially the fact that they often are, how do you say, expired with regards to existing CVEs. So I really love the idea of a system for that or open marketplace for firmware updates and bounties. I have a lot of questions around things like bounty validation. I think some of the interactions around the bounties would be really interesting too. The bounty validation is the biggest one, right? Submits a new firmware for a bounty, how does that get validated? I think there's an opportunity. There probably more complex social interactions, but an opportunity for crowdsourcing some of the validation as well, right? Like somebody submits maybe from wherever the payment and the payment too. And that was the other part of it is like how can I stake more behind some bounty that somebody out of there.
01:20:21.526 - 01:21:10.790, Speaker A: I would like to be like I want a plus one, add more die or whatever to an existing bounty request. Then you can start amplifying bounty values and that marketplace becomes more self reinforcing. So I think there's some interesting opportunities and really interesting ideas here. The overall UI and stuff looks great, but I think the interactions and really optimizing for specific really high value cases would be interesting. Answering some of the harder questions around boundary validation because technically you could do things like external, you could oracleize resolution of a CVE or something like that, right, with a known vulnerability check. But the complexity there starts to go crazy. One other thing I think would be interesting here too is just from a not related to like your security use case was interesting but complicated.
01:21:10.790 - 01:22:01.500, Speaker A: The idea that you actually demoed, which is actually just like trying out an example firmware for a device I think is really high value and interesting too. I've done a little bit of work playing with the Arduino IDE services, how you actually get new services registered inside Arduino IDE for specific devices and get projects registered there. You can host your own, you can just submit a PR and they'll add it. So some type of dynamic integration with this service into the place where people are actually building these projects, IoT projects themselves would be really fascinating, I think, and that would be a pretty powerful demo. And the process of getting submitted and added to Arduino ID is pretty simple actually. So that might be something worth exploring as well. But overall, really interesting idea, but I think there's some big questions around the validation aspect given the security vulnerability use case.
01:22:01.500 - 01:23:00.246, Speaker A: Just to give a note, we had some discussions about bounty validation, but our thought would be since both the firmware repo and the Bounties repo are smart contracts, a Bounties repo can check that actually somebody has contributed firmware to the firmware that they are saying to the firmware repo. And we were thinking something like as long as the firmware has been downloaded that many times and it has received that many likes, then it will be able to collect it. But it's a bit more complicated than the idea. That's definitely the right direction. Very cool. Yeah, really cool concept execution. I'm going to say something potentially a little bit controversial is I would say just stop writing software right now and go get users.
01:23:00.246 - 01:24:41.262, Speaker A: So go hang out on all the forums that people are searching for help or mods or new firmware and make your next goal to become the firmware source for PinePhone or for Arduino. Or pick something pretty specific and become the go to place for it. If that means that you guys have to write some of these patches yourself to build up critical mass, then so be it, right? But I think once you become the go to place, a lot of the volume and dynamics and traffic will come much please. I also have one question in terms of the demo, would you guys think that it's more useful to do a pitch like demo or a technical demonstration or work through like demo? I like actually seeing it in the overall flow. I think that was good to see the end to end interaction like both the person is making about you or asking for something and the person is uploading firmware. What I would recommend is choosing your use case carefully because you used a CVE, it opened up a plethora of questions that might not be immediately germane and might detract from the immediate value and impact of the pitch because it opens up a Pandora's box of questions. A simpler use case like trying out here's how you try out new firmware that flips the light, blinks the hello world of IoT, right? Blink demo or something like that.
01:24:41.262 - 01:25:38.886, Speaker A: Maybe not as powerful, but also reduces the open question set in that short period of time that you have, you can address some of those use cases that have more complex validation requirements. Maybe in your vision statement like this could also be used for and then list a bunch of cool use cases like that. That would be my recommendation from a demo standpoint, given the time that you have for it. Yeah, I think because this is organized as a hackathon which is building software event actually for this, I would maybe dial down the pitch part of it, the slides like by 25% or so, but have a little bit of both. You could also introduce what you're doing, show the demo and then go back and talk about your stack. Talk about all the other things after you've caught people's attention. Okay, yeah.
01:25:38.886 - 01:26:18.500, Speaker A: Some of the best videos we've had from previous events do a little bit of both. The balance obviously depends on the specific project. But in the Info Center for Hackers the Notion page, there's a couple video examples that we'd give. So maybe go back and watch those again just to see the different balance that some of the projects have taken. Just to give you a sense of what seems to be a good amount of technical content and what is a good amount of pitch content. Because the reality is you do need both because you're explaining the project and then you're demonstrating, but yeah. Thank you.
01:26:18.500 - 01:27:01.442, Speaker A: Thanks a lot for the feedback. We have one last project on the sheet. I lost it, but if you are oh, I think it's John. John, are you around? Yes, sir. Go ahead. Can you play the video for me? Sure. If you'd like to drop it in the drop it in the chat, there should be a link.
01:27:01.442 - 01:27:20.002, Speaker A: Okay, do that. I have too many windows open right now. Sorry. Okay, here it is. Got it? Yes. Okay. Fin file.
01:27:20.002 - 01:28:03.490, Speaker A: Here we go. Hi everyone. Welcome to the demo of. Our hack FS app fin file. Fin File is a Python Flask app that allows the user to input a stock with top 100 crypto symbol, and the app will generate a five year weekly chart and an Excel file with the same price data. Users can send this data to Filecoin via textile I O's Hub, where they can retrieve the data using a URL generated by the Hub. Let's take a look at it in action.
01:28:03.490 - 01:29:18.310, Speaker A: Let's generate the chart for AMD Advanced Micro Devices. The app generates a chart. Let's download a PNG image of the chart. Let's download an Excel file of the chart. We have our two files in our directory. Now we want to initiate a Hub bucket, and then we want to push these files to the Hub bucket. We would do this by Hubby.
01:29:18.310 - 01:30:28.366, Speaker A: I think the demo stop playing that second URL. We're going to use that later to inspect the bucket. Once we're done, let's push our files to the Hub bucket. Yes, we want to push these changes, and now we want to generate those Hub bucket links one more time. Click on and open the second link. And there we go. Here's.
01:30:28.366 - 01:31:22.290, Speaker A: Our two files have been pushed to IPFS with our Bucket ID. Let's inspect one of them, advanced Micro Devices. Awesome. What are some other uses? Right. We could do a chart layover of two similar assets to compare their price performance. Our next steps. What do we want to do going forward? We want to hook up the gRPC client to automate File, transfer to Filecoin, add new APIs for more granular data and metrics, and we also want to improve the UI aesthetics and functionality.
01:31:22.290 - 01:31:51.630, Speaker A: Thanks for watching. Please come visit our repo at the link below. Awesome video. Yeah, thanks. One. I'm really excited to see some Python up in here. Like Python JavaScript number one in two languages in 18 to 22 million of developers out there.
01:31:51.630 - 01:32:27.158, Speaker A: So I think already, like, seeing some Filecoin and Python mixing up is really nice for the ecosystem as a whole. That's very cool. The front end seems really nicely executed. One thing that I think that would be powerful, and you called it out right at the end, you're like, next steps. Here's. What we want to do is automating that transfer from the UI from what the user closing that loop between what the user creates and how it gets into the decentralized system. So I think that's that first part, right? And the second part, I think, is actually reading the data from the decentralized system.
01:32:27.158 - 01:33:19.398, Speaker A: And I think that's also really powerful because then you have a way of actually viewing the files that other people created. So I think the Python aspect is great. I'd love to see more of that and maybe even a bit of detail about what you built there. To be able to interface with the system that as a reasonable library, something like that would be super useful for a lot of people. Example apps like this so that people can follow down the tracks that you've created here. But I think from a value proposition to the end user, the ability to share directly to the decentralized system from the app is key. And then the ability to either index and index and read other views that people have created and pull those down into your you've created this kind of a really nice, clean, generic viewer of this data, too, on the front end.
01:33:19.398 - 01:34:12.410, Speaker A: And be able to reuse that by be able to pull other people's stuff from the network as well would be pretty rad. So if you use something like IPLD to be able to link a bunch of these different so if you had a root CID that you actually added other people's visualizations to and were able to link from there, I think that would be pretty cool because you could see the set of different visualizations that other people had created. So a bunch of opportunity here, but from the front end perspective, really nice and clean UI and excited to see some more. Did you have anything, john, you're muted. There we go. Yeah, sorry about that. I think if I had three more days, I could have accomplished the automation with gRPC.
01:34:12.410 - 01:35:01.210, Speaker A: I had gone down the rabbit hole with it, had never experienced it before, and I was there, but I wanted to concentrate on making the video and make sure that it was top notch, but that's my next mission. Absolutely. Yeah. The video does a great job, I think, telling a story, a really simple story, and it's very clean. An architecture diagram at this point would be interesting to look at just because you have so many other visuals and you've got that nice front end. So highlighting both for your project and for other projects, how they all stitch together. Nice asset to the presentation.
01:35:01.210 - 01:35:41.350, Speaker A: I want to second that for all the projects. I mean, if it's not too late for folks to add to your demos and videos. One of the unique aspects of this stack is the complexity of its topology. We have different nodes in different places, and they sometimes reside multiple nodes on our local machine. Sometimes there are global networks they're hooking into, and other times there are specific services that they're hooking into as well, like Flea quarter Textile. So overall, giving the judges a view into what the topology of services and nodes are, I think for all these projects is something I would highly recommend. Give one slide in every deck that has that architecture overview will be fantastic.
01:35:41.350 - 01:36:08.238, Speaker A: Awesome. Thank you, guys. Appreciate it. All right, that is it. Unless there are any final comments from judges, judges Dietrich and Michelle, whatever role you want to be in, we appreciate you contributing to this session. I know I could not have carried it on my own. This is awesome.
01:36:08.238 - 01:36:39.466, Speaker A: Thanks. Everybody. Yeah, we can wrap there's a little bit more than 24 hours to make some last minute edits, get things wrapped up. So good luck to everybody. I'll be in the slack, so ping me if you want me to review your video or check some edits and make sure it's four minutes long. It might seem impossible, but try to trim it down. Try to express your concept in simple terms.
01:36:39.466 - 01:37:03.066, Speaker A: It doesn't have to be this very detailed explanation. It's often better if you boil it down to its core concepts rather than trying to have this really long explanation of what your product is. So it's going to seem hard, but you can do it. I believe in everybody. You know, you've come this far. You've been building for a month. So one more day of editing and trimming.
01:37:03.066 - 01:37:17.810, Speaker A: I'm confident in everybody's abilities to do this. So good luck. We'll see you tomorrow, or at least virtually in the slack sometime. Around to mission? Maybe. See everybody. Bye.
