00:00:00.250 - 00:00:00.750, Speaker A: You.
00:00:00.900 - 00:00:44.246, Speaker B: All right. So welcome to what's going to be the last lecture on mechanism design of the course. Next week, we're going to start studying games that are more appear in the wild and talking about their equilibrium and when they are close to optimal. For this last week of mechanism design, I want to study problems where there are constraints on payments. So we're going to be moving beyond the ousilinear utility model that we've been studying thus far. What do I mean by constraints on payments? Well, one type of constraint is when players have budget constraints, a maximum amount that they can pay. Another type of constraint is there's simply no money at all for applications where it's illegal or otherwise inappropriate.
00:00:44.246 - 00:01:27.106, Speaker B: And so this type of mechanism design is quite a bit harder in some sense. There's not as much you can do. But the other hand, some of the greatest hits of mechanism design theory do come from these kinds of problems, as you'll see. Let me just remind you about the quasilinear assumption we've been making thus far. We've been assuming that every player strives to maximize the difference between its value for whatever outcome is chosen. I'm using the multiprameter notation here. So little omega is just some possible outcome from capital omega.
00:01:27.106 - 00:02:49.522, Speaker B: So it strives to maximize its value valuation for the outcome chosen minus whatever it has to pay. So its utility is linear in money. So in particular, at no point have we really imposed constraints on the payments beyond just the baseline constraints that we are thinking of them always being non negative and always being at most the bid of the player. So the first reason that we might want to consider situations where the payments are not quite so unrestricted are budget constraints. So this just means that for a given player I there's a maximum amount its kid could possibly pay. Now, your first reaction to me saying this might be that this is kind of a weird extra constraint. So like, if you think about something like a single item auction, then budget constraints, usually you don't really need to include them in the model.
00:02:49.522 - 00:04:04.970, Speaker B: That's just sort of part of somebody's valuation. Remember when I very for the first time introduced evaluation, I said think of it as a maximum willingness to pay. So for if you're only selling one good, if you can only pay so much feasibly, presumably that's a cap on your valuation on how much you'd be willing to pay. So the budget would constrain the valuation anyways. But there are other applications where this makes tons of sense, in particular situations where you might wind up buying lots and lots of things, hundreds of goods, and maybe you want some overall cap on the total amount of payment that you make for everything that you buy and the application. So economists, auction theorists have thought about budgets a little bit over the decades, but the application that really forced people to start taking budget constraints much more seriously, start trying to develop better models, better analyses of them was our old friend keyword auctions. A few of you may have done this, but if you actually go and enter some bids on a search engine for various keywords, you will be asked for, among other things, certainly the following two parameters.
00:04:04.970 - 00:04:46.626, Speaker B: So first of all, you'll be asked for your value, that is, how much you're willing to pay for each click that you get on your sponsored link. So this might be ballpark, $0.25, something like that. On the other hand, depending on the popularity of the keyboard in question, there might be tons of these search options in a given day, thousands or even millions. So your ad might get shown, your sponsor link might get shown a lot of times, and if it gets clicked on a lot, that's $0.25 times a very large number. So you do want as many clicks as possible, but you also want some control over your maximum expenditures.
00:04:46.626 - 00:06:07.540, Speaker B: This is the way in which most people reason about these kinds of decisions about their preferences over buying a large number of, in this case especially identical goods. So by popular demand, the search engines are happy to have this parameter and the advertisers are generally happy to have this parameter. You're asked for a daily budget, so maybe you're willing to pay twenty five cents per click, up to maybe a maximum of $100 in a day, up to 400 clicks or whatever it is that you're paying per click divided by $100. So some applications you don't really need them, but some you really do. So the simplest way to incorporate budgets into our vanilla quasilinear model is the following. And this is somewhat extreme, but it's still a useful guide. So if your payment is at most your budget, then like before, you'll have quasilinear utility, your value for the outcome minus what you pay.
00:06:07.540 - 00:07:11.618, Speaker B: So I'm going to use the notation capital bi for I's budget and it's just not okay to go over budget, let's say. So your utility is minus infinity if you're asked to pay more than your budget, it's easy to think of smooth versions of these where you just pay some penalty depending on the extent to which you go over your budget. People have thought about those models, but we're going to stick with a simple one for lecture today, okay? All right. And again, the way I'd like you to think about this, the new feature or the new sort of aspect of this mechanism design is a new set of constraints. In mechanism design, we've had constraints all along. We've had our incentive compatibility constraints. That's what gives mechanism design its flavor.
00:07:11.618 - 00:07:56.520, Speaker B: That often compiles down to some kind of monotonicity condition. On the allocation rule, we've had allocation constraints, simple things like you can't allocate a good to more than one different person. Those are the two types of constraints we've had so far. Now there's a third, okay? The payments can only be a certain amount, right? So limiting the power of the designer also limits what you can do. And mechanism design with constraints on payments is generally harder than in the models we've seen so far. There's impossibility results, things you can't do that previously we could with money, okay, without budgets. So let me develop your intuition for this.
00:07:56.520 - 00:08:36.322, Speaker B: So I guess we've seen one example of this already. So we talked about how surplus was special. So we had this VCG mechanism which maximizes surplus, even X post. So that is, you do as well with respect to your performance measure, with respect to surplus, as if all of the information was known to you in advance. And so what was really special about surplus was two things. Basically, we didn't have to worry about payments except in as much to get the DSIC property. They weren't in the objective function.
00:08:36.322 - 00:09:03.850, Speaker B: All we wanted to do was maximize surplus. We didn't care about revenue and they weren't in the constraints. So when we lifted the payments to be into the objective function, we had the week on revenue maximization. And as we saw, that required some modeling and technical innovations beyond surplus maximization. We're going to continue to think about surplus roughly this week. But now payments, instead of being in the objective, are in the constraints. And again, that makes our lives more complicated.
00:09:03.850 - 00:09:52.998, Speaker B: For example, we no longer have the VCG mechanism or even the Vic re option in our toolbox. So we can't maximize surplus in the X post sense that we could with the VCG mechanism. So we're not going to get surplus as high as if we knew everybody's valuations upfront through telepathy. This is going to be true even in a single item auction, if you think about it for a little bit. So imagine we're just selling off one thing to say, ten potential bidders. And imagine bidders do have budgets. And let's even imagine that we do have telepathy for the budgets.
00:09:52.998 - 00:11:00.446, Speaker B: We know what they are. Let's say everybody has a unit budget. I argue that single item auctions aren't the best motivation for budgets, but I'm going to use it anyways just to prove a point in this part of the lecture, okay? The point I'm trying to make holds very generally, but the valuations are private as usual. So maximizing surplus in the X post sense that we got spoiled with through the vicary auction and then the VCG mechanism extension for a single item auction, that just means you always successfully award the good to the highest to the bidder with the highest valuation, okay? So everybody has a unit budget. Their valuations can be all over the map. We have no idea. And we have to identify who the highest valuation person is, okay? And at this point, we basically hopefully already see the impossibility, right? So first of all.
00:11:00.446 - 00:11:24.080, Speaker B: What if we ran the Victory auction? We know what the winner pays in the Victory Auction, as stated, pays the second highest bid, second highest valuation. No reason to expect that to be a most one. Could be anything. Okay, so maybe there's some other auction that will get us full surplus, but that does respect budgets. What do you think? We've had exercises to sort of talk about this point.
00:11:26.450 - 00:11:27.440, Speaker A: Why not?
00:11:30.450 - 00:12:28.446, Speaker B: That's right. So one of the main conceptual points of Myerson's memo was that once you fix the allocation rule, for example, surplus maximization, you have no remaining free parameters. The payments are determined. So we lose the vicary auction, and therefore we lose the ability to maximize surplus even in a single item auction. So the point of this example is that we got to do something different. Okay, so then the question, of course, is what should we do? So that's the subject of this lecture, what should we do? And so to handle budgets, I'm only going to tell you basically one auction format, but it's a very nice one. It's called the clinching.
00:12:28.446 - 00:13:21.438, Speaker B: Auction the reason for the name Clinching Auction will be clear once we describe it. So the original version of the Clinching Auction, due to Azabel and the original version, I'll ask you to go through. In the third problem set, the original Clinching Auction actually was not intended to deal with budgets. It was intended to be an ascending implementation of the VCG mechanism for a special problem for so called multi unit auctions. So it was then adapted to the case of budgets. And that's what I'll talk about today by Dobzinski at all about five years ago.
00:13:21.624 - 00:13:22.360, Speaker A: Okay.
00:13:26.570 - 00:13:52.670, Speaker B: So that's the history lesson. Let me tell you the model. So in lecture, I'm only going to talk about the case of identical goods. That was the subject of both of these papers. It's been extended, but I'm just going to stay with the basic setting, identical goods. A lot of the times when we've talked about identical goods, I've also made the assumption that each bidder only wants one. That is not the assumption today.
00:13:52.670 - 00:14:38.240, Speaker B: Bidders in general want as many of these goods as they can get their grubby little hands on. Okay, again, think about clicks, where you just really want it. You're happy to have as many as possible. All right, so as far as each bidder I, well, there's going to be a private valuation, and we're just going to have a very simple model, like our single parameter problems, like our keyword auctions, where your valuation is just linear in the amount of stuff that you get. So if I give you K goods, then your value for those K goods is VI times K. So you're happy to have another good? As many as you want to give me. I get VI extra each time you give me another good.
00:14:38.240 - 00:15:42.370, Speaker B: In addition, each I, each bidder I has a budget bi, and I will be assuming that these budgets are public, by which I mean they are known to the mechanism upfront. The budgets, by assumption, cannot be manipulated by the bidders, only the valuations can. Now, it would of course be better to have an auction which did not make this assumption, which elicited the budgets from the bidders and was incentive compatible, incentivized the bidders to give you truthful valuations and truthful reports of the budgets and did the right thing. That problem turns out to be harder. There's some impossibility results saying the things don't work, the clinching auction is not incentive compatible. I'll ask you to work that through in an exercise. Okay, so we're going to make the assumption of public budgets.
00:15:42.370 - 00:16:14.390, Speaker B: The problem remains nontrivial, but tractable, and by solving it, we'll be guided toward interesting auction formats, which is the point of this theory in the first place. Yes. So public budgets. So what I'm going to do is I'm going to first describe an auction which is not the clinching auction, which is more naive, but very natural, and we'll look at how it fails, and then a revision of that initial attempt will be the clinching auction. So we're going to do it in two steps.
00:16:14.550 - 00:16:17.950, Speaker A: Question do they also have a bid?
00:16:20.210 - 00:16:48.070, Speaker B: I'm sorry? So as usual, the bid will be the alleged valuation. Yeah, but they do not have a second report for the budget. That's the key thing. So there's two parameters associated with the agent. One we don't know. So one we do know, so we don't have to ask them, one we don't know, so we have no choice but to ask them. Yes, it's going to be dominant strategy, so it will not be relevant.
00:16:48.070 - 00:17:38.502, Speaker B: Okay. So like I said. So first I'm going to give you something which is not the clinching auction, but is more naive. And so the initial idea is basically to use a market clearing price to allocate the goods. Okay, one thing, just to reiterate with the public budget assumption, remember that our non example with the Vickery auction, the budgets were public there as well. So the difficulty of budgets is present even when budgets are known. Okay, so what do I mean by use a market clearing price? So I'm basically going to describe you the allocation rule and the payment rule at the same time.
00:17:38.502 - 00:18:17.870, Speaker B: I'm going to describe this as a direct revelation mechanism. But as should be clear from the description, it's very naturally implemented as an ascending auction. Last week we talked about some of the benefits of ascending auctions over direct revelation mechanisms. And indeed, Azabal's original motivation was really to have an ascending implementation. He wanted an analog of the English auction when you were selling many goods rather than just one. But for simplicity and lecture, I'm going to describe the direct revelation version. All right, so market clearing price, that means we should somehow equalize supply and demand the supply is evident.
00:18:17.870 - 00:18:41.450, Speaker B: It's here on the board. There's m goods. So let me tell you about the demand, how much people want. Now that's of course, going to be a function of the price. The lower the price, the higher the demands. So to find I's demand at price.
00:18:41.520 - 00:18:42.140, Speaker A: P.
00:18:46.450 - 00:19:02.162, Speaker B: Denoted di of P. Well, there's going to be two cases. Okay, so remember what bidder I is like. It has this simple valuation where every good you give it, it has value v I four.
00:19:02.296 - 00:19:02.980, Speaker A: Okay.
00:19:06.950 - 00:19:38.026, Speaker B: I'm going to write this down. Assuming truthful bids. So I'll go back to the convention of interchangeably talking about bids or valuations, assuming that they're truthful. So first of all, suppose the price is bigger than I's value VI. How many does it want? None. That's right. The reason is because it's going to increment the value part by VI, and it's going to increment the payment part by more than VI.
00:19:38.026 - 00:20:08.520, Speaker B: So that leads to negative utility. All right, good. So how about that is not what I meant to do? How about if the price is less than the per unit value? Well, let me give you a simple case. So what if the budget was plus infinity? What if there was no constraint on how much bidder I could pay? What would be its demand at a price P less than its valuation? How many does it want?
00:20:09.370 - 00:20:10.520, Speaker A: All of them.
00:20:10.970 - 00:20:36.240, Speaker B: There's no diminishing returns here. Every good you give it, it gets VI. So if the price is cheaper than that, give them all to me. So the only thing constraining also, there's two things constraining, I guess, how many goods I could possibly get. The first is just how many goods are available. So I'll cap this at m the number of goods. The other is how much it can pay.
00:20:36.240 - 00:20:57.160, Speaker B: So the amount it can pay, this budget bi, it has to pay that per good. So bi divided by P is the number of items at price P it can afford. Okay, this might not be an integer, so let's also round down.
00:21:00.570 - 00:21:01.320, Speaker A: Okay.
00:21:04.490 - 00:21:12.520, Speaker B: Per good p is per good. So that's the demand of a bidder I at a given price P.
00:21:16.010 - 00:21:17.520, Speaker A: And it.
00:21:20.450 - 00:21:55.302, Speaker B: So the higher the price, the less the demand, as you'd expect. What's the demand at price zero? You'd happily take them all, and the demand at, let's say, an infinite price or a sufficiently high price is going to be zero. Actually, just so you have good intuition for these demand functions, let's think about this a little bit more carefully exactly how it decreases.
00:21:55.446 - 00:21:56.140, Speaker A: Okay?
00:21:56.590 - 00:22:34.260, Speaker B: So I'm raising the price P slowly on this bidder, okay? And its demand is only going to drop. There's actually two ways it could drop. So the first way it could drop is if the price hits the bidder's value. Let's say the demand is currently ten at the current price, and all of a sudden, the price hits the value, the demand decreases by what? From ten to what? To zero. Okay, it suddenly evaporates. Okay, so it was some number, some positive energy, and now it's zero. What about the other kind of decrease? The other kind of decrease is where the price is still well below the value.
00:22:34.260 - 00:23:20.258, Speaker B: But obviously with a fixed budget, the amount you can afford is dropping as the price goes up. So to suppose the demand drops for that reason at a given price, but when it drops from ten to something, what's going to drop to not? Okay, there'll be some price at which you can afford strictly exactly one less good than you could before. Okay, so as we increase P, the demand drops either by a single unit or it suddenly goes to zero. I guess I didn't quite specify the demand function. When the price equals VI, I didn't say what it was. And that's because both in the auction itself and in our analysis, we get to be flexible. When VI equals P, the bidder could care less how many items you give it at that price.
00:23:20.258 - 00:24:01.330, Speaker B: It's totally indifferent. So we'll define when P equals VI di of P to be whatever is convenient for what's under discussion. Okay, again, as usual, we can't violate bidders budgets. All right? So now what does it mean to choose the market clearing price? It just means we're going to sell items at the price which makes supply and demand the same. We know what supply is, it's just M. We know what the demands are. They're just this di of P's.
00:24:01.330 - 00:24:51.970, Speaker B: So let P Star be the smallest price P, so that supply equals total demand. So if you want to be nitpicky, there need not be any prices where this holds with equality. And that's because, as we just observed, demands can suddenly drop by like ten. So then we have to look at the point where everywhere to the left of that point, all smaller prices, the demand strictly bigger than M and all prices a little bit bigger, the demand strictly less than M, and there will be some such point.
00:24:52.120 - 00:24:52.820, Speaker A: Okay.
00:24:54.630 - 00:25:47.330, Speaker B: And then what do we do? Just for all I, we give di of P Star goods to I at the market clearing price P star of the mechanism. And I've defined for you both the allocation rule and the payment rule questions. Maybe this will become later.
00:25:47.400 - 00:25:48.500, Speaker A: But why?
00:25:59.690 - 00:27:36.502, Speaker B: Well, I mean, we need to prove instead of compatibility, right? So guided by all the way back to the vicary auction or the more general VCG mechanism, budgets are going to be respected by this mechanism. Where'd it go? Huh? User error. Okay, so recall the definition of demand. I guess this is where you see. Right, so if we allocate to a bidder I di of P goods at a price of P, then by the definition of di of P, the amount that it pays is at most B sub i. We defined D sub I of P to be the largest number of goods that the bidder could afford at that price. P actually the minimum of that or zero if the price is bigger than the value.
00:27:36.636 - 00:27:37.366, Speaker A: Okay?
00:27:37.548 - 00:28:47.440, Speaker B: So just by definition of demand, budgets are going to be respected. The bad news is anyone guess. The bad news? Yeah, not DSIC. That's the bad news. I'll give you an example. Essentially, the problem here is something that plagued us on Wednesday with simultaneous ascending auctions as well, which was a form of demand reduction. So, in effect, a bidder preferring to get more goods sorry asshoing, getting more goods at a high price, opting instead to get fewer goods at a lower price, and bidding in a nontruthful way to make that happen.
00:28:47.440 - 00:29:28.780, Speaker B: So here's an example, and hopefully this will also kind of make sure that we all understand how the clinching auction works. So just two goods and two bidders, let's say. And again, remember, budgets are known. So let's say we're well aware that the first bidder can afford an arbitrarily large amount of payment, but we don't know its value. Let's say its private value turns out to be six. The second bidder its value, and then its budget are both five. Okay, this is an example.
00:29:28.780 - 00:30:25.446, Speaker B: It so what's the market clearing price? Assume for the moment that bidders bid truthfully. So bids equal values, what market clearing price would we then compute? So remember, the market clearing price is the smallest price at which supply equals demand, and prices don't have to be integers. So what about like 5.5? What's the demand at 5.5 total? That's also only two. So you only need a price of five plus epsilon for the second bidder to have demand zero, at which point the first bidder has demand two, which clears the market. So the smallest of all prices that equalizes supply and demand would be five plus epsilon for arbitrarily small epsilon.
00:30:25.446 - 00:31:28.800, Speaker B: So we'll call it five among friends. So suppose number two bids five, number one bids six. So we agree that the price will be five. So who gets the goods? So bidder one gets both. So what's the utility of bidder one with this allocation payment combo? That's right. So you get a utility of one for each, good for a total of two. So at the risk of plunging my foot into a bucket of water, let me work out the rest on this part of the part of the board.
00:31:28.800 - 00:32:01.882, Speaker B: There's a bucket of water right there. I don't know why, because it makes sense given all the rain we've been having. Okay, so demand reduction. Remember, the idea is it can be better in a poorly designed auction or in a manipulable auction to get fewer goods at a low price as opposed to more goods at a high price. So imagine that it's a bidder one. It can't misreport its demand per se. All it can do is say it has a different value, a lower value.
00:32:01.882 - 00:32:52.410, Speaker B: So suppose number one bids three instead of six. Excuse me. All right, so let's think this through. So let's think about bidder number two for a second. So when the price is zero, or very close to zero, what is bidder two's demand? It's two. It's happy to have both. Okay, what's the price at which bidder two's demand drops below two? 2.5.
00:32:52.410 - 00:33:01.120, Speaker B: As soon as the price exceeds 2.5, it still wants goods, as many as you'd give it, but can only afford one of them.
00:33:01.810 - 00:33:02.560, Speaker A: Okay.
00:33:06.190 - 00:33:23.806, Speaker B: So the price 2.5. We have a demand of two from bidder number one and a demand of one from bidder number two. So we're not at a market clearing price yet, but something interesting has happened. Now, once we get to the price of three, remember bidder number one falsely bid three.
00:33:23.988 - 00:33:24.622, Speaker A: Okay?
00:33:24.756 - 00:33:28.274, Speaker B: So that's the point at which we're on the verge of kicking bidder number one out.
00:33:28.392 - 00:33:29.060, Speaker A: Okay?
00:33:29.590 - 00:33:59.658, Speaker B: And so that's the point at which the auction is going to stop. So again, remember, when P equals VI, I'm going to define the demand according to my convenience. So I'm going to set the demand equal to one for bidder number one. When the price equals its false bid three, the demand from bidder number two is still one. So that's where the market clears at the price of three. Now, the bad news for bidder number one is instead of getting two goods like before, now it only gets one. The good news is the price for that good is no longer five.
00:33:59.658 - 00:34:09.180, Speaker B: Now it's three. So what's the utility of bidder number one with this false bid of three? Three. Six minus three, it's value minus the price.
00:34:12.350 - 00:34:13.100, Speaker A: You.
00:34:27.590 - 00:34:37.250, Speaker B: So that's a concrete demonstration that with the market clearing price based auction, it's not DSIC.
00:34:37.630 - 00:34:47.020, Speaker A: It has like.
00:35:07.670 - 00:35:40.494, Speaker B: So it's been a while since we talked, since we put on the mechanism on the board, any auctions that were not incentive compatible, we sort of had a rich enough toolbox. This had stopped happening to us. So what happened here? Well, we went back to the approach of designing the allocation and payment rules together, and evidently we did it incorrectly. Okay, notice this is totally a single parameter problem. Budgets are known. There's just a private VI for each bidder. So this allocation rule I'll let you check this.
00:35:40.494 - 00:36:02.722, Speaker B: The allocation rule is monotone. So by Myerson's Lemma, there are payments that would make it a DSIC mechanism. Evidently we got them wrong. So we could go back and derive the DSIC payments that Myerson's Lemma would give you, but I'm not going to do that. Turns out a different allocation rule, a smarter allocation rule is going to work better.
00:36:02.856 - 00:36:03.154, Speaker A: Okay?
00:36:03.192 - 00:37:02.760, Speaker B: So this is going to be the clinching auction. So, again, I'll describe this in its direct revelation form, but I encourage you how to think about how this might be implemented. In ascending form. Again, that was the original motivation for this clinching auction technology. So we're again going to have a price which inside our algorithm, we think of ascending at some steady rates rather than allocating all the goods in one shot. At the end, we're going to allocate them piecemeal at different prices. So I'm going to keep track of this current supply, S, which is of course initialized to M.
00:37:02.760 - 00:38:24.114, Speaker B: While goods remain, while there's still demand, I'm going to raise the price, going to raise the price until demand falls. And by demand falling, what I mean is I wait until there's some bidder I so that if I let the other N minus one bidders take what they want at the current price, there'd still be some leftover for bidder I. Okay, so maybe there's ten goods left, there's 20 bidders out there in the world. And if I just let these 19 bidders take what they want, the price is actually high enough that some of these ten goods still remain on the shelf. So S minus sum over the other bidders of their demand at the current price. Remember, as we increase P, these are dropping. If this is staying fixed, this is how many goods are left.
00:38:24.114 - 00:39:01.526, Speaker B: This is what people want at this price. This goes down as the price goes up. So once this is positive, let's call this number K. I guess I should also remind you what these demands are. Is it up there? Oh good, it's still up there. Okay, so demands are defined in the same way. Once this happens, once there are these K goods left over, even if the other one N minus one bidders take what they want, I let bidder.
00:39:01.526 - 00:39:06.940, Speaker B: I have these K goods at this current price of.
00:39:12.550 - 00:39:13.300, Speaker A: It.
00:39:21.430 - 00:40:11.602, Speaker B: So these are goods that these are called clinched. This is the name of the clinching auction. Okay, so these goods that you get, that I gets at this point, these are its goods forevermore. And the prices that it pays for them are fixed right now. This price will go up later on in the algorithm, doesn't matter. For these particular K goods that I gets right now, p is what it has to pay for them. And maybe the main thing that the clinching auction does differently than the market clearing price auction is that it go ahead and keeps track of the reduction in budget with a couple of things.
00:40:11.602 - 00:40:55.360, Speaker B: So first of all, it promises goods at relatively low prices early on in the auction. And then second of all, to make sure that all the prices come out correct at the end, it keeps track of bidders budgets and reduces them as they clinch goods. So it decreases the supply by the amount that it should, namely K. To decrease S by K and bidder I's budget by the amount that it's now committed, namely the K goods that it's clinched times the price that it's. Going to have to pay for them.
00:40:56.450 - 00:40:57.200, Speaker A: Okay.
00:40:59.990 - 00:41:45.910, Speaker B: So unlike the first auction, based on the market clearing price, a bidder will not necessarily pay the same price for all of the goods that it acquires. The price it pays for the goods will get higher and higher as the auction proceeds. Okay, so I'll go through an example. I'll go through the same example, in fact. But any questions about the auction before I hide the pseudocode for a minute? What if I can't afford the goods? You can afford the goods by the definition of DJ. Other questions? That's a good question. So it turns out Arbitrarily works fine.
00:41:45.910 - 00:42:12.586, Speaker B: Yeah. So you can even do them simultaneously. So arbitrarily. Yeah. So just to be clear, with respect to the demands, remember the demand of a bidder at a given price. Part of that definition is how many you can afford at the given price. The price is increasing, as always, so that makes the demands drop.
00:42:12.586 - 00:42:29.582, Speaker B: But remember, the clinching auction is keeping track of the past expenditures of a bidder. I so you're really tracking residual budgets, not original budgets. And so, of course, when you compute demands, it's with respect to residual budgets, not with respect to original budgets.
00:42:29.726 - 00:42:30.420, Speaker A: Okay.
00:42:36.070 - 00:42:44.920, Speaker B: Yes, as I said, you break ties. Arbitrarily, let's revisit the example.
00:43:01.810 - 00:43:02.560, Speaker A: It.
00:43:11.010 - 00:43:13.214, Speaker B: So let me remind you of the example. Oh, it's up there.
00:43:13.252 - 00:43:13.840, Speaker A: Perfect.
00:43:14.610 - 00:43:55.046, Speaker B: Two goods. First bidder has infinite budget value six. That was the one who had an incentive to reduce its value previously to get one good at price three instead of two goods at price five. Each bidder two has budget equal value equal five. So what happens with truthful bids now? So initially, what are the demands initially, when the price is zero, they're both two.
00:43:55.168 - 00:43:55.840, Speaker A: Right.
00:43:56.210 - 00:44:18.742, Speaker B: So from each bidder's perspective, the other one doesn't leave any on the shelf. So we need to look at the first price point at which somebody's demand goes down. We already talked about what that was. That was a price 2.5. Once it hits 2.5, bidder number two can now only afford one. So again, bidder two's demand drops to one at the price of 2.5,
00:44:18.742 - 00:45:17.926, Speaker B: leaving one on the shelf. So this condition is triggered with bidder number one at the price of 2.5K is equal to two minus one. There's one good left on the shelf. When everybody else goes, we have to wait until the price is so high that one of the bidders demand drops to zero. So that happens once it's equal to five, the valuation of the second bidder. At that point, the second bidder is kicked out.
00:45:17.926 - 00:45:20.422, Speaker B: And that's the price at which bidder one gets its second.
00:45:20.476 - 00:45:27.910, Speaker A: Goodbye.
00:45:28.830 - 00:46:36.414, Speaker B: So the prices are less than with truthful bids. In the non DSIC market clearing mechanism with truthful bids, bidder one paid five for both. That's why it had an incentive to do demand reduction, you might hope. And we'll prove a more general statement you might hope that getting the prices right in this sense would take away that incentive for demand reduction. So theorem indeed, the clinching option is DSIC. Now, one way we could prove this, again, this is a single parameter problem. So in some way, the way that I've trained you to prove this is to write down the allocation rule, formally compute the Myerson payments, and then check that we got the payments right.
00:46:36.414 - 00:46:59.080, Speaker B: Check that the payments here are actually the Myerson Lemma payments. You could do that. It would work. Turns out in this case, I think it's easier to just verify directly. So that's what I'm going to do. Okay, so proof. So fix some bidder, fix bids by the others.
00:46:59.080 - 00:47:41.106, Speaker B: So sort of a trivial observation, but one that kind of helps you orient you for this proof, right? So don't forget that your value per unit of good is always the same. Whether it's the 7th good that you get, or the 20th good you get, it's always VI. Okay, so at any point in the auction, if you pay less than VI, you're happy. If you pay more than VI, you regret it. So the price is going up at this steady rate. So there's this prefix of the auction from time zero up to VI, where any goods are just you're happy to have. And then in the suffix of the trajectory after the price, it's VI.
00:47:41.106 - 00:47:44.280, Speaker B: You don't want anything because the price is going to be bigger than your value.
00:47:44.730 - 00:47:45.480, Speaker A: Okay.
00:47:47.610 - 00:49:10.478, Speaker B: So note goods clinched when the price is less than your value, respectively. Bigger than your value contributes positive, respectively. Negative utility to I. Okay, so basically you want to be present when the price is less than your value and you want to be absent when it's higher. The other important observation is that what's the role of your bid in the clinching auction? So let's remember how we define the demand of a bidder. Okay? So if the current price is less than a bidder's bid, then we just define your demand as how many goods you could afford at the current price, since according to your bid, you want as many as possible. And as soon as the price exceeds your bid, we effectively kick you out of the auction.
00:49:10.478 - 00:49:15.006, Speaker B: Your demand is zero forever more as soon as the price exceeds your bid.
00:49:15.198 - 00:49:15.940, Speaker A: Okay.
00:49:23.050 - 00:49:52.750, Speaker B: So you're kicked out exactly when the price reaches your bid. Kicked out in the sense that your demand is zero forevermore. So I'll just go through one of the cases since they are symmetric. So let's just compare two situations. Situation one you bid truthfully. You bid your true value VI. Situation two you bid something less than VI.
00:49:52.750 - 00:50:19.650, Speaker B: Well, if you bid less than VI, how do the initial iterations of the auction change? You bid less than VI. Well, as long as the price so remember, we're thinking about the case where your bid is less than your value. So if the current price in the auction is less than your bid, then these two worlds are identical.
00:50:19.810 - 00:50:20.182, Speaker A: Okay?
00:50:20.236 - 00:50:51.550, Speaker B: So remember, your demand. It's just your budget over the price. And again, we know your budget that's public. Or we zero it out at this threshold. Okay, so before we hit your bid, your demand is independent of what you bid, okay? It's just your budget, which is known, divided by the current price. So if you've like, formally by induction, but whatever, run the auction in parallel with the true bid, VI, and the smaller bid, Bi, they're exactly the same until the price hits the smaller value. The bid.
00:50:51.550 - 00:51:52.680, Speaker B: Okay, the auction is identical in execution up to that point. And then what happens? Why is it different? Well, suddenly you're kicked out with the smaller bid. Okay, so there is no change in how the auction proceeds until the price reaches your low bid. When I say the algorithm execution identical again, I mean on the one hand with your true bid and on the other hand with the smaller bid, Bi. So the prefix up to the price, bi, is exactly the same. The difference with the false bid is you're missing out on whatever happened in the clinching auction when the price was between Bi and VI. You don't know what happened, but whatever happened could only have been good for you, right? The only thing that could have happened while you're participating in the auction in a price less than the value.
00:51:52.680 - 00:53:08.506, Speaker B: The only thing that happens when you bid lower is you lose some goods on which you would have otherwise earned positive utility. Obviously not a good idea. The case where you bid higher is similar again, run the auction in parallel with your true bid, VI, and this overbid Bi. Nothing changes. As long as the price is below VI, the algorithm executes identically. The difference is you stay in the auction longer with this high bid of Bi. What can happen when the price is bigger than VI and less than your bid? The only thing that could happen is you get some goods at a price higher than your value, giving you negative utility.
00:53:08.506 - 00:53:44.362, Speaker B: You don't want that. So that is why the clinching auction is DSIC. Cool auction. Well, I think it's a cool auction if you think about it. I haven't really proved to you in a very meaningful sense that it's a cool auction. What'd? I prove it was DSIC. Anyone want to give me another DSIC auction that respects budgets? Give the goods for free.
00:53:44.362 - 00:54:26.790, Speaker B: Price zero budgets are respected. DSIC. Okay, I have not actually given you any formal sense in which the clinching auction is better than giving goods away randomly. I'll tell you a secret. People are still to this day kind of struggling with the right way to do that. There's some valiant attempts, there's some nice theory here. There are senses in which the clinching auction has been proved to, in various worst case senses, have good surplus.
00:54:26.790 - 00:55:19.314, Speaker B: Now? What do I mean? Good surplus? Good compared to what? I certainly don't mean good compared to the maximum possible surplus compared to, like, the VCG surplus. Because we know even in a single item auction, when all of the budgets are known and equal, any DSIC mechanism can have far worse surplus than a VCG mechanism that didn't have to respect the budgets. So I don't mean compared to the benchmark of the VCG mechanism. That benchmark is just too strong to make any comparisons. So that means you have to go back to the drawing board and think about benchmarks that are weaker but also just smarter, that take into account that any solution has to respect budgets. So there's a few ways of doing that. I'm not going to cover any in the lecture.
00:55:19.314 - 00:55:47.540, Speaker B: They're all just sort of would take a little bit too long. So the original paper that proposed this clinching auction for budgets, Dobzinski, Levy and Nissan, they focused on a property of Pareto optimality. So they observed that the clinching auction outputs a Pareto optimal allocation. What that means is if you consider any other allocation in which some player is better off, i. E. Has higher utility, there's a different player that's worse off.
00:55:47.990 - 00:55:48.740, Speaker A: Okay?
00:55:49.430 - 00:56:39.618, Speaker B: So this is a relatively kind of weak notion of sort of efficiency, economic efficiency. There are other allocations which are maybe incomparable, where some players are better, but other players are worse. And what was nice about their contributions is they derived this sort of uniqueness result, saying that if you care about Pareto optimality, essentially the clinching auction is what you have to do if you want to respect budgets. The drawback there is that Pareto optimality know it need not be a necessary or sufficient condition for a mechanism to be optimal in various other senses. So a second approach is the same one we took for revenue. Remember, even when we put payments in the objective function, we lost this ability to have a single mechanism, which is always the best one. And the first thing we did is we introduced distributions that did average case analysis, and then what you might like to say is a simple versus optimal result.
00:56:39.618 - 00:57:09.626, Speaker B: There's a nice mechanism like, say, the clinching option, which is almost as good as a possibly very complicated average case optimal mechanism. So there's been work on that very recently. It just appeared maybe four months ago even. That only handles the case where everyone has identical budgets. But that's good progress from just a few months ago. And then a third approach people have looked at is they've tried to sort of redefine the welfare objective function in ways that it's a smaller number that takes into account budgets. There's some progress here, too, but it's fairly ad hoc at the moment.
00:57:09.626 - 00:57:58.998, Speaker B: But you'll get some more experience with that in the exercises. So the takeaway is the clinching auction seems like a great idea, seems like an awesome auction in some sense. And we're struggling with what that means. And this is actually not uncommon in research and research, it's often that you find the solution before you know exactly what's the problem that it's solving. And this is one of those cases. I got one more really nice mechanism for you today's. That's all I'm going to have to say about budgets for the rest of today and for Wednesday's lecture.
00:57:58.998 - 00:58:55.358, Speaker B: I want to make the constraints on payments still more stringent if you like. I'm going to set the budgets to all be zero. So I want to talk a little bit about mechanism design without money. This, of course is I tie your hands even tighter as the designer so you can do even less. But again, there are some really quite beautiful and also practically useful mechanisms in this space. All right, so I've probably conditioned you to be thinking so much about auctions. You're probably wondering whether it's an oxymoron to talk about mechanism design without money.
00:58:55.358 - 00:59:37.210, Speaker B: But really mechanism design is just about what do you do when preferences are not fully known or priori. It's not really about and then different flavors of mechanism design give the designer different abilities to interact, to implement things. Some situations money is illegal or otherwise morally repugnant. So organ donation, kidney exchange, we'll talk about some on Wednesday. There are markets for kidney exchange. They do not use money, at least not in the US. Last I checked, Iran was the unique country that actually had a legal monetized market for kidney exchange.
00:59:37.210 - 01:00:51.780, Speaker B: Not saying money never has anything to do with voting, but supposed to be illegal. The way kids get assigned to elementary schools in lots of different cities around the world. It's done with mechanism design with no money, the way recent graduates from Med schools are assigned to their residencies, same thing. So there's lots of applications. We'll talk more about them on Wednesday. Main thing I want to do today is just tell you a really nice algorithm, really nice mechanism called the house allocation problem. Each begins with an initial endowment of one house.
01:00:57.290 - 01:00:58.040, Speaker A: It.
01:00:58.730 - 01:01:42.270, Speaker B: You may covet others houses, you may want other people's houses more than your own. In fact, you have a total ordering over the houses that's your preferences suppose you wanted to take as input these end houses that the agents currently have and if you like, rearrange them. But again, with each agent having exactly one house, you want to do that in the best possible way to make people as happy as possible. What's a sensible approach.
01:01:46.530 - 01:01:47.560, Speaker A: You it.
01:02:09.950 - 01:02:20.010, Speaker B: About the top trading cycle algorithm, TTCA.
01:02:23.570 - 01:02:23.886, Speaker A: Which.
01:02:23.908 - 01:03:17.946, Speaker B: Is going to propose a particular reallocation, a reassignment of the end houses back to the end agents, which in some sense is the best allocation you might want. So we're going to construct the allocation iteratively we're going to be deleting agents in bunches. After we've fixed their reallocations, the agents that remain will always be in possession of their original initial household. Conceptually, for the agents that remain, you imagine asking them, you say, hey, of the houses that still remain, that is, the houses that belong to the remaining agents. Point to your favorite. Okay, so remember, you started with this total ordering over houses. Some of them have disappeared.
01:03:17.946 - 01:04:01.600, Speaker B: They've gone to other people. Bummer of those that are left, tell me your favorite. It so you can think of this as defining a directed graph. Where the out degree everywhere is equal to 100 agents. Each one chooses one outgoing arc. Maybe agent two is coveting agent one's house. But agent one says, well, I like my house, thank you very much.
01:04:01.600 - 01:04:31.420, Speaker B: And then maybe you have something interesting where three really likes four's house who really likes five's house who really likes three's household. In any case, when you have a directed graph whose out degree everywhere is one, you're going to have at least one cycle. Start at a node. Just follow these outgoing arcs you're going to repeat. There may be more than one, but there's going to be one for sure.
01:04:37.310 - 01:04:37.866, Speaker A: It.
01:04:37.968 - 01:04:44.094, Speaker B: This directed graph has two cycles, the self loop, that counts as a cycle. And then there's the three, four, five.
01:04:44.132 - 01:05:01.490, Speaker A: Cycles, at least one cycle.
01:05:01.910 - 01:05:38.590, Speaker B: The algorithm then picks one. If there are many cycles, it can pick anyone that it wants. And when it picks a cycle, it does the reallocation suggested by the cycle. For example, in the three, four, five cycle, you just go ahead and give four's house to three. You give five's house to four, gives three's house to five. If you pick the self loop as a cycle, then one keeps its own house. After you've done the reallocation, you delete those nodes from the graph, they're gone.
01:05:38.590 - 01:06:16.310, Speaker B: Okay, and they've gotten their final houses. Whatever they got from the cycle, that's what they get. At the end of the day, this terminates with a new allocation or with an allocation. Each agent gets exactly one household.
01:06:21.810 - 01:06:26.400, Speaker A: Now. Cool.
01:06:27.730 - 01:07:05.298, Speaker B: So it seems like a nice algorithm. Hopefully. So is it any good? Does it have any reasonable properties? Let's just to build up your intuition, let's start with a sanity check. I claim at the very least you're not going to be worse off than where you started. Okay, so every agent, maybe it keeps its same house, maybe it gets some new house. But in any case, the house it winds up with, it likes at least as much as the one that it started with. Anyone suggest a proof of why that's true? Yeah.
01:07:05.298 - 01:07:21.250, Speaker B: Okay, good. So succinctly I'd put it, you always have the option of pointing to your own house as long as you're in this graph.
01:07:21.410 - 01:07:22.166, Speaker A: Okay?
01:07:22.348 - 01:07:51.310, Speaker B: So remember, if you don't participate in a cycle, you keep your house for the next iteration. Okay, so every iteration you're in the graph, you have your house, you can point to it if you want. If you point to something else, it's because you like it even better. Every agent is processed at some point in this algorithm. When it's processed, it's given the house that it's pointing to, which at that moment is going to be either its own house or something it likes better. Okay, so that's good. At least you can't do harm with this algorithm.
01:07:51.310 - 01:08:34.750, Speaker B: Again, before, I may not have time to talk about welfare properties, but let me just talk about incentive properties. If you now imagine that these total orderings are unknown private to the agents, there's an obvious direct revelation mechanism you could run. Tell me you're ordering, I'll run this algorithm and then I'll output that allocation. And of course there's no money. And the claim is that direct revelation mechanism is dominant strategy incentive compatible.
01:08:36.690 - 01:08:37.440, Speaker A: Okay?
01:08:42.630 - 01:08:57.380, Speaker B: It so if I'm going to reallocate goods using the top trading cycle algorithm, tell me what you really want. It's always a good idea. Could you do a similar thing for the previous problem?
01:08:59.030 - 01:09:03.960, Speaker A: You can ask for the demand at each price.
01:09:06.330 - 01:09:08.818, Speaker B: You just mean as far as how things get reported.
01:09:08.914 - 01:09:11.400, Speaker A: Yeah, you're getting some.
01:09:14.430 - 01:09:45.880, Speaker B: Okay, good question. So good question. So the question is sort of comparing kind of what I ask for in the two different mechanisms we've seen so far. And one thing that's really cool about this housing allocation setup is the space of preferences is very rich, right? So what I don't know about you could take on n factorial different values. So this is not a single parameter setting. There's not a single number or two single numbers that summarize to me how you feel about everything.
01:09:46.250 - 01:09:47.000, Speaker A: Okay?
01:09:47.850 - 01:10:00.138, Speaker B: By contrast, when we were talking about the clinching auction, we assumed that upfront, that I knew your budget and from that and your value, I could conclude your demand at any given price.
01:10:00.304 - 01:10:01.020, Speaker A: Okay.
01:10:04.670 - 01:11:02.870, Speaker B: Okay, so why is this true? So now of course that we don't have money, I mean we can't even speak about Myerson's Lemma. I mean, for multiple reasons. One, this isn't single parameter, there is structure in the problem, but it's a different type of structure. But two, the whole point of Myerson's Lemma was to give us the payments to make it DSIC, we really need the payments to be zero. So we're going to have to check the DSIC condition directly. So fix I and as usual the other reports and suppose with a truthful report by I. So we won the top trading cycle algorithm.
01:11:02.870 - 01:11:36.870, Speaker B: It picks a cycle, does the reallocation deletes, picks another cycle, does the reallocation deletes, et cetera, et cetera, et cetera. So it has some number of iterations, let's say L iterations and it picks a single cycle in each call. The cycle C, one up to CL semicolon and let's say that I lies in the Jth cycle.
01:11:41.530 - 01:11:42.280, Speaker A: Okay?
01:11:43.370 - 01:13:02.380, Speaker B: So we fixed I we think about a truthful report, we run the algorithm, this is what we get. So now let's think about what is I's power with various misreports it might give. And the way we can think about a misreport is that in each iteration of the top trading cycle algorithm, it points to some other house. It points to somehow a worst case house for the designer or best case house for itself. So if we give I the power to point to different houses, in what way can it influence the execution of the top trading cycle algorithm? So let's say I with a truthful bid, is chosen in the 10th iteration. So let's say J equals ten. Does this bidder have the ability to change what cycle gets picked in the first iteration? How would it do that? Could close another cycle by making a worse bid.
01:13:02.380 - 01:13:30.988, Speaker B: Right, okay, good. And so then what would be the case? So it didn't point to itself. It pointed to if it points to something else in the same cycle, it's going to be a worse house.
01:13:31.074 - 01:13:31.564, Speaker A: Right?
01:13:31.682 - 01:14:03.220, Speaker B: It can be a house of like less. So basically. So I's only ability to influence cycle chosen is to point to a house that likes less to close a cycle.
01:14:05.480 - 01:14:06.260, Speaker A: Hmm.
01:14:08.940 - 01:14:27.100, Speaker B: Say it again. Sorry, I didn't hear then its own, you mean? Oh, okay. Less than its own. That's the complaint likes less than its favorite.
01:14:28.800 - 01:14:29.550, Speaker A: Okay.
01:14:32.980 - 01:14:50.852, Speaker B: So this leads I'm going to be a little informal here. This leads to being allocated. So if it closes the cycle and it's chosen right now, the point is it's literally going to get that allocation right now.
01:14:50.986 - 01:14:51.670, Speaker A: Okay.
01:14:53.160 - 01:14:59.850, Speaker B: Leads to being allocated a worse house than before.
01:15:01.980 - 01:15:02.730, Speaker A: Okay.
01:15:05.980 - 01:15:11.070, Speaker B: So details I'll leave for you to check.
01:15:13.520 - 01:15:21.520, Speaker A: Okay. Will it make the same allocation no matter which cycle?
01:15:28.300 - 01:16:15.556, Speaker B: I believe it will, yes. So in fact, the way it's usually described is just you delete all the cycles in the first iteration, but I'm almost positive it's uniquely defined. Okay, so this brings us back to where we were with the clinching auction. Okay, I told you it was DSIC, and you be right to respond. Seems like a cool algorithm, but so what? Another DIC mechanism would be to just output a constant allocation or just always force bidders to have the same house that they started with. So in what sense is this bidder better? Well, here the theory is much more satisfying. So here there's a sense in which the top trading cycle algorithm does the uniquely best thing.
01:16:15.556 - 01:17:08.404, Speaker B: I don't have time to discuss this in detail, but I'll put some details either in the notes and or in the problem sets. So this is the unique allocation in what's called the core. And so basically, what the core means is there's a stronger version of incentive compatibility, where if you imagine some subset of these bidders, so say there's 100 agents overall with this allocation, it's impossible for some subset of ten. Agents to sort of break away from the mechanism, reallocate their ten houses merely amongst themselves, and all be at least as well off as they are in the top trading cycle algorithm. At least all as well off plus one strictly better off. Okay, so you cannot, point wise, do better than you're doing in the top trading cycle algorithm, no matter which subset of agents you're talking about. So claim one is that the top trading cycle algorithm has that property, the allocation that it outputs.
01:17:08.404 - 01:17:29.750, Speaker B: No subset can do better by breaking away. The second claim is that every single other allocation fails to have that property. Every single other allocation is vulnerable to some subset breaking away, doing exchanges only amongst themselves. At least one will be strictly better off, and no one will be worse off compared to this allocation. So more on mechanism design without money on Wednesday. See you then.
