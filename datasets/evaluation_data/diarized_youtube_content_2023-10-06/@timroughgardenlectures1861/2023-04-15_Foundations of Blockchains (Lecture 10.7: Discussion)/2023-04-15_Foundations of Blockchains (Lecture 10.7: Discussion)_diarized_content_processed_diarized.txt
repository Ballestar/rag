00:00:00.250 - 00:00:17.550, Speaker A: All right, so for this final video of lecture ten I just want to sort of take a look back at what we've learned from the analysis of selfish mining these deviations from honest behavior and Nakamoto Consensus and also discuss a bit about what, if anything, all of this has to do with practice.
00:00:18.450 - 00:00:19.854, Speaker B: So first of all right, the main.
00:00:19.892 - 00:00:56.510, Speaker A: Takeaway from this lecture is that, you know, you can introduce a cryptocurrency into your blockchain, you can use it to give nodes rewards for creating blocks. But in Nakamoto Consensus you actually probably despite one's intuition, you're not necessarily incentivizing nodes to honestly follow the longest chain consensus protocol or phrased in the language of game theory. It is not always the case that all of the nodes honestly following the protocol constitutes a Nash equilibrium. We've seen that there are situations where actually one node does have a unilateral incentive to deviate from the all honest outcome.
00:00:57.650 - 00:00:59.834, Speaker B: And we saw three different versions of this argument.
00:00:59.882 - 00:01:47.850, Speaker A: The simplest one is where you have one node with 51% of the hash rate and then there's a quite simple strategy for that node that always orphans all honestly produced blocks, thereby guaranteeing it 100% of the block rewards which is obviously better than honest behavior, which would give it only 51% of the block reward. Then we thought about the case where there was no big node. So we were thinking about nodes with less than 50% of the hash rate. But we're also in that middle analysis assuming that the deviating node was able to control how honest nodes break ties between competing longest chains. And so there we saw a slightly more complicated strategy which actually boosts your share of the block rewards no matter what your hash rate is. So for every hash rate alpha you would do better. Specifically alpha divided by one minus alpha you get a higher fraction of the block rewards by using that strategy.
00:01:47.850 - 00:02:55.650, Speaker A: And we also saw that that's sort of a tight result in the sense that it matches the chain quality guarantee we proved for longest chain consensus back in lecture number eight. Most recently in the last sort of optional video we had the third and by far most technical version of this argument. So that's where we considered the scenario where the deviating node, node A, neither does it have 51% of the hash rate nor does it have the ability to coordinate how the honest nodes break ties among longers change which in some sense is the most appropriate setting for this type of analysis. And so what we learned there by considering a still more complex strategy, but in the same spirit of all of these selfish mining strategies is that even their deviations from honest behavior can help can boost the share of block rewards of a node. Now that's only true if the node is sufficiently big, has more than a third of the hash rate. But that's still an interesting result, right? You might have thought that things break down only when a node has 51% of the overall hash rate. But that final analysis shows that even all the way down at 34% of the hash rate, you've got incentive issues in Nakamoto Consensus.
00:02:56.710 - 00:02:58.446, Speaker B: So in all three cases, we proved.
00:02:58.478 - 00:03:19.130, Speaker A: Something that in some sense, from a game theory perspective, was sort of modest. We just took one candidate outcome, namely all of the nodes following the protocol honestly. We showed that it's not a Nash equilibrium. I e. Some node has an incentive to deviate to boost its share of the block rewards. We never discuss what a Nash equilibrium might be. So if it's not all nodes following the protocol, it's got to be something else.
00:03:19.130 - 00:04:09.046, Speaker A: But actually, that's just going to be a really difficult question for a game with such complex strategy spaces as this one. So for the most part in the academic literature, in this line of work, one doesn't discuss what the Nash equilibrium is, other than just whether everybody following the protocol honestly happens to be one. Speaking of the academic literature, this paper I've mentioned by AOL and Surrey that was published in 2014, it's been very influential, ton of follow up work with all kinds of different variations of what you've seen in this lecture. So, for example, other versions of Nakamoto Consensus, like premerge ethereum, ethereum 1.0, had sort of a variation on bitcoin's version of Nakamoto Consensus with some small differences. So people analyzed to what extent you can do these attacks. There also people have looked at sort of different proof of stake designs.
00:04:09.046 - 00:05:03.340, Speaker A: As we'll see in lecture twelve, there's a million different ways to design proof of stake blockchain. So there's sort of a lot of different selfish mining style analyses you can do there. People have looked at refinements of the attack that would be sort of more difficult for other nodes to detect, and on and on. So tons, dozens of follow up papers. I'll put citations to a few entry points to that literature in the lecture notes. So, as you can tell in the academic sphere, this has been very, very influential work. You'd be natural to ask, okay, so is this just kind of are we just doing like math for fun or what are the implications in practice? And in particular, you might be wondering, okay, if this sort of selfish mining strategies is such a good idea, do we see them in practice? And at least for Bitcoin, which is by far the biggest and most widely used protocol based on Nakamoto Consensus, there's no evidence that we've ever seen nodes use strategies of this sort.
00:05:04.030 - 00:05:05.806, Speaker B: There are various smaller blockchains that use.
00:05:05.828 - 00:05:28.346, Speaker A: Nakamoto Consensus, including various forks of bitcoin. I don't know that people have carefully looked at those for evidence of these kinds of attacks, but at least in Bitcoin, we have not seen them at any point in the 13 years that it's been running. And so it's natural to ask, why might that be? How can we explain the fact that this deviation that in theory would seem to be good for nodes running, let's say, the Bitcoin protocol?
00:05:28.398 - 00:05:32.662, Speaker B: Why don't they actually take advantage of it now?
00:05:32.716 - 00:06:15.114, Speaker A: First, just kind of naive straw man answer would be, you know, maybe our model in this lecture of nodes as profit maximizers is just inappropriate. Maybe nodes don't really worry about crazy strategies. Maybe the people running the nodes just kind of want to run the protocol. And that's the end of the story. That may well have been true for the first year or two of Bitcoin's existence when it was still kind of a very small community of enthusiasts that were participating. But speaking now, speaking in 2022, we have many, many examples where nodes running some blockchain protocol are obviously acting in their own best interest, deviating from what was originally intended by the protocol designer. Some of these deviations that have been seen are at the level of the consensus protocol.
00:06:15.114 - 00:06:58.290, Speaker A: So for example, the ethereum classic blockchain has suffered from multiple large reorganizations over its lifetime, which facilitated double spends. So that's obviously one form of deviation by a node. And then these days we also see a ton of deviations that are targeting sort of the application layer. So especially if you have DeFi decentralized finance sort of built on top of a blockchain, there's kind of lots of ways to kind of siphon money off of the application layer if you're one of the nodes running the protocol. We'll talk much more about that toward the end of the lecture series. But point being, I mean, it's clear at this point that many nodes running blockchain protocols are indeed willing to deviate from intended behavior if it's in their own best interest. So that leaves this question open.
00:06:58.290 - 00:07:49.460, Speaker A: Why aren't we seeing these specific selfish mining strategies in practice? Specifically, for example, for the Bitcoin protocol? And I'm going to suggest sort of multiple possible explanations. Realistically reality is probably some mix of these possible answers. And the mix of those answers may even be different for different nodes that might contemplate deviating from the protocol. Let me start with the most frequent response you'll hear from people. And just to warn you, I'm actually not that convinced by this answer, but you will hear it over and over again. So the story here goes that any such attack, any such deviation would crash the price of the native currency. So for example, Bitcoin and the Bitcoin protocol, thereby destroying the wealth of the attacker and making the attack actually not in the attacker's interest.
00:07:49.460 - 00:08:07.286, Speaker A: And implicit in sort of this response is a number of assumptions, some of which I think are pretty tenuous. The first assumption, which I'm sort of okay with, is that if there is such a deviation that's going to be noticed by the community and by the.
00:08:07.308 - 00:08:11.226, Speaker B: Public, I find this assumption semicepceptible, just.
00:08:11.248 - 00:09:12.566, Speaker A: Because public blockchains like bitcoin are so public, right? So everybody can see everything that's going on. And so for the strategies we've talked through here in lecture ten, you could imagine looking for unusual patterns in the orphaning of blocks that would suggest that some node was engaging in these kind of selfish mining strategies. There is recent work about sort of variations of the strategies we've talked about in this lecture that are better disguised, harder to detect, but still most shenanigans and blockchains do actually come to light, it would seem. And so, again, this maybe is an okay assumption. The second assumption, which actually I think is much less true than many people believe, is that somehow a publicly noticed attack would have a big impact on the price of bitcoin, right? Like, I don't know, it would drop by a factor of five or ten. And this empirically is just not true. Again, we haven't seen sort of these selfish mining attacks in bitcoin, so we don't really have any evidence on whether they would be true for that specific attack on that specific blockchain protocol.
00:09:12.566 - 00:09:45.240, Speaker A: But there's lots of other blockchain protocols that have suffered various types of attacks. I mentioned the large scale reorganizations that have plagued ethereum classic over and over again. And they often lead to kind of a short term dip in the native currency's price, but it often bounces back pretty quick and there's not really any long term effects, it would seem. Now, the counterargument would be ethereum classic. This is a small chain. It's somehow already priced in that there's going to occasionally be these big attacks on it. And for something like bitcoin, it's not priced in because people don't expect that there are going to be these sort of attacks on it.
00:09:45.240 - 00:10:21.986, Speaker A: Maybe just don't find it that convincing. I'm not convinced that price is as sensitive to various types of attacks as people seem to believe. But for the sake of argument, let's suppose actually it does lead to a crash. Let's suppose the price of bitcoin drops by a factor of ten or 100 after some selfish mining deviation is noticed by the public. Then the final part of this story says that the attacker would lose its wealth. And if all of the attacker's wealth was just sort of tied up in bitcoin, then this would be true, right? So all they have in their portfolio is bitcoin. Price of bitcoin drops by a factor of ten or 100.
00:10:21.986 - 00:11:28.790, Speaker A: The attacker's wealth drops by a factor of ten or 100, right? But on the other hand, who says this attacker is holding bitcoin? So the counterargument here would go like this. It's like, okay, maybe the attacker actually doesn't kind of have much bitcoin, right? Maybe, for example, whenever they produce a block in the bitcoin protocol and they get a block reward of six and a quarter bitcoins, maybe they just sell it immediately for USD. So they never actually hold any bitcoin. But still, to have any influence over the protocol at all, it has to have some fraction of the hash rate. It needs to have some positive alpha. And moreover, at least for the Bitcoin protocol, the total amount of hash rate is so big, the only way you could possibly capture even a tiny percentage of the overall hash rate would be to invest a significant amount in specialized hardware, so called asics, which are machines that are really good at evaluating shot 256 and can't do anything else. So while the attacker is perhaps not invested in the currency, it needs to at least be invested in specialized hardware that's good only for participating in this one protocol.
00:11:28.790 - 00:12:34.284, Speaker A: And then if the price of Bitcoin went to zero, then the value of all this specialized hardware would also go down to zero because again, the only thing it's good for is for producing blocks in Bitcoin and the only economic value there is whatever you get from six and a quarter bitcoins. And so if that's zero, the value of this hardware also becomes zero. So I think there's some merit to that argument. I think it's probably fair to say that most participants, at least specifically of the Bitcoin protocol, probably either feel or just genuinely are economically invested in the health of the protocol and its currency and so therefore sort of disinclined to do anything that they believe might harm the protocol and its currency. But I still think there's a lot left to explain. I don't think actually this argument has that much force. For example, a very interesting natural experiment happened just a couple of months before the time of this recording, which is that the ethereum blockchain went through the merge, which means it switched from proof of work civil resistance.
00:12:34.284 - 00:13:52.614, Speaker A: So with participating nodes solving these hard crypto puzzles, again using specialized hardware switched to proof of stake civil resistance, where block production is really just kind of determined by internal randomness of the protocol. So the merge then was actually a super interesting natural experiment for exactly this argument because with the merge, no matter what the proof of work node participants did, their specialized hardware's value was going to go to basically zero because there was going to be no more sort of proof of work block production after the merge. And despite that, despite the fact that their hardware was basically going to go to value zero anyways, we still didn't really see any examples of these selfish mining strategies leading up to the merge. So that to me suggests that actually it's just really there must be other explanations as well. Second possible answer to the question which actually I think probably is a reasonable explanation in many cases is that would be deviators, would be attackers just find it difficult to get the capital necessary to benefit from these kinds of attacks. Because remember in the third scenario we looked at. So that's where the deviator doesn't have control over the communication network.
00:13:52.614 - 00:14:31.078, Speaker A: That is, it can't really influence how the honest nodes are breaking ties among competing longest chains. There, you actually needed a third of the overall hash rate for that deviation to actually matter. If you have well less than a third of the hash rate, you may as well just honestly follow the protocol. And for a protocol like Bitcoin, getting third of the hash rate is not an easy thing to do. So there's just very few entities that are in a position to get that much hash rate in the Bitcoin protocol. Now, we did have that second scenario also where actually you can boost your block rewards even if you have only like 1% or 0.1% of the overall hash rate.
00:14:31.078 - 00:14:47.690, Speaker A: But that assumed that actually you, while you were deviating, could control how the honest nodes break ties, which you could do if you had total power over the communication network. But how are you going to get that that's, again, something that not that many people, not that many entities are going to be in a position to achieve.
00:14:48.850 - 00:14:50.126, Speaker B: So that, I think, might be the.
00:14:50.148 - 00:15:54.924, Speaker A: First order explanation about why we just don't see these types of deviations. Another thing which I don't feel like is discussed enough, is that it would actually take a long time for this deviation to pay off, let's say specifically in the Bitcoin protocol. Because remember, this attack fundamentally is an attack on the difficulty adjustment system of Nakamoto Consensus. And at least in Bitcoin specifically, difficulty stays fixed, except it's updated once every two weeks. And if you think about it, there's actually no benefit of this deviation whatsoever up until the point that the difficulty adjusts. Let me just briefly remind you why difficulty adjustment is sort of so crucial for these deviations here in lecture ten, why it's really pretty specific to Nakamoto Consensus along with its proof of work civil resistance mechanism and the difficulty adjustment. So, difficulty adjustment, that's why we focused just on sort of the fraction of the pie that the deviating node was earning.
00:15:54.924 - 00:16:19.688, Speaker A: We didn't worry about the size of the pie because we said the size of the pie is always fixed. There's nothing the node can do about the size of the pie. All it can do is increase its share. That's why the node was focused on orphaning honestly produced blocks. That's how it increases its share of the overall pie. The reason the size of the pie is fixed, that's because of difficulty adjustment. Okay? So there's sort of two things going on.
00:16:19.688 - 00:16:58.628, Speaker A: First of all, block rewards are doled out only for blocks on the longest chain. Nothing else matters. Secondly, difficulty adjustment adjusts so that the rate of growth of the longest chain is fixed. So, for example, in Bitcoin, it's targeting in a given two week window, there's going to be 2016 new blocks added to the longest chain. Those are also exactly the blocks produced in those two weeks that are going to be earning block rewards. So at a block reward of six and a quarter bitcoins in a two week period, the protocol will dole out 12,000 and change bitcoins. And that's going to be true whether or not there's no other blocks that got orphaned in that two week period at all.
00:16:58.628 - 00:17:40.884, Speaker A: It's still going to be 12,000 and change if there's 1000 other blocks that did get orphaned in that two week period. So the amount of block reward being given out in a two week period, at least if the protocol is meeting its target is fixed. And so that just means that a node's goal is to get the biggest share of those block rewards, equivalently its biggest possible share of the blocks on the longest chain. On the other hand, suppose there was no difficulty adjustment at all. Suppose the difficulty just stayed constant. So there was just some fixed difficulty threshold tau that always remained the same. So that means you as a node, you're going to just be producing new blocks at some rate, right? So maybe you'll on average produce a new block once every 6 hours.
00:17:40.884 - 00:18:04.416, Speaker A: Your hash rate is fixed, the difficulty threshold is fixed, so that's going to be true for the rest of time. One block on average every 6 hours. The block you produce, you get six and a quarter bitcoins. If it winds up on the longest chain. You get zero if it doesn't wind up on the longest chain. So what do you want to make sure? You just want to make sure every one of your blocks winds up on the longest chain. You do not care what other blocks are on the longest chain because there's no difficulty adjustment.
00:18:04.416 - 00:18:26.130, Speaker A: You do not care. You just want all of your blocks to make it onto the longest chain. So you get a block reward for every block you ever produce. How do you do that? You honestly follow longest chain consensus if all of the nodes are following the protocol. Honestly, at least in this super synchronous model we're working in, there's no forks. Everybody gets their blocks in the longest chain and there's no reason to deviate from that for any reason.
00:18:27.220 - 00:18:28.564, Speaker B: So I think this third answer is.
00:18:28.602 - 00:19:07.304, Speaker A: Probably also a meaningful deterrent. The payoff is just much more delayed than in a lot of the other attacks you might pull off on a blockchain protocol. You have to wait two weeks for it to even matter. During that two weeks, the attack might get noticed. Who knows what else happens? Who knows how the community responds during those two weeks? So it just seems like kind of a risky thing to do. And then to expand on that point independent of sort of the delayed benefit just in general, if you sort of tried to do this deviation and it was noticed, it's just hard to know how other nodes would respond. Remember, the benefit of the attack assumes that all the other nodes keep following the protocol honestly.
00:19:07.304 - 00:20:01.440, Speaker A: And if they notice that you are not doing that, maybe they are also not going to do that. And then it is not clear what happens to your share of the block rewards. So while we are these days seeing plenty of examples of protocol participants sort of deviating from intended behavior for profit maximization reasons to sort of reap more benefits for themselves generally, that's happening in scenarios where the payoff is much more immediate and where there's much less risk of sort of some kind of countermeasures interfering with your benefits. Especially since 2020 when we had the rise of DFI decentralized finance on the ethereum blockchain. Since then. It's hard to imagine like if you were the type of person or organization that wanted to just sort of steal other people's money using blockchain technology. It's hard to imagine why you'd bother sort of like accruing a whole bunch of bitcoin hash rate and sort of doing these sort of sophisticated sort of forking strategies and so on.
00:20:01.440 - 00:20:14.070, Speaker A: Much simpler, unfortunately, as we've seen over the last couple of years, to just target sort of the weak link in some kind of part of the DFI stack and accrue economic rewards through exploiting those.
00:20:15.480 - 00:20:16.676, Speaker B: Now, I don't want any of you.
00:20:16.698 - 00:20:29.112, Speaker A: To sort of believe that the last 2 hours have been a waste of time just because these kinds of selfish mining deviations aren't generally observed in the wild. What we've learned in this lecture, in lecture ten is fundamental and important for.
00:20:29.166 - 00:20:32.148, Speaker B: A number of reasons, right?
00:20:32.174 - 00:20:38.204, Speaker A: So the first reason is just that this paper, I think, really made it obvious to everybody the importance of game.
00:20:38.242 - 00:20:43.756, Speaker B: Theoretic analysis in the analysis of blockchain protocols, right?
00:20:43.778 - 00:21:13.960, Speaker A: Because remember the roots of blockchain protocols, they go back to the classic consensus protocol studied in the 1980s and the 1990s. And so those are blockchain protocols that didn't have any native currency. There was sort of no real economics. All of the nodes running the protocol were just sort of owned generally by some big company. And so it was sufficient for the 20th century applications to have this simple dichotomy between nodes that obediently followed the protocol without worrying about why they might be doing that. And then byzantine nodes or faulty nodes that sort of might mess up the protocol.
00:21:14.860 - 00:21:16.776, Speaker B: And if you apply those frameworks, for.
00:21:16.798 - 00:22:35.824, Speaker A: Example, the longest chain consensus, as we saw in lecture eight, you find that there's this magical threshold at 50%, right? So if at least 50% of the nodes or of the hash rate is honest, then you get consistency, you get liveness. We thought at the time, everything that you want. The analysis in this lecture meanwhile, says look, 21st century consensus protocols in a blockchain context, generally they don't have to, but generally they have a native cryptocurrency and generally that cryptocurrency is used in part to incentivize participants of the protocol to behave in a particular way. And as soon as you do this, it does not make sense to just model nodes as this honest or byzantine dichotomy because there's going to be nodes that have no interest per se in breaking your protocol, but nonetheless are happy to deviate from the intended behavior if it makes them better off. What this lecture demonstrates is that the difference matters. Specifically for Nakamoto Consensus. What we learned in lectures eight and nine is that if you're happy with the just dichotomy between honest and Byzantine nodes as appropriate for a blockchain protocol without a cryptocurrency, without block rewards, then you just need sort of non honest hash rate to be below 50% to get all of the properties that we were shooting for.
00:22:35.824 - 00:23:43.880, Speaker A: Here in lecture ten, we see that actually, if you do have a native cryptocurrency, if you are rewarding participants with block rewards, then actually that threshold changes. You need to make stronger assumptions about the fraction of non honest hash rates to conclude that the nodes are going to be behaving the way you intended. So that's a big deal. I mean, this demonstrates you just cannot analyze blockchain protocols the way that we analyze 20th century consensus protocols. No serious analysis of a blockchain protocol in the 21st century would be complete without an analysis of the game theory faced by its participants. To be fair, in the 2009 Bitcoin White paper, nakamoto already was thinking about sort of game theory for nodes running the protocol and gave sort of a sketch of an argument about why nodes running the protocol should be incentivized to behave honestly unless they have more than 50% of the hash rates. And so the reason Nakamoto got a different finding than AOL and Surrey is Nakamoto was using a more limited strategy space for deviating nodes.
00:23:43.880 - 00:24:39.304, Speaker A: In particular, Nakamoto focused on deviations that involved extending a part of the blockchain other than the longest chain. Nakamoto, it would seem, did not consider the type of deviation that's been super important in this lecture, which is the possibility of nodes creating blocks, keeping them secret, extending secret chains in order to later orphan honestly produced blocks. So another byproduct then of the analysis in this lecture is that the fidelity with which you model the strategy space also really matters. If you don't allow nodes to delay block announcements, then you've got the analysis from the Bitcoin White Paper that shows that everything's fine up to the threshold of 50%. But here in this lecture, we looked at a richer but very realistic strategy space, right nodes running sort of, for example, the Bitcoin protocol really could do these strategies if they wanted. And it matters. The threshold changes, it moves lower.
00:24:39.304 - 00:25:32.744, Speaker A: You need to make a stronger assumption about the fraction of non honest hash rate. So finally, let me sort of zoom out a little bit. So lecture ten. We've been focusing on a fairly specific type of deviation for a fairly specific type of blockchain protocol and then we won using Nakamoto Consensus. But the big picture point here is this is sort of a cautionary tale. So really just really broadly speaking anywhere in the blockchain stack, if you are providing meaningful economic rewards with protocol participants, you really need to think about what behavior you are incentivizing and it may well not be the behavior that you thought you were incentivizing. And even if we just focus on the incentives faced by the nodes running a blockchain consensus protocol, most of those nodes in a modern blockchain are actually earning revenue from three different streams.
00:25:32.744 - 00:26:13.684, Speaker A: And each of those revenue streams has its own incentive issues, as we'll see as this lecture series unfolds. So the first revenue stream is exactly the one we've been talking about in this lecture. Often you're rewarded just for block production and as we've seen that can in a Nakamoto Consensus context introduce sort of dangerous incentives to engage in these selfish mining style deviations. The second source of revenue for nodes above and beyond the block reward would be from transaction fees. So this we'll talk about in the next lecture, lecture Eleven. But modern blockchain protocols typically charge for usage. So for each transaction included some transaction fee is paid for inclusion.
00:26:13.684 - 00:26:29.500, Speaker A: And so obviously the blockchain protocol has to somehow determine what those fees are, how much each transaction should pay. And that also introduces some quite tricky incentive issues. And that'll be the focus on our discussion of transaction fee mechanism design in the next lecture, in lecture eleven.
00:26:30.720 - 00:26:33.056, Speaker B: So the third revenue stream collected by.
00:26:33.078 - 00:27:31.004, Speaker A: Nodes running a modern blockchain consensus protocol above and beyond any block rewards, above and beyond any transaction fees is revenue coming in effect from the transactions themselves that get included in blocks. There's sort of maybe two flavors of this. So one is value that just accrues off chain, the other version being sort of value you just get directly on chain. So like a double spend attack would be an example of value you get off chain due to transactions included in a block. So if a transaction gets included in a block, that allows you in the real world to sort of drive off as the owner of a Tesla and then later you sort of arrange things so that that block gets rolled back and you get your money back. That would be an example of deriving off chain value from the transactions included on chain, potentially in a block that you yourself produced. The other variant would be where transactions in a block, for example in a block that you yourself produce, if that somehow gets you revenue directly on chain.
00:27:31.004 - 00:28:09.944, Speaker A: So in effect, maybe you're sort of siphoning some of the revenue that's coming from the application layer. This idea really rose to prominence with the rise of DeFi. So decentralized finance on. Ethereum. If what you imagine is that a lot of these transactions are kind of trades on exchanges, you could imagine putting your own trades in a block and then ordering the transactions in that block so that you get your own trades at favorable prices. This is an example of what's sometimes called mev. We'll talk about that concept at greater length, sort of at the very end of the lecture series.
00:28:09.944 - 00:28:37.432, Speaker A: But this general challenge that sort of nodes can siphon revenue off of the application layer. It's actually one of the biggest challenges, I'd say, facing modern blockchain protocols. Speaking now in late 2022. All right, so that's it for Lecture Ten. That's it for selfish mining. Let's move on to Lecture Eleven, which is going to be about transaction fee mechanism design with a case study on Ethereum's EIP 1559.
00:28:37.486 - 00:28:39.300, Speaker B: So I'll see you there. Bye.
