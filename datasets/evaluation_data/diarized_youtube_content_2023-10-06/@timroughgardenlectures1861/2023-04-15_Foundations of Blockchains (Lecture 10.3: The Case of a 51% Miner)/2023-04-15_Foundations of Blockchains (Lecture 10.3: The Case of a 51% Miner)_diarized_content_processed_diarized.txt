00:00:00.570 - 00:00:46.806, Speaker A: All right. So this is going to be the first of three videos where we step through, on the one hand sort of successively more difficult, but on the other hand also more satisfying versions of the key takeaway of this lecture that we highlighted in the last video. Specifically, unfortunately, in longest chain consensus and Nakamoto consensus nodes are not in general incentivized to obediently follow the protocol. Nodes in general can earn higher profits by deviating from intended behavior. So for this first example, we will be working with those same two assumptions mentioned last lecture, which should be familiar from our study of longest chain consensus. In lecture number eight. There's the assumption which does not bother us, which is the assumption that all the honest nodes can basically communicate instantaneously by telepathy.
00:00:46.806 - 00:01:30.764, Speaker A: That's only going to make our negative results kind of even stronger. But then there's going to be a second assumption which does bother us a lot, which is that we're going to assume that basically the same node that's contemplating a deviation can also break ties bionic nodes among competing longest chains however it wants. So we're going to have the first assumption for all three versions of the argument. We're going to have that kind of adversarial tiebreaking in both this and the next video. We'll relax that in the third video. And in this first variant we're also going to look at the extreme case where one of the nodes is really big, has a strict majority of the overall hash rate. So I'm going to denote this big node by capital A.
00:01:30.764 - 00:02:10.824, Speaker A: That's the same way I was denoting Byzantine nodes or adversarial nodes back when we studied longer chain consensus in lectures eight and nine. And to some extent it will be playing sort of a similar role. But it's important to remember we're not actually thinking of node A as someone who deliberately wants to sort of take down and break the consensus protocol. Node A is just sort of a humble profit maximizer and is just looking to boost its block rewards as much as it can. Now you'd be right to object. Look, way back in sort of lecture eight we talked about how longest chain consensus, it was hopeless unless you had sort of over half of the participation being honest. If over half of it was Byzantine or sort of out of your control, there's really no hope.
00:02:10.824 - 00:02:55.530, Speaker A: You're not going to have consistency in general, you're not going to have liveness in general. So you might say like, why do we care about this case? That's a fair comment. But as you'll see we'll actually get very accurate intuition about what's really going on by studying this extreme case and then we'll see that same intuition repeat in somewhat more interesting situations in the next two videos. So we're going to be thinking of the other 49% of the hash rate as just as if they're honest. We're not going to think about them as being profit maximizers. We're just going to assume that no matter what, they obediently follow the longest chain protocol and remember that's to make our negative results sort of as compelling as possible, we want to show that honesty is not contagious. In other words, that even if everybody else is honest, even then Node A is not incentivized to be honest in return.
00:02:55.530 - 00:03:43.156, Speaker A: So one of the strategies that Node A can do if it wants is to itself follow the protocol honestly. If it does that, then of course 100% of the hash rate is just honestly carrying out longest chain consensus. Moreover, we're in this super synchronous model, there's no message delays. And the only reason you have forks and longest chain consensus are either because of delayed block announcements or because of sort of Shenanigans Byzantine nodes. If we have neither of those two things, we have no forks. We just have this one chain that just grows in a very orderly fashion. Moreover, if we think about a sort of long sequence of blocks that get produced by virtue of having 51% of the hash rate, again, under our normal sort of random oracle assumption, node A is going to be producing roughly 51% of the overall blocks, since every single block produced winds up in the longest chain.
00:03:43.156 - 00:04:51.640, Speaker A: In this thought experiment, that means Node A will have contributed 51% of the blocks that wind up on the longest chain. So for example, if we're talking about the bitcoin protocol, then every two weeks we're expecting 2016 blocks. And so 51% times 2016 times six and a quarter bitcoins, that's going to be the overall amount of block rewards that Node A earns. The question then, of course is, given that Node A is under sort of no contract to do this, to follow the protocol obediently, is there some other strategy Node A could do instead under which it would reap a higher fraction of the block rewards? And the answer is definitely yes. In fact, this big node, Node A, it's actually going to be able to get 100% of the block rewards. It's going to be able to get all of them. What does that mean? That means it's going to be able to sort of arrange things so that every single block on the longest chain was contributed by Node A, which is the same thing as saying every single node ever produced by an honest node will be orphaned, will not be on the longest chain.
00:04:51.640 - 00:05:17.830, Speaker A: So that's going to be the alternative strategy. The adversary or Node A is going to make sure that whenever there's a block produced by an honest node, that block is going to get orphaned. So let's see how this works in an example. So let's just say let's start from a genesis block B zero. Now. It's Nakamoto Consensus. So all of the nodes are going to madly try to sort of solve these different hard crypto puzzles just by sort of hashing things over and over again.
00:05:17.830 - 00:05:55.376, Speaker A: Node A, by virtue of having 51% of the hash rate, has a 51% chance of being the next node to create a block, being the round of the next leader, an honest node has a 49% chance. And here, let's suppose actually that an honest node gets lucky and creates is the first one to create a block. Call that block B one. Now, Node A was previously trying to extend block B zero. And now that there's a new block B one, it's going to reassess its options. But remember the strategy, it's going to always try and orphan honestly produced block. So B one would be an example of that.
00:05:55.376 - 00:06:28.104, Speaker A: So in this strategy, node A will try to orphan B one. How does it do that? It tries to create its own block, extending the genesis block I E. Node A will not try to extend the longest chain B one, but will rather try to have a second block extending B zero. Now it has a 51% chance of succeeding. But there's also a 49% chance that before Node A discovers that is able to produce such a block, an honest node produces the next block. So let's actually suppose that happens again. Let's suppose honest nodes once again winds up being the round of the next leader.
00:06:28.104 - 00:07:12.010, Speaker A: So honest node, it's going to extend the longest chain. So it's going to publish a block at B two that extends B one. Now once again, Node A can sort of reassess its strategy, okay? It can choose to try to extend B zero or B One or B two. But again, remember, the ambition is to orphan every single honest block, all of them. And the only way that Node A is going to be able to orphan the block B one is again by trying to come up with an alternative branch going all the way back to genesis. So even after B two is tacked onto the end of B one, node A will continue to try to extend B zero. And let's suppose, and there's a 51% chance, let's suppose that actually Node A does successfully do that, producing a new block B one prime extending B zero.
00:07:12.010 - 00:07:35.440, Speaker A: Now at this point, right, no honest blocks have been orphaned. The longest chain is still the one ending at B two. So all of the honest blocks are still on the longest chain. So that means node a now again, its ambition is to orphan B One and B two. So it will of course start trying to extend the block. It just created B one prime. But let's actually assume that, and this is again a 49% chance that this happens.
00:07:35.440 - 00:08:21.584, Speaker A: Let's assume that actually the next block to be created is again by an honest node. And so the honest node is extending the longest chain. So that's going to be a new block B three, extending the block B two. Undeterred Node a is going to continue to try to orphan all of the honest blocks, in particular even the oldest one, B one, which requires it to try to keep growing its alternative chain I E, trying to extend b one prime. So let's assume actually node A does do that, that the next thing that happens, and again, this is 51% chance the next thing that happens is node A produces a block B two prime, extending B one prime. So node A is then going to try to just continue extending that second chain. And let's actually suppose this time it succeeds again, 51% chance.
00:08:21.584 - 00:09:23.268, Speaker A: Let's assume the next block to be created is by node A. It's going to be the block B three prime, extending B two prime. And so now once this happens, in fact all of the honest blocks b one, B two, B three, they are all now orphaned, they will never be extended again and they're certainly not going to wind up on any longest chain. So why is that true? Well, whatever block gets produced next, it's going to be extending D three prime. That's kind of obvious if the next block produced is by node A, right? Obviously node A is going to extend its own blocks, not the blocks of its competitors of the honest nodes. But even if the next block is an honest block, given our assumption that the adversary, which in this case is node A gets to pick how honest nodes tiebreak among competing longest chains, obviously the adversary, now that there's a tie, is going to tiebreak in favor of its own blocks. So under the current set of assumptions, an honest node is basically going to be forced to extend B three prime, not b three.
00:09:23.268 - 00:09:57.404, Speaker A: So it doesn't matter what happens next. B three is not ever going to be extended, not next round, not ever again. Let's in fact assume that the next block and again this is 49% chance, is in fact produced by an honest node. So that's going to be a block B four. And again with worst case tiebreaking, it's going to extend B three prime. So now there's once again an honestly produced block on the longest chain, namely block B four. And remember, node A under this strategy, finds that intolerable and now switches all its efforts to try to orphaning block B four from the longest chain.
00:09:57.404 - 00:10:37.260, Speaker A: How is it going to do that? Well, it's going to try to create its own block that extends B three prime. And so if, for example, it succeeds, so 51% chance node A is the next one to produce a block. So suppose that happens, that's going to be a block B four prime, extending block B three prime. Well now at this point, again under our assumption of worst case tiebreaking, block B four is orphaned. It's never going to be extended again. Certainly node A is not going to waste any time extending block B four, it's going to extend block B four prime, but then node A can also, through the adversarial tiebreaking, in effect make honest nodes extend B four prime instead of B four as well. So B four at this point is orphaned.
00:10:37.260 - 00:11:32.140, Speaker A: So that's how this alternative strategy is going to work. So node A is just going to keep orphaning honest blocks off of the longest chain. So in other words, it's going to create its own alternative chain of A blocks and it will not stop until the chain of A blocks catches up with the chain of H blocks, orphaning all of them. So now we also see the role of the 51% assumption in this example. So why is it important that node A controls more than half of the hash rate? Well, that means that node A is going to be producing new blocks more frequently than all of the honest nodes combined. And that's how we know that this strategy is guaranteed to succeed. If you wait long enough, it will be the case eventually that the chain of blocks being grown by node A will catch up and overtake any competing chain of blocks being grown by honest nodes just because the A blocks are coming along more frequently than the H blocks.
00:11:32.140 - 00:12:37.940, Speaker A: So this argument wouldn't work if node A had only 49% of the hash rate as opposed to 51%. Because then if the honest nodes got a sufficiently large lead in their branch, then there's sort of a decent probability that node A would literally never catch up for the rest of time because the honest nodes are just producing blocks at a faster rate than node A. So in the second version of the argument that we'll do in the next video, we'll have to tweak this strategy to accommodate versions of node A that have less than half of the overall hash rate. So we'll see how to do that next. So at the upshot of this example is this is a strategy that node A can use and when it has more than half the hash rate, it is guaranteed to eventually orphan every single honest block off of the longest chain. So if there's 0%, if there's zero honest blocks on the longest chain, then I guess 100% of the blocks on the longest chain belong to node A, which I guess means 100% of the block rewards are going to node A. So 100% is certainly better than 51%.
00:12:37.940 - 00:13:14.076, Speaker A: So this is definitely a better strategy than obedience for node A in this example. Let me remind you, and we talked about this in previous videos, that by maximizing your share of the blocks on the longest chain, you also wind up maximizing your block rewards. And that's because in Nakamoto Consensus the difficulty parameter is tuned so that blocks are added to the longest chain at a given rate. And because only blocks in the longest chain are in block rewards, that means block rewards are being given out at a constant rate. So that means the size of the pie, the total block rewards is fixed. There's nothing you can do about it. All you can do is sort of try to maximize your slice of the pie.
00:13:14.076 - 00:13:59.550, Speaker A: And in this case, rather than getting merely half of the pie, node A can in fact double its money and get all of it. For another way of thinking about it, imagine Node A does the first strategy. So imagine Node A just honestly follows longest chain consensus. Remember, in that case we have no Byzantine behavior. We also by assumption have no message delays, so we're going to have no forks. So if for example, we're talking about the Bitcoin protocol and we say okay, in a two week period like what happened? Well, the difficulty is tuned so that the longest chain grows by 2016. And if we don't have any forking, if we don't have any orphans, that means the total amount of blocks produced in that two week period was also 2016, 51% of which on average would be in expectation would be produced by Node A.
00:13:59.550 - 00:15:09.680, Speaker A: How about the second case where Node A instead deliberately orphans all of the honestly produced blocks? What happens again, for example, in Bitcoin in a two week period? Well, the thing that's the same is that the in expectation the, the longest chain will have grown by 2016 blocks because that's that's how the difficulty parameter is being tuned. But what's different is that in that two week period much more than 2016 blocks will have been produced. It'll be basically double that because the number of honestly produced blocks is almost as big as the number of blocks produced by Node A. But all of those honestly produced blocks are off of the longest chain. So there might be 2016 new blocks on the longest chain, but it's going to be more like 4000 blocks that got produced over that two week period. So that means that the difficulty parameter is actually going to be, if you think about it, twice as high under the second strategy, under the first strategy. So twice as frequent puzzle solutions, but with half of them being orphaned gives you the same rates of longest chain growth as a difficulty parameter that's half as big, but with every puzzle solution leading to a block on the longest chain.
00:15:09.680 - 00:16:04.788, Speaker A: So it's sort of a subtle point. But again, this is all just review about why a profit maximizing node really does just want to maximize the fraction of the longest chain blocks that belongs to its the pi is fixed, it just wants to maximize the size of its slice. So one other comment, I mean, from this argument, it probably seemed like I was leaning pretty heavily on our second assumption, the assumption that Node A itself gets to sort of choose how honest nodes break ties. It's actually not that important for this argument. In the case of a 51% node, it is going to be quite important in a second version of our argument in the next video. But I encourage you to think through why actually the logic of this 51% example would actually be exactly the same no matter how lucky the honest nodes winds up being breaking ties between competing longest chains. So that means the remaining assumption, which does bother us, is this assumption that there's a big node that node A controls 51% of the overall hash rate.
00:16:04.788 - 00:16:31.310, Speaker A: And you'd be right to object. It's kind of like, look, longest chain consensus, that's just like a total failure mode for it anyways. It doesn't have consistency. It doesn't have liveness. No big surprise that it doesn't have some other nice property we might want as well. So what? So that'd be a very appropriate comment though. Still, you look at this and you're like, interesting jump right from honest behavior 51% to, you know, this deviation with orphaning honest blocks that gets you to 100%.
00:16:31.310 - 00:17:11.690, Speaker A: And so this idea that you could like jump up above your sort of fair share fraction of the blocks in the longest chain by at least occasionally orphaning honestly produced blocks, it does kind of feel like maybe some version of that would still be true with less than 50% of the hash rate. So maybe you don't get a jump from like 50 to 100, but maybe you at least get a jump from say, like 10% to 12%. And so we're going to show in the next video that that is in fact true. No matter under the current assumption where we have adversarial tiebreaking, it actually doesn't matter how small node A is, it can always boost its share of the block rewards by DV leading from intended behavior. So that's coming up next. I'll see you there.
