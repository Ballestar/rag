00:00:04.250 - 00:00:26.134, Speaker A: Hi, everyone. Welcome to Unchained, your no Hype resource for all things crypto. I'm your host, Laura Shin. You may have heard Unchained is doing a survey. We want to know, how do you think we can make the show better? How would you like to see Unchained expand? If you could just take a moment and go to surveymonkey.com r slash Unchained Survey 2019 team. Again.
00:00:26.134 - 00:01:12.894, Speaker A: That's surveymonkey.com r unchained survey 2019 Your answers will be a huge help to me and my team here at Unchained. Also, those who answer the survey can enter to win one of five free Casa Bitcoin lightning nodes, plus a free year of CASA's Gold membership, including a multistig security app for iPhone and Android, a Trezor hardware wallet, a Casa Faraday bag. And those of you interested in learning more about Casa or about protecting your bitcoin investment generally should check out my interview with CEO Jeremy Welch. Thank you to Casa for donating again. The URL is surveymonkey.com r unchained survey 2019 Go there now to give us your thoughts on the future direction of Unchained and enter the giveaway.
00:01:13.022 - 00:01:51.470, Speaker B: CipherTrace makes it easy for exchanges and crypto businesses to comply with cryptocurrency antimoney laundering laws, avoid illegal sources of funds, and maintain healthy banking relationships. CypherTrace is helping you grow the crypto economy by keeping it safe and secure. Kraken is the best exchange in the world for buying and selling digital assets. It has the tightest security, deep liquidity, and a great fee structure with no minimum or hidden fees. Whether you're looking for a simple fiat, on ramp or leveraged options trading, kraken is the place for you.
00:01:51.620 - 00:01:56.930, Speaker A: My guest today is Tarun Chitra, co founder and CEO of Gauntlet. Welcome, Tarun.
00:01:57.270 - 00:01:58.020, Speaker C: Hi.
00:01:58.390 - 00:02:00.820, Speaker A: So tell us what Gauntlet does.
00:02:01.350 - 00:03:05.830, Speaker C: Yeah, so Gauntlet is a blockchain simulation platform, so we basically try to model all the different types of users who interact with both layer one chains and consensus protocols, as well as smart contracts. And one of the reasons for really doing this is to have a strong statistical understanding, in addition to a security understanding, of how these systems perform when different types of users are interacting with these systems. A simple kind of example is in a lot of crypto protocols, people tend to compare byzantine and really kind of irrational actors versus honest actors who perfectly follow a protocol. But in reality, most users of these protocols are traders or interacting with other systems. And modeling how their incentives work and how their rationality works gives you a better idea of how the system will behave under sort of more realistic conditions.
00:03:06.970 - 00:03:42.420, Speaker A: Yeah, I remember when you first told me about this, it reminded me of Monte Carlo simulations that sometimes retirement professionals will do for you. Or there's software that does this to kind of model out with different inputs, whether or not you'll have enough money to last retirement, and et cetera. So it will kind of show the different scenarios under different market conditions, but you have a really interesting backstory to how you came into the space. Let's just start with the first time you ever heard about bitcoin. How did that happen?
00:03:42.950 - 00:04:50.406, Speaker C: Yeah, definitely. So I was working at this kind of odd research institute called De Shaw research. So it was a private research institute, and this billionaire who was formerly a CS professor was actually spending his fortune on building Asics, which are application specific integrated circuits, which are the same chips you use in miners or in GPUs. We were building Asics for doing physics research at that time, in 2011, there weren't really many people building Asics. There were telecom companies who built them for routers, there were research groups who built them for new chip architectures, but most of those didn't make it into production. And then there was Apple, Samsung. And so the interesting thing about these types of orders is that if you don't have an order that's of a large enough size fabs, which are kind of these fabrication facilities, mainly in Asia right now, they won't really talk to you.
00:04:50.406 - 00:05:35.846, Speaker C: So you have less than $100 million of chips that you want to get produced. They won't really speak to you. And you have to go to these aggregators who take many small orders, and they do a lot of the technical work to make sure that your chips don't interact with someone else's chips. And the formal verification and make the behavior of these chips is as it would be if you had the whole order yourself. And so we went to an aggregator. We had this roughly $25 million chip order, and they said, okay, great, we'll be back in a few months with kind of the first samples. And then they more or less ghosted us for a while, and we were like, hey, what's up? You took $25 million from us.
00:05:35.846 - 00:06:17.910, Speaker C: And they were like, well, actually, how about a 10% discount? And we were like, you can't just give us a 10% discount without telling us why you just didn't talk to us for three months after taking our money. And that was in 2011. And so that was really one of the first bitcoin ASIC miners was coming online. And that was when I was like, wow, I really should be trying to understand more about this. I thought it was not quite a joke, but I thought the paper was a little bit grandiose for a distributed system style paper. So I didn't really truly believe it until I started seeing people building hardware for, just to be clear.
00:06:17.980 - 00:06:30.700, Speaker A: So the fab basically got a big order from somebody who wanted to create a bitcoin ASIC, and so that's why they postponed your order and pretended like they hadn't taken your money. Is that what you're saying?
00:06:31.070 - 00:06:46.110, Speaker C: Yes, I'm sure the Bitcoin ASIC order paid them some increased cost over what we paid for the same amount of space. But, yeah, we sort of got front run by a bitcoin ASIC manufacturer.
00:06:46.450 - 00:07:02.740, Speaker A: And so then how did you go from, at that point, just learning about bitcoin to eventually hear, now, that was 2011. Why don't you fill us in on the last eight years and how you came to launch a company in this space?
00:07:03.430 - 00:07:55.906, Speaker C: Yeah, definitely. So basically, I'd mined quite a sizable amount of bitcoin because at that time, even then, you were still reasonably profitable with GPU mining. And my parents lived in a place that had relatively cheap electricity, and I just kind of had a computer running in their basement, and I had a lot of bitcoin. I saw the crash of 2013, and I really was scared, and I just sold all the bitcoin I had, and I was like, I'm never getting back into this. It's stressful. I have to worry about security and all this stuff. But I kept paying attention to the academic literature, and I'd really been taken by a couple key papers that had come out in 2013 and 2014 and 15, and they were the Ghost paper.
00:07:55.906 - 00:08:54.706, Speaker C: So Ghost stands for greatest, greedy, heaviest observed subtree. This algorithm is actually one of the key components of the first version of Ethereum. It's what kind of let ethereum have a faster block production rate. But it was the first academic paper that really studied the probabilistic aspects of how blocks travel through the network, as well as how different types of adversaries would potentially try to interfere with the growth of the chain in. A very formal way, a much more formal way than the original Satoshi paper, which over time has been found to have a lot of kind of at least on the mathematical side, has had a bunch of mistakes. And the second paper was a selfish mining paper by eman gunser. And ital and that was also another paper where people really used more rigorous probabilistic tools to try to find a bug.
00:08:54.706 - 00:09:58.380, Speaker C: And that in selfish mining. What happens is a miner kind of holds out a bunch of blocks that they produce, and then as long as they have an advantage over the rest of the chain, they keep growing on their private chain. And if the rest of the network comes close to them, they publish all of their blocks. And the idea with this attack is it kind of reduces the efficiency of the network and gives all the rewards to kind of a larger percentage of the rewards than they are due to the selfish miner. I tried getting people I worked with excited about this, but I think there were more traditional distributed systems and hardware people, and they just really were like, well, this is just a novelty, and this is crazy. People making asics in Taiwan, can this thing be real? And then after I worked there for five years, I ended up working in high frequency trading. And that was kind of when I saw the invention of a lot more sophistication, a lot of financial sophistication in the space.
00:09:58.380 - 00:11:11.554, Speaker C: I think the Algorand paper really made me, for the first time, realize that there was sort of a melding of tech and finance in a way that hadn't existed, because people were finding novel ways to make structured products that securitize the security of a network in terms of proof of stake and in trading. When you make a trading strategy, you basically design your strategy. You take kind of the statistical features of it that you think are important, that represent what other people are doing in the market or what you want your ideal strategy to be doing. And then you kind of run these back tests which are like the Monte Carlo tests you discussed with regards to your retirement account, where you basically can run the strategy on historical data and say, okay, I expect to make X amount of dollars. The standard deviation of the return is this. This is the worst case loss, this is the best case return. And you can analyze how this kind of algorithmic strategy that might just say, 0.2%
00:11:11.554 - 00:11:47.274, Speaker C: of the time, send an order here. 50% of the time, send an order here. Something that's very not super human intuitive. And you run these simulations and you can get the economic intuition for what it's doing. This is how it makes money, this is how it loses money. This is how statistically broad the distribution of outcomes is under different stress test scenarios. And that was when I started kind of seeing a lot of similarities to what people were doing in crypto, in that cryptographers have a method of proof where they basically make an idealized simulation.
00:11:47.274 - 00:12:26.074, Speaker C: So they say, hey, let's pretend there is an Oracle. So someone who has full control of the whole network. And the Oracle picks an adversary every once in a while and lets the adversary read someone else's state. So it means they hack their computer and read their private keys and they can sign signatures as them or they hack their computer and don't forward blocks. And basically the cryptography version of simulation, most of the proofs say, okay, let's pretend we have this Oracle. The Oracle can call the adversary, it can also call honest users. And then it kind of interlaces actions between them.
00:12:26.074 - 00:13:46.466, Speaker C: And cryptographic proofs like the ones in Algorand prove that with a certain probability the adversary succeeds and that probability is really low under certain choices of parameters like how big your block is, your block production rate, assumption of how delayed the network is. And that was when I started seeing this kind of gap between modern finance where people really assume a lot more about the user. You assume that they're rational and they have very different ways of measuring what rational means to them versus kind of the cryptographic proof version where it's everyone is trying to destroy everything or everyone is perfectly good all the time. And in reality, everything is somewhere in the middle. And picking these kind of parameters in your protocol becomes increasingly important in proof of stake. Because now, instead of collateralizing kind of these assets with proof that you spent energy or proof that you expended a certain resource like space, you do it with this proof of, I locked up this digital asset in this system, and there are a lot more edge cases there, and it feels a lot more like trading in a lot of ways. And that was kind of how I got into this.
00:13:46.466 - 00:14:08.540, Speaker C: And I did some consulting for some layer one protocols and that was when I was like, okay, there's kind of a generic problem here where the tools of finance, especially in quantitative trading, are really useful for gaining intuition about the economics of these protocols and understanding kind of how different types of people would interact with them.
00:14:09.150 - 00:14:12.540, Speaker A: So you launched Gauntlet last year?
00:14:13.310 - 00:14:19.214, Speaker C: Yes, last summer, late August, basically.
00:14:19.412 - 00:14:22.946, Speaker A: And you have funding from so our.
00:14:22.968 - 00:14:49.430, Speaker C: Lead investor is a traditional investor first round, who basically is like Uber's first investor. And looker, but then we have a few crypto funds, polychain, Dragonfly, Distributed Global, and then a bunch of angel investors who are really great, like Arthur from Tezos and Lily from Urn.
00:14:49.930 - 00:15:15.970, Speaker A: And so you talked, I mean, just about so many things that we're going to unpack throughout this episode. But let's just start with the most basic question. How do you come up with the models for the different types of users? What if you miss a type and it's not even actually just the types, but how do you figure out which parameters to input for their behaviors?
00:15:17.190 - 00:16:08.302, Speaker C: Yeah, definitely. So you have the same type of issue with trading strategies where you might make a trading strategy and it works really well in simulation. And then you go to live trading and it doesn't work. And it's because you missed some feature of live trading that you didn't replicate in simulation correctly. And then you add that feature to simulation and you kind of have this iterative process of you simulate something, you go test it out in live, you simulate something, you go test it out in live and you make this feedback loop that makes it very data driven. So what you try to do is you try to distill things to simple models that are relatively easy to interpret. So the simplest models are like linear regressions.
00:16:08.302 - 00:16:29.690, Speaker C: Like, I am a miner. I have three currencies I can mine on. These are the current market prices. This is how much hash power I have. This is my switching cost. This is my energy cost. Here is kind of a function that says this is how many dollars I can expect to make under this allocation.
00:16:29.690 - 00:17:45.102, Speaker C: And you basically have the miner try to optimize that. That is kind of like the simplest explanation of kind of trying to map these economic primitives to something that is a simple model. Now, with cryptocurrencies, there's actually this kind of hidden beauty to having a lot of public data. I think you can train a lot of these models based on how well they reflect observed output data. How well does your simulation's total hash power reflect realistic hash power? How well do you predict transaction fees? And do these users, these agents you're modeling, do they actually replicate the observed live data? While it's not as fast of a feedback loop as trading, there's still a lot of ways of basically taking simple models for how users behave. So describing how they value things, so describing their utility, like in classical microeconomics, and then describing how based on their utility, they take an action of hash power goes here, stake goes here. I will go and take a derivative.
00:17:45.102 - 00:18:41.780, Speaker C: I will go trade derivatives on BitMEX instead of trying to earn income in the chain. And you won't get everything on the first try. But that's true for a lot of statistical fields in both AI and in trading. A lot of times you start with the simple model, you see how poorly you do and you iteratively try to add features to the system such that the features are interpretable so you understand why the machine is doing a certain thing. And also features such that there's some risk assessment associated to them. They're not features that are they tell you they win 99% of the time, but you win a dollar 99% of the time, but 1% of the time you lose a billion dollars. So you try to bound what the variation in these features is.
00:18:41.780 - 00:18:59.370, Speaker C: A lot of this is just basically trying to take techniques from AI and trading and trying to make them map them to this space. And when I say AI, I'm including deep mind and fair, but also self driving car simulation.
00:19:00.030 - 00:19:13.920, Speaker A: Interesting. So how long does it take to do a full analysis then? It sounds like it's since you talked about it being iterative. Is it like a process over a month or like several months or can you do it kind of in an hour?
00:19:14.690 - 00:20:02.960, Speaker C: Yeah. So our goal is to make tools kind of just like you have in artificial intelligence, things like TensorFlow or PyTorch, where you enable users. So blockchain developers or people who are interested in understanding the assets they own to basically run different analyses themselves and then produce statistics. So the runtime of our simulation right now is basically we can simulate hundreds of thousands of blocks in a couple of minutes with thousands of agents. Obviously, these agents are relatively simple. We're not running AlphaGo every time for every agent. They're not doing some very complicated thing.
00:20:02.960 - 00:21:28.230, Speaker C: But you can run the simulation and get statistics within a few minutes. You can run many different simulations with different parameters and kind of choose the best one. You can run them in parallel. Another way of thinking about how this is useful is you basically can pick the set of parameters you want, run these simulations, get some statistics, and then kind of look, analyze the statistics, things like how does the reward distribution change after 100,000 blocks given this initial token distribution? And that's a problem that a lot of proof of stake protocols and new contracts face because they want to figure out how to initially distribute their assets, but they don't know whether by distributing it in a certain way they will concentrate all the assets in a small number of holders very quickly or very slowly. And so right now, our analysis is more custom to some extent, although we do host different virtual machines such as Ethereum. So you can give us a contract and you can basically input the contract into the code. And we have a little kind of programming language that lets you define the different users and then you can run the simulation and then in a couple of minutes you'll have some results.
00:21:28.230 - 00:22:17.378, Speaker C: The analog I think that I like to use is game engines. So game engines, so a lot of video games, basically the basic core architecture of these pieces of code is there's a core engine, which is the event loop. It manages the events that characters in the game produce. And events mean I shot a gun or I jumped or I did something. Then there's kind of the map, an ambient background, which is the set of physics that is common to all characters in the game. And then lastly, there's the characters and objects themselves which are described in kind of this domain specific language. So in unity, you use C sharp.
00:22:17.378 - 00:22:53.380, Speaker C: In unreal, you use C plus plus. In sort of mobile gaming languages you use Swift or sometimes Python. And there you define a user based on its actions. So like your character, if it gets shot, it will run away. Or your character pulls out its sword when it sees the sunlight. Those are the types of kind of little actions you encode. And then when you play the game, you basically are running this thing where the characters move and when they interact, the physics is constrained by the map and the engine.
00:22:53.380 - 00:23:13.434, Speaker C: And our simulation is sort of the same thing, except you replace physics with economics. So the map of the game is the set of economic primitives in a cryptocurrency or smart contract that is common to all users. And then the characters are kind of like the individual actors. You describe how they behave under different.
00:23:13.472 - 00:23:55.590, Speaker A: Circumstances and then just to also draw out a different comparison, when I first learned about what you do, I kind of thought to myself, oh, this is similar to formal verification in the sense that you're ensuring that the intentions in the design kind of play out in real life. But the difference is that is formal verification simply focused on kind of like how would I describe it? Sort of like discrete actions with the smart contract. Whereas what you're looking at is how this will play out economically.
00:23:56.650 - 00:24:19.070, Speaker C: Yeah, exactly. Basically there are really two types of security. Well, I guess you could say three types of security. There's cryptographic security. Are your signatures correct? Is your zero knowledge proof correct. Is your hash function behaving as expected? Like is the randomness as random as it should be? Then there's code. Correctness.
00:24:19.070 - 00:25:24.798, Speaker C: Is your code allowing people to reenter certain functions like in the Dow hack? Or is your code allowing people to send all the value in the contract somewhere else? And those are kind of like the very extreme edge cases and formal verification is really good for that. And then the last thing is economic security. Is there enough reward or is the reward distribution sufficient to ensure that all participants get sufficient return on investment or sufficient reward in however they measure it? And that's really kind of where we come in in trying to say, okay, well, your contract can be perfectly correct. It can be running on any blockchain you want. It can be running on polkadot, be running on telegram, be running on Facebook. But you've chose parameters. Your interest rates or how you distribute rewards in such a way that users are not really incentivized to participate in your network.
00:25:24.798 - 00:25:36.806, Speaker C: They don't feel like they're getting what they want. And that's kind of where running simulation can give you a lot of the economic understanding that you can't really see even just from looking at the source code.
00:25:36.988 - 00:25:51.630, Speaker A: And you kind of mentioned your business model a little bit. It sounds like you started doing kind of custom work and then maybe are transitioning to eventually having software that maybe teams could license or something. Did I understand that correctly?
00:25:51.970 - 00:27:22.742, Speaker C: Yeah, we plan on selling a hosted service where it's like a hosted developer environment and you can access the libraries there so you can input your contract or give a URL to your contract and potentially directly to your client for some protocols. And basically write agents, script the agents the way you would script a character in a game engine like this user behaves this way when the bitcoin price is greater than X. Or use agents from a library that we'll have so you can say, okay, I want agents who are risk averse and kind of rational and we'll have some examples of different types of users and you can use them and then you can run these simulations. So the business model is sort of a little more it's more of a traditional SaaS type of business. I think there are a lot of benefits to kind of doing it this way from the perspective of having statistical transparency about what the models are, but also handling the infrastructure and handling the background execution and making sure that things work. Because there are a lot of moving parts when you try to build these kind of big systems and simulations. And there are companies that have been quite successful at doing this in gaming.
00:27:22.742 - 00:27:37.520, Speaker C: In particular, there's a company called Improbable, which basically sells a simulation service where game designers can run millions of simulations and stress test the AI and automated characters in the system.
00:27:38.370 - 00:27:42.000, Speaker A: You were involved in the launch of Facebook's Libra. How so?
00:27:42.870 - 00:28:41.266, Speaker C: Yeah. So before I actually had started Gauntlet, I talked to the Libra team because it turns out and someone who's my intern a long time ago, was working on the team when they were, like, less than ten people. And he told me to talk to Evan, who's their head of engineering, and I was kind of curious to learn about what they're doing. But then I stayed in touch with them. And then as they sort of finalized their consensus algorithm and sort of some of the economics aspects, they asked if I could review their paper and kind of give some feedback. And comments, as well as kind of helping them figure out some of the economic decisions that they would probably have to make, especially since this is sort of Facebook's first foray into tradable products.
00:28:41.448 - 00:28:45.874, Speaker A: And did they end up kind of using the Gauntlet software, like doing the simulations?
00:28:46.002 - 00:29:15.470, Speaker C: Not yet. They're not quite there yet in terms of at the point where they're ready to do that, the launch date is still there's still quite a bit of lead time before they finalize the economics details. I think they've been more focused on getting nodes to run and getting kind of the consensus mechanism working, and I think that they've really pushed pretty far in that and also the programming language.
00:29:16.050 - 00:29:34.970, Speaker A: But what do you think about those aspects that they have so far, these different design choices, such as the decision not to peg the value of the coins to any particular currency, the new programming language move, and their consensus algorithm or any other features you want to highlight.
00:29:35.150 - 00:29:58.570, Speaker C: Yeah, so I think the consensus algorithm is a good choice in that they're not trying to reinvent the wheel. So kind of something that maybe is not known to a lot of people. But VMware Research has had a really solid infrastructure team working on distributed systems.
00:29:59.310 - 00:30:01.530, Speaker A: In particular, and they were involved in Libra.
00:30:01.610 - 00:31:09.620, Speaker C: They weren't, but Facebook took an algorithm that came out of VMware Research called Hot Stuff, and then they modified it slightly, but they didn't change it a crazy amount. And I think Hot Stuff has been getting a lot of really good acclaim. They just made a new version of it that got accepted to this really good conference. And I think a lot of people, including a lot of the tenderman folks, have been looking at it with a lot of eager interest because it does promise some pretty improved software performance over kind of the raw tendermint algorithm. Because you can do this pipelining thing where you basically can be a little more eager in how you accept transactions but get similar levels of security. So it's kind of a battle tested algorithm and it's one that VMware has actually really done a lot of work on improving. It's not introducing any new cryptography, it's just focusing on the distributed systems, byzantine fault tolerant side of things.
00:31:09.620 - 00:32:41.470, Speaker C: But I think even though it's a somewhat conservative choice, it's not like something like or Coda where there's a lot of new cryptography and a lot of new distributed systems engineering work that has to be done. A lot of that stuff has never been implemented at scale. A lot of the stuff within hot stuff is actually really well tested and I think the Facebook team spent a lot of time with a variety of algorithms and kind of came to the conclusion that this one had kind of the most similar technical properties to what they want to support, especially given the programming language. And I think their programming language is really personally, I think that's really the strongest thing in their offering, especially compared to the rest of the landscape. It's really developer friendly in a way that I think say solidity is not because of all kind of the security issues and the things you kind of force developers to think about. But I think the Move language has certain requirements for their virtual machine and they basically designed the consensus protocol around the language with the idea that the language is really the crown jewel in their eyes, I guess to some extent, which you can come to your own opinion on that from reading their documents that they're releasing.
00:32:41.890 - 00:32:48.910, Speaker A: And what about that choice also not to peg the value to any particular currency such as the dollar.
00:32:49.070 - 00:34:11.790, Speaker C: Yeah, so we've seen a bunch of attempts at doing a similar thing. So Basis of course, which was a stablecoin project, their long term goal was to peg to a CPI, not necessarily to a dollar, which is a consumer price index. So basically saying like one basis would always be equal to a certain quantity of a basket of goods, but those goods prices could fluctuate in dollars so it was not a dollar peg. Sello kind of has this hybrid model where they have a cryptocurrency reserve based model similar to MakerDAO hybrid with a signer shares model like Basis and then of course with multi collateral Dai. While you do have a dollar peg it is interesting because you may expect to see higher variation depending on the choices of assets that get added to the system. And I think in reality a lot of these pegs end up not being like pure dollar pegs. They always end up having a little bit of correlation to other assets and it's really hard to not do that and there are some benefits to doing that, especially if you want to be kind of this worldwide currency where stability in different.
00:34:11.790 - 00:34:40.306, Speaker C: Regions in the world will have actually slightly different local variations, like the local consumer price index might be heavily weighted toward a commodity that is very expensive in dollars. And you may actually want that to be more stable because it's locally produced. There have been a lot of examples of why one would want to do this, and I think there is some quite a bit of prudence to not going strictly to a dollar peg.
00:34:40.498 - 00:35:13.642, Speaker A: All right, great. So we're going to discuss proof of work versus proof of stake and some of the other factors that Gauntlet will look at after the break. But first, a quick word from, first of all, me, but then also our fabulous sponsors. Hey, everyone. Don't forget, Unchained is doing a survey, and if you give us your feedback, you can be entered to win some pretty awesome prizes. We want to know how do you think we can make the show better? How would you like to see Unchained expand? Please take a moment and go to surveymonkey.com r unchained survey 2019.
00:35:13.642 - 00:35:48.214, Speaker A: That's surveymonkey.com runchainedsurvey 2019. It won't take long, I swear. And when we get all your feedback, unchained will be even better than before. What more could you want than that? Okay, there is something more you could want. You could maybe want to win some of the prizes we're giving out to survey respondents. You could be one of the five lucky people to win a free Casa Bitcoin lightning node, plus a free year of CASA's Gold membership, including a multisig security app for iPhone and Android, a Trezor hardware wallet, a Casa Faraday bag.
00:35:48.214 - 00:36:12.702, Speaker A: And those of you interested in learning more about Casa or about protecting your bitcoin investment generally should check out my interview with CEO Jeremy Welch. Thank you to Casa for donating. Again, the URL is surveymonkey.com r unchained survey 2019. Go there now to give us your thoughts on the future direction of Unchained and enter the giveaway.
00:36:12.846 - 00:36:46.266, Speaker B: Today's episode is brought to you by Kraken. Kraken is the best exchange in the world for buying and selling digital assets. With all the recent exchange hacks and other troubles you want to trade on an exchange you can trust, kraken's focus on security is utterly amazing. Their liquidity is deep and their fee structure is great. With no minimum or hidden fees. They even reward you for trading so you can make more trades for less. If you're a beginner, you will find an easy onramp from five fiat currencies.
00:36:46.266 - 00:37:25.818, Speaker B: And if you're an advanced trader, you'll love their five x margin and futures trading. To learn more, please go to kraken.com. That's Kraken.com. Did you know that if money laundering were an economy, its GDP would be the size of Canada's? Large volumes of tainted crypto assets move through financial networks, often below the radar of banks. Cybercriminals use unregulated crypto exchanges to avoid detection. No wonder governments around the world are rolling out tough new antimoney laundering laws for cryptocurrencies. Complying with those laws isn't easy.
00:37:25.818 - 00:37:46.878, Speaker B: Banks and exchanges need the best cryptocurrency intelligence available to avoid penalties. Now you can use the same powerful AML and compliance monitoring tools used by regulators. CipherTrace is securing the crypto economy. To learn more, visit cyphertrace.com slash unchained.
00:37:47.054 - 00:38:23.120, Speaker A: Back to my conversation with Tarun Chitra of Gauntlet. So one of the things just earlier when you were describing how these systems work or how you analyze them, I just got curious, is there any particular parameter that has the biggest effect in determining how a system functions? Because you mentioned a bunch of different random things like block time, and in a second we're going to talk about proof of work versus proof of stake. So like consensus algorithm. But are you finding that there's like a single decision that tends to have some huge effect?
00:38:23.890 - 00:39:32.546, Speaker C: I think the thing that protocol developers right now are a little bit maybe are starting to see isn't a very important economic decision, is how transaction fees are computed. So in Bitcoin, of course, with kind of the fully deflationary model, transaction fees are tending to have an increase in surge pricing. So as the block reward decreases, you start to see huge increases in transaction fees when the mempool gets clogged. So the mempool is kind of the set of transactions that a miner sees that they can include into blocks. And also, you've seen this with Ethereum where in December 2017, during kind of the craze CryptoKitties kind of spammed the network and no transactions were going through. And in fact, I mean, you've seen a bunch of other times since then, but I guess that was kind of the most famous one where transaction fees went really high. So gas cost, which is a cost for running an operation, spiked a lot and users kind of got very poor quality of service.
00:39:32.546 - 00:39:46.646, Speaker C: So designing really good transaction fee models and modeling for how pricing should adjust with demand is really going to become way more important as these systems increase in use.
00:39:46.828 - 00:39:51.340, Speaker A: Yeah, and I think that was a factor in the DDoS attacks in Ethereum in 2016, right?
00:39:51.870 - 00:40:10.266, Speaker C: Yeah, I mean, it's the easiest way to kind of cause malfeasance with low capital cost. It's much cheaper than a 51% attack, and you can just ruin the quality of service for a large portion of the network for not very it appears.
00:40:10.298 - 00:40:46.122, Speaker A: To be a lot more effective than a 51% attack. Well, at least with Ethereum classic, last fall, we saw that it didn't really have the same effects in real life that the Game Theory had. Posited and I was actually talking about this with Olaf. I can't remember if this was in. Yeah, I think this was in the recording that we released from our conversation at Consensus. So for those of you interested, you can listen to that episode. But I mentioned to him, oh, that's an example of how the Game Theory didn't play out.
00:40:46.122 - 00:41:06.660, Speaker A: And he mentioned that, well, that just shows the difference between game theory and behavioral economics. So for you, when you're making your models, how much are you using game theory and how much are you using behavioral economics to make the models? And what do you think is more important?
00:41:07.190 - 00:41:46.814, Speaker C: Yeah, that's a really good question. We basically try to take an approach that's in the middle of the two. And I think that's usually how algorithmic traders also deal with trading strategies. Basically, you try to map to historical data as well as possible. And historical data, almost always in trading scenarios, doesn't reflect the optimal game theory choice. People don't choose the best transaction fee or people don't choose the best execution fee when they're trading on an exchange. Oftentimes they choose what's easiest or what everyone else is doing.
00:41:46.814 - 00:42:46.946, Speaker C: And you kind of have this pseudo short term tragedy of the commons type of behavior, which is way more akin to the allegories of behavioral economics, like Things and Thinking Fast and Slow, that book by Daniel Kahneman, the Nobel Prize winner. So we try to make models that incorporate a know certainly a lot of rationality, where it's people who are measuring statistics and they're optimizing for those statistics. They have a function that tells them what their value is, and they optimize for that. But then we also add in a lot of kind of these known mistakes that humans tend to have where they misorder or misrank the relative rankings of goods that they want to purchase. And we try to basically add in some noise that looks akin to how behavioral economists analyze real economic data for that.
00:42:46.968 - 00:42:57.800, Speaker A: Do you also throw in ideology? Because, as we've seen, that has led some people in the crypto space to do things that are probably against their financial interest. Self interest?
00:42:58.650 - 00:43:52.840, Speaker C: Yeah, absolutely. I think one of the most successful agent models from kind of the is a model called Byzantine Altruistic Rational. And you could argue that everything kind of falls on this framework where Byzantine is just someone trying to destroy the system. Altruistic is the religious believer, the true hodler. And then Rational is the person who is looking at the derivatives market continuously and trying to collateralize their perpetual swap on BitMEX. And you have to kind of model all three of those. You have to have people who are willing to lose a lot of money, especially in the bootstrapping phases of networks, when it's just very unclear how the demand distribution will tend to evolve over time.
00:43:52.840 - 00:44:10.090, Speaker C: So it's not perfect, but you're trying to kind of build this incremental set of updates where you first start with an okay model and then you see how it performs, then you add some features that correct for the observed behavioral differences, and then you kind of incrementally improve.
00:44:10.450 - 00:44:26.130, Speaker A: All right, so we've talked about how gauntlet measures for security. You kind of vaguely mentioned, like, inequality in a system. So what are the main factors that these teams are usually attempting to optimize?
00:44:26.710 - 00:45:41.100, Speaker C: Yeah, so in proof of stake systems, there are just way more knobs. There's a sense in which proof of stake systems really are kind of structured financial products. When you're getting a fixed income, in theory, or an expected fixed income, but you can get slashed or you can lose your deposit, or you can basically not participate in the system because you messed up some type of forwarding or signature or aggregation event. And in these systems, you kind of have something that looks like a Frankenstein structured product from, in some ways, ironically, 2008. A proof of stake system is a bond, but it's also a swap sometimes because you're swapping interest rates with other validators. If they happen to be a fisherman and they provide a fraud proof for you, you've lost down some reward you were supposed to get, and you basically swapped with them. And I'm not trying to color how regulators will eventually think about these, but they are very similar.
00:45:41.100 - 00:46:57.410, Speaker C: And those products. One of the reasons you needed such high fidelity, to some extent, financial engineering, which went wrong, of course, was because there were so many knobs you had to turn. So what is my emission schedule? What should my interest rates be? How should I discourage validators from going offline? How should I encourage validators to stay online? These types of problems are a little easier to reason about in proof of work because the ROI is much more clear. It's much more tied to how much hash power do I think there is? How much is my energy, and how long can I go losing money versus in proof of stake? A lot of it is like, do I even understand what the economics of this system are? Is it possible that I can get inflated away to zero, even though I've contributed a lot in the beginning? And I think that's really where people are quite worried and do really want to kind of tune these parameters to encourage healthy demand and also reward early participants for joining early without overly incentivizing them in a way that basically means that no one will use their network.
00:46:57.830 - 00:47:35.806, Speaker A: Well, that's kind of concerning, given that I wouldn't necessarily say that there's already a shift towards proof of stake systems, but there's at least a proliferation of new projects that are attempting proof of stake systems. So do you kind of foresee that we'll see a lot of these projects losing money for people over the next few years until there's kind of, like, more learning around how best to design such a system? Or do you think that it's really just better for projects to stick with proof of work? Or, like, Decred has a hybrid system?
00:47:35.908 - 00:48:34.030, Speaker C: Yeah, so I think these experiments are really invaluable because they're teaching us a lot about structured products, and I want to make kind of a historical analogy to explain why it's really useful that we're trying them. In the 1970s, really late the late 60s, options were invented for US. Equities. So options are basically the right to, well, exchange traded options. Options were kind of traded over the counter before, and options were known as kind of the wild land, kind of the way people treat cryptocurrencies and derivatives at that time. But in the 80s, basically, these economists figured out a statistical model that explained how one can tie the value of the option to the value of the underlying equity. So in an option, it says, okay, I want to buy Apple stock in one month, and I want to pay this price.
00:48:34.030 - 00:49:47.858, Speaker C: Will you sell me the right to do that? So I pay a fee upfront, but I kind of lock in my price for that stock in a month, and the market is kind of figuring out how to set the upfront fee. So that's what the option sort of price is. But because there was not a common ground for traders to compare options for, say, Apple versus Google versus HP, well, other than HP, none of those companies existed then. But you know what I mean, some companies that were on equities exchanges then, it was very hard for traders to actually reason about the risk they were holding. And then once this formula, which is called the Black Scholes formula came up, you started to see a huge increase in demand for options products because people could figure out how to quantitatively reason about the economics of them. And I foresee kind of the same thing happening for proof of stake, where over time, the models for understanding the reward distributions will just strictly get better. And there will be something akin to the Black Scholes formula that makes it easy to understand what the volatility, the expected income is, how these different products interact with each other, how surge pricing works.
00:49:47.858 - 00:50:26.230, Speaker C: Does polkadot provide a better return to fishermen under surge pricing than Cosmos? But do you get better average income on Cosmos versus polkadot? Those types of little nuances will be able to be compared and understood by participants as long as we keep moving kind of the economics modeling forward. And that's really where I see the proof of stake experiments providing us kind of the black shoals of this space, like, how much is civil resistance worth and how should we price it, and what derivative products do you need to hedge risk?
00:50:26.810 - 00:50:41.900, Speaker A: Okay, so it sounds like you wouldn't necessarily say that the complexity of a proof of stake system means that proof of work is simply superior for a token. Is that right? It sounds like both sort of, like, have their place.
00:50:43.630 - 00:51:32.090, Speaker C: I don't think there is sort of an obvious way to compare whether one is superior to another. I tend to think that the special purpose blockchain model, it does kind of make sense where you have a bunch of different chains that are specialized for certain applications and there's some way of them interacting makes the most sense. But how to value all these different assets under one umbrella in, say, like a polka dot manner where you're sharing security can be quite difficult. And I think we're not at the point where there is a notion of volatility that is well understood for these assets.
00:51:32.510 - 00:51:41.374, Speaker A: I want to also just say so for proof of work. I've heard you talk about how difficulty adjustments can affect the simulation. Can you talk about that?
00:51:41.572 - 00:52:54.206, Speaker C: So selfish mining, the kind of attack where you hold out a bunch of your hash power and you get to kind of make this separate chain that gives you all of the coinbase transactions, all of the main block rewards with higher probability than you should, is actually very closely tied to how the difficulty adjustment works. Difficulty adjustment is basically kind of this way of the system trying to, on average, estimate what the correct total hash power is. At the end of the day, the difficulty is totally tied to the total hash power in the system, and the system rebalances how it redistributes rewards more or less based on this adjustment. Now, if you are a selfish miner, you're holding out a significant portion of hash power. Selfish mining is, say, effective at 20% to 30% of hash power. You're holding out 20% to 30% of hash power. So the system is measuring difficulty incorrectly because it can't actually see how many block should have been produced.
00:52:54.206 - 00:53:37.650, Speaker C: So it says, okay, I'll make the difficulty lower because it looks like there's 20% less hash power. And so using that, making sure that you get the difficulty adjustment correct in simulation and that this selfish mining behavior which you do know can occur is correctly represented, is very important to getting an accurate simulation of proof of work, especially given that you want to make sure you get the forking probabilities right. You want to make sure you get kind of the you want to allow user miners to withhold blocks because that is one of the best known attacks that does affect all blockchain systems.
00:53:38.310 - 00:54:21.600, Speaker A: Yeah. And even though we were talking about how proof of stake has a lot more different factors that can affect security for proof of work, difficulty adjustments are pretty regular. Like with Bitcoin, it's every two weeks. I don't know how often it is for other systems, but this isn't like something that just happens like once a year or something like that. So there's kind of a lot of opportunity for attack. So something else that you mentioned earlier was about the initial token distribution and how that can affect inequality. What are you finding in terms of what are some of the good ways to distribute tokens so that way you don't have a lot of inequality in a system.
00:54:22.710 - 00:56:04.686, Speaker C: Yeah, so I think especially in sort of the more financial product assets in the system like Maker, you have a lot of different stakeholders who have tokens. You have the CDP holders, you have the Dai holders, you have MKR holders, and you sort of have people who are the keepers. And in all of these systems, you have a bunch of different types of users. And figuring out what ratio of the rewards those different types of users should get is really important. I think token distribution for layer one blockchains is kind of a little more straightforward. But token distribution for, say, Maker is actually kind of interesting because the question is, will one set of users be able to hold the other set of users hostage if they don't get enough rewards? And where is kind of that transition point where, say, the keepers of the system who are checking for defaulted CDPs if they don't get enough ROI, is there some point at which they'll just stop doing that and then there'll be a ton of defaults? So that's kind of the stuff you can use simulation to estimate to see if you're assuming that, say, keepers are rational where they will kind of only stay in the system if they get enough rewards measured in dollars, then maybe they need X percent of the total initial token distribution. Those are the types of things I think are really important for these systems because at the end of the day, people are participating in this for some type of ROI.
00:56:04.686 - 00:56:31.130, Speaker C: Whether the ROI is in the chain asset or whether it's in dollars or whether it's external, those can vary. But people are doing this because they are trying to work and participate in these systems to gain some rewards and making sure that those reward distributions are equitable enough that the system functions gets increasingly difficult as these systems get more complicated.
00:56:31.950 - 00:56:47.710, Speaker A: And what about projects that have on chain governance? Is that something that is a situation where using something like Gauntlet would be maybe not exactly necessary, but where it would be pretty imperative?
00:56:48.610 - 00:58:34.194, Speaker C: Yeah, I think everyone desires having educated voters in political systems and in proof of stake and governance systems. You have a new type of voter where a voter is this kind of financial voter, but they don't really have a great way of being educated about the decisions that they're voting on right now. If you think about it, most governance votes, a few open source developers at the end of the day, still are the only ones who understand the true changes to the code. And most of the rest of the governance process is filtering through Twitter and filtering through Reddit and all of these different forums where people can read commentary on what these changes mean. We would like to be a neutral third party, an independent source who owns no tokens, who you can use to basically put in different parameters that represent yourself. Like, this is how I believe I would participate in the system? And how does that change under all these different governance options? So does tezzos at x percent interest rate versus two x percent interest rate affect my personal utility in a negative way? And if so, then I will vote that I can use that to be an informed voter. So we envision a world where we can help provide users kind of this neutral, independent way of measuring the economics of these systems and a feeling in which they can really be confident in the decisions of the things they're voting for, which will be especially important over time.
00:58:34.194 - 00:59:26.130, Speaker C: In the US. Equities market, it actually has taken a very long time for voting participation to break 50%. It's something around 72% of equities are voted for right now, but most of that is because there are proxy voting services. So there are services that your broker may use, and you may not even know that basically vote based on some independent research. I suspect there's going to be some hybrid system for governance in the crypto space where there's kind of this proxy voting aspect, but there's also a lot of independent voting. And we just kind of want to be a place where you can get a lot more information and be an informed voter.
00:59:26.950 - 01:00:05.200, Speaker A: And earlier you talked about kind of there's the factors that you have to consider at the protocol level, but then also you have to factor in how the exchanges, how they're affecting behavior. So when you model that, are you literally kind of doing things like, okay, here's a trader on kraken, which allows this type of leverage, or here's a trader on BitMEX, which allows this type of are you doing stuff that's that kind of detailed or how do you model that part?
01:00:05.570 - 01:01:18.846, Speaker C: Yeah, absolutely. We don't necessarily do like full order books just for speed reasons, but we'll model kind of the inside levels of exchanges. So take historical data for, say, BitMEX or coinbase, and our simulation will basically provide that almost like an oracle to all the different agents, all the different users in the system, and they can decide whether they want that as an input into their value function. So their value function, say, for a bitcoin miner, might be, if bitcoin's price is greater than 10,000, sell all my bitcoin, but if bitcoin's price is lower than 3000, divert all my resources into mining, which kind of represents their risk profile. They want to be in dollars when bitcoin is really expensive, like, they galled out. But when bitcoin is cheap, they want to be accumulating in some fashion. And so in order to correctly do that, you need to take historical data like market prices, and then you need to also model how these agents will respond to those market prices.
01:01:18.846 - 01:01:39.530, Speaker C: So we take historical data. And this is a part where I think my co founder and I, we both were in high frequency trading for a long time, and then he also worked in self driving cars. And we basically took a lot of the tools that you use for back testing your strategies and mixed them in with kind of how you would stress test a protocol.
01:01:40.210 - 01:01:49.550, Speaker A: And as the space gets developed more and there's more derivatives that are built on crypto assets, how will that affect your analyses?
01:01:50.850 - 01:02:36.190, Speaker C: Yeah, I think derivatives are actually in a lot of ways the thing I'm most excited for to some extent in the space. I think there are a lot of really novel products that are coming out right now. Like hash power derivatives, where miners can basically sell a future for future hash power. And then as they turn the hash power on, then they basically give in a continuous fashion. All the bitcoin they earn over that time period back to the person they sold the future to. And people are doing the same thing for Staking right now. Those assets are really hard to price and they're really hard to especially with Staking.
01:02:36.190 - 01:03:33.810, Speaker C: And so we kind of view simulations as the only way you can really figure out how you should price those things, how much risk you want to hold, and whether you think there's actual long term value in being a participant who hedges your risk. I think derivatives are going to be really important for validators who basically are exposing themselves to risk in multiple chains and they want to just kind of make their income look constant or look roughly constant. And you can back test against derivatives. And I think one of the most innovative things that's happened in this space has actually been things like perpetual swaps, which you don't have in the normal futures market where you kind of have these consistently rolling futures contracts. So you can kind of get in and out of these derivatives at all times of day without any kind of huge adverse selection.
01:03:34.390 - 01:04:03.660, Speaker A: And we kind of talked a little bit about DeFi and the ways in which some of the things you can do in DeFi remind people of the different behaviors that led to the financial crisis. So when you look at that, are there any particular design choices that some of the teams are making that you think they could make in a certain way to prevent that from happening again?
01:04:05.710 - 01:05:16.178, Speaker C: It's hard to say. In every crisis historically you always find some very complex loophole that people take advantage of. And I think the nice part about crypto right now is that you're in this exciting time where people are really doing these experiments and they're not really that big. People talk about x million dollars locked up into a contract relative to the size of the experiments that are happening in conventional finance. These are kind of very small, but yet we're already getting quite rich data about their failure modes. I don't think there's any particular individual thing that I would say is easy to fix because the DeFi products that I've kind of seen, they all are really focused on trying to help long holders of Ethereum get exposure to other things without being able to lose their Ethereum exposure. And at the end of the day, that's not going to ever really be that different than a lot of the stuff from 2008.
01:05:16.178 - 01:05:45.500, Speaker C: And I think the best thing you can say is, well, it's a more transparent version and I guess it's way more over collateralized. Like I said, I think these are small size experiments where we're getting a lot of really good data on how to improve the next generation. And that's kind of the stuff I'm really excited about is that people in finance are too conservative to do these types of things.
01:05:45.950 - 01:06:01.280, Speaker A: And I was wondering, do you think that the Dow would have occurred, the Dow hack would have occurred if that project had been able to use Gauntlet first? Or is that more of like a formal verification issue? I wasn't quite sure.
01:06:01.650 - 01:07:09.926, Speaker C: Yeah, that's definitely more of a formal verification issue. So the Dow hack was kind of beautiful, but it also had to do with the sort of reentrancy, which means that you could kind of get back into a certain function call repeatedly. But I think formal verification has a lot of performance issues. When we were building Asics, even though hardware formal verification is definitely different than software formal verification, the graph algorithms that are at the core are the same and those are where the real exponential slowdowns come up. And a lot of things in practice end up doing formal verification, a combination of formal verification for very core parts and then statistical verification for everything else. And that's kind of where I view how Gauntlets complementary to formal verification. We really kind of tell you, hey, if you're in the Dow, this management fee that you're paying to the contract is too high because no one else, most of it's accruing to the first five users and then the rest get none of it.
01:07:10.028 - 01:07:15.990, Speaker A: All right, are there any particular projects out there right now that you think have particularly well designed crypto economics?
01:07:16.490 - 01:08:24.794, Speaker C: I think Maker with the Dai savings rate is a really great project. I think that it's going to be much more complicated with multicolateral Dai, especially because each asset is going to have its own set of parameterizations and the users are kind of going to have to be involved in picking those parameterizations and it will be messy. But I think the Maker team is really quite thoughtful about these design decisions. I think some of the live networks who have had spam problems so like Stellar and Ethereum, they've really learned a lot of lessons from these attacks and the collective learnings from all of these attacks of going into the next generation systems. But on the layer one side, I wouldn't say that I have any particular protocol where I. Think the economics are really well designed. It's really hard to know, given that the demand distributions are really hard to predict.
01:08:24.794 - 01:09:22.190, Speaker C: It would be like going to Uber in 2010, like when they first started, and saying, hey, I think you guys are going to need a really good surge pricing algorithm. Just a tip, and here it is. And they would probably look at you and be like, we just need to figure out how to get drivers onto our platform. Do you know what I mean? I think it's a little early for us to say, because everything will boil down at the end of the day to the true demand distributions. Gauntlet's mission is just to be a little early, but to really start the modeling aspects of that. So that when there is kind of this demand, and I think we're all hopeful about Facebook bringing some of that demand to the ecosystem in general, there is a way for people to understand what numbers they're choosing and how they're voting and what they're buying.
01:09:22.530 - 01:09:31.300, Speaker A: All right, so last question. What do you think are the biggest questions or design issues that crypto teams are not thinking about that they should?
01:09:32.390 - 01:10:30.834, Speaker C: Yeah, the number one thing I think that people kind of ignore is the existence of derivatives. And I think the CFTC had this request for information about Ethereum that closed in February, I believe, where they gave 25 questions about different aspects of Ethereum. So they wanted to understand what was Ethereum, what smart contract platform, why would users use it? And I think the crypto Twitter world kind of derided the CFTC. They're kind of like, oh, they're dumb. They couldn't read anything, they didn't know anything. But I think they're just very complete because the last set of questions they asked, in particular questions 17 through 25, really focused on the effects of external derivatives markets, on the security of proof of stake systems. And I think proof of stake systems are just very easily liable to attacks from well functioning derivatives markets.
01:10:30.834 - 01:11:30.700, Speaker C: Right now, the proof of stake derivative market is much smaller than the underlying market. So you can't do a synthetic 51% attack because there's just not enough liquidity. But I think in a world where you have something like the S and P 500, where there's a lot more liquidity in the futures market on Es, which is the Emini S and P 500 future than there is, on the underlying. You can actually have people selling the rights to more than 50% of the Staking asset off chain. And then someone could be aggregating that indirectly. And I think thinking through these types of attacks has been kind of less really nonexistent, I think, in the crypto community, possibly because it involves thinking about the financial aspects. And there's definitely a little bit of Ickiness, I think, for crypto protocol developers and cipher punks to kind of think about these things for some reason.
01:11:30.700 - 01:11:36.730, Speaker C: To them philosophically, they feel like it's icky.
01:11:37.390 - 01:11:45.230, Speaker A: Yeah, I agree with you on that. It's kind of interesting to watch. All right, well, where can people learn more about you and Gauntlet?
01:11:45.890 - 01:12:31.580, Speaker C: Yeah, so we have a website, Gauntlet Network. We also have this series of blog posts where we kind of go through the different aspects of what make blockchain secure and how we think about security and modeling users and a little bit about how algorithmic game theory and trading kind of influence how you should model users. And we published an academic paper with one of our customers, and we're going to have a couple more coming out soon, so we're trying to really put out a lot of content to make it kind of salient. So over the next few months, I think you'll be seeing a lot of stuff out from us.
01:12:32.350 - 01:12:35.178, Speaker A: Great. Well, thanks so much for coming on Unchained.
01:12:35.274 - 01:12:36.286, Speaker C: Yeah, thank you.
01:12:36.388 - 01:13:04.290, Speaker A: Thanks so much for joining us today. To learn more about Tarune and Gauntlet, check out the show notes inside your podcast player. If you have not yet taken the Unchained podcast survey, please now go to surveymonkey.com r unchained survey 2019. Your answers will be a huge help to me and my team here at Unchained. Unchained is produced by me, Laura Shin with help from Fractal recording anthony Yoon, Daniel Ness and Rich Drafolino thanks for listening.
