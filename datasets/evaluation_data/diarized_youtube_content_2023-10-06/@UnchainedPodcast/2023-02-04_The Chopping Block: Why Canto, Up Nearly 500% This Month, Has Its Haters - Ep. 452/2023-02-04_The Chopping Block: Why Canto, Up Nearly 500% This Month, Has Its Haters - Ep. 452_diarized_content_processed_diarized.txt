00:00:00.330 - 00:00:02.398, Speaker A: Not a dividend, it's a tale of two fun.
00:00:02.484 - 00:00:05.162, Speaker B: Now your losses are on someone else's balance sheet.
00:00:05.226 - 00:00:07.722, Speaker C: Generally speaking, airdrops are kind of pointless anyways.
00:00:07.866 - 00:00:10.618, Speaker B: Unnamed trading firms who are very involved.
00:00:10.714 - 00:00:12.782, Speaker A: Alec ETH is the ultimate on this.
00:00:12.836 - 00:00:15.840, Speaker D: DeFi protocols are the antidote to this problem.
00:00:16.770 - 00:00:35.442, Speaker B: Hello everybody. Welcome to the chopping block. Every couple weeks the four of us get together and give the industry insiders perspective on the crypto topics of the day. So let's kick it with intros. First we've got Tom, the DeFi maven and master of Memes. Next up we've got Robert, the crypto connoisseur and captain of Compound. Then we've got Tarun, the gigabrain and grand pooba at Gauntlet.
00:00:35.442 - 00:01:05.694, Speaker B: And finally you've got myself. I'm haseeb the head Hype man at Dragonfly. The four of us are early stage investors in crypto, but I want to caveat that nothing we say here is investment advice, legal advice, or even life advice. Please see Choppingblock XYZ for more disclosures. So we have all decided, we've made a New Year's resolution that after the last couple of shows we are going to do a moratorium on bankruptcy talk, FTX talk. We've covered a lot of that stuff this year and looking forward to 2023. We want to talk about something other than that crap for at least a while.
00:01:05.694 - 00:01:27.190, Speaker B: If you want to hear about bankruptcies, I don't know, there's other shows that are going to talk to you about bankruptcies, but crypto is just so there's so much stuff going on in crypto. I was telling these guys that the Fed just ended up hiking interest rates 25 basis points, which got markets excited, but everybody told me they don't want to talk about that because that's going to be a little bit too boring for our chase. Is that right, guys?
00:01:27.340 - 00:01:34.490, Speaker C: Yeah, if you want to be a macro trader, larper, you can go listen to all in, but this is a crypto pod.
00:01:35.950 - 00:02:17.766, Speaker B: All right, that's fine. Well, there's been a good slate of crypto news this week, some of it more spicy than others. Maybe the place we can start is that one of the pieces of news that's been going on this week is that there's some drama in crypto Twitter about bitcoin NFTs. So I did not know that bitcoin NFTs were a thing. Apparently they're not super, they're kind of a thing. So it comes down to this project called Ordinals, which was launched by Casey Rod Armor, and the TLDR is that there are these NFTs on bitcoin that basically they are being. So you have like a satoshi, which is the smallest unit possible on bitcoin that you can transfer.
00:02:17.766 - 00:03:12.140, Speaker B: So you take this one satoshi and this one satoshi, when you transfer it, it has some metadata that you shove into the witness that is like, okay, here's what the NFT is, here's what it does. Here's the color, the size, or whatever metadata you put with the NFT. And so all this stuff is not depending on how you qualify the witness, which the witnesses can now be larger in bitcoin thanks to taproot. They don't necessarily have to be persistent on chain, but a lot of people do persist these witnesses. So that's where this NFT metadata is going and it is making people in bitcoin land mad. They are mad that there are some people who are shoving this NFT data into bitcoin witnesses because it's quote unquote clogging up the chain. Now these Ordinals in absolute terms, they're not super popular, there's not a ton of volume right now, I think, going through these bitcoin NFTs, but there's a lot of argument about it.
00:03:12.140 - 00:03:26.830, Speaker B: They have a dancing baby one. These are beautiful, absolutely beautiful. Wow. What are your guys thoughts on the ordinals drama and bitcoin people getting mad about NFTs?
00:03:27.250 - 00:03:33.114, Speaker D: I just don't understand why any bitcoin supporter would be mad that people are using the bitcoin blockchain.
00:03:33.242 - 00:04:06.518, Speaker A: I think one of the most hilarious thing is actually so there's a meme about hitting the witness size limit, which is like around four megs, and we actually just did it an hour ago before this recording. So like Wednesday, February 1, around five ish, between five and 06:00 p.m.. Like in the last hour ish was the first block and it cost 0.1 BTC. It was like basically nothing for filling the whole block. So who don't like big blocks, they're just kind of mad people about everything. It's like the Luke Dash Jr.
00:04:06.518 - 00:04:57.754, Speaker A: The Adam bach et. But I think this brings up a very interesting point about blockchain upgrades. People in hard forks, like what Ethereum has and Solana seems to have unintentionally every few weeks, is like you make quite drastic changes, including to the block size, like how many transactions you're allowed to have per block, but you do it in a way that people expect. People sort of expect those changes. Ethereum wallets expected EIP 1559. Ethereum users expected changes to transaction fees when hard fork to add such a change took place in bitcoin. Historically, people have been quite resistant to it.
00:04:57.754 - 00:05:44.620, Speaker A: But one interesting thing I would say I observed about the NFT move of 2021 is that bitcoin maximalists loved NFTs. They may have been like DFI, it's just finance again, but they seemed to really love NFTs. And I had observed a lot of bitcoin maximalists, or self proclaimed bitcoin maximalists, really going wild on buying NFTs and making NFT anons and stuff like. So I think this just is a testament to like hey, if the community really wants this and you made a mistake with not being very careful about block size, then you might never really control your block size in some way. There's a social element to that that I think is rearing its head here.
00:05:45.870 - 00:06:50.938, Speaker B: It's honestly bizarre to me. One, that this is such a I mean, in a way the story the story here is not really that bitcoin NFTs are taking off, right? That's not actually what's happening. It's more that it's like the story is the story about the story that people are mad that this is happening, which very much does speak to the psychology of bitcoin maximalists. But it's also I mean, look, as venture capitalists, all of us are investors and we've all seen a kajillion pitches for, oh, this thing happening on ethereum, we're going to put it on bitcoin where people are more virtuous and just and that's where it should really happen. Right? So, like, oh, you should get a roll up and somehow get that into bitcoin, or you should get a game and somehow launch on bitcoin or DeFi. Of course, there was a whole generation of DeFi on bitcoin that certain investors were just there were certain funds that just loved funding DeFi and bitcoin, and now we've got NFTs on bitcoin. But it's always kind of half hearted and it's always followed by this trail of people who are just mad that it's happening, and then people who are like, oh, great, now that it's here, you don't need any other blockchains.
00:06:50.938 - 00:07:13.160, Speaker B: Thank God we have NFTs on bitcoin because we finally invalidated the need for every other blockchain. It just seems so angry. Right. I guess that's the one word that I feel like not bitcoin itself, but the bitcoin sort of community, or the bitcoin maxi community, is just they always have something to be angry about. And it seems like this is the thing de jour to be angry about.
00:07:14.250 - 00:07:48.020, Speaker C: Yeah, I think there was I forget who the quote was from, but in one of these articles, talking about a bitcoin contributor being incensed that people would use the blockchain for anything than transferring bitcoin. But if anything, bitcoin is in such dire need of more transaction fees and more volume, obviously, to offset the reduction in emissions. I think, unfortunately, this is not really picked up yet, but if anything, they should be applauding this, right? You should want people to use your blockchain and be willing to pay for it to maintain its security. And yet that hasn't really happened yet.
00:07:48.630 - 00:08:16.490, Speaker B: I just can't see this kind of thing working long term. All these auxiliary uses of bitcoin, or auxiliary uses of bitcoin block space, I should say, they just don't make sense. Right. Like, bitcoin was not designed for this. Yeah, you can do it, but why would you do it? The community just isn't there. The infrastructure isn't there, the discovery isn't there, the community is not there. The community hates this.
00:08:16.490 - 00:08:22.302, Speaker B: Look at all these bitcoin maxis just, like, yelling at people to get off their lawn. Of course this is not going to happen.
00:08:22.436 - 00:08:27.150, Speaker C: Yeah, it reminds me a little bit of what was people restoring weather data on DSV.
00:08:28.130 - 00:09:08.646, Speaker B: That's right. But I feel like that's emblematic of the way in which bitcoin has just scared off any application level innovation. When people tried to use bitcoin blockspace and they were using bitcoin cash or using bitcoin SV, it just becomes the butt of a joke. And Ethereum, I mean, that's the one thing I will give credit to Ethereum and its brethren, is that nobody ever really complains when people do dumb stuff on Ethereum. I mean, they kind of do a little bit if it's like, particularly noisy. I remember back when FCoin, which was this big trade mining exchange, was taking place in Ethereum. People got mad about that FOMO 3D, people got mad about FOMO three D, I remember.
00:09:08.646 - 00:09:33.326, Speaker B: But for the most part in Ethereum land, you just kind of take your lung. He's like, yeah, this crazy thing's happening on chain. It is what it is. There's like bonk on solana. People were getting mad about that for a little while, but then they're like, oh, yeah, I mean, I guess it's good for us that people are doing some stupid some other stupid meme coin. And I feel like that's the right attitude. If you don't have that attitude, you just can't really engender this kind of innovation.
00:09:33.326 - 00:09:38.354, Speaker B: I mean, innovation is a strong word for it, but ultimately it is innovation, right? Like, if you don't let an NFT.
00:09:38.402 - 00:10:58.640, Speaker A: Marketplace pop up, it's actually very innovative to have know, in bitcoin land they have had this thing called Op Return, which effectively lets you write a piece of data to the bitcoin blockchain, but you as a node operator can decide not to store things held by opera. So you can parse the entire blockchain, but you can kind of prune or throw away such data. And there was always this huge fight over whether to make it bigger or, know, Jeremy Rubin, who just actually retired as a bitcoin developer, who's kind of been around bitcoin development for a very long, know he was trying to get a sort of complicated extension that would have sort of allowed some type of smart contract like covenants to be added and some of it relied on Opern. And that was voted down after years of lobbying. That was years of lobbying. And I think it's very creative that someone figured out that, hey, Taproot actually accidentally allowed you to do things that you thought you would do. That just I think at some level this might actually spur a lot of innovation per se that will maybe not keep the maxis happy, but I do get the feeling that there's like a large contingent of people who are really excited about this.
00:10:58.640 - 00:11:00.766, Speaker A: Larger than I thought.
00:11:00.948 - 00:11:19.318, Speaker B: Yeah, I think innovation, it's more like catch up growth almost, right? Where it's like you import innovations from other chains and you try them out and see if they tick off in your country. And so far, the answer is that, well, the people in this country seem to hate it. They seem to hate everything. But I don't think they're not going.
00:11:19.324 - 00:11:23.320, Speaker A: To be loving the meme of spamming the blockchain right now.
00:11:24.490 - 00:11:29.862, Speaker B: Fair enough. Well, I think the village elders hate it, maybe is a better way to put it. The politicians.
00:11:29.926 - 00:11:38.060, Speaker A: But the interesting thing about the bitcoin politicians is I actually do feel like one virtue of bitcoin is that.
00:11:40.110 - 00:11:40.522, Speaker D: Their.
00:11:40.576 - 00:12:04.034, Speaker A: Thoughts don't matter as much anymore, or it doesn't seem like their thoughts have mattered seriously for a very long time outside of these kind of like core dev type of issues. And the thought leader people haven't even really committed much to development in some sense. They may have a long time ago. Yeah, that's true.
00:12:04.232 - 00:12:12.550, Speaker B: Robert, what is your view on bitcoin startups? Like people who are trying to launch stuff on bitcoin?
00:12:13.690 - 00:12:35.699, Speaker D: I mean, there's a lot of stuff on Bitcoin, right? Every exchange that supports bitcoin is something on Bitcoin, right. Coinbase is on bitcoin. Right. Anything that uses bitcoin is on bitcoin. Like, there's a million startups that use bitcoin in some way as an asset, which I consider in some degree a bitcoin startup. Right, okay.
00:12:35.699 - 00:12:42.640, Speaker B: Okay. You know what I mean, though. You know what I mean? Like DeFi on bitcoin, NFTs on bitcoin. What do you think of that?
00:12:44.210 - 00:13:25.882, Speaker D: Well, I don't think it's a fertile ground for know. Yes. Any Bitcoin maxi listening can find some possible way that it could be used to build anything, right. Just like, theoretically, like almost any low level language, like assembly, at a certain point, you can make a Turing complete system with it and therefore build anything, but it's not the right tool for the job. If you're going to build DeFi or something complicated, bitcoin is not the blockchain to build it on, in my opinion. I think it's great for the one use case it has, which is transferring value between parties. And that's the value proposition.
00:13:25.882 - 00:13:37.780, Speaker D: That's the narrative. That's the value of it. Right. I don't think it's going to be using this as the foundation for complex systems beyond just transferring value.
00:13:39.190 - 00:13:40.178, Speaker B: Fair enough.
00:13:40.344 - 00:13:50.520, Speaker D: I would think any startup that's like, oh, we're going to use this in this crazy way, it's like, well, why would that be your choice as opposed to all the other choices available?
00:13:51.770 - 00:15:23.566, Speaker B: Yeah, I think there's a lot of I saw this a lot in 2017, 2018, and then again a little bit in 2020, and I think it kind of fell off after that. I think this idea that a lot of very earnest founders who are like, okay, I'm going to learn about crypto, and of course, the first place you start is you learn about bitcoin, because Bitcoin, it's a granddaddy, it's the biggest blockchain in terms of market cap. And you see that all the people who invented bitcoin and are talking about bitcoin and developing bitcoin, they say all this other stuff is bad, and you need to genuflect and come pray at the altar of bitcoin, which means that you should do what the bitcoin maxis tell you to do, which is don't unnecessarily depend on other blockchains. And the trap that I think that they set is that although they sort of tell you there's almost like this purity ritual of, like, only use bitcoin, only settle to bitcoin, do all this stuff just for bitcoin. There are no users who will go along with it, right? So people will tell you, oh, if you do this, then everyone will be happy with you and you'll be in the good graces of the bitcoin high priests, but then people will not actually use your product for that. Right? So there's all these things I see, especially of really smart PhD guys who are like, I should do what the advisors tell me to do. It's almost like they see the bitcoin maxis as their PhD advisors, and they're like, okay, this is a blockchain that settles back to bitcoin or that gains there's some root of trust in bitcoin, or there's some other thing in bitcoin, and normal users just don't give a shit.
00:15:23.566 - 00:15:51.120, Speaker B: Like, they don't care. They won't use your blockchain because it does XYZ with bitcoin. And so you need to have something actually unique or interesting from a user experience perspective to get people to actually use it. Otherwise, the main thing you're going to get is just arguments that's most of what you get if you do something in a way that just totally appeases the bitcoin community is that people bitcoin maxes will argue about it on Twitter, and then if it's a big enough argument, we'll talk about it on the show.
00:15:51.490 - 00:16:41.280, Speaker A: That's pretty much I mean, I think you also get a lot of fake roll ups or fake roll up, like things on bitcoin versus, like, maybe have BIP 300 pass. Oh, wait, actually, developers never the bitcoin core devs don't want to add it. And instead you get all these half assed sort of bridge like constructs to other chains that like to self proclaim themselves as bitcoin enabled and then like, okay, fine, they're just running the Ethereum virtual machine, or they're running some other virtual machine, but they might as well just be their own chain. There's some dogma of affinity association, affinity marketing, and I mean, that not necessarily in a positive context towards such things that gets them off the ground, but then never gets them real.
00:16:44.450 - 00:17:21.830, Speaker B: Okay, so speaking of DeFi, one of the big stories this week has been the surge in activity and price around Kanto. Let's talk about Kanto. What is Kanto? So Kanto is a layer one blockchain that was built by the sort of not totally anon, but very vaguely anon. It's supposed to be a fair launch. The term fair launch, I think has evolved. We were just talking about that before the show started that I thought fair launch meant that there was no pre mine. But now fair launch essentially means that there's no VCs, so there's like a 13% pre mine and then whatever standard token l one launch.
00:17:21.830 - 00:17:52.206, Speaker B: So kanto it's a cosmos SDK basically a fork of evmos. It's an EVM based chain on the Cosmos SDK. And the real innovation behind Kanto is particularly around governance. What Kanto does is it has these D Five primitives that are built into the chain that are special. They're special because they are built directly into the chain and they're subsidized by the protocol, rewards themselves so that they never need to turn on fees. Quote unquote. Right? So uniswap on Ethereum has a fee switch.
00:17:52.206 - 00:18:32.390, Speaker B: Eventually the fees will get turned on, and the protocol has some token that's going to capture excess fees over and above what it's paying out to LPs. Same with Compound Ave, these other primitives that are MakerDAO, these other primitives that are on the chain. The idea in Kanto is that like, well, we already know that every blockchain needs a lending protocol. Every blockchain needs a Dex, every blockchain needs some kind of stablecoin. So we're going to build these directly into the protocol, and we're going to subsidize them and not let them take fees. So these are going to be, quote unquote fee list. Now, you still pay gas for interacting with these contracts, but there's no token, there's no fees for the Dex, for the lending protocol, and for the stablecoin.
00:18:32.390 - 00:19:20.606, Speaker B: That's the first innovation. The second innovation is around this thing called contract secured revenue, which is basically this idea that if you launch a contract, when people pay fees interacting with your contract, a percentage of those fees go directly to the contract deployer into this NFT, and then you can sell the NFT. They can do whatever they want, but basically they get sort of royalties for launching a contract that people want to interact with. And the idea is like, well, some people are creating public goods by deploying these contracts or libraries or whatever it is, and Kanto enforces that. Some percentage of the fees paid to these contracts goes to the contract deployer in whatever way they choose to use it. And so Kanto got a bunch of excitement over the last couple of weeks. The prices rallied like 300 plus percent.
00:19:20.606 - 00:19:46.550, Speaker B: Variant announced that they were purchasing a bunch of canto, and then people have gotten excited. There's been a lot of activity around NFTs on Kanto that are getting some attention. So I am not actually a fan of Kanto. I don't agree with a lot of the innovations that they've made. I think we've actually seen some of these innovations in other forms on other blockchains. But before I start shitting on Kanto, curious what your guys thoughts are seeing what's been going on in the Kanto ecosystem.
00:19:46.890 - 00:19:55.690, Speaker D: Well, I'll be forced to be the Kanto defender in this conversation if the rest of the group is anti Kanto, I'll have a can do attitude instead.
00:19:55.760 - 00:20:00.330, Speaker A: Okay, that was the worst dad joke I've heard on this show, period.
00:20:01.890 - 00:20:52.978, Speaker D: Yeah, I'm trying to break new ground here. I think fundamentally, it's interesting from the two differentiators that you pointed out. And I think at scale, I think potentially the latter one is actually the most interesting, which is royalties for contract deployers. I think on Ethereum, everyone is sort of forced into this launch, a token mindset for everything that gets built. At some point, it has to have a token, right? Even though certain things get used constantly, recycled, adapted, whatever. A great example is there's a lot of effort that's gone into WETH, just like a simple wrapper around Ether over the years. There's nine versions of WETH in existence historically, because we're on WETH.
00:20:52.978 - 00:21:50.122, Speaker D: Nine, right. There's other people making their own versions of it, and the hard work that has gone into it has not been rewarded. Would there be more innovation in simple generic contracts like WETH if you got paid for it? Yes, there'd probably be for these basic things that wind up being super hyper composable, right? Like, fierce competition to build the best version of it possible, right. There might be significant strides made there. And so I kind of squint and say, well, what would exist that doesn't exist in that framework? And it's like, yeah, there might be like going back to what meets DeFi on Ethereum. Originally, specialists like this composability, and if there was more things that were just built for free and put out there and you got paid based on their usage without having to go through any token process, I think there'd be just a lot more creative ideation development and building. So I think that one's actually super positive.
00:21:50.122 - 00:22:00.962, Speaker D: I think there's three D, five primitives that all run off of one token is pretty crazy. I don't think that will actually work long term way, but I do like.
00:22:01.016 - 00:22:25.514, Speaker B: That the contract secured revenue. Yeah. Okay, so here's my counter to that. Okay, so actually, there was a blockchain that did that before, which is near. So near actually does this contract secured revenue thing, and I was actually quite firmly against it. I love near, but this particular concept, I don't like the reason why I don't like it. There's sort of kind of broad economic reasons why I don't think this is.
00:22:25.632 - 00:22:35.594, Speaker A: To be fair, haseeb you have previously not you have defended against creator royalties. So I'm imagining there's some correlation in these arguments.
00:22:35.722 - 00:23:11.938, Speaker B: It's quite different. I think it's quite different than creator royalties. Royalties are more about like a bunch of marketplaces forcibly, basically coercing a certain type of market structure together. I think the reason why I don't like creator royalties are different. In the case of these sort of contract royalties, really what's happening here is that the blockchain is enforcing subsidies. It's basically saying it's kind of like farmer subsidies, right? It's like saying, hey, these people who are doing this work are not being sufficiently rewarded by the market. And I can tell because I am the government, right? I am the layer.
00:23:11.938 - 00:24:11.786, Speaker B: One blockchain I can tell that contract employers aren't getting paid enough. Normally in a free market, what we assume is that people who are generating value are getting paid for it in one way or another, right? And so here there's this conviction that, well, people who deploy contracts aren't getting paid enough. So we are going to force people to pay the folks, take money away from the miners, right? So miners normally would be getting this money or validators. We're taking money away from the validators and saying, no, instead we are going to pay this extra money to the contract deployers and we can tell how much they should get paid, right? So the protocol sets a split between the validators and the contract deployers. Now, what should that split be and how do you know what that split should be? Right? So right now I think it's in like 20%. I think it's like 80 20, but obviously it's configurable by the protocol and so it's like, okay, how do you know that it's supposed to be 80 20 and it wasn't supposed to be 2080? How do you know it wasn't supposed to be 50 50? How do you know? Maybe 100% of it should have gone to the contract deployers and none of it should have gone to the validators. Now, the validators, at the end of the day, the validators, they will charge charge because validators are commodified.
00:24:11.786 - 00:25:01.542, Speaker B: Like block space is commodified on blockchains. So validators, especially when blocks are not full, they are going to charge whatever their opportunity cost is. So if their opportunity cost is, let's say, a penny, they will charge each transaction a penny. And they don't care if you're also paying for the contract deployer, right? If you're paying a penny, if the validator is charging you a penny and you're like, well, 20% of it has to go to the contract deployer, then the validator would say, okay, well, your fees are 1.2 pennies because I don't give a shit where else you're sending money. So really what you're doing is you're taxing the user in order to say, like, oh, well, the contract deployer needs to also get you're right? Okay, this allows people who deploy public goods to get paid in a world where they otherwise weren't getting paid. What does that do, though? I mean, to my mind, there's always competition.
00:25:01.542 - 00:25:30.658, Speaker B: Competition never goes away because you introduce a subsidy. But the competition now occurs at a different level. What is the competition going to be now? Now the competition is okay. We know, for example, that there are a lot of people who use shared libraries, something like Safemath, right? I mean, we don't need Safemath anymore. But imagine safemath. Safemath at one point was like one of the most used libraries on ethereum. A lot of people now are competing to be safemath, and there's no innovation in Safemath, right? It's a very, very simple library that, like you said, almost everybody uses.
00:25:30.658 - 00:26:38.214, Speaker B: But to be the person who deploys the safe math, there's a lot of competition because that person is going to make a lot of fees. And so now you're going to have people campaigning, hey, use my safe math, don't use this other person's safe math. If you use my safe math, I'm going to kick you back 5% of the fees that I make because my safe math is better than theirs. Or you get people fighting to have their safe math included in the most attractive developer libraries. Basically you get a lot of competition around basically rent seeking, right? This is not useful for anyone to have people competing over this. And second, now you have interests or you have incentives to politic over the fee split because the fee split is pure subsidy, right? So in the same way as you have farmers fighting over hey, there should be a farmer subsidy, you're going to have more and more developers fighting over the CSR subsidy, increasing so they can capture more revenue. And the point is, what problem was this solving? Why is this good for overall economic efficiency in a blockchain for people to be fighting over this stuff? Right? At the end of the day, I think we should have a very strong reason to overcome the assumption that a free market doesn't solve these public goods incentives.
00:26:38.214 - 00:27:04.446, Speaker B: In reality, we see public goods totally being provisioned on Ethereum. I've never heard anyone say the problem with Ethereum is that people aren't writing enough smart contract libraries. That doesn't seem to be a problem that needs solving. And so I think you should have a very strong burden of proof to overcome to say, hey, this problem is not being solved by the free market. We need to introduce subsidies and we have good information about how those subsidies should be structured. And I think that's just not the case, which is why I don't like this CSR concept.
00:27:04.638 - 00:28:08.806, Speaker A: I guess my maybe simpler version of that is just more it's very hard to design incentives for any of these programs without just encouraging wash trading effectively, right? Where you're like, oh, imagine you gave developers some fraction of the transaction fees of function calls. Then people are incentivized to make many nested function calls uselessly so that they get and drive volume to. That kind of similar to what you're saying in terms of politicking. But to be fair, the politicking thing happens already. Even without blockchains in open source software, if you look at a lot of big companies libraries that they make, there's effectively a politicking that goes on within package managers and within developer tools to kind of get theirs featured or get theirs put up front. So that stuff is almost the same as what you see. I'm more worried about these raw fee distribution things that end up just like incentivizing really bad or parasitic contracts in some and like no one's ever come up.
00:28:08.806 - 00:28:25.166, Speaker A: With an incentive compatible version of very a very funny note is there's a famous paper by Susan AThe and Glenn Ellison, who's the father of Caroline Ellison, even though I know this is a banned topic of Alameda watch Where You.
00:28:25.188 - 00:28:25.760, Speaker B: Go.
00:28:27.730 - 00:28:36.978, Speaker A: Which is about how open source software revenue splitting should end as an equilibrium. So it's actually kind of ironic that her dad sort of oh, interesting.
00:28:37.144 - 00:28:39.060, Speaker B: What is the claim of the paper?
00:28:40.150 - 00:29:38.174, Speaker A: I think the claim is just more this type of thing you're talking about, which is like unlike closed source software, you have this extra cost for having to figure out which library is best and the market has to figure out how to converge to like, oh, these particular libraries are really good, these ones aren't good. And that extra cost gets passed on as an inefficiency cost, but it sort of reaches a fairer outcome. So it's sort of like a blockchain, right, where it's like you are paying a lot more to operate the system. That's just the cost of sort of decentralization or having many participants, but you get this extra benefit in terms of fairness. And then there's kind of this trade off between how much are you willing to pay per unit, civil resistance or fairness. In their case, they have some notion of that. So the reason I bring this up is even in their paper from 2013, they're like, it's very hard to make these things incentive compatible.
00:29:38.174 - 00:30:43.034, Speaker A: And none of the programs I've seen have even heard of this, have heard that people have tried to study this a lot before, which makes me even more negative because there are some lessons to learn. There have been some companies have sponsored different types of grants in open source, especially Google, and a lot of them didn't work very well because they were gamed for the incentive. And so, yeah, Google summer of code, I think in particular was one that was pointed out in this paper as having some like the years that they gave some financial incentives were sort of gamed. But the main point being, I think even if you had such a mechanism, I think it would be hard. The thing I find a little more annoying is that there's this ethos that's portrayed, and I think I drunkenly ranted at one of the Cabal founders of Kanto in person a few months ago about this, where their whole ethos is like, hey, we have no extractive fee tokens in our chain. And initially they were actually like, oh, we're going to have no fees at all. Which that part made no sense.
00:30:43.034 - 00:30:49.862, Speaker A: And it lasted about all of one day because they were getting DDoS on day one and two, there were literally.
00:30:49.926 - 00:30:51.514, Speaker B: No fees, as in like, no gas.
00:30:51.562 - 00:31:56.020, Speaker A: Fees, no uniswap fees. There was this vision of this idea of, oh, liquidity providers would come because they're Kanto stakers and Kanto stakers are already earning Kanto fees. So they would add liquidity for free because they would be earning more in fees, which is basically saying like, hey, we want to just only reward mev and not application users at all. Which didn't yeah, so you can go look at the early days of the Block Explorer and see who the liquidity providers are. It was only the stakers, but yeah, they moved away from that. But this no extractive token thing I find to be a bit of a farce because in some ways all they're doing is putting all the extraction back into the Kanto token again via this minor extractable value instead of in the application. And you get into this sort of incentive loop where now the developers of applications are basically getting nothing and unless they're also canto validators and the canto validators are taking like 99% of that always.
00:31:56.020 - 00:32:33.120, Speaker A: And so I find this kind of ethos weird. I also am just like, okay, so you're saying you don't need another extractive token, but your network is living on an extractive token because all of its revenue is coming from mev because you're not allowing the applications to really take much more. To me, it's always been this contradiction where the people who are sponsoring it, I think they have a very kumbaya, happy go lucky ethos about it, but if you squint a little bit, it's very much not that. And I don't know what to say other than that.
00:32:34.930 - 00:32:56.718, Speaker C: Your comment on the open source thing kind of reminded me of have you ever seen like, the NPM tipping functionality? Do you know what I'm talking about? Yeah, we need to start that. But for crypto, it's like you do a uniswap trade and you throw a little tip in and send it over to the protocol and they can do whatever they want with just a way to say thanks for using those great piece of open source software.
00:32:56.894 - 00:33:07.400, Speaker D: There's not even open source things that do that. So, like, public is like a Robin Hood competitor. They make their money by saying after every trade they're like, do you want to donate money to us?
00:33:08.570 - 00:33:09.318, Speaker A: Really?
00:33:09.484 - 00:33:09.958, Speaker B: Yeah.
00:33:10.044 - 00:33:24.250, Speaker D: After every trade they're like, we gave you that trade for like you have to uncheck little boxes, donate as a thank you. And it's like, it winds up being like way more than you would ever pay on any other brokerage if you leave checked.
00:33:24.690 - 00:33:25.950, Speaker B: That's fascinating.
00:33:26.370 - 00:34:21.390, Speaker A: Yeah. So I think two things about the tipping functionality. Sorry. So what Tom was talking about is NPM is this package manager for JavaScript, where if you're going to use someone else's open source code, it kind of handles standardizing and what version you're using and making sure you're using the one you're saying you're using. Kind of a lot of administrative details and they have this function that allows you to tip. And I think there's also some lightning specific version of this that allows you to send lightning tips because lightning has decided that tipping is its number one use case. But an interesting thing is that in Ethereum at some point, I actually think there is a sort of somewhat valid way of designing one of these systems in that Ethereum is going to have fee structures that are going to get much more complicated in the sense that they're going to have many dimensions.
00:34:21.390 - 00:35:20.274, Speaker A: So right now, gas prices are there is a base fee, which is sort of like the minimum fee you pay, and then there's a tip. So you can accelerate your transaction, you can pay a tip, but you're doing that uniformly across all usage. So you're paying the same base fee and tip for storage, compute, whatever, it sort of gets homogenized into one number as gas. But I think a lot of the designs are actually moving to separating the cost for storage, the cost for compute, the cost for other resources, like generating certain types of proofs, certain types of aggregations. And in that world, you could imagine having different rates of tipping for the different components. And that would sort of end up flowing through to the applications that are the most efficient at using the blockchain. Like if you want to disincentivize storage, you basically make tipping much higher, go up higher for storage, or like the amount you need.
00:35:20.274 - 00:35:32.360, Speaker A: And so I think there is a weird sort of way in which we are moving towards this reality, but the accelerationism without thinking, using your brain seems a little bit too much right now.
00:35:33.530 - 00:36:11.454, Speaker C: Yeah, I just feel like it sort of comes back to this price versus value kind of kind of idea. And it's like charging or incentivizing people based on gas usage for Kanto effectively is just almost totally orthogonal to value creation and how much of that should be captured. And so it's like you look at the top gas burners on Ethereum. I would not necessarily say those are always the best applications or things that should be incentivized, but that is kind of where you net out. But the thing that I feel we sort of skipped over when we started talking about Kanto is actually kind of the loser in the story, which is Evmos, which has been in development since 2017.
00:36:11.502 - 00:36:11.686, Speaker D: 2018.
00:36:11.688 - 00:36:18.226, Speaker C: And then I'm trying to remember, they fucked up their AirDrop or something, or there was some drama around the distribution.
00:36:18.258 - 00:36:23.410, Speaker A: Their AirDrop caused their consensus to fail and then they had to shut down the network.
00:36:23.570 - 00:36:37.914, Speaker C: Yeah, and now I'm looking and Kanto is actually approaching Evmos's FTV. So it's kind of a sad story that this fork with some tweaks basically is kind of coasting off of a lot of hard work to get Evmos working.
00:36:38.032 - 00:37:17.314, Speaker B: Yeah. Ironically, the public good that actually needs to be rewarded is outside the blockchain. So unfortunately, it was just like Evmos did most of the development work and innovation. I mean, look, I do respect having some governance level innovation. I think that's something that has been underexplored, but I just think all these ideas are not where it's at. I don't want to go on too much of a rant about the last piece, which is, as you were mentioning, the sort of the tokens all being under Kanto as opposed to having their own kind of native applications. But to me it's just sort of the blockchain playing favorites and deciding that these applications are enshrined in the blockchain.
00:37:17.314 - 00:37:43.780, Speaker B: They're sort of nationalized, quote, unquote. It's kind of like this blockchain level industrial policy, which implies that it's like, okay, we're done, we're done with DEXs. We found the right one. It's this. And nobody better try out innovating us because we're going to support this at the protocol level. Same thing with lending protocols, right? If anybody comes up with any more innovation around lending protocols, fuck you, we already figured it out. We know this is the one that we want and what else is there to do? Like, we already have the end result.
00:37:44.230 - 00:37:45.890, Speaker D: And by the way, it's a compound.
00:37:48.550 - 00:38:10.346, Speaker B: Exactly. Which is exactly the problem, right? Because now there's zero incentive to go launch a new lending protocol or any improvement on a lending protocol because the freaking government already decided, no, this is the one that's won. And there's a reason why economists are like, hey, industrial policy is a very scary term. You should be very careful to engage in industrial policy unless you're very sophisticated about it.
00:38:10.528 - 00:38:15.370, Speaker A: Kanto is really like the USSR. Plus the cultural revolution.
00:38:19.150 - 00:38:41.220, Speaker B: Yes, I think that's a very stark way to analogize it. I don't know it's quite that bad, but I think it's not ideal, right? Because ultimately, look, blockchains are not that old. There's so much more innovation that's going to take place at the base layer. Why would you decide that? Hey, we figured it out, we know what entrepreneurs go away. There's nothing. If you want to build lending protocol, go somewhere else.
00:38:41.670 - 00:39:39.670, Speaker A: I think the analogy, again to how the economics in some of these blockchains is changing at the base layer is that governments can streamline policy by doing things like, let's say, the chips act and incentivizing people who are improving semiconductors so they get a lower gas cost, right? But anyone can try to join that race, but the governments decide they get a lower gas cost. And in some ways, I think that's the only incentive thing you can do is adjust how much you're allowing certain parts of the blockchain to be cheaper and certain parts to be more expensive. And governance infrequently updates those without making any judgment on exactly the thing you're doing with those changes in cost versus the heavy handed. Deng Xiaopheng trying to walk the tightrope between capitalism and communism.
00:39:40.010 - 00:40:12.238, Speaker B: It's a good way to put it. Yeah, that is what I feel. I canto is it's like this tightrope between capitalism and redistribution? And I think one should be very careful, especially this early, especially in that level where you're directly interceding into core protocol primitives and saying, we know what should happen. It's very central planning and I just think that it's fraud. Right? Like as you mentioned, Tarun, initially they were no, no fees on the whole are bad. We should just remove all fees and turns out like, oh wait, that totally breaks the economy. Never mind, never mind, never mind.
00:40:12.238 - 00:40:23.460, Speaker B: We're going to walk that back and kind of introduce some fees, but not quite this one. And you're just going to very clumsily end up kind of breaking things at the margin without being able to tell.
00:40:24.230 - 00:40:59.454, Speaker C: To be fair, I do like the idea of experimenting more with baking more stuff in at the base layer. I think Ethereum has been very conservative with this with respect to what is a sort of enshrined primitive, like west being a great example. It is so fucking annoying that you can't transfer Ether. You have to wrap Ether and then you obviously can't do multiple transactions or multiple calls within a single transaction. So you use a proxy and they use the set approval. So many things break because we don't have this concept of approvals and transfers on ETH natively. And granted, there are trade offs to that.
00:40:59.454 - 00:41:20.118, Speaker C: I'm not saying it absolutely should have been made, or like liquid staking being another example of this, where every other blockchain that has proof of stake has liquid staking built in pretty much at the base layer. Not everyone, but most has not, which creates this whole sort of liquid staking market. But it's not sort of either or. There is more room in the spectrum, I think.
00:41:20.204 - 00:41:31.820, Speaker A: So you're saying the liquid staking market is analogous to the US. Doesn't necessarily provide healthcare, so now there's a healthcare market, but it doesn't necessarily mean that its outcome is better.
00:41:32.510 - 00:41:46.846, Speaker C: Yeah, I don't know what heuristic you want to use to think about what should be in a layer one and what shouldn't, but it feels like there's probably room for more exploration there. I don't think the Kanto is okay.
00:41:46.868 - 00:42:25.180, Speaker B: So the equivalent on Ethereum of this kind of industrial policy is pre compiles. Right? So pre compiles are basically when so normally when you have some application code, it runs in the EVM. The EVM is slow and clunky and whatever. Sometimes Ethereum decides, hey, this piece of code is so important that we are going to write a special version of this code that actually doesn't normally run on the EVM. We kind of give it a fast path so that it runs faster in native code without having to actually execute on the EVM as it normally would. And that allows certain things to become much cheaper than they would otherwise be if they were implemented in EVM. And there's a lot of arguments and politicking and Ethereum about what should be pre compiled and what should not be.
00:42:25.180 - 00:43:25.622, Speaker B: It is a little bit fraught in some sense. It is a subsidy on certain kinds of code over others, right? But that feels to me like the right level of saying, hey, this thing is really important, we should make it faster or make it better, but we should not enshrine these things directly into the protocol. So I remember there was this big debate on the ETH Research forum, like this was a few years ago, maybe a couple years ago, where Justin Drake was proposing putting Oracles directly into the beacon chain. Do you guys remember this? And there was this big argument between Vitalik and Justin Drake about this idea that the protocol itself should not enshrine any particular application because for precisely the reason that I just stated, which is that if it does, it's impossible for private actors to innovate, right? If you put Oracles directly into the beacon chain so that all the validators are reporting the price of gold, the price of US. Dollar, the price of Ether, blah, blah, blah, then there's no chain link. There's no way you can have a chain link. There's no way you can have any other private actors getting better Oracles than what is built into the base layer.
00:43:25.622 - 00:43:59.682, Speaker B: And the principle of Ethereum from the beginning and maybe this is I think I can take the argument that maybe, okay, Ethereum shouldn't do this, but maybe other chains should do this. But in Ethereum's case, the philosophy has always been that Ethereum should be neutral. It should be as neutral as possible among applications and let the best application win. It makes sense that there's some application specific chains that don't. Do you know if you're building a MakerDAO chain, okay, well, that's going to have MakerDAO built into the base layer. Or if you have a roll up that's dedicated to an application, okay, that's going to have its own customized VM. But if you're building a generalized blockchain like what Kanto presumably is trying to be, then it should be generalized.
00:43:59.682 - 00:44:03.930, Speaker B: It should not enshrine certain applications directly into the base layer.
00:44:04.510 - 00:44:22.110, Speaker C: Yeah, I agree. I think the application level is probably too deep. I think you talk about pre compiles, but I think, frankly, like, opcode gas costs are like another one that feels kind of random, frankly, in terms of how these get priced. And yet those are also effectively sort of subsidies or encourage certain terms of activity.
00:44:22.870 - 00:45:03.082, Speaker A: That's exactly what I'm saying. I think the fiscal policy of a blockchain is choosing those, adjusting those, optimizing those, making them more flexible. And that's sort of clearly the easiest way of incentivizing certain behaviors. I think EIP 48, 44 for adding Blobs is a great example of this, right? It's incentivizing a particular type of use case that doesn't cause certain types of externalities on validators who are validating. Kanto, on the other hand, feels like it wants to internalize all of those. And I don't really see how that is a very good long term decision, but it's crypto. People will try anything.
00:45:03.216 - 00:45:31.266, Speaker B: Yeah, if you look, if you're doing fiscal policy, you want to define long term goals, which is that we want to move toward roll ups. Right? That's what EIP 4844 ultimately does. It makes roll ups cheaper. And it's with the understanding of that broad kind of policy goal that Ethereum sort of does these small nudges at. Okay, let's reprice this opcode. Let's add this particular change. What Ethereum does not do, which would be something that I can imagine another blockchain doing, is saying, look, one of the most used contracts on ethereum is uniswap.
00:45:31.266 - 00:45:47.366, Speaker B: Let's just make uniswap a pre compile, right? And so that uniswap. So effectively, nobody can compete with uniswap because the gas fees for uniswap will be so much lower than anybody who innovates on it, which basically is the equivalent of what Kanto is doing, is building into the fucking base layer or seaport. Right? Seaport.
00:45:47.558 - 00:45:50.038, Speaker A: They've nationalized all industry.
00:45:50.214 - 00:46:20.222, Speaker B: Exactly. That's exactly what they're doing. And look, when you do that, you pick winners and you distort incentives to innovate. And Ethereum has been very wise, I think, in not doing that. And of course, if you did it, it would be more efficient. Right now, at this moment, it would be more efficient. But two years from now, three years from now, when the next uniswap, the next C port, the next big idea in blockchains, when that new idea comes along and there's no pre compile for that, all of a sudden these things are not competing on a level playing field and the best idea doesn't win.
00:46:20.222 - 00:46:28.440, Speaker B: And that, I think, is what you should be afraid of when you're engaging in this kind of industrial policy in an area like blockchain that's moving so fast and innovating so quickly.
00:46:29.790 - 00:47:10.950, Speaker A: To get back to the bitcoin NFT thing, the idea of these user chosen soft forks, I think ethereum will probably end up in this world where, like staking derivatives, they're in some ways a user chosen soft fork. And so something like Eigen layer. And in general, if validators, want to opt into participating to enshrining certain applications that pay them, it makes sense, but it should never kind of be forced. And I think at least that's my personal view, is like, if you're doing that, then why do you need a blockchain? You might as well just go back to postgres.
00:47:11.290 - 00:47:47.506, Speaker B: There you go. Just do it all in Excel sheets. Okay, well, speaking of opting in, another one of the controversies this week was around our good old pal layer zero. So layer zero, for those of you who are unaware, layer zero is an interoperability protocol. It was backed very famously by Sequoia and by the now defunct FTX. But layer zero, there was an exploit that was exploit maybe is a wrong word, but whatever. There was a controversy around this exploit that was revealed by James presswich, who was previously at or I think currently still at Nomad, and James pointed out.
00:47:47.506 - 00:48:42.642, Speaker B: So it's well known that the security model of layer zero is that layer zero separates out these concepts between an Oracle and a relayer. And the Oracle is somebody who in cross chain interactions, right? The Oracle needs to tell you what is the state of what's going on in some other blockchain. And the relayer sends the actual message, right, and says, okay, here's sending the message from A to B, from ethereum to avalanche or whatever it is. And these two people, as long as the two of them are not colluding with each other, the security model of layer zero is supposed to be that okay, you're protected, as long as one of the two, the relayer or the Oracle, are being honest, then you are good. And what Presswich revealed there is another element of layer zero that is trusted, which is this library known as the proof library. And this proof library, basically what it does, it decodes messages. And this proof library is effectively you can think of it as a pointer to a proof library that is configurable by anybody who's integrating layer zero.
00:48:42.642 - 00:49:16.494, Speaker B: So when you integrate layer zero, there are actually three important parameters. There's a bunch of other ones, but three important ones. One is which relayer you're using. Second is which Oracle you're using, and the third is which proof library you're using. And there's only one proof library that anybody uses which is designated by the layer zero team and has its own they have admin keys that can control it. And they have swapped this proof library in place multiple times to basically edit messages on the fly in order to basically do a protocol upgrade, change the way that certain things work or something like that. That's my understanding of roughly what he revealed here.
00:49:16.494 - 00:49:59.546, Speaker B: And so the bombshell, supposedly is that layer zero was doing this without notifying anybody of it. I mean, nobody really was able to look that deeply into what layer zero was doing in terms of the individual libraries and their protocol, because of course they're the ones working on it, nobody else is. And the claim is that this was not disclosed, this was not in their security model, this was not stated anywhere. But layer zero has been using this kind of underneath the hood in order to basically do protocol upgrades on the fly. Now, layer zero's defense is that, well, this was known. This is actually one of the things that's in the config. If you want to change it, you can, you can use your own proof library or you can hard code a proof library at a certain version if you want to, but this is just the default because most people want us to handle their security and not themselves handle their security.
00:49:59.546 - 00:50:57.966, Speaker B: So the story from the layer zero side is that this is not a problem. This is a totally standard usage of the protocol and this is very explicitly what our security model has been. You guys are just stirring up shit because you're a competitor. So I was trying to read up to understand the details around this because it's a little bit opaque if you're not in layer zero land. But there was a great Tweet thread by this guy, a Bartech, where he basically did a little bit of on chain data analytics to see how many people are using layer zero and what are they doing for their defaults. And according to him, there are, I believe, 185 applications that are using layer zero, and of them, like, only five of them have changed any of the defaults, meaning that basically they're using the default relayer and the default Oracle, I believe, both of which are run by layer zero labs. Sorry, there are ten apps out of 185 that have changed the defaults in any way.
00:50:57.966 - 00:51:32.970, Speaker B: Four of them are Boba Network, a few of them are basically like tests. They're sort of test applications that are not actually running in production, which basically means that pretty much everything that's in production is using the defaults, which effectively implies that this is the layer zero security model. So anyway, it's a little bit inside baseball, I think, this whole back and forth, I'm not totally clear how much of a bombshell this actually is. It also sounds like what almost every application is doing, which is that they have these defaults and if people really looked underneath the hood, they would realize that, okay, it's putting quite a lot of trust in the admin keys, but I don't know. What has your guys take been on this layer zero? Kerfuffle?
00:51:33.470 - 00:51:43.699, Speaker D: I did not vote on the Uniswap poll because I thought there was a lot of things happening on both sides that I thought robert, do you want.
00:51:43.699 - 00:51:45.370, Speaker B: To give some background on this Uniswap poll?
00:51:45.450 - 00:53:10.890, Speaker D: Yes, well, this is directly related to layer zero. So the Uniswap poll that just closed there was this death match, so to speak, between Wormhole and Layer Zero, both trying to be selected to provide the Bridging services for Uniswap to be able to launch on Binance Chain, because Binance Chain is a new zone for Uniswap to operate in. PancakeSwap and other DEXs are the know trading venues on Binance Chain. Uniswap has never had a presence there and they have to bridge their governance process over to Binance Chain because there is no native Uni token on there that you can vote with. They're going to have to vote on Ethereum, where the Uni token lives using their governance contracts and have that process passed over to Binance Chain. And so who does that? Bridging has been this fierce debate and Layer Zero and Wormhole and a couple others, including Seller, have been like violently competing to be selected and they've all been basically saying the same thing we're the best, we're the safest and our solution will work. And it's basically ready.
00:53:10.890 - 00:53:32.480, Speaker D: And the community has been having to sort through those statements to then select which technology should be selected to provide that service. And layer zero, for a little while looked like it was going to win that poll before it failed towards the end of it with Wormhole pulling ahead.
00:53:32.850 - 00:53:47.380, Speaker B: And part of the drama behind that story was that the VCs were getting in there kind of socking away at each other. So I think Jump was backing Wormhole and then a six and Z was backing layer zero. And so the part of the drama, of course, is the big brands kind of getting into this.
00:53:47.930 - 00:53:54.200, Speaker D: And a day before voting ended is when a lot of these disclosures around layer zero came out.
00:53:54.650 - 00:53:59.260, Speaker B: Yeah. What's your take on these disclosures? Do you think they're bullshit? Do you think this is like a real problem?
00:54:02.990 - 00:54:59.546, Speaker D: This is why I have a hard time voting on something like this and why anyone should to sort through this is a technical matter that requires both time and expertise and can't really be evaluated in an instant with the lack of information. These are very hard critiques and analyses that have to occur and that the community has enough people who are brilliant and capable of sorting this out. And truth will win out at some point. But I think it takes a while to sort through what's right, what's wrong, what's accurate, what's inaccurate, and just allow the whole world to understand what's actually happening, where and why. So I definitely think there was some vaguely suspicious timing with a lot of this most likely directly related to an extremely contentious vote that was happening. So we'll see.
00:54:59.728 - 00:55:02.762, Speaker B: Tarun, do you have a take on this layer zero drama?
00:55:02.906 - 00:55:05.790, Speaker A: Bridges are hard. Bridges are hard.
00:55:05.860 - 00:55:06.750, Speaker B: That's yours.
00:55:07.730 - 00:55:55.834, Speaker A: Everyone has secrets in their code base. I think in general, these votes probably need a lot more process and structure around them. I talked to a lot of people involved in voting and one of the reasons for abstention on the part of a lot of people was the process was kind of rushed and then there was like this news and then people had to react to it. And I think in general, it's sort of worth thinking about this. I do find it also weird that the Dow has to vote to enshrine a particular bridge. In some ways. It always seemed to me like you could support multiple and I agree the UX is worse, but it did seem a little bit OD to me that there was that aspect of the in this vote.
00:55:55.834 - 00:56:02.078, Speaker A: But yeah, there's too much involved and there's not too much.
00:56:02.084 - 00:56:22.534, Speaker D: Well, one of the proposals on the forums, which was actually really interesting to me, was to actually make a meta bridge, which was like, hey, why are we selecting Wormhole or layer zero? Why don't we have a. Contract that listens, and if both of them transmit the same thing, it's valid. Why not just support them?
00:56:22.732 - 00:56:23.750, Speaker A: Huh?
00:56:24.170 - 00:56:26.914, Speaker B: Okay, well, this is pure message passing. This is not like asset.
00:56:27.042 - 00:56:27.654, Speaker A: Yeah, yeah.
00:56:27.692 - 00:56:40.730, Speaker D: This is not asset bridging. This is just pure message passing for the Use case that there was this bake sale in Uniswap of, which was like, who's going to pass governance messages from Ethereum to Binance?
00:56:41.150 - 00:56:46.830, Speaker B: Wait, if it's just governance messages, why are they competing so much? I thought they were going to bridge a bunch of assets.
00:56:47.730 - 00:56:50.218, Speaker D: No, this is just bridging.
00:56:50.314 - 00:56:58.610, Speaker A: I think you end up in the UX in a lot of ways in these things, right? Like, you end up directly in the DAP front end.
00:56:58.760 - 00:56:59.026, Speaker B: Yeah.
00:56:59.048 - 00:57:03.010, Speaker D: And the one that Uniswap picks, other people are going to probably adopt.
00:57:04.310 - 00:57:07.014, Speaker B: It's a great it's a great brand to affiliate yourself with.
00:57:07.132 - 00:57:29.820, Speaker D: By the way, uniswap uses compound governance contracts, right? And a lot of other teams do as well. So once there's a format and a standard by which compound governance contracts on Ethereum broadcast messages to other chains, it's going to be open source reusable components. You may as well just copy, click deploy the same thing yourself.
00:57:30.930 - 00:57:34.826, Speaker C: Are you salty you're not getting a cut of all those compound governance gas fees?
00:57:34.938 - 00:57:53.234, Speaker D: Well, this goes back to our earlier conversation. It's just like, I'm a little salty that a lot of the compound governance contracts and systems and time locks and voting tools and all of these things are extremely widely used.
00:57:53.272 - 00:57:54.674, Speaker C: I'll tip you next time.
00:57:54.872 - 00:58:04.440, Speaker B: Doesn't it bring you some warm fuzzies to your heart? Can't you just take all the good you've built for the world and take that home and eat it with your kids?
00:58:04.970 - 00:58:25.070, Speaker D: Yeah, but if you could actually get paid to develop things that were public goods, I bet other people would have spent more time improving those contracts as opposed to we had to write them all years ago and no one's really improving them. If everyone else got paid to improve them as well, they might have advanced even further, even faster.
00:58:25.490 - 00:58:47.042, Speaker B: That is fair. That is very fair. All right, well, I think we are at the end of time. Bit of a strange note to end on. I think next week we're going to try to do another deep dive because we got some great feedback on the Mev episode. So we're going to find some topics. So if you have ideas of particular things you're excited to learn more about, hit us up, send us ideas.
00:58:47.042 - 00:59:04.134, Speaker B: We're looking for more ideas for new shows that are not related to bankruptcies or to interest rates. So we'll try to keep the show more crypto native going forward, at least for a little while, until the next big exchange blows up, which hopefully doesn't happen anytime soon. Never.
00:59:04.172 - 00:59:04.662, Speaker D: Hopefully never.
00:59:04.716 - 00:59:11.374, Speaker B: That's it. Hopefully never. Obviously never. I mean, this industry is so legit. It's not going to happen again. All right. Thanks, everybody.
00:59:11.374 - 00:59:12.880, Speaker B: See you all next week.
00:59:13.410 - 00:59:16.890, Speaker A: See ya. Bye.
