00:00:04.330 - 00:00:17.054, Speaker A: Hi everyone. Welcome to Unchained, your no Hype resource for all things crypto. I'm your host, Laura Shin. If you've been enjoying Unchained, pop into itunes to give us a top rating or review that helps other listeners find the show.
00:00:17.172 - 00:00:32.662, Speaker B: Sun Exchange is a solar power marketplace for the crypto economy. Sun Exchange members all over the world are earning cryptocurrency for helping to deliver solar power generation to businesses and communities in emerging markets. Visit thesonxchange.com to start earning solar powered money.
00:00:32.716 - 00:00:50.818, Speaker C: Today StartEngine is a regulated ICO platform with a community of 155,000 plus registered users that's focused on issuing tokenized securities. Go to StartEngine.com Unchained for a 20% discount on setup services to launch your regulated ICO. This is not legal advice.
00:00:50.934 - 00:00:56.730, Speaker A: My guest today is Dominic Williams, president and chief Scientist of DEFINITY. Welcome, Dominic.
00:00:56.890 - 00:00:58.606, Speaker D: Hi Laura, thanks for having me.
00:00:58.708 - 00:01:01.790, Speaker A: Let's start with a simple question what is DEFINITY?
00:01:02.130 - 00:01:20.534, Speaker D: So DEFINITY is a project to create a network, open public network that will produce something called the Internet Computer. And our ambition is for the Internet computer to host the world's next generation of software and data.
00:01:20.732 - 00:01:27.480, Speaker A: And what does that mean to be a world computer? I mean, we have computers now that host software and data.
00:01:28.430 - 00:02:08.950, Speaker D: Sure. So it means a lot of things, actually. So to begin with, it introduces the idea that the Internet itself will host software and data as opposed to monopolistic cloud hosting providers like Amazon Web Services or Google Cloud or Microsoft Azure. So that's a big change. So the idea is know, rather than building your systems on the back of another company's infrastructure, you actually build your systems directly on a public infrastructure on the Internet itself using the Internet computer. So that's a big change to begin with. But the Internet Computer also brings some new properties as a platform.
00:02:08.950 - 00:02:59.618, Speaker D: So actually it greatly simplifies the development of new software systems. And this addresses one of the biggest problems with the existing technology stack, that it's very, very complex. And if you look at the balance sheet of most It systems in use today, which represents the total cost of ownership, the vast majority of the cost is actually the human capital involved in developing systems and maintaining them and administering them. And so we believe we can greatly reduce that. But also, of course, the Internet computer is based on crypto technologies. So the Internet computer itself is a hack proof system. You can't hack the Internet computer and if you write software doesn't have bugs, then your software will also be hack proof.
00:02:59.618 - 00:03:54.374, Speaker D: So it addresses the need of security. It also has a design that ensures that applications running on It always available and never lose their data. So that's another big advance. Systems running on the Internet computer are highly interoperable. We have mechanisms that enable developers of systems to preserve the privacy of data. Right? And that could be anything from private company documents to user data and we enable people to do that in a way that doesn't involve them doing anything special or having to write cryptography themselves. And we also support a new kind of software called autonomous software that we believe will provide a basis to reengineer Internet services as we know them today.
00:03:54.572 - 00:04:11.738, Speaker A: I want to unpack a lot of what you said here. You were talking about how this Internet computer would provide a lot of services that are now offered by businesses. And I know you've talked about something called open, decentralized business infrastructures. What is that?
00:04:11.904 - 00:05:01.126, Speaker D: Okay, so on the one hand, the Internet computer, we believe, will provide a better way just to build private business infrastructures. But we also support a new kind of software that's autonomous. And this makes it possible to create systems that don't belong to any individual company. They exist independently. And essentially these software systems have an inbuilt governance system which is tokenized that is used to incorporate new updates into the software. But effectively you're applying the open source software development model to a running service. Okay, so sort of open decentralized business infrastructures are one of the applications of this technology.
00:05:01.126 - 00:05:20.462, Speaker D: So there are many industries that would benefit from sharing a platform. Commonly talked about application is supply chain optimization. But as it turns out, there are many, many applications where you can create a platform that's shared amongst the participants in an industry to deliver efficiencies or new functionality.
00:05:20.606 - 00:05:40.290, Speaker A: I wanted to ask you also earlier you were saying that DEFINITY can replace some of these human capital processes or functions of businesses. One of them that I noticed you mentioned in a blog post was R and D. How can a machine do R and D instead of a human? I was confused by that.
00:05:40.380 - 00:06:45.230, Speaker D: Oh no, we're not suggesting that the machine does R D at all. So with respect to private business systems, and there's several applications, so you've got private business systems, you've got Dbis, which is really a very corporate application. You have Internet services. So we want to reinvent Internet services, anything from like salesforce through to an Internet dating app. But with respect to reinventing how people build software systems, private software systems, DEFINITY, if you like, strikes a kind of grand bargain. Okay, so the Internet computer works by applying advanced cryptography, distributed computing, advanced virtual machine science, all kinds of things, right? And under the hood of DEFINITY, there's a lot more computation going on and there's also a lot more replication of data. So with respect to computation, as soon as you introduce cryptography, you're already going to be doing all this processing, right? It's quite compute intensive and also know under the hood is running symmetric replicas of applications.
00:06:45.230 - 00:07:38.462, Speaker D: So if you call a function in your application well, actually inside the, you know, there are multiple instances of your application all running the same function at the same time. And if it's generating data, saving the same data to the state. And that's how we make sure that applications are always available and don't lose data. So as a result of this, the DEFINITY network will cycle for cycle and byte for byte use, more CPU, more storage in any task. But we think the simplification of the platform is worth it. So when you create software on DEFINITY, most people, I believe, will use a new language called Actorscript, which has been created by one of our staff engineers who created WebAssembly. I don't know if you're aware of WebAssembly, but it's the sort of next generation of the web.
00:07:38.462 - 00:07:40.298, Speaker D: It's already in all the main web browsers.
00:07:40.394 - 00:07:42.800, Speaker A: Yeah, we're going to talk about that in a bit.
00:07:43.170 - 00:08:23.674, Speaker D: Yeah, it's an Internet Explorer, Chrome, Firefox, Safari and so on. And he was the co designer of that, continues to lead the standards process. And he also is an architect of V Eight, which is the JavaScript engine inside Chrome that also runs this thing called Node, which is the most widely used sort of back end platform in the world currently. And so you can imagine that you could write this actor script inside of the web browser. It runs on the WebAssembly virtual machine inside the browser and that this actor script would be able to sort of seamlessly call into actorscript running on the Internet computer. And the Internet computer itself doesn't have any kind of storage API. There's no database API.
00:08:23.674 - 00:09:12.678, Speaker D: There's no file storage or anything like that. Actually. Everything's just kept in software. So the idea is that when you're writing the back end of your system, you just write the abstract logic and you keep your data in data collections, in memory. And this basically represents an absolutely colossal simplification when you're developing a new system. So today when people create systems, if you're using a software as a service product like Salesforce, of course you just connect it over the web. But if you want to run your own system or create your own system, you'll have a database that needs backing up and replicating and a hot spare and all that kind of stuff.
00:09:12.678 - 00:09:22.250, Speaker D: You'll have probably a middleware server with microservices on it. You'll have maybe a memcache server. You're going to have web servers. And again, you need load balancing failover.
00:09:22.330 - 00:09:24.682, Speaker A: And that's what DEFINITY can replace.
00:09:24.826 - 00:09:48.870, Speaker D: Exactly. So you're going to have business logic that's distributed over that whole system, over multiple components. So if you think about it, in that kind of system, there'll be some logic inside the web server that generates the pages. There'll be some logic inside those microservices, there'll be some logic in the database. Data itself is pretty distributed. And all of these components, by the way, fail independently. And so it's a complex thing to put together.
00:09:48.870 - 00:10:20.542, Speaker D: And of course it's completely insecure. There's no way you can make that secure. So what you do is you surround it with a firewall and you hope that the Firewall will keep everybody away from your insecure system. But sadly, a firewall isn't much good these days and I could go onto four chan and put a bitcoin bounty up and someone will get me into any company of my choosing if I want. Not that I do want. So firewalls don't really work that well. So you've got a system that is inherently very difficult to develop and maintain.
00:10:20.542 - 00:10:41.766, Speaker D: And many software engineers will tell you that sometimes they despair of their job because most of their time is not just writing the logic involved in the system and creating a great user experience. Most of their time is involved with trying to make these different pieces talk to each other and there's an inherent complexity that's involved in today's It stacks.
00:10:41.798 - 00:10:51.142, Speaker A: Yeah. So I wanted to ask you, you mentioned your customers. Who is using definity's technology now or who are your ideal users?
00:10:51.206 - 00:11:25.430, Speaker D: Well, I mean, Definitive is currently under development. I mean, there's a test network, people know what's there at the moment. It's a complex project, so we developing multiple technologies in parallel. So for example, when you write software, it runs on WebAssembly. There's a network that forms computations and stores data and there's a test network with some thousands of full nodes running at the moment and we're pretty clear on what we need to deliver.
00:11:27.630 - 00:11:30.700, Speaker A: Fortune 500 companies are using definity's technology.
00:11:31.470 - 00:11:42.062, Speaker D: We're working with several companies that are interested in the technology. The network is not live yet, so it's not possible to run a system on it yet.
00:11:42.196 - 00:11:47.898, Speaker A: So do you imagine that it's going to be more enterprise or is that your target?
00:11:48.074 - 00:12:24.070, Speaker D: No, the internet computer is a much broader thing. So the purpose of the internet computer firstly is just to reinvent the way we create software system and also reinvent the way that they're hosted. Right. So we want the internet itself to host software and data. So that's a big change. And the whole world runs on software, so you can apply this platform to many different needs. So one of the most exciting applications of the internet computer is the reinvention of today's Internet services as open source businesses.
00:12:24.230 - 00:12:37.790, Speaker A: Okay, so I want to get into more details around DEFINITY, but before we do that, I wanted to ask you about your background. What did you do before you started DEFINITY and how did you come to start it?
00:12:37.940 - 00:13:15.418, Speaker D: So I'm a serial entrepreneur, I've been in the tech industry for quite a long time. My last venture was a computer game, an MMO, so it's a massively multiplayer online game and it grew to some millions of users. And I got a particular interest in distributed computing and I actually credited all of the distributed infrastructure that supported that game. And I'd had some prior exposure to crypto back in 1999. I'd been using this library called Crypto Plus Plus, credited by a guy called Way Die. And I'd come across this paper called B Money through that. So I was kind of interested in the area.
00:13:15.418 - 00:13:27.294, Speaker D: And then in 2013, when Bitcoin went through, one of its dramatic price rises and my attention was drawn back to it. And 2013 I switched over to Crypto full time.
00:13:27.412 - 00:13:31.150, Speaker A: And how did you come up with the idea for DEFINITY and start it?
00:13:31.300 - 00:14:38.642, Speaker D: So at the end of 2013 I was poking around looking at the internals of some of the altcoins that were being created, then hoping I could find something that would enable me to create a coin for the games industry. And I was hoping that people could sell virtual goods in one game for this currency, take it to another game and buy new virtual goods. And when I was looking at the internals of these coins, I sort of saw there are a lot of shortcomings and unresolved problems. And so in 2014 I created a project called pebble and the aim was to credit cryptocurrency that was much faster scaled to enormous capacities. We wanted to do things like recurring micro payments and the idea was that internet services like Facebook would turn off advertising in exchange for receiving these recurring micropayments. So I set about trying to solve that problem. And initially I was just drawing on traditional Byzantine fault tolerant consensus protocol science and I sort of dug into that and there's a thing called asynchronous leader free Byzantine fault tolerant consensus protocols.
00:14:38.642 - 00:15:37.586, Speaker D: And I spent some months initially just studying them full time and then eventually began to repurpose them and devise my own. And by the sort of end of the summer of 2014, I felt that we had pretty good solutions. And I teamed up with Otir Mogball, who's currently chief operating officer at DEFINITY, and the guy I'd met working at a VC that funded this computer game that grew so much. And we sort of looked into raising money for the project and sort of scaling it out. At the time, I think people were very obsessed with Bitcoin and if you sort of proposed alternative centralized network protocols, people looked at you with great skepticism and the venture community hadn't really come to terms with the whole kind of centralization movement at that stage. And so we spoke to a lot of people but probably just educating them very difficult to actually raise money. So at the end of 2014 we decided to give up on pebble.
00:15:37.586 - 00:16:45.070, Speaker D: But at the beginning of 2015, I devised some new computer science, actually found a way of creating random numbers in a decentralized network of any size in a way that was totally unmanipulable, unmanipulable very, very efficient and pretty much unstoppable and so on. So once I found this way of doing that, it's a technique called threshold relay. I realized that, well, I can actually create a decentralized network that could run at much higher speeds than anything does today, that could be scaled out. And I'd been kind of close to the Ethereum project. And I realized as well that blockchain computers were much more interesting than cryptocurrency ledgers. So I thought, okay. And I pursued that line of thinking and I realized that, look, you could create a blockchain computer that is fast, infinitely scalable, could host software with fantastic properties, security, availability and all these things that could act as a decentralized cloud and an open, public cloud computing resource that would also enable people to develop systems in a whole new way.
00:16:45.070 - 00:17:37.790, Speaker D: And the original aim of DEFINITY was to enable, if you like, the reengineering of the Internet, so that many of the monopolistic Internet services of today could be recreated as open source, what we call open source businesses, where the service itself doesn't belong to any company or individual, but can update itself and saw a lot of advantages in that. And so if you go back on the Wayback Machine, the Internet archives, you'll see an early DEFINITY page with an absolutely horrible DEFINITY logo that I created myself. But it's describing exactly this, the decentralized cloud. And back then I used to think about how do you create a search engine on a decentralized network? For example, how do you recreate Gmail, social networks and Twitter? And that was how it all started. And the name DEFINITY, of course, comes from decentralized infinity.
00:17:38.290 - 00:17:53.134, Speaker A: I've always been aware of that. That's interesting. So we're going to get into more details around some of these technical aspects that you mentioned, like Threshold Relay, and we're also going to talk about your governance system, the blockchain nervous system. But first, I'd like to take a quick break to tell you about our fabulous sponsors.
00:17:53.262 - 00:18:39.634, Speaker C: Interested in raising capital through a security token offering? StartEngine is your full stack solution. StartEngine, a regulated ICO platform with a community of over 155,000 registered users, was founded in 2014 by Howard Marks, cofounder of Activision Blizzard. Since the implementation of the Jobs Act, StartEngine has helped over 160 companies raise capital. In fact, Start Engine can help a company build its own tokens and is creating a secondary market upon which those tokens can be traded. In short, Start Engine provides a complete token ecosystem. If your company wants to launch a security token offering, just go to StartEngine.com unchained for a free consultation and a 20% discount on future regulated ICO setup services that's StartEngine.com
00:18:39.634 - 00:18:42.094, Speaker C: unchained. This is not legal advice.
00:18:42.222 - 00:19:27.438, Speaker B: Sunxchange is a solar powered marketplace for the crypto economy. Sun Exchange members all over the world are earning cryptocurrency while solar powering businesses and communities in emerging markets. Through thisunexchange.com, for as little as $10 and in just a few clicks, you can purchase solar cells and lease them to projects in the world's sunniest regions, earning you an income stream of monetized sunshine. Paid in bitcoin, sun Exchange members can earn between ten and 15% IRR backed by the power of the sun. Founded in 2015, Sun Exchange is operating solar projects across southern africa, entirely powered by our members solar cells. Our partners include SolarCoin, the United Nations Development Program and the Energy Web Foundation.
00:19:27.438 - 00:19:37.142, Speaker B: Visit www.thesunexchange.com to check terms and eligibility to join the crypto solar revolution. Start earning solar powered money.
00:19:37.196 - 00:19:57.050, Speaker A: Today I'm speaking with Dominic Williams of DEFINITY. So let's talk about your consensus mechanism, threshold Relay and the decentralized randomness beacon and all the other aspects. And describe to me how your consensus mechanism differs from the other consensus algorithms.
00:19:57.390 - 00:20:59.370, Speaker D: Well, first of all, consensus is a difficult branch of computer science, and to put it in perspective, undergraduate level and so on, I've got a whole bunch of prizes. I've been working in sort of field of distributed computing at one form or another for more than 20 years, and it took me some months of studying to really understand just traditional Byzantine voltage, right? So I think there's a lot of different protocols out there. I think a lot of them should be looked at quite a bit of skepticism, frankly. But the definitive system is surprisingly simple. We lean on traditional cryptography to make things possible that you couldn't do with traditional distributed computing techniques. So the foundational technique is known as Threshold Relay, and it works by applying something called unique deterministic threshold signatures to generate a sequence of random numbers. But the clever bit is that the sequence of random numbers is completely unmanipulable.
00:20:59.370 - 00:21:53.642, Speaker D: So even if you had a network of computers and they were all controlled by the bad guy, right, the adversary, even he couldn't manipulate the sequence of random numbers. So that's obviously a valuable property. The other great property is that Threshold Relay works with a network of any size. So we aim for DEFINITY network to incorporate tens of millions of computers. So that's a very important piece and it's super efficient. So each successive random number is produced by a broadcast of only 22 data, and you can run it extremely quickly if you want to. Now, the marvelous bit about it is, through Threshold Relay, we're able to have a network of any size agree upon this sequence of random numbers, which is generated in an unstoppable way and is completely unmanipulable without running a consensus protocol.
00:21:53.786 - 00:22:06.180, Speaker A: So in terms of the difference with bitcoin, bitcoin also is random. But in order to get that randomness, you have to waste a lot of or not waste, but you have to use up a lot of electricity. Is that the difference?
00:22:06.630 - 00:23:08.822, Speaker D: Proof of work actually performs a number of different functions at once. So the cost of generating a block provides something called civil resistance. It makes it difficult for an adversary to come into the network and achieve 51% of the mining power and sort of break the fault bounds of the network and take control. But it's also a random number generator, right? So the idea is that everyone's beavering away, spinning the nonce in their block until the hash, which is a number, obviously falls beneath a target. And because you can only find a nonce, that brings the hash of the block beneath the target by brute force, effectively, it's a kind of random number generator where your chance of finding a winning nonce is proportional to the amount of computing power you're applying. But ultimately, it's a random number generator, so nobody knows who's going to create the next block. And that's very important for a variety of reasons.
00:23:08.822 - 00:23:20.910, Speaker D: But you could call it a kind of caveman method of producing random numbers. It's extraordinarily expensive. The numbers are produced in something called a press on distribution.
00:23:22.370 - 00:23:50.990, Speaker A: Actually, I want to ask you something, because the bitcoin mining process has long been credited with giving the bitcoin network its security. So does DEFINITY give up anything in terms of security by using this other method that doesn't require as much computer power or electricity? Because simply the investment that you need to make in bitcoin to do that is, I think, what people say gives it its know.
00:23:51.160 - 00:24:00.386, Speaker D: The bitcoin community is obviously very keen to make the case for proof of work. I personally believe it's not very secure and divinity will be much more secure.
00:24:00.418 - 00:24:02.550, Speaker A: I would have but what makes it secure?
00:24:02.970 - 00:24:16.910, Speaker D: Well, I forget the numbers, but there's studies out there that show that with an investment of, say, $100 million, you could easily overwhelm easily achieve 51% of the hash power of the bitcoin network. Right.
00:24:17.060 - 00:24:20.426, Speaker A: Wait, just for the mining equipment or including the electricity?
00:24:20.538 - 00:24:41.698, Speaker D: Well, that's just once you've got the equipment, if you've got the electricity, you don't have to run it forever in order to disrupt the network. Right? I mean, if someone bought the equipment, got the agreements with the electricity providers and turned it on and switched off the bitcoin network for a day, well, the bitcoin network is probably toast because it's one of the USPS of any decentralized network.
00:24:41.794 - 00:24:49.162, Speaker A: Wait, I'm sorry. I don't understand how you would turn off the bitcoin network for a day just by buying mining equipment. That doesn't make sense to me.
00:24:49.296 - 00:25:18.030, Speaker D: Well, so any decentralized protocol has something called false bounds, right? So it can continue producing agreement so long as the adversary, some notional attacker, controls less than a share of the network. So if you control 51%, actually, you don't even need that of the hashing power in the bitcoin network and you're an adversary, you can turn it off, you can break the agreement, you can break the protocol, so the protocol won't produce agreement anymore.
00:25:18.190 - 00:25:28.882, Speaker A: Oh, kind of like wipeout attacks, like where you're mining on a different chain and then you wipe out the chain that all the non bad actors are on. Is that what you're talking about?
00:25:28.936 - 00:25:53.870, Speaker D: Well, for example, it's sort of widely known, that thing called a double spend attack that can be performed if you have 51% of the network. Turns out that you can actually do some attacks with less than that but if, let's say you've got 51% of the network, you could just sort of double spend by continuously building a new longest chain. But if you continually forked the tip, it wouldn't progress, and the system would become unusable.
00:25:54.210 - 00:25:58.880, Speaker A: Okay. Yeah. Okay. It's still different from turning off.
00:26:04.930 - 00:26:16.062, Speaker D: Everybody else. Let's say you had 51%. The 49% would still have their mining equipment, but you could effectively turn off the network in the sense that it wouldn't be processing transactions anymore.
00:26:16.206 - 00:26:29.974, Speaker A: Okay, but so to go back to DEFINITY, so I understand that you are able to get the same kind of randomness as proof of work without the expenditure of electricity, but then how does the security come in?
00:26:30.092 - 00:26:52.606, Speaker D: So we're using just more advanced computer science. So, first of all, with respect to the sequence of random numbers, even if the adversary controlled 100% of the network, they couldn't manipulate that sequence of random numbers. It's unmanipulable by the mathematics involved. So that's one example of how we achieve greater security. But with respect to but if they.
00:26:52.628 - 00:27:05.554, Speaker A: Are controlling 100% of them, then once each for each block reward they get, couldn't they exclude certain transactions and only include certain ones or whatever it might be or no, sure.
00:27:05.592 - 00:28:02.210, Speaker D: So that's another aspect of these systems, which is that if the adversary controls a majority, he can perform censorship. But that's just I mean, I'm just looking focusing on one particular aspect, the generation of random numbers is unmanipulable. So that's a great foundation. But with respect to ensuring the adversary doesn't control the majority of the network, that so called civil resistance. And you want to make it as expensive as possible for an adversary to build up that kind of presence in the network, he would have to acquire an enormous amount of definitives. So the current cap, if you like, in the last presale round of the project is $2 billion, and quite possibly the network in production will have an even higher token cap. So a lot of that will be staked in various ways in the network, so you can create a very large capital impediment to the adversary.
00:28:02.210 - 00:28:19.110, Speaker D: And what's more, I mean, if you were an adversary wanting to attack the DEFINITY network, let's say you were, know, James Bond villain, you would have to acquire that stake and then use it to break the network. But in the process of doing so, you would be destroying your own investment.
00:28:19.270 - 00:28:39.742, Speaker A: Yeah, this is all pretty expensive. Yeah, I mean, this isn't actually that different from bitcoin because a lot of people say if somebody attacked the network, then of course the value of bitcoin would drop. And so the benefit that they would get from attacking the network wouldn't the financial benefit wouldn't be there. And it's similar with staking, but actually, let's talk about the staking.
00:28:39.886 - 00:29:29.214, Speaker D: Just one last piece. There's many other differences. So, I mean, it's true that bitcoin has some nice properties, but they're very basic, frankly. I mean, one of the problems is that because of the pooling of mining, in practice, the network is driven by a relatively small number of participants. And by contrast, for example, with DEFINITY, the network will launch with tens of thousands of individual participants. And you don't have this sort of handful of points of failure, right? So if you wanted to hack, say, the software, critical pieces of software running the network, it would be much harder because it's a much more distributed and decentralized network than you see today. And that's one of the key features of DEFINITY.
00:29:29.214 - 00:29:45.366, Speaker D: We were able to combine millions of individual participants. Some of these participants may be owned by the same entity, but nonetheless, there are many, many more individual nodes in the network, all of which are participating in producing blocks. So there's a number of different ways.
00:29:45.468 - 00:29:52.314, Speaker A: What I don't understand is why would you expect that you wouldn't still also end up with mining pools in well.
00:29:52.352 - 00:30:15.870, Speaker D: Because there's no economic advice. So DEFINITY doesn't work like bitcoin, there's no proof of work. So first of all, bitcoin and Ethereum work by placing miners into a competition where they try and solve proofs of work, if you like, and if they're lucky and they solve the current puzzle, they get a reward. That doesn't happen in divinity, right?
00:30:16.020 - 00:31:04.234, Speaker A: But what I'm saying is so with both bitcoin and ethereum with proof of work, as far as I understand, the reason why people enter mining pools is because the payments that they would receive if they were mining on their own would be spaced out unevenly. But if they join a mining pool, then the pool will know over time, okay, this person has like 1% of all the hash rate. Obviously, nobody I don't know if an individual has that much, but they can say over time, we will pay you 1% of the hash rate in an even fashion, rather than one block reward now and then one six months from now and then one two weeks after that and whatever. So with DEFINITY, where it's also done randomly, then wouldn't the payouts to individual miners be similarly not evenly spaced out? And so wouldn't there still be incentive to join a mining pool?
00:31:04.282 - 00:31:55.346, Speaker D: I mean, definitive is just, generally speaking, a much more sophisticated system. It says difficult to draw lessons from a very simple proof of work system and apply them to the DEFINITY network. So each node in DEFINITY has an approximately similar hardware specification and each node in the network acts as a replica in some shard that stores some number, some subset of the applications hosted on the internet computer. And the protocol has cryptography schemes incorporated into it that enable it to apply sort of service level agreement, if you like, to each individual node. So let's say you were running a DEFINITY node. It would look something like a mid to high end server machine. It would be.
00:31:55.346 - 00:32:35.098, Speaker D: Required to have a certain amount of storage and a certain amount of processing capacity. Once that's added to the DEFINITY network, the network will fill its storage space with cryptographic junk. That's predictable that you have to encrypt in a special way. And this enables the network to interrogate you, to check that indeed you have performed the role and you've uniquely stored this data. And economically speaking, the most efficient way of doing that is with a dedicated machine. It's designed in that way. So how could you pull it? How could you pull that? I mean, each machine has to exist as a separate economic entity.
00:32:35.098 - 00:32:39.738, Speaker D: It performs a role and it gets rewarded for providing for performing that role.
00:32:39.834 - 00:32:40.286, Speaker A: Okay?
00:32:40.388 - 00:33:36.558, Speaker D: Bitcoin is a completely different thing. And same with ethereum. I mean, everyone's performing the same. Every node in the network is applying the same transactions to some shared state, right? There's no notion of individual nodes that perform some discrete role. So let's say if you want to increase your economic presence in the DEFINITY network, you have to connect more nodes to the network, right? So each node has the same role as every other node and you increase your earnings by installing more nodes. There's no way you can pull those, right? Because you can't consolidate them. Whereas in Bitcoin or Ethereum, people are able to have some hashing hardware and sort of collaborate with other people with hashing hardware in a pool so they get some kind of stream of income with less variance.
00:33:36.558 - 00:33:50.534, Speaker D: But that's a completely different kind of system. The hashing has no functional purpose. Remember, what you're doing is just burning as much electricity as you can to try and increase your chances of getting.
00:33:50.572 - 00:33:59.466, Speaker A: The next block reward, right, which has the side benefit of adding security to the network. So let's move on to just to.
00:33:59.488 - 00:34:49.042, Speaker D: Recall, DEFINITY will provide much better security than that. We don't believe that just having a competition to burn electricity, which also has hugely a negative impact on the environment, provides the best security. And there are a bunch of clear theoretical scientific reasons why that doesn't provide the best security. It's just that bitcoin took off. It was a mechanism for making early decentralized networks work and these tokens got enormous value. So all kinds of people around the world started joining the competition to try and find the next block to get the block reward. But that doesn't mean that's not scientific evidence or a reason that this design produces the best security for a decentralized network.
00:34:49.042 - 00:34:59.338, Speaker D: It definitely doesn't. And it also doesn't produce good performance predictability. And it's very, very difficult also to scale it out and so that you can increase the capacity of those kind.
00:34:59.344 - 00:35:08.634, Speaker A: Of networks, you have a system for making protocol upgrades that you call the blockchain nervous system. How does that work? How does it decide to upgrade the protocol?
00:35:08.762 - 00:35:34.706, Speaker D: So the blockchain nervous system is actually a much broader system. It's what you might describe as an algorithmic governance system. And it actually controls all aspects of the network. So it can adopt or reject proposals that are submitted to it. And those proposals can touch on pretty much anything. It can adjust the economic parameters of the network. It can freeze miscreant systems.
00:35:34.706 - 00:36:05.906, Speaker D: Say, for example, someone discovered something terrible like an ISIS slave market running on the platform. It can help broken systems fix themselves. And among other things, it can also upgrade the protocol itself. And it does that by adopting a proposal to run an installer described by a hash that essentially installs a new version of the full node software on the machines backing the protocol. That makes sense.
00:36:06.088 - 00:36:26.760, Speaker A: Well, actually, I have a number of questions about this for you, because one thing that I noticed was when you described it, you said that this blockchain nervous system could have what you called, quote, privileged control over token ownership, and it could do things like repatriate stolen funds. That sounds like centralized control. So how does that work?
00:36:28.830 - 00:37:15.126, Speaker D: In a sense, it's decentralized centralized control. So the blockchain nervous system plays the role of network administrator, and in that sense, it is a central entity that controls the network. However, it's an algorithmic governance system that's controlled in a decentralized way. The basis of this system are things called neurons. And a neuron is a voting unit whose voting power is proportional to the number of definitives locked up inside. And these neurons can be configured to follow each other. So let's say you wanted to get involved in the governance system, for which you get rewarded, by the way.
00:37:15.126 - 00:38:16.858, Speaker D: So every time your neuron votes, you receive rewards. Probably you wouldn't feel qualified to vote on proposals relating to cryptography, so you would configure your neuron to follow other neurons when proposals submitted to the system with the cryptography topic. So, for example, you might pick five neurons whose addresses have been published by individuals who are sort of experts in the field and who are members of the definitive community. So let's know you might configure on your own to follow Timo, Hankey, Manush, Mobherhead, Jan, Kamanish, those kind of people. And so let's say there are five of them, right? So your neuron follows five cryptographers in the community. You might configure it so that if three of these other neurons vote to adopt a proposal, your neuron votes to adopt the proposal too. If three of those five vote to reject the proposal, your neuron votes to reject the proposal too.
00:38:16.858 - 00:39:05.222, Speaker D: And if neither of those conditions occur before a timeout, then you vote to reject the proposal. So you will have state some definitives to create this neuron. You can only get those definitives back by dissolving the neuron. Actually, the time it takes you to dissolve a neuron is configurable. And the longer it takes you to dissolve a neuron, the greater the rewards you receive in relation to the number of definitives you staked each time you vote, and the greater the voting power. So let's say you wanted to achieve the maximum possible returns from your definitives. You might create a neuron that takes four years to dissolve, and that will maximize the voting power and the rewards you receive in proportion to the definitives you've staked.
00:39:05.222 - 00:39:46.450, Speaker D: So your objective as a neuron holder is for the blockchain nervous system to take decisions that ultimately increase the value of DEFINITY tokens, which probably is a proxy for network adoption. And obviously, if you've created a neuron which takes four years to dissolve, you're very keen that the value of those definities locked up in the neuron increase and that decisions are adopted that will increase the value of each DEFINITY token. So in a sense, the objective of the blockchain nervous system is just simply to increase the value of definities, although that's a kind of proxy for adoption.
00:39:46.530 - 00:40:08.414, Speaker A: But something that I don't understand is you've called the blockchain nervous system an AI. But when I read how it worked, it seemed more like delegated proof of stake. And what you just described also sounded like delegated proof of stake. And you've also described the blockchain nervous system as liquid democracy, which a lot of people use typically as another term for delegated proof of stake. So where does the AI come in? I don't understand that.
00:40:08.532 - 00:40:45.466, Speaker D: Well, I wouldn't call it an AI. I'd call it an algorithmic governance system, first of all. But it certainly has elements of proof of stake, although it's nothing to do whatsoever with consensus. It's just a governance system, and it has elements of liquid democracy, but there are significant differences. So each neuron is an economic entity which wraps some definitives. And if you're a holder of one of these neurons, you can't get the definitives inside back without dissolving, and that takes some time. So you're very keen the incentive structure is set up.
00:40:45.466 - 00:41:23.314, Speaker D: So you're very keen that this neuron takes votes for proposals that will ultimately increase the value of the network. The neurons themselves are managed on client devices. So you'll configure your phone or your laptop with neuron client software. So the neurons, if you like, distributed around the edges of the network. Nobody really knows what the follow relationships are, and it will sort of cascades decisions, but it has some interesting properties with respect to AI, in the sense that neurons are following other neurons. It's not quite like delegated proof of stake or liquid democracy. We just say, hey, this person's got my vote.
00:41:23.442 - 00:42:14.790, Speaker A: I wanted to ask also about how the BNS will learn from market feedback. You had given this example in a Medium post about how, for instance, a demagogue neuron might persuade other neuron owners on Reddit to follow him, and then that could result in a stupid proposal being adopted. And you said that then the markets would not be fooled for long. And I'm quoting here, and react negatively, leading people to examine how and if their neurons voted for the proposal. The neuron of the demagogue would be removed from follow relationships. And over time, through such actions, the follow relationship shall tend toward more optimal forms. But who would remove the neuron of the demagogue? Like, you use the passive voice there, but who is removing this demagogue?
00:42:15.610 - 00:43:12.458, Speaker D: I mean, the demagogue can keep his neuron, but people will just unfollow it. So in the example with cryptography follows, let's say that you followed some individual who was a loudmouth on Twitter and you configured your own to follow this dude, and somehow he was a sort of fraud, if you like, but he got lots of people to follow him. And eventually, somehow, because lots of people followed him, he was able to submit a proposal to the blockchain nervous system that made some rather dubious technical changes. And these were adopted. And because of all the people following him, the system started using this stuff. Well, the consequences could be quite dire, and no doubt it would impact the value of so, you know, you might look at this and think, crikey, why on earth is my neuron following this guy?
00:43:12.624 - 00:43:21.020, Speaker A: Okay, but to understand so when you said that the BNS will learn from market feedback, it's not really learning, right? It's just that people are unfollowing that.
00:43:22.430 - 00:44:05.014, Speaker D: You know, it's an algorithmic governance system, and it makes proposals as a result of neurons voting. And neurons vote, for the most part, automatically as a result of their follow relationships. So if a proposal is adopted by the blockchain nervous system that results in some kind of negative market impact, people may look at the follow relationships they've configured into their neuron and say, oh, hang on. My neuron voted for this stupid proposal, right? And it voted for this stupid proposal because I'm following these people or this person, I'm going to reconfigure it to follow someone far more sensible, right?
00:44:05.052 - 00:44:08.680, Speaker A: So it's people learning, not the BNS itself, right?
00:44:09.370 - 00:44:37.250, Speaker D: Well, people are responding to market data effectively and changing the follow relationships between the neurons so that it makes better decisions. So in that sense, in the sense it's an algorithmic governance system where, for the most part, neurons act completely automatically. It's kind of learning. These follow relationships between neurons are being reconfigured.
00:44:37.610 - 00:44:46.200, Speaker A: So if I'm running a neuron and I have made this error of following the demagogue neuron, I don't unfollow it. My neuron will unfollow it by itself.
00:44:46.810 - 00:45:28.260, Speaker D: No, you will yourself reconfigure the follow relationship. So you've got, let's say, the make DEFINITY great again dude who's got tons of people to configure their neurons to follow his on some topic and maybe some stupid proposals being adopted by the system. If there are negative market consequences, which you would expect at least over a sort of medium to long term, you would expect people to reconfigure their neurons. So they're not following this guy. Right? So in that sense, the system is evolving because, remember, for the most part, these neurons vote automatically, right?
00:45:28.870 - 00:45:34.760, Speaker A: Okay. Right. But there's that moment where the change happens manually, okay?
00:45:37.370 - 00:45:41.526, Speaker D: It's not a sort of general purpose intelligence, it's a sort of hybrid system.
00:45:41.628 - 00:46:00.766, Speaker A: Okay. There's more I want to ask about this, but we're running out of time, so I'm going to just move on. I want to ask you, we mentioned WebAssembly before. Why did you guys choose WebAssembly as your programming language? First of all? Also just if you want to explain it for listeners who don't know and then explain why you chose it.
00:46:00.868 - 00:46:54.702, Speaker D: So WebAssembly is sort of one of the first open standards for universal software that can run anywhere. And it was originally conceived to allow much more sophisticated web applications to be created. So you can think of it a bit like Java for the web, right? But it's been designed with the benefit of all of the kind of learnings of the past 25 years or something. So it's a really nice specification for a virtual machine for which you can create bytecode, right? And in principle, you can create that bytecode using any computer language, any programming language. So that's nice. So the idea is that you can create like a WebAssembly applet using the programming language of your choice, and this will run inside the browser at near native speeds.
00:46:54.846 - 00:47:01.346, Speaker A: And does that lead to any sort of imprecision, which would be a bad thing if you're obviously dealing with money?
00:47:01.528 - 00:47:21.670, Speaker D: Well, so the computations performed on the Internet computer have to be completely deterministic. So for the most part, WebAssembly is completely deterministic. I think there's one instruction relating to floating point operations that isn't deterministic.
00:47:21.750 - 00:47:23.340, Speaker A: Okay, I don't know what that means.
00:47:24.190 - 00:47:36.160, Speaker D: A floating point is like a number with a decimal point, right? And so that particular instruction can't be used in software that runs on the Internet computer.
00:47:37.090 - 00:47:40.800, Speaker A: Okay. For money, there's often decimal points.
00:47:41.410 - 00:48:15.782, Speaker D: Yeah. So we're talking about a virtual machine, right? So it's nothing to do with money. We're talking about a virtual machine, a virtual computer that you can run bytecode software on. So it's roughly equivalent to, say, the Java virtual machine. So you can compile the Java programming language down to Java bytecode and you can run it on a Java virtual machine. And that Java virtual machine might be implemented in an IoT device, on a laptop, on a server, whatever, right, on lots of different kinds of operating systems. So that was the great thing with Java.
00:48:15.846 - 00:48:29.230, Speaker A: I'm just confused because I think oftentimes these different crypto networks or the different blockchain systems usually are dealing with money. So are you saying that DEFINITY is going to not be used as often for financial transactions?
00:48:29.650 - 00:49:13.870, Speaker D: No, not at all. There's just no relationship between the virtual machine and money. A virtual machine is like a virtual computer. It's a standard that you can use to create software that runs on any instance of that virtual machine wherever it may be hosted. So all of the main web browsers now have implementations of the WebAssembly virtual machine. And that means that you can compile WebAssembly software from some programming language and it will run in any web browser on whatever platform that web browser is running on. Right.
00:49:13.870 - 00:49:31.058, Speaker D: So it's just a standard for creating software. And it's an important standard because the first time, really we've had an open spec for a virtual machine that can be implemented absolutely everywhere without any kind of licensing restrictions and so on.
00:49:31.144 - 00:49:39.522, Speaker A: So basically, the developers will be using this to create different decentralized applications on DEFINITY.
00:49:39.666 - 00:49:59.420, Speaker D: Yeah. So we've got a language called Actorscript, which we're going to release at some point, and we expect that people will use Actorscript to create WebAssembly software that runs inside the web browser, and they'll also be able to use the same programming language to create WebAssembly software that runs on the Internet computer.
00:49:59.870 - 00:50:12.094, Speaker A: Okay. All right, so we're going to have to move super quickly through the last questions, but you proposed a crypto fiat system called the fee system Phi. How does that work?
00:50:12.292 - 00:50:59.470, Speaker D: So, Phi is really a DAP that would run on top of DEFINITY, although it could also run on top of Ethereum. And it's really a kind of algorithmic implementation of commercial banking. So it's a system that produces what we call crypto fiat. So it produces tokens that mirror local fiat currencies. So you have, like, phi USD, phi, CHFS, phi, GBP and so on. And it does that in the same way that commercial banks create money. So what a lot of people are so aware of is that the money we use in a modern economy is created by commercial banks, not the government.
00:50:59.470 - 00:51:40.070, Speaker D: So, for example, in the US. Or the UK, 98% of the money, dollars or pounds, is actually created by commercial banks when they issue loans. So the way it works is, let's say I'm a bank and you're a borrower and you want to borrow $100,000. I will simply create the $100,000 for you and that goes onto my balance sheet as a liability. And then I'll make you sign a loan agreement. So you will promise to pay me back, say, $120,000 with interest. And that legal document, the loan is an asset on my balance sheet.
00:51:40.070 - 00:52:25.254, Speaker D: So let's say I created $100,000 to give to you, and now I've made you sign a loan agreement and you've got to pay me back $120,000. Well, there's some credit default risk, so I'll book that as an asset worth $110,000. So I've made, nominally, a $10,000 profit. Now, the interesting thing is that really, that means that fiat money, like dollars and pounds, is really an IOU, okay? So all of the pounds and dollars are collateralized by these debt relationships. So let's say in order to convince me to create this $100,000 for you. You had to sign a loan agreement which gave me a call on your collateral. That could be your personal guarantee.
00:52:25.254 - 00:53:02.338, Speaker D: It could be your house, your car, or whatever. And probably you'll supply more collateral than you're borrowing. Right. And there's lots of interesting properties. If the value of the economy falls well as the value of those assets that you've provided as collateral fall, so does the value of the fiat currency in synchrony? Right, because it's backed by collateral, and that denominated in the same units, same currency units. So, anyway, it's a powerful system because it enables you to create large amounts of fiat.
00:53:02.514 - 00:53:05.766, Speaker A: Right, right. It's a fractional reserve system.
00:53:05.948 - 00:53:52.114, Speaker D: Yeah. So it is a fractional reserve system. I think if you look at traditional economics textbooks, they show a kind of a rising triangle. That's the traditional way of explaining it. But in practice, for example, in a modern economy, the banks are less constrained by the sort of fractional reserve aspect of it than by risk. So in the UK, for example, there are no reserve requirements at all. The limiting factor is actually risk because if the bank becomes insolvent, because the liabilities I e the money that it's created are greater than its assets I e the book value of those loans, it has to stop operating immediately.
00:53:52.114 - 00:54:00.486, Speaker D: So when banks are thinking about how much they can lend, they're really looking at the risk of insolvency, and that's the limiting factor.
00:54:00.598 - 00:54:35.300, Speaker A: So, as you know, something that's fueled the rise of Bitcoin and some of these other cryptocurrencies is the cap on the monetary supply and the fact that you cannot do the fractional reserve system. So do you feel like that runs any risks for you? And obviously, there's this whole flashback to the financial crisis that I think talking about fractional reserve banking brings to people. So do you have any worries about that? And how will you kind of prevent crises like that with this crypto fiat system you're building?
00:54:37.770 - 00:55:10.030, Speaker D: The notion of bitcoin. Bitcoin, in essence, is very different to a fiat currency. Essentially, you fix the supply and then the value fluctuates with demand, and that's why it's so volatile. And that was the magic trick that Satoshi pulled to create value in cyberspace and just said, look, we're going to create these tokens. There will only ever be this many. And thus, if demand for these tokens increases, the price will rise. And that in itself actually creates demands for the tokens.
00:55:10.030 - 00:55:58.234, Speaker D: But when you're talking about more standard economic sort of business requirements, you really need something like fiat, which is much more stable, and where the unit of account matches the value of assets in the economy. Right, or is linked to the value of assets in the economy. So it's certainly true that if the Fi system made lots of unwise loans, the system could break. So the equivalent would be the financial crisis where banks were able to create all kinds of silly loans to people in subprime housing who had no chance of paying them back. And they were able to say, right, look, you want a million dollar mortgage? Say, I'm going to create the million dollars and I'm going to book this mortgage.
00:55:58.362 - 00:56:03.378, Speaker A: But are you building something into definitive or into this fi system to prevent that?
00:56:03.464 - 00:56:24.134, Speaker D: Yeah, sure. So the design of Phi aims to originate loans in a decentralized manner in a much more rational way, such that we reduce the risk inherent in the system while creating, effectively mirror fiat at much lower cost.
00:56:24.332 - 00:56:33.290, Speaker A: Okay, so I wanted to ask you, between your presale and your public sale, what was the markup on your tokens?
00:56:33.950 - 00:57:16.918, Speaker D: Well, between the public seed round and the private round, I think you're referring to, we did this public seed round at the beginning of 2017. It sort of predated the ICO craze. It was a very kind of naive time. We actually put a soft cap on it of $1 million. We said, look, we just need like $1 million in the foundation and we'll raise more money later. And once we've reached 1 million Swiss francs, actually, and once we've reached that target and people could contribute using bitcoin ether or Swiss francs, once we've reached that 1 million, then we're going to switch the systems off in a few hours. And we did that, and by the time the systems switched off, I think we collected like, 3.9
00:57:16.918 - 00:57:52.958, Speaker D: million Swiss francs. But then the ICO market exploded and we're sort of slightly leery of some of the practices. So we sort of decided to stand back and we raised further money from hedge funds and venture capitalists and so on. And there were some really big name investors involved in the project. So I think between the seed round and the last round, which has raised I'm not quite ready to announce it, but it's like the original target was like $90 million and it was oversubscribed. It's like more than 100 x markup.
00:57:53.134 - 00:57:59.218, Speaker A: Okay, and how do you feel about having such a large markup for the everyday investor?
00:57:59.314 - 00:58:29.934, Speaker D: Well, I think it's certainly true that it's like 400 people participated in that seed round and they've been very well rewarded for their faith in the project. That's the nature of capitalism. Sometimes there are big winners. And it's certainly true that seed investors have done very well indeed. I still think there's enormous upside in the project, so I think it's just the beginning. But, yeah, seed investors have done very well.
00:58:30.052 - 00:58:55.094, Speaker A: From a lot of your blog posts and also previous conversations I've had with you, it seems that technical innovation is one of the differentiators for DEFINITY, if not the main differentiator. How do you plan to become the dominant platform on technical strength in an open source environment where any other team can take the technology you've built and add it to their platform when they may already be starting out with a greater network effect.
00:58:55.292 - 01:00:13.002, Speaker D: Yeah, so it's a very good question and I think any organization like Dfinity that's investing a huge amount of money into the research and development of new science and development of software and so on, has to think about that carefully. But first of all, networks can accrue network effects and the DEFINITY network first of all will launch a scale I think that will surprise a lot of people. The technology involved will be very complex and we are building a kind of NASA for decentralization. So the definitive foundation has, for example, research centers in Palo Alto, Zurich and people all over the world, people in Germany, UK, even got three people in. You know, one of the factors that people wanting to build on the internet computer or a platform like that will take into consideration is what kind of group of people are standing behind that network. Right? And honestly, the technology has become so complex it's very unlikely that some team out there that just wants to create a quick fork will even understand the systems that the software are implementing.
01:00:13.066 - 01:00:17.300, Speaker A: Right, but it could be like really good developers like from Ethereum or something.
01:00:17.910 - 01:01:30.506, Speaker D: Look, there's two bits of this. First, when the network launches in beta, it may be that some of it's closed source and it's sort of progressively revealed with bounties for people who find bugs and things like that. So there will be a window where the network has an opportunity to establish itself. The technology involved is far too complex for you just to sort of dip in and just take some piece and add it, say to Ethereum in order to give it some huge boost, right? You'd really need just to take the entire definitive system and use it to create a new network. But then, if anyone looking to build on the Internet computer has to ask the question, well, look, here's the real Internet computer with this large network of miners, which will be like professional hosting centers, running tens of thousands of computers that's got this fantastic NASA for decentralization that's dedicated to continuing to develop it and help support it in production. I think most people would choose to build on that network rather than just some network of a few nodes backed by some people that can't develop their own technology.
01:01:30.688 - 01:01:35.580, Speaker A: Right, but what I'm saying is what if it's like a robust network that adopts some of the technology?
01:01:36.910 - 01:02:33.018, Speaker D: I don't think adopting some of the technology is pretty tough. So the things engineered as a whole and what I think people are going to see in the coming years is that the original simplicity of something like Bitcoin is replaced by things that are vastly more complex and sophisticated. So it's not just like you could just take the protocol and run it yourself on your network to improve it. You'd have to just sort of take the entire DEFINITY stack and then with your own miners, create a competing network. So that would be possible. It's true, but people will have to I think people looking to build on the Internet computer will have to consider whether they want to build on the sort of imitation network or they want to build on the network, which has vastly more computational power and also is backed by this NASA decentralization.
01:02:33.194 - 01:02:40.110, Speaker A: Right. Okay, great. Well, that's all the time we have, but this has been a fascinating discussion. Where can people learn more about you and DEFINITY?
01:02:41.090 - 01:03:14.106, Speaker D: Thanks, Laura. Well, we're trying to make as much available information available as possible. So I think there's series appearing on YouTube. I think there's one called Inside DEFINITY. We're trying to push more and more information onto the website. There are social media channels, Reddit Telegram and so on. We also attend a lot of conferences, and there are even definitive meetups where you can go and meet members of the team, and those have been taking place all over the world.
01:03:14.288 - 01:03:18.054, Speaker A: Okay, great. All right, well, thanks for coming on Unchained.
01:03:18.182 - 01:03:19.254, Speaker D: Thanks, Laura.
01:03:19.382 - 01:03:48.786, Speaker A: Thanks so much for joining us today. To learn more about Dominic and DEFINITY, check out the show notes inside your podcast episode. New episodes of Unchained come out every Tuesday. If you haven't already, rate, review and subscribe on Apple podcasts. If you liked this episode, share it with your friends on Facebook, Twitter or LinkedIn. And if you're not yet subscribed to my other podcast, Unconfirmed, I highly recommend you check it out and subscribe now. Unchained is produced by me, Laura Shin, with help from Raylene Gallapaul, Lee Fractal recording Jenny Josephson, Rahul Singh Reddy, and Daniel Ness.
01:03:48.786 - 01:03:49.650, Speaker A: Thanks for listening.
