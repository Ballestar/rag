00:00:01.210 - 00:00:24.670, Speaker A: Hello everybody. Welcome to the last panel of this session about intents. Every week there's a new Twitter thread about intents. Still, there's one in my drafts as well. Still we do not know what intents are and what they are used for. So let's kind of explore in this panel. I would like from the panel to basically go by order, introduce themselves and just define or explain to the audience what do they mean by intents.
00:00:24.670 - 00:00:27.880, Speaker A: Yeah. Christopher, if you can go forward.
00:00:28.970 - 00:01:19.654, Speaker B: Thanks. I'm Chris, I work on Enoma, which is sort of an intent centric architecture as we understand it to us. Or I mean, I think the sense in which language, of course, is this decentralized coordination system and no one gets to pick the one true definition of intent. I think the sense in which we've seen intent as a coordinating concept so far is as something like an intent is a credible commitment to a preference function over the state of a particular system and the system in question can be defined very differently. So when you define the system as like the ethereum main chain, then you could have intents referencing state on the ethereum main chain. When you define the system as like the whole sort of roll up ecosystem, then your intent could reference any state on a roll up. When you define the system as know, I don't know what Google has indexed, then your intent is something you type in Google search bar and searches over whatever is know to us.
00:01:19.654 - 00:01:30.860, Speaker B: Intents also include information about who knows what. So information flow control. This is what we spent a lot of time working on and we hope to be able to kind of provide that to the ecosystem at large.
00:01:32.910 - 00:01:33.274, Speaker C: Yeah.
00:01:33.312 - 00:02:16.710, Speaker D: So I'm Simon, CTO at Central. So when we think about intents, I guess a user sits down to interact with a blockchain with an idea of what it is that they want to accomplish and they're then expected to approximate the execution trace that is going to lead to what they want. And the reason that mev exists and that you're all here is that there is a gap between those two things. So it just makes good sense if there's a mechanism for the user to express what it is they want to achieve directly and then repurpose the searcher network as a solver network to achieve that. So yeah, at essential, I guess we want to accelerate that transition from sort of value extraction to intent satisfaction.
00:02:21.610 - 00:02:43.054, Speaker C: Testing, testing. Hi, I'm Vlad Zenfir. I'm a troll, but everything I say you should take as a serious test. However, I think what intents are and what your intents are is like forbidden knowledge. That's like forbidden for very good reason. It's banned to your subconscious. You can't even know about it.
00:02:43.054 - 00:02:58.814, Speaker C: And that's for your own safety because if you did, other people would use it in disputes against you to wreck you. So your intents. You don't know them. No one knows what intents are. They're secret. They're forbidden to know for everyone's safety. Then when you say about intents, what you're talking about is your conscious intents.
00:02:58.814 - 00:03:27.466, Speaker C: And those are the things that you willingly let up for the purposes of disputes for other people to use against you in this dance, that is the law. And so intents are what we call conscious. What we call intents are conscious intents that we're willingly putting up in order to make it fair game for people to extract as much value from us as they can out of our insecurity. And that's just fair. That's just so. Will I tell you my intents? No. That would be insecure.
00:03:27.466 - 00:03:33.380, Speaker C: And I wouldn't make my insecurity your insecurity. And that's like my basic duty. Thank you.
00:03:36.230 - 00:04:05.366, Speaker E: Okay. Hi, I'm Philip. I work with trendy squares. We are doing economic auditing and for that purpose we have developed internal tooling that together. Now with the Ethereum Foundation we are basically developing a modeling framework that you can use intents fit in. Because that framework, the main purpose of it is actually looking at the intersection and the kind of the connections between different mechanisms and different models. And intents, when they come as an input, basically will affect the value chain.
00:04:05.366 - 00:04:16.240, Speaker E: And the question is, how does it spread through? What are the economics of intents coming about? What tendency of centralization will come about through them? And what will be possible higher order effects? Thanks.
00:04:18.210 - 00:04:47.922, Speaker F: I'm Marcus, founder of Propeller Heads. And we are solvers. And we solve intents. And intents are a simple way to think about it. The way I think about it is that they are partial transactions where I might not know all the things I need to know to be able to form a transaction. Like, I don't know the best path for my swap, I don't know the best time to execute. I don't know when price or gas will be low enough.
00:04:47.922 - 00:05:29.254, Speaker F: So I still want to though, execute that intent and publish it so someone else who might know this information can help me out. And that is really what enables intents to allow me to express a lot more than I can do today. Because at the moment, I'm limited to the things that I can fully express. But with intense, I can express things partially and anybody can help me now or in the future to find that missing part. And I agree with Vlad that there is a differentiation between conscious and unconscious intents and expressed and non expressed intents. And I think we can explore that further later.
00:05:29.372 - 00:05:50.010, Speaker A: Yeah, I want to also explore how our intents different from the current set of transaction types we already have. So we have the normal transaction type. We have sign messages. We have these type of off chain trusted transaction types such as bundles. How are intents different than what we already have? And what new feature sets do they bring to the picture?
00:05:50.990 - 00:06:58.718, Speaker B: You can go yeah, I mean, I think intents in a certain sense are purposefully less specific than transactions. They define what it would count for what it would count for in order for a state transition to be correct without defining exactly how to get there. Right? So on purpose they leave freedom to if we think about the data flow of everything, right, users have intents and users are at the edge of the system, right? They set the boundary conditions and then the information flows inward. And intents allow you to describe exactly how much choice you want to give up and to whom and what choices they can make because that information flows inward potentially to optimize things. And kind of the landscape of mev often when you have entities with different preferences they're using that to extract from you because they have more information at the time they make the decision. Right? So intents kind of allow you to program exactly how much you want to specify about what can build on top of your message, consume your intent. And in that sense you can see these things sort of converging towards one another like smart transactions or partial transactions or these are sort of modifications to the concept of transactions that I think converge towards intents.
00:06:58.718 - 00:07:23.210, Speaker B: On the other hand, I think it's helpful to think about just the term intent to me conveys this very intuitive thing to people like about oh, well, someone starts with an intent and then they write down their intent, right? It's explicit or sort of consciously articulated then it's sent to the system and discreet then it's sent to the system. And the system along with the intents of other participants determines what exactly happens. But the intent sets the boundary constraints.
00:07:24.990 - 00:08:36.340, Speaker D: Yeah. I think the extent to which a user is sophisticated the sort of intent they would express resembles more and more the sort of transaction they're capable of expressing. So I think the kind of user, for example, that is perfectly capable of setting an appropriate slippage on uniswap and not getting sandwiched is probably the kind of user who has the extent to which they're sophisticated. In that respect, the intent will be close enough an approximation to the transaction, as I mentioned before, sort of the less sophisticated the user or the greater the gap between what they actually wanted and what they actually stated. Whether that's just through ignorance of how the particular protocol they're working with functions, that's really where the difference arises. I think it's also super interesting and that it sort of enshrines what today we're calling mev as a fundamental kind of first class actor of a protocol. So rather than it being this sort of like weird emergent property which you sort of then forever are kind of trying to patch or trying to work out exactly what's the appropriate or fair level of value that can be extracted by kind of enshrining it right from the get go.
00:08:36.340 - 00:08:40.500, Speaker D: It becomes just a part of the market.
00:08:42.230 - 00:09:10.486, Speaker C: Yeah, well, thankfully, this is like sort of applied crypto economics. So, like, the market will see who's the most sophisticated based on who makes the most map. Am I right? And in my opinion, the most sophisticated strategy is that you should have zero knowledge about the intents of a transaction. It's invariant. And the invariance that it validates have nothing to do with its intent. If it actually has a nondeterministic strategy, that's secure. If you have like, a secure strategy, it's not going to be deterministic.
00:09:10.486 - 00:09:39.030, Speaker C: It's going to be like a test that no one can tell what your intentions are. And then if they can tell your intentions, then sort of you're going to be their breakfast. And so it's not like your transaction gets closer to your intention. It gets closer to the invariance. You need to insist so that you can make the tests that you can do to test the faith and the performance and the security of your adversaries. We're going to pen test each other. It's not like you're going to know my intent when I'm pen testing you.
00:09:39.030 - 00:10:02.954, Speaker C: You don't know my intent. I promise you that I don't know my intent. And you accept this as zero launch proof that you will never know my intent because this is sort of like how, in my opinion, actually secure transacting game theory response works. You're never going to have a deterministic invariant of the outcome. You have a deterministic invariance. They're not your intent. They're just how the test works.
00:10:02.954 - 00:10:19.220, Speaker C: And then it's a test. What is the intent of a test? What my intent when I sit on the bridge all day and I throw bait on the bridge to see who eats my troll bait? You must imagine Sisyphus happy and you must imagine me happy while I do that.
00:10:19.670 - 00:10:25.418, Speaker B: But don't you already have this, like, your intent? I mean, your real world intent is out in the not. You know, who cares?
00:10:25.614 - 00:10:32.600, Speaker C: It's banished from my conscious mind. It's banished from the hive mind. It's not there at all. It's fucking banished from the world. It's too.
00:10:37.530 - 00:10:38.994, Speaker A: Let'S have let's have an audience.
00:10:39.042 - 00:10:58.750, Speaker C: Question is your opinion, Vlad, that the best way to express an intent essentially is provide a proof that your intent has been met. No one knows your intent, but they just have, like a the best way to express an intent is repenting in front of the Lord at judgment day. That's the best way and the only way. Everything else is bullshit.
00:11:03.570 - 00:11:07.874, Speaker A: So so do you think that intents are a wrong way forward? Is that what you think?
00:11:07.912 - 00:11:09.986, Speaker C: No, they're there for us to extract mev out of.
00:11:10.008 - 00:11:11.540, Speaker A: You got it.
00:11:12.950 - 00:11:47.360, Speaker E: Okay. I think there is a point where we can actually agree, even if the language might be different, but there's the question of what is the language average users, normal users, not knowing much, will actually face intents. And at the moment we are talking, when we see examples of that, they are typically relatively low level. I'm not sure users will care about this. So there is the question of what will be basically the stack of translations in between. Not only the stacks, there will also be the question of what services need to be provided to make it useful. There's the question also, does this lead to centralization? And obviously also and that I think, ties back to what Flood said.
00:11:47.360 - 00:12:07.160, Speaker E: Do you lose actually total control about what happens to what you state? And how do you make sure that this is actually coming back at some level? How is this any kind transparent? These things have to be solved, and I'm not sure how they will actually be. There are some ideas out there, but it needs a lot of modeling. A lot of details are super relevant here. Basically.
00:12:10.410 - 00:12:16.840, Speaker F: Coming back sort of the original question, what will intents allow us to do that we can't do today?
00:12:23.170 - 00:12:33.200, Speaker C: Don't let me get me wrong. I love lazy evaluation. Like, lazy evaluation is great, like partial specifications, lazy evaluation is the best. Don't get me wrong. Sorry.
00:12:34.370 - 00:12:35.790, Speaker A: Yeah, go ahead, Michael.
00:12:37.030 - 00:13:03.098, Speaker F: So I think there's a lot of spaces that you can go into. I think starting with a simple example of what intents allow us to do already today. I think Kaoso is a really good example where you submit an intent for a transaction, but there's a lot of unseen information. There might be others trading in the other direction, and you can have a coincidence want. There might be many others trading same direction. Can batch and benefit from that. All of that would be impossible for you to know ahead of time.
00:13:03.098 - 00:14:00.090, Speaker F: And also intents allow for much more complex coordination that is very difficult to express in current UIs. So you have a massive bottleneck blockchains are these wonderful programmable systems where you could actually settle on any agreement and they're limited by the UIs that you can build and how fast you can build certain UIs or certain use cases. But intense, I think it can move much faster than the UIs will be able to move. And that will allow you to express much more complex transaction types. For example, multiparty coordination where you have different level actors that agree together to make a particular transaction happen. That only is valid when five different parties actually agree on that. And it's very difficult to design UIs with this kind of thing, but on an intent layer, it's much more realistic.
00:14:00.670 - 00:14:34.360, Speaker C: But why not invariant? Like, if you just said invariant, you would have no problem with me and you wouldn't have put yourself in this position where I'm going to extract mev from your intents bro just call them invariants. If you call them intents in agreements, like legally, you're going to get yourself in lawsuits and Torts and you'll be liable. Just call them invariance invalidation. Use computer science terms, don't get yourself liable. Pay attention when the law professor claps. You know what I mean?
00:14:36.810 - 00:14:39.210, Speaker A: Are there any audience questions till now?
00:14:39.360 - 00:14:43.354, Speaker B: I mean, is language bound by law or is law bound by language which.
00:14:43.392 - 00:14:48.810, Speaker C: Expresses which I mean language is the medium of legal argument.
00:14:49.570 - 00:14:54.286, Speaker B: Exactly. Which means that if we change the definitions of the concepts, the laws say different things.
00:14:54.468 - 00:14:58.030, Speaker C: I mean, I'm going to dispute your definitions, bro. Like good luck.
00:15:01.250 - 00:15:31.946, Speaker A: Let'S revert back to yeah, let's revert back. Maybe Fabrizio has a question. Okay, so it's clear to me that up to now, given what we heard, basically no one has any fucking clue what attempts are. I just wanted to know at least do you have any idea about what mathematical instruments would you like to use to study them or to even attempt to give a decent definition or it's just like magic. Maybe Philip. Maybe Philip, yeah.
00:15:31.968 - 00:16:16.614, Speaker E: So I mean, you know, I'm old enough, maybe sounds stupid but these problems of intents, you can call it differently. They happen also in other domains. So the question is, for instance, if you think about combinatorial auctions, same problem, very complex biding language needed. So you need interfaces to actually specify what exactly you want to do. The main question or the main approach there basically is to define what is needed from the allocation perspective. Here it would be basically what happens as a transaction on the higher level is the question of what attributes do the user actually care about? And honestly, I think in the end this is a thing that has to be experimented about. There are some ideas that we saw, but the idea that the same domain that is relevant for what is the value created downstream is the same that users care about is obviously not I mean there is no I don't think there may be much overlap, I guess.
00:16:16.614 - 00:16:30.060, Speaker E: So we need that language first from a user perspective and see what demand actually is there for that. I'm not sure what people are willing to share, for instance, with current proposals. Do they share information right away? It's like 90% 10% care. I don't know.
00:16:31.390 - 00:16:58.262, Speaker C: If you don't mind, I have a quick thing to add about that. In mechanism design there's this idea of a truthful mechanism where you have the incentive to reveal your type to the mechanism or something like that, roughly. And then in the sort of version that I'm thinking about is like you would never tell anyone your type. That's the most private information that you're going to get Mercks for right away. What instead you do is you provide like an encrypted blob and then the mechanism does it without knowing anything about your type.
00:16:58.396 - 00:17:26.490, Speaker E: The point is in classical mechanism design you have typical results. That means there is a central mechanism which acquires your private information. Then you can provide your optimal allocation under certain conditions. Obviously in many cases, like if you're bidding in an auction, you will be very unwilling to bid your full vector of information. Right? I mean, because you don't know whether the auctioneer says basically fuck you, I'm turning the mechanism around and similar problems are here. There is also the algorithmic perspective. If you are again complex auctions, if you try to bid on everything, that space is far too complex.
00:17:26.490 - 00:17:33.570, Speaker E: You need user interfaces that are simple enough people can understand and can be then translated into the actual allocation layer that matters.
00:17:35.270 - 00:17:37.474, Speaker A: There's an audience question as well.
00:17:37.512 - 00:17:37.714, Speaker C: Yeah.
00:17:37.752 - 00:18:56.102, Speaker G: So reflecting back on some of the learnings we have from the account extraction space, basically one of the biggest challenges of account extraction standard in Ethereum was that fees of user operations, they are conditional upon user operations settling on chain. And so you always have to deal with the situation where there are some intents. These third party solvers process them. They spend resources, computational resources to solve them but they only get paid if they can actually eventually settle them on chain. And so that kind of brings a lot of dos vectors which is how this 4337 standard becomes very complex because of this. So I kind of wonder your opinions on that, just your general opinions on that. Do you see that as a threat to perhaps the goal of simplifying user experience? Our users are now required to have some sort of reputation for their intents to be processed.
00:18:56.102 - 00:18:59.050, Speaker G: Do you see that as a significant challenge?
00:18:59.710 - 00:19:40.310, Speaker E: I mean, I mentioned initially that one thing that is very interesting is that it's basically the whole value chain, right? And what you're mentioning is that if there is a change of behavior at the bottom, how does this affect basically which builders do you approach? For instance? Do you approach all builders? Do you basically create redundancy because you might be in danger of not matching demand that you already created downstream? I think all of these things will there are these interlinkages and I'm pretty sure they will happen. The main problem again is we can talk about it but ultimately you need some form of modeling to think about reason, isolate factors and think about what it will happen. I mean, I can talk and talk but you need models. In the end we don't have them yet. I would say mathematics.
00:19:45.480 - 00:19:46.196, Speaker B: How you deal.
00:19:46.218 - 00:19:54.520, Speaker C: With that issue, whether maybe the solution is to simplify the expression language rather than make it more complicated to simplify the solving.
00:19:55.980 - 00:20:32.176, Speaker D: So I guess perhaps the correct answer is to do both to some degree. One of the things we quickly came across was that in this whole idea of intent expression there needs to be some specified language for intent expression. So that is one of the first things that we're thinking about building to kind of tie into. I think it was the first question that was asked about what's the mathematical formalization of this? This all sounds very vague. It's a very fair question. It's complex optimization, basically. So you are dealing with a very complex state machine which basically is your constraints.
00:20:32.176 - 00:21:17.840, Speaker D: So everything that you can do is bound by an awfully complex by now, take the EVM machine. The user is going to express some objective function of some final state they would like to achieve. And so that is sort of the formalization of how you're saying now this is the state I would like to achieve, this is the gradient in n dimensions over which I would like it to be evaluated. Please do your best. So to tie that back into this question so if we're going to be speaking in such terms, you need the appropriate tool for the job. So essentially our answer to that question is that it's a DSL for intent expression, which is essentially a constraint based programming language.
00:21:18.740 - 00:21:35.368, Speaker C: I have a sort of radical alternative which is basically don't ever encode your intent ever anywhere. Sorry, just invariants and things you can prove which are nothing to do with intents. And then those you prove in a proof assistant and you do that sort of off chain. You don't tell anyone or you keep that as if it's like what do.
00:21:35.374 - 00:21:38.612, Speaker A: You mean by invariance? Sorry? What do you mean by invariance?
00:21:38.756 - 00:22:08.060, Speaker C: Invariance oh, it's like the traditional computer science word for what we are trying to call intense is an invariant. It's something that just is guaranteed to be true about the program at this point, no matter how it got to that point. It's something that doesn't vary. It's like a computer science term. It's sort of like something you can prove about the program at all states or if it's an invariant across the whole trace. Invariants are sort of the traditional way to talk about things we can prove about programs.
00:22:08.140 - 00:22:09.010, Speaker D: Yeah, but.
00:22:10.820 - 00:22:27.576, Speaker A: If I have a geometric variety of some sort and I give you a start point and an endpoint or start region and an end region and I say give me one curve that connects the two regions, the start and endpoints are invariants. So how is that not connected to what they are?
00:22:27.598 - 00:22:58.210, Speaker C: So it is sort of connected, but if you're doing a good strategy, your opponents, you will basically have sort of like this sort of invariance curve and you will not know what outcome you get and you will not invariant your outcome with a secure strategy, with secure test. It's like a hypothesis test. You don't know your outcome. How could you do a hypothesis validating for your outcome ahead of time? It's like not a test then. If it's not a test, then you're basically having actually an order or an intent and then you're just making it fair game for me to extract as much mev from you as I can.
00:22:58.580 - 00:23:19.540, Speaker D: Since we, I guess, touched on the acceptability or not of the terminology of intents and whether that ought to be invariants. I mean, I guess my point is that the average what I'm going to call a first order user, so not somebody looking to extract mev. It's not reasonable that they should be conceptualizing these systems in terms of strategy and adversaries.
00:23:22.120 - 00:23:37.164, Speaker C: Are you kidding me? You're going to the dark forest. It's like the desert of the real. You don't want to think about strategy or artificial. You're going to die in the desert, man. No. And then you're going to make everyone else die with you, and you're making your security, your insecurity animals. You go to the desert with no water, and then you expect me to give you my water and make me die with you too? Bro.
00:23:37.164 - 00:23:56.788, Speaker C: No, that's not the way this works. This is like the desert of the real, man. You have to think about security. You have to think about your own security. You don't go out into the desert without thinking about your security or your strategy or your adversaries or you're going to get sniped in the dark force. And it'll be fair, like, they will pick up your loot and they will be right to.
00:23:56.874 - 00:24:04.116, Speaker D: Now, I agree with you that that is the state of things, but I think that's why we're proposing this is.
00:24:04.138 - 00:24:08.490, Speaker C: Like most lawfully what you deserve if you go out there not thinking about your strategy and your security.
00:24:09.500 - 00:25:05.572, Speaker B: I mean, I think the only way to escape the desert of the real is trust, right? To come back to your original question, currently we live in this economically abstract model, and in an economically abstract model, solvers or whoever's processing intents needs to be always concerned about dos, right? And that relationship, it's going to converge to something that looks like transactions. If the only way you can prevent dos is by charging proportional to the amount of computation, right? Because transactions charge gas proportional to the amount of computation. And intents don't magically escape this restriction because this restriction is economic. It's not like about the expression language, although constrained expression languages can help you bound the computational costs. But ultimately, I think we'll just see the pipeline converge towards more of like a trust graph or a web of trust where solvers who are interacting with your intent, your friends. How do you trust the real friends in the desk?
00:25:05.716 - 00:25:08.580, Speaker C: How do you trust someone who has a billion dollars if they're insecure?
00:25:08.660 - 00:25:09.836, Speaker B: I mean, you don't matter how much.
00:25:09.858 - 00:25:10.396, Speaker C: Money they're out there.
00:25:10.418 - 00:25:11.596, Speaker B: That's why you build a web, right?
00:25:11.618 - 00:25:30.370, Speaker C: That's why you don't know. A web of trust of insecure people is insecure. You need at least one secure person in the web of trust, or the whole thing is obviously not secure. You can't have trust without security first. You're going to go out into the desert of the real, everyone's insecure and make a web of trust with a bunch of insecure people who are going to turn you in and wreck you.
00:25:32.660 - 00:25:34.388, Speaker B: Anyone. You can form a web of trust.
00:25:34.474 - 00:25:40.820, Speaker C: No, you can trust people who are secure. Like, I'm not going to trust people who aren't secure if you're secure. Damn right I trust.
00:25:40.890 - 00:25:41.444, Speaker B: How do you know?
00:25:41.482 - 00:25:45.536, Speaker C: How do you know you test them. How do you ever get access to.
00:25:45.578 - 00:25:47.640, Speaker B: The information on whether or not they're secure?
00:25:48.460 - 00:25:53.544, Speaker C: If you see they're intent, then obviously they're not secure and you test them until they get wrecked enough to fix it.
00:25:53.742 - 00:25:55.416, Speaker B: This is statistical security, though.
00:25:55.438 - 00:26:02.072, Speaker C: It's not it's not statistical, it's adversarial. It's literally like a Byzantine uncertainty that gets you when you're insecure.
00:26:02.136 - 00:26:03.004, Speaker B: But you can never know.
00:26:03.042 - 00:26:14.450, Speaker C: You can never know. You will know. I will get you if you're insecure. I will smite. You know that. What about I will keep it in.
00:26:16.260 - 00:26:37.064, Speaker F: So I agree that state today. What about reducing that forest for the user by actually building these trusted pockets or trusted building blocks that are designed to execute certain subintents that I then can then use?
00:26:37.182 - 00:26:38.712, Speaker A: Can you give example? Security.
00:26:38.766 - 00:26:49.740, Speaker C: You have to start with security and then you throw it away by letting them express their intents. No, you don't let them make this mistake that will make them insecure. You provide security by not letting them fall into this trap.
00:26:51.920 - 00:27:35.396, Speaker D: I think perhaps an awful way to put it would be like, yeah, so you're going to go out and you're going to get wrecked and somebody's going to extract X from your transaction. Well, it's just bringing that out into the open and allowing a second to the searcher to say, hey, you can express your intent in such a way that, sure, let me demonstrate that he is going to extract N from you, and I propose to extract N minus epsilon. And as soon as that discourse is public, you have essentially an auction that takes place until it's the race to the bottom that you see with all kinds of searching and that eventually competition reaches a point where, you know, hey, if I try and extract more than $0.01 from this, someone else is going to take it. You're just making that auction approach optimality from a point of view of what the user intends.
00:27:35.428 - 00:27:42.492, Speaker C: Sure. But you don't want to be assuming perfect competition, bro. You want to assume oligopolistic competition and that oligopoly is going to wreck you, you know what I mean?
00:27:42.626 - 00:27:51.712, Speaker B: But then you need bottom up compositionality. Split your tribes in the desert of the real and reform out of some basis of trust. You're not going to escape that's, right, an oligopoly if you start from it.
00:27:51.766 - 00:27:56.800, Speaker C: No, you just want your oligopolist to be secure, otherwise you're going to be down with their ship.
00:27:57.380 - 00:28:00.480, Speaker B: Why does it matter if they're secure if you rely on the oligopolist?
00:28:01.720 - 00:28:08.532, Speaker C: Imagine you trust an insecure person with your life and they can't even secure themselves. How are they going to secure your life?
00:28:08.586 - 00:28:12.692, Speaker A: Bro can you define what you mean by secure over here?
00:28:12.746 - 00:28:19.160, Speaker C: So in this case, let's talk about pen. We're talking about security in crypto economic terms, like pen testing of someone's transactions.
00:28:20.380 - 00:28:31.832, Speaker D: So for every transaction, for every test you perform, you gain some additional confidence that your hypothesis of their security. Right, but he's right that it's statistical no, it's adversarial.
00:28:31.976 - 00:28:36.396, Speaker C: Because if you're insecure, I will find out and I will get it. Like, it's not statistical, I will find it.
00:28:36.418 - 00:28:37.628, Speaker D: What if I'm bluffing 100 times in.
00:28:37.634 - 00:28:45.688, Speaker C: A row and then I write but then you're not going to be insecure. Bro I told you, it's not deterministic. It's not going to be secure if you have a deterministic outcome that you're valid anymore.
00:28:45.864 - 00:28:55.204, Speaker B: This sounds like that this falls to the Chinese room argument of consciousness testing, right? How do you know? You're trying to deduce some internal state of being secure. Right.
00:28:55.242 - 00:29:04.870, Speaker C: But there's no actually right. I don't know. And that's actually the beautiful thing I'm just extracting mev. I don't know whether it's coming from insecure people or secure people.
00:29:05.320 - 00:29:06.048, Speaker E: Is it?
00:29:06.154 - 00:29:20.350, Speaker C: And that's actually great because I don't need to know. And for you to make me find out if you're insecure or not is unduly imposing a duty on me for my business and my operations. I don't need to know if you're secure or not. I just extract my of not knowing whether you're secure or not.
00:29:20.720 - 00:29:21.276, Speaker A: Yes.
00:29:21.378 - 00:29:27.144, Speaker E: Is it actually are you talking about the market for hypothesis testing that you basically want incentivize, that someone rejects the hypothesis?
00:29:27.272 - 00:29:37.730, Speaker C: That's just sort of where it's going? Because if it's not a test and I can get some kind of intent out of it, then I'm going to exploit it. I have a question.
00:29:38.840 - 00:29:40.790, Speaker A: I'll let the audience have a question.
00:29:41.960 - 00:29:49.856, Speaker B: So, Vlad, you've spent some time talking about intents. I'm curious. What are smart transactions and why are they better than intents?
00:29:50.048 - 00:30:30.384, Speaker C: Yeah, so smart transactions are just a way to use the Ethereum virtual machine to validate outside of the scope of a normal internal or like normal Ethereum transaction. It's sort of imagine if your transaction can validate into the future or the past. No different code, just EVM, just running EVM. No special language, just EVM, no new languages. And especially no sort of huge legal exposure to fiduciary obligation requirements. Because as if sort of I'm solving your transaction, therefore I'm your fiduciary. No way.
00:30:30.384 - 00:30:35.220, Speaker C: Bro if I'm solving your transaction, I don't know if you're insecure or not. I'm just taking my mev.
00:30:36.600 - 00:30:47.880, Speaker D: I don't follow the fiduciary responsibility argument because the user defines the conditions, essentially the validity conditions is that the intent is satisfied. That defines essentially the surface of the.
00:30:47.950 - 00:30:54.552, Speaker C: Imagine they think of as an order, and they think of themselves as telling you their intent of how to execute their order. They're making you their fiduciary.
00:30:54.616 - 00:31:05.980, Speaker D: Bro if the user defines the space like the space of all end states. They define the space in which they consider the solution to be satisfactory or valid.
00:31:06.800 - 00:31:18.112, Speaker C: But if you're parsing their intents and you're in any way aware of what their intents are, you suddenly now are notified of what they want and now you're in trust of their will, then we're a fiduciary.
00:31:18.136 - 00:31:20.612, Speaker B: Sherry is in virtue of sitting on this panel and talking to one another.
00:31:20.666 - 00:31:37.000, Speaker C: No, that's you guys advising people to disclose their intents. I would never want to know your intents and if you tell me, I won't believe you. I will never know your intents, you'll never know mine. You'll never make me your trustee by virtue of telling me your intents. I will extract value from you if you tell me your intents. Consider yourself warrant.
00:31:37.740 - 00:32:23.184, Speaker A: Okay, I sort of agree to what Vlad is saying is basically if you release your intents in the public mempool, then the only way that it will get filled is by someone maximizing mev and basically giving that value back to the proposer. So basically the way intents get filled on chain is basically maximizing mev. Are there other types of mechanisms where you can maximize some other objective function? So for example, cowswap is one example where you maximize best price for the user. How do you make these systems where there are other objective functions other than the mev maximization objective function which gets encoded through your system?
00:32:23.242 - 00:33:10.420, Speaker D: Basically, I think a trivial example is something like a Dutch auction. You're expressing an intent to sell, ideally at a price x and you express an objective function that's going to evolve over time that as time goes by, you'll accept a less competitive price. Now, if you assume at least two competent market makers, I mean one competent market maker can hold you out and just let the price drop to zero or to wherever the limit is. But if you assume two competent competing parties, then one of them will jump in as soon as it's profitable to. Now, assuming that that isomorphism to intents is correct, I don't see how being the first one to jump in and take that price in an auction could be considered something along the lines of being responsible in a fiduciary sense for its execution.
00:33:12.040 - 00:33:47.570, Speaker C: Sorry, I was talking about the searcher or solver, not the other transactors like the person who's actually choosing how they're searched or how they're solved. I'm talking about them being a fiduciary because they're sort of looking at your intent and then executing on it instead. The way I would say it is no, there is no other objective function. It's just mev and it's up to you, the transactor, to be secure and it's not my responsibility. And if you're trying to make me figure out whether you're secure or not in order to do my business and prepare me to use the full force of law to defend my rights bro.
00:33:48.340 - 00:34:04.120, Speaker A: We have basically seen systems like cowswap which are trusted, which do achieve this other type of objective function, which is not mev maximization, but are there any off chain or are there any decentralized or public mem pool style just revert your transaction?
00:34:06.300 - 00:35:04.940, Speaker B: I mean, I think a lot of mev, and perhaps a lot of this concern arises out of trying to design a system where we send everything to one place and then we try and craft some abstract incentive scheme to make that one place do something like return mev to users. But this is very difficult because people have different objective functions and if we choose one place, we have to choose one objective function. We have to choose one way to rank all solutions. We have to choose one asset to rule them all right? Basically it's the same thing. So I think the direction I would move in at least is to push things out to the edges, to stay as local as possible and use kind of as high trust or high locality links as possible to settle intents that can be settled there, to kind of move compositionally up and keep information. Intents are like information coming into the system, right? An mev arises from information flow and choice. So what we want to do is choose where as a user, choose where you send information and align it with your trustcraft and restrict the choices of parties, especially those later in the trustcraft, to ones that you deem acceptable.
00:35:05.920 - 00:35:08.636, Speaker A: I'll take one audience question, so I.
00:35:08.658 - 00:35:47.144, Speaker H: Just wanted to give some boost to what Vlad said about legal liability issues. And also this language of intents may be unhelpful, but even beyond the language to explain what I think Simon was puzzled about. Imagine you have a market order. Just because you have a market order, it doesn't mean that it's legal for your broker to execute it at any price. The question whether what user kind of consents formally to is entirely separate to the question whether how the transaction is executed, whether that there was some breach of fiduciary duty, market manipulation and so on.
00:35:47.182 - 00:35:47.336, Speaker C: Right?
00:35:47.358 - 00:36:08.264, Speaker H: So this argument of user consent that doesn't fly. Things like plausible deniability or when you don't have information, or when you can only execute that within the test that maybe bring you closer to something well, or further away from liability. But yeah, no legal advice.
00:36:08.392 - 00:36:38.570, Speaker E: I think there is even more to that because as we discussed before, if you split up the language that users use to express and what happens downstream, there is even more of a gap that what the user agrees on might not be something that the others see along the chain in a transparent way. And there isn't. Well, I'm not sure it's a good starting point to assume that no one is thinking about it. Maybe some parts of it are not thinking about it. But again, the user interface will influence what people will do. Right? So I would just disagree that generally forget about what the users are thinking.
00:36:40.860 - 00:36:54.856, Speaker D: I think also if you apply the same standards as are applied to conventional traditional markets to blockchain, then I think searchers have probably got themselves already into much more trouble than they possibly could do by engaging in intense satisfaction.
00:36:55.048 - 00:37:05.104, Speaker C: Not all searchers would do that. No offense. All right, we'll do one last question and then that will be the last of the day.
00:37:05.222 - 00:37:05.552, Speaker F: Yeah.
00:37:05.606 - 00:38:00.790, Speaker A: So I think takeaway from the debate is probably that defining intents is very difficult, I guess, but in particular it's very difficult independently of the mechanism to which those intents are targeted. And I mean, again we go back to the example of cowswap for which I work, but it's a good example because it allows to run the mechanism off chain. But where if you want the input into the mechanism which is the intent is visible on chain and the output of the mechanism is also visible on chain, the execution itself is done off chain. So this gives anyway the visibility of what is going on. So in some sense you can detect deviation from the state, the mechanism from what it is supposed to do. Okay, so I think that is the advantage. There are mechanisms that one can run fully on chain but obviously those have problems.
00:38:00.790 - 00:38:14.964, Speaker A: The advantage of this is that the mechanism is off chain but input and output are on chain so everything is detectable. So I would summarize this way. This is the example of cowswap and I think this can be extended to other situations.
00:38:15.092 - 00:38:28.092, Speaker C: Smart transactions does this for all transactions really. So sort of the smart transactions model basically the execution is in the search. The on chain is just sort of the search result which is a trace of the search result.
00:38:28.146 - 00:38:47.580, Speaker B: Yeah, I mean I'm not I don't think the on chain off chain dichotomy will survive intents. I think it will collapse. I mean history, you start with an intent and then you do things to that intent. And currently we're like not tracking that history maybe or a lot of it is happening in ways that are not easily verifiable later on. But this is just a property of the protocol we use to send processes.
00:38:47.660 - 00:38:49.840, Speaker C: Is the search on chain or off chain?
00:38:51.460 - 00:38:56.772, Speaker B: I mean everything is on chain in a certain sense and everything is off chain. It depends on what the one true chain is.
00:38:56.906 - 00:39:00.820, Speaker C: But isn't the search the choice of block that you make to add to the chain?
00:39:01.320 - 00:39:13.544, Speaker B: Insofar as that there is free choice you can prove that maybe available to the information subject to the information you have, your choice had some property but there's a fundamentally, I guess pre block.
00:39:13.592 - 00:39:24.350, Speaker C: Is already in the block in the future. I kind of agree with you on that note. Thank you everyone for the wonderful day.
00:39:26.720 - 00:39:28.380, Speaker A: Thanks a lot for the panelists.
