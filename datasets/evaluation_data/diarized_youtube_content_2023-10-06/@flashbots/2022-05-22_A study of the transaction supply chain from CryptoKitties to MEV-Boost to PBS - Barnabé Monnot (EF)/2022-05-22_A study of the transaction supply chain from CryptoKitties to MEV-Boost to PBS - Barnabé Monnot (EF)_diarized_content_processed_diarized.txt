00:00:08.810 - 00:00:42.798, Speaker A: Let's get started. Hi, everyone. My name is Barnabe Mono. I'm a researcher at the Robust Incentives Group which is a research team at the Ethereum Foundation. I got nerd sniped pretty late to give this talk and I wasn't sure what to talk about. So I put a lot of things in the title and I think you'll find that some of it is interesting. I hope in this room there's been a lot of history or people reminiscing about the good times when it was simple to get access to a block.
00:00:42.798 - 00:01:05.666, Speaker A: You would just ask the block producer kindly please let me in. And the block producer would say yes. And you would just enter for a very low fee. And a theme of the day is how mev ruined all of this. But actually before Mev congestion ruined this you started breeding CryptoKitties. Suddenly the block was full. There was no space for you.
00:01:05.666 - 00:02:09.240, Speaker A: Users had to raise their prices. That was difficult. So how did we solve that? I'll get to that in a SEC. But today what I want to get at is that Ethereum is this weird, big, complex economic system where users have their own economic interests, they have digital assets, they have some value for using the chain and so they're going to find ways to increase their payoff and to increase the economic utility that they get from transacting on Ethereum. And that downstream leads to changes in the market structure of how we access blockspace. And as a reminder, blockspace is what Ethereum sells and we can let the market for blockspace figure out its best incarnation or we can try and move systemic mechanisms to the protocol. And so one theme of my talk today is to try and get at why do we want some parts of the market in protocol versus some parts outside of it.
00:02:09.240 - 00:02:51.954, Speaker A: To understand that, I think it's kind of useful to understand what users want. Exactly. There's been a lot of talks about preferences and I am going to try and make it a little more formal. So you can think of users as having a utility per gas I denoted by V. So you can say, well, one unit of gas is worth V to me V dollars or V GUI. And the goal of the market is to find the entry price that equalizes the supply of block space with a demand for it. Given this series of user utilities so you might have several users showing up to your market.
00:02:51.954 - 00:03:25.566, Speaker A: Each user has a different willingness to pay. How do you organize this allocation? Well, EIP 1559 solves it right. You can order these users by their willingness to pay. That gives you a very neat demand curve. EIP 1559 targets the midpoint where the block is half full at 15 million gas. Most of the time the estimation is pretty good. And this estimation is done by the base fee which is floating and gives you the protocol mandated entry price.
00:03:25.566 - 00:04:52.774, Speaker A: And this achieves economic efficiency, right? You let the users that have the highest utility for using the chain in and you keep out the ones that are not so willing to pay for it, and so you achieve the highest sum of these utilities that are pending. On top of this, maybe some arguments for why such a mechanism was nice to have in the protocol is that first it gave us an economically secure Oracle for the inclusion price right before we relied on gas oracles, it's fairly clear that they weren't too tampered with, but it's also not very hard to do. So if you are really willing to send or to stuff your transaction pool with spam transactions, if you are the miner who's operating them with EIP 1559, it's much harder for someone to make the price biased, or at least it's economically wasteful for that party. Something that's maybe even more important for protocol security is that transaction fees are an incentives to reorganize the chain if they are high enough. And by removing part of these transaction fees, so the base fee that's burnt, we removed that subsidy for reorgs. And on top of this, we also removed the rent that miners were extracting from congestion, and that rent is now redistributed to the ethereum holder community. It's also nice, but it improved.
00:04:52.774 - 00:05:25.518, Speaker A: UX. Now that we have this block slack, the demand shocks can be dampened and users have a better time estimating the fee that they need to pay to get in. So are we done? Did we solve the fee market? Bob is super cool, but you know that we haven't. And one clue for why we haven't is reversions, right? So I told you users have this utility V, but sometimes things happen that you didn't mean for them to. You wanted to mint an NFT. You sent your transaction to the transaction pool. You said, please contract, give me one NFT.
00:05:25.518 - 00:06:20.582, Speaker A: But by the time you were included, the contract had run out of NFTs to give you. And so this is a picture from a blog that was after an NFT sale. Most of the transactions are just reverted because these are users who were not included in time and the contract had run out of items. And so these reversions, they tell you that sometimes things happen and it's out of your control. And so maybe you don't have a preference for gas, you don't have a utility per gas, but what you have is more like a utility per gas per state. So your utility for the unit of gas, it depends on the state that your transaction is acting upon, and the state might change in the meantime. So your utility to get an NFT when the state is not everything has been minted, it might be a million dollars, but your utility, when the state is there's no more NFTs to sell, it's now zero.
00:06:20.582 - 00:07:13.234, Speaker A: Okay, and so what this tells us is that transactions are not atomic and we can't think of them as living in their own isolated parallel universes. The utility of a transaction depends not just on its inclusion, but also on its position. And position is just another way of saying that it depends on the state that it acts upon. This is all well known, but I'm just trying to get there from first principles. And so what do we do in this case? In this case, the auction mechanism we have, which is EAP 1559, it's an auction mechanism that works well when we have preferences over items or when the block space is fungible, when I don't care to be in one part of a block space versus another. But now we have to think about preferences over bundles. And this is much more complicated because it makes the block space not fungible.
00:07:13.234 - 00:07:53.038, Speaker A: And it also leads to this explosion of complexity in terms of how many bundles exist and how user preferences map to all of these bundles. So if I wanted to represent these transactions, I could do it in the following way. I think of a block as a set of transactions. I use these stars here as like a wild card, kind of like a regular expression. And this, for instance, in the first line is the preference of a user that doesn't really care about its position. It just wants its transaction to be included. The second line would tell you this is a user that really care about the post date of transaction prime.
00:07:53.038 - 00:08:35.010, Speaker A: And so they want to be included right after it, and they don't really care what's happening on either site. And so you can write these preferences down, these preferences of their bundles. But when you do so, you kind of lose the mental model of the demand curve. It's not that neat one dimensional thing anymore. You have these preferences over a very complex domain of bundles. And the solution for this. If you don't have this demand curve and you can't have a computationally simple mechanism to find the optimal allocation, you let the market figure out these opportunities and you let the market pay for the information that this bundle is valuable and there's money to be extracted from it or for the users to receive.
00:08:35.010 - 00:09:33.150, Speaker A: And so this leads us to Flashbots, which was kind of a market reply to this problem, that there was no way for users to express their preferences otherwise other than PGAs. But even PGAs are, let's say, a market response to the lack of infrastructure in protocol to do that. And so if I want to background a transaction, for instance, TX is an Oracle update and I want to liquidate something that comes right after it, I really have a utility for getting my transaction right after this, let's say, of a million dollar. But if someone else manages to slide in the middle, then my utility is zero. And so the idea of Flashbots and Bundling was, well, how about then letting me bid for this atomic bundle transaction and my background atomically. And so this is Flashbots bundles. The searchers send bid to the block producer to get their bundles included.
00:09:33.150 - 00:10:31.748, Speaker A: And so now we add an element to our transaction supply chain. How did that work? Pre merge, which is proof of work, which is today. But sometimes when you do a lot of research on proof of stake, you already feel like this has happened, but not yet. So premerge bundles leak alpha and when searchers send their bundles to the block producers, they don't want the block producers to steal the contents of a bundle. And so the Flashbot solution was to whitelist trustworthy miners that won't steal the bundles and the bundles can receive this information and include them in their own blocks. It's not great, but at the same time the whitelist is pretty short because most miners in Ethereum join mining pools. So if you give the bundles to the mining pool, you can kind of ensure that you have identifiable players that won't behave maliciously.
00:10:31.748 - 00:11:18.452, Speaker A: And another thing is you can also pressure these identifiable players to redistribute the profit they make from getting the bundles with their user base. And so to some extent, you avoid the bad dystopia of economic centralization and you add something else to your transaction supply chain. Mevgaf in the middle. What happens when we move to Proof of Stake? In Proof of Stake we have an issue, it's a feature of Proof of Stake, but it's an issue for that system, which is that we have a long tail of Solo Validators. The reward variance is much smaller. Validators get paid every six minutes. And so there's a lot of Solo Validators that decide that they don't want to join a staking pool and they will just stake themselves.
00:11:18.452 - 00:12:01.830, Speaker A: But the problem is we can't whitelist everyone and we don't have identifiable players. And these validators who are Solo Validators, they don't propose blocks very often. And so they might have an incentive to deviate from an agreed upon common social norm that you don't steal bundles because they really don't play a repeated game. They only once in a while activate to propose a block. So if you only share the alpha with the trusted Validators, you are back to the economic centralization bad case. So one solution you could think is what about blind proposing? So you make proposers commit to a bundle header. You say there's a juicy bundle here, commit to including it and I will share it with you later.
00:12:01.830 - 00:12:35.280, Speaker A: But the problem with that is that it's not really compatible with searchers doing one part of a block. So the top end usually and proposers doing the other part. If the proposers don't know what the searchers are going to give them, they might be including duplicate transactions. And if they do commit to something, which is then revealed and then they do their block. It gives them time to extract more mev. And so it again leads us to a situation where the proposers need to be very sophisticated actors and to more centralization. And so that's not really optimal either.
00:12:35.280 - 00:13:14.632, Speaker A: And so the solution that we've arrived at is instead to extend the auction and to let builders propose whole blocks. And so we add another element to our transaction supply chain. And the current proposal post merge is by flashbots. And I will run through quickly on the basics of how it works. In this proposal, the builders make blocks and they submit the blocks and the bids. So they say, this block, I'm willing to pay X to be included by the proposal. They submit the block and the bid to the relay.
00:13:14.632 - 00:13:53.400, Speaker A: So the relay is a new third party in that system. The relay receives these blocks and these bids and it sends the list of bids to the proposer. It doesn't send the blocks, obviously. And then the proposer is tasked to choose the bid that they prefer. So I would expect they would choose the highest bid. They sign that bid, they say, I like that bid, send that back to the relay. And at this point, because the validator signed something that commits them to releasing a specific block, the relay could simply gossip the block that they have in custody with a validator signature.
00:13:53.400 - 00:14:47.396, Speaker A: And so now the question is interesting, right, we have all this transaction supply chain that emerges out of protocol and where do we draw the line for what the protocol should be concerned with? I'll get to that in a second. But the first idea is to at least move the relay into the protocol. And so this is the idea of PBS, which is still under Active Research Proponent Builder Separation move in protocol, the auction for these execution block bodies. At the moment, I believe the two slot design seems the most workable. So the basic idea is this. Instead of having single beacon blocks, you think of a slot now as being split in half. In the first block, the proposer commits to some block header that they received off band from the builder.
00:14:47.396 - 00:15:35.620, Speaker A: So the proposer sends a beacon block saying, I commit to using this builder's block. In the second slot, the builder is expected. Having seen the commitment of a proposer to send the body of their block, we apply the fourth choice to both blocks and that ensures that none of these parties can grief one another. For instance, if the builder doesn't show up and doesn't release the content of their block, the proposal would still get paid. It doesn't waste the opportunity for the proposal. And on the other hand, the builder needs to know that there has been a commitment from the proposer and that this commitment has been agreed upon by the other validators. So if a builder doesn't see a commitment from the proposer.
00:15:35.620 - 00:16:47.306, Speaker A: They don't release their block and they keep it private and they don't leak the alpha yet. And so what are the benefits and the drawbacks of in protocol PBS and out of protocol mev boost? So I think one of the main benefit is that we remove this third party, which is the relay, from the picture. One issue with the relay, for instance, is that you might have a live nest fault, you might have a proposer that signs something, and then for some reason, even if a relay is decentralized, something goes down and the proposer has signed something. So they are unable to send a different block, but at the same time the block they signed, it's not been released to the network. Another part is that the builders must also trust the relays to not steal the content of their block, whereas in PBS the builder is the one keeping private the content and releasing it when it's appropriate. Another benefit of PBS is that the relay does not become a rent seeking entity. So relays are going to compete over the quality of service they can provide and make profit out of it.
00:16:47.306 - 00:17:46.886, Speaker A: And so this is something that we can move to the protocol instead. Another nice thing is that the builder role, we can exploit it positively for other constructions, such as Dank Sharding. So there's a new philosophy that block creation can be expensive as long as block validation remains cheap. And so Dank Sharding has requirements for bandwidth, for the size of the blocks that will be built. And so if we have very specialized builders that can invest in good hardware, we can use that for the process of block creation. Some of the drawbacks, the first is that it doesn't shrine a kind of market structure and I think it would be nice to have maybe impossibility result or at least a sense that this mechanism is on some efficient frontier. Yesterday at If Economics, we had a talk by Tim Rothgarden and he was reminding us that EIP 1559 is pretty close to the efficient frontier.
00:17:46.886 - 00:18:47.106, Speaker A: Like if you remove anything from it, it doesn't work, or if you try to make it better on some dimension, you're going to make it worse on another one. And I think at the moment we have an intuition that such results would be possible for PBS, but it would be nice to have them a little more formalized. Another drawback, of course, is whenever we move something to the protocol, we add a bit more complexity. And so this complexity may be justified if overall in the ecosystem we have a net reduction of the complexity. But we have to be mindful that the protocol remains sound. And so why not in protocol builders, for instance, so we could draw the line a little further and say, well, the builder role now is also put in protocol searchers, send their bids for their bundles, and the proposers decide which bids to include. Some issues that I see with this is first the issue of bundle merging.
00:18:47.106 - 00:19:45.770, Speaker A: So you would have to make sure that the bundles that are sent by the searchers don't conflict with one another. If you do that by forcing the searchers to reveal the state accesses that they are going to use, well, that might already leak alpha. But maybe a more serious problem is that over time searcher coordination, they would figure out that it's just better to coordinate with one another and so they would just recreate a virtual builder role out of protocol. And so it's not clear that enshrining a builder role in protocol would be so useful then. All right. And so yeah, for the last, let's say two or three minutes, I wanted to do a more speculative part and I feel like I got a lot of answers from Hasu Stoke right before. But I wanted to try and think through what will the market look like under this new landscape.
00:19:45.770 - 00:20:25.922, Speaker A: There's a first market that I think is very interesting, the market between users and searchers. Personally, I would expect more user. Sophistication for the following reason. You can think of the user utility and the searcher utility. So if only the transaction of a user goes through, the user has a utility of 100 and the searcher has a utility of zero. But if a searcher can profitably exploit or make use of the user transaction, the searcher utility can grow to, let's say, a million dollars. In that case, it seems to me that there could be advantages deals struck between the user and the searcher.
00:20:25.922 - 00:21:23.586, Speaker A: I'm thinking, for instance, of the ideas of cooperative game theory where the value that a coalition can achieve is often much greater than the sum of the parts of a coalition. And now we have a very well developed crypto economical toolbox that maybe allows us to create commitments from searchers and from users to struggle these deals in a very sound way. This leads, of course, to the question of payment for order flow. What would the searcher be willing to pay for? Hasu pointed out that it's very important to make sure that this order flow remains as decentralized as possible. But it does feel like we can at least improve in terms of the distribution of these costs. And I'm thinking for instance of Mistx, which is a dex that makes use of this property. And then there's of course a market between searchers and builders.
00:21:23.586 - 00:22:13.954, Speaker A: There's still a trusted relationship there with the searchers providing their bundles to the builders. An argument for, again, why this might not be so useful to have in protocol is we can let the market figure out the risks that each party is willing to bear. And my intuition is that the market between searchers and builder is a thicker market than the market between builders and proposers. So searchers, they are very incentivized to compete on price. And so if at any point there's a gap in this market, they will fill it. On the other hand, if the builders are unreliable, I think it's in the domain of the searchers to spin up their own or to find a way to recreate that entity. Maybe a piece of evidence for this is I really love this chart.
00:22:13.954 - 00:22:53.160, Speaker A: I think it's going to be in textbooks in a few years on because it really shows you how evolutionary the market for block space is. So on the x axis is the value extracted by the miner. So the value that the searcher provided to the miner given their bundle in percentage. And you can clearly see this shift of a distribution to the right. So as the markets got more competitive, the searchers were forced to give out more and more portions of the opportunities that they figured out. And that's it for me. Thank you.
00:22:53.160 - 00:23:00.840, Speaker A: Think there is time for questions?
00:23:08.510 - 00:23:09.900, Speaker B: Do you have a question?
00:23:12.350 - 00:23:46.470, Speaker C: Hi Runaway. So my question is with the merge happening, if there is one entity that owns, let's say 25% of the stake, how does that affect PBS? Because then they might be both the builder and sorry, and if they know future blocks or slots in the epoch and then they can kind of do more sort of fancy arbitrage.
00:23:46.890 - 00:24:25.310, Speaker A: I see, I see. So yeah, I guess functionally the role of Validator and the role of builder is separate. It's not clear that there is such profit to be made from vertical integration at that level. That was actually something that in Hasu's previous slide you saw integration between users and searchers, between searchers and builders, not that much between builders and Validators. And I feel like maybe there's less interactions that are profitable. But of course. So you're mentioning the fact that Validators know in advance the slots where they are proposing.
00:24:25.310 - 00:25:06.190, Speaker A: In my opinion it's been a little difficult to figure out ways to really profit from that. So of course knowing that you'll be the proposer in x slots is useful, but it doesn't give you that much of an edge over knowing that you are producing the next block or knowing that you have ten blocks in a row. I think it still depends on the market conditions. One thing though is if you have a 35% staker which is also a builder, the question of builder centralization then becomes more relevant and then we have to think about mechanisms for censorship, resistance for instance.
00:25:07.490 - 00:25:08.240, Speaker B: Cool.
00:25:11.670 - 00:25:36.010, Speaker D: You talked about in Mev context in proof of work there being sort of a whitelist of miners. I wonder if you see a space for effectively a whitelist of Validators here potentially, where they may even say I don't want to participate in Mev and people who have a valuable transaction may send it to a private like mempool effectively run by those whitelisted entities.
00:25:37.230 - 00:26:09.860, Speaker A: So you're saying a whitelist of Validators who decide not to participate in Mev extraction. Correct. You could also decide not to participate in PBS and to just refuse every bundle that you see and just make your own block and really sit in the next block. So you can always decide to opt out of anything. But if you do want to opt in and this is the only way to prevent economic centralization from happening, I think a whitelist won't give you that.
00:26:19.350 - 00:26:32.632, Speaker B: Any other questions? Just yeah. Okay, cool. Thank you so much.
00:26:32.686 - 00:26:32.950, Speaker A: Thank you.
