00:00:00.090 - 00:00:27.880, Speaker A: Name is Jannik. Thank you all for coming. I am working at BrainBot on a project called Chatter Network. But today I want to talk about something different. I want to talk about censorship on Ethereum, and that's because we at BrainBot, we care about Ethereum and especially Ethereum's fundamentals. And last year this topic of censorship became very hotly debated. And we have some thoughts about this that I want to share.
00:00:27.880 - 00:01:07.086, Speaker A: But to start with, I want to take a step back and look at Ethereum as a whole, and in particular on its incentives and block rewards. So every single day, Ethereum pays its validator set three and a half million euros in ETH, which is a lot of money. And the reason why it does that is because it wants to encourage a large and decentralized and diverse validator set. And of course, this in its own is not really a goal in itself. It's not an end goal. The actual goal behind it is credible neutrality. That's what Ethereum wants to achieve.
00:01:07.086 - 00:02:11.202, Speaker A: The idea is that the more decentralized and the more diverse your valid data set is, the more difficult it is for a single entity, for groups in that set to band together and to imprint their own values on the protocol. And the way this credible neutrality manifests itself is, of course, in censorship resistance, for example. So let's look at censorship poket censorship work. To do that, we have to look at a transaction, how it goes through the system. It originates at a user, then it goes through a front end application, then usually through a wallet, which actually signs it, then through an ISP or network connection, and then to some sort of block production mechanism. And in addition to that, the front end and the wallet, they might be talking also to other third party services that are vital to that transaction. And all of these steps, there can be censorship.
00:02:11.202 - 00:02:47.518, Speaker A: And I think it's very important to look at all of these steps. But for the purpose of this talk, I want to focus on only the block production mechanism, because the solutions and the problems are of course very different in all these layers. Yes. So how does it work? Traditionally, it's very simple. The validator who is assigned by the protocol to produce a block, they pick a transaction or a set of transactions from the public mempool, which is kind of a peer to peer network, they produce a block and send it again to a network of where the block is broadcasted. Very simple. The only entity that could censor here is the valid data.
00:02:47.518 - 00:03:24.430, Speaker A: But since the validator set, as we said earlier, is very decentralized and diverse, I would say this setup is very safe. Now, recently, a new way of producing block has emerged. Again, we have a validator at the very end that produces, or at least the signs of the block. But the block is actually produced by another entity called the builder. The Builder picks transactions from the public mempool as well but they might also have access to other sources of transactions, what we call a private mempool. And then this block is passed through a relay and then to the validator. So here we have two additional entities, the Builder and the relay who can censor.
00:03:24.430 - 00:04:04.230, Speaker A: And this model is much more important to look at if we want to talk about censorship because 95% of all blocks are produced using this way today. This mechanism, by the way, like this PBS proposal builder separation. Now we said earlier, validator set, very decentralized. So that might be safe. But let's look at the Builder and the relay. How decentralized are they? It turns out they are not very decentralized at all. For the Builder, for example, we have only two entities which make up 50% of all blocks and four entities produce more than 80% of all blocks.
00:04:04.230 - 00:04:51.622, Speaker A: And very similar picture even a little bit worse on the relay side. So now the question is do they sensor? And we can look at the mempool and see if these entities include transactions that they should. And it turns out that most of them or many of them do not. So 65% of all builders censor some transactions and 35% of all relays, which is arguably a problem. How many transactions are affected? It's about 220 transactions a week and as a result they get delayed by 23.6 seconds, roughly. Censorship.
00:04:51.622 - 00:06:02.142, Speaker A: We could can call this censorship weak censorship because the transactions will get eventually included, but only later when a block producer is selected that does not do this sort of censorship. So why is it a big deal? 220 transactions a week is not a lot if we look at the whole throughput of the network. And 23.6 seconds additional wait time is also probably bearable for most users. So why are we talking about this at all? And some might argue it's not a big deal at all, but I think it is because it's, I think, the first time in Ethereum's history that Ethereum's neutrality is like systematically compromised and also permanently compromised. So it's not something that went only on for a day but it's been going on for months and months by now. It also shows that Ethereum is vulnerable, that maybe the properties we claim Ethereum has are maybe not as safe as we say and this might encourage attackers to look at more things, what they could do.
00:06:02.142 - 00:07:01.342, Speaker A: Also, I would argue that the victims of the censorship are actually the primary users, the most important users of Ethereum because those are actually the parties that are affected by government. If you're not a victim of censorship then you might just use a bank, for example. And lastly, one could say that this sort of stuff like these local validator policies are a slippery slope towards more harmful activities. For example, if validators would not only look at their own blocks that they produce, but also look at blocks that they attest to. Like if they would stop attesting to blocks that contain these transactions that they don't like, then we would have like a much, much bigger problem right now. And at the very least, I think it's an important and interesting case study to look at. I think it's also an interesting question of who's responsible.
00:07:01.342 - 00:07:49.170, Speaker A: Some might argue that no one's responsible. It's like the protocol does not punish these sorts of activities. So it doesn't really matter. The validators have, they can do whatever they want basically. But I think that's not the right way to look at it. Because if we take this a little bit further and take it to the extreme that if you would imagine that the valid data set would stop including transactions at all, then the protocol of course would not function anymore. So I think it's like also these implicit rules that how blocks are produced should be considered part of the actual protocol, even if there's no enforcement of these rules, at least not on the technical layer.
00:07:49.170 - 00:09:13.542, Speaker A: So who is responsible? I would say it's very simple like the people who have the power or the entities that have the power, which is like all the parties participating in this process, the sensoring builders, the sensoring relays and the validators that pick the sensoring relays. But I think for the most part, ultimately I think it's most important to look at the validators here because they have the ultimate power. They can just choose to they in the end put their signature under the block. And also the validators are closest to the protocol, which means that are easier to address by the ethereum community. So social norms, for example, that we can use to enforce these non protocol defined rules, like the validators are mostly affected by these rules. Maybe the builders and the relays are because they are farther away, they're more difficult to address. So what can we do about this? I said it earlier, like these social norms I think are very important and we as a community should try to strengthen them, try to discuss what we actually want them to do and then also exert some sort of pressure.
00:09:13.542 - 00:10:04.538, Speaker A: And I think it's already we saw some very good signs, like there's already some like in the very beginning it was very bad, but now we have some relays who are not sensoring and they improved the situation quite a bit. So I think that's already working to some extent, but we can maybe still do a little bit better. Also, I think there's still technical ways we can improve the situation. One is to add inclusion lists to the protocol. These inclusion lists are basically a way for the validators to enforce transactions to be included, even if the builder does not necessarily want to do that. And that would basically again put the whole weight of the Valley data set behind the transaction selection mechanism. And lastly, something we are working on at Shutter network is using Encrypted man pools.
00:10:04.538 - 00:10:49.820, Speaker A: So if the yeah, if the if transactions are encrypted, then the validator cannot or the builder cannot distinguish between transactions they like and transactions they don't like. So the problem would be basically solved. This is a very big step for a protocol. It's a very large change to the system. So probably not very likely that Ethereum will take this step. But we implement this for roll ups, for example. And also we are working a little bit with nosis chain so at least where the stakes are a little bit lower just to show that this is also an option.
00:10:49.820 - 00:11:32.202, Speaker A: Yeah, this is basically all I have about censorship. But now I have to apologize because I want to talk about something completely different as well. So I'm going to ruck pull your attention in some way. I want to talk about a friend of mine who is new to crypto. It's their first crypto conference and they need your help. So they came from very far away from the South Pole and it's a penguin. They want to get to know all of you.
00:11:32.202 - 00:12:16.806, Speaker A: So they want to basically be embraced by the crypto community. They want to travel across the whole world, like one circle around the world and visit all the crypto events. We have many events here in Paris, but we also have many events like in the coming months and weeks that this penguin wants to visit. So yeah, today I'm going to show it to some of you people and at some point I hope I will give it to one of you and maybe they can bring it to another event, maybe I don't know where it's going next. There's a website travelingpanguin. XYZ. It has an Instagram account.
00:12:16.806 - 00:13:02.600, Speaker A: If you make photos, they like it very much. And also to help set this up, I'm going to deploy a token and whoever publishes a photo of the penguin in front of some famous site, maybe I will send some tokens to and whoever gets it an invite to an event gets some tokens and whoever carries it for some distance will also get some. So I hope we can maybe get like a community started to help this little penguin achieve their goal to see the world. Thank you very much. I think we have time for some questions if you have.
00:13:12.090 - 00:13:35.290, Speaker B: I wanted to ask if you're familiar with the implementation of censorship on the validators on the builders that do sensor. Specifically, how do they evade the denial of service where you would send them transaction that does something that they would sense but only after spending a lot of gas on execution?
00:13:36.290 - 00:14:05.478, Speaker A: Yeah, that's a very good question. I don't think they have any protections against this sort of stuff. So in theory they are liable or susceptible to these censorship attacks. But in some way they already are. So some of the builders, for example, they have this mechanism where you can send a transaction that fails and they still don't include in their block. So that can also be used for denial of service attacks. So I think it just works because it's a very centralized system so they can have a lot of hardware behind it.
00:14:05.644 - 00:14:31.934, Speaker B: Yeah, the ones that provide a service for a non revert like flashboard protect usually do it only for specific accounts. But here they have to do it for every sender. So basically if we flood the mempool with if we flood the mempool with the high gas transactions that do this, I don't think censorship will be very scalable. They could censor EOAS, but nothing beyond that.
00:14:31.972 - 00:14:50.178, Speaker A: I think that's very interesting. Yeah, that could actually work also because I think they detect like they go very deep. They only not only look at the receiver, they look at basically the whole call stack. So that is very costly to analyze. Might be interesting to try it. Of course it would cost some gas though.
00:14:50.344 - 00:14:52.850, Speaker B: There's a way to make it cheaper. But we can talk later.
00:14:53.000 - 00:15:01.640, Speaker A: Yes, I would love to. I think we're out of time but yeah, thanks for your attention. See you later.
