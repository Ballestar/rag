00:00:01.200 - 00:00:14.962, Speaker A: Thank you. Hi. My name is Adi Benari.
00:00:14.962 - 00:00:33.182, Speaker A: I'm the founder and CEO of a company called Applied Blockchain. I'm going to present to you today connecting Web Two with Web Three. And how do we verify private off chain data sources? I don't know about you, but I've been to a few different talks today, and I think this is officially the hottest room in the entire building.
00:00:33.182 - 00:00:46.346, Speaker A: So if there's so many of you here, I can only assume that you're really interested in this subject. So I'll try and make it worth your while just a little bit before I start. Apply Blockchain is a company which develops blockchain applications.
00:00:46.346 - 00:01:04.102, Speaker A: So we're a software development shop. I started the company in Defcon One in 2015, and we're close to 100 developers focused primarily on different types of DApps, blockchain applications and so on. And we have two products that we've developed ourselves as well.
00:01:04.102 - 00:01:18.310, Speaker A: One is called Silent Data and the other one is called London Bridge. And I'm going to focus on silent data today and describe a bit more what we're doing and why. So first of all, I like to keep things a bit interactive.
00:01:18.310 - 00:01:33.678, Speaker A: How many of you would say you know what an Oracle is? Okay, can someone volunteer to just tell me what you think it is? Okay, I'm not going to get that. So I'll tell you. Essentially there's two types of Oracles that we see.
00:01:33.678 - 00:01:50.722, Speaker A: Oracles are connecting data from outside the blockchain, bringing it into the blockchain. In the blockchain in general, we have a very trusted environment where we have cryptography and cryptographic primitives and a cryptographically secured history. And so we can trust everything that happens inside the smart contracts.
00:01:50.722 - 00:02:06.426, Speaker A: If there's any data from outside the blockchain, then by default we don't trust it. And so we typically have an Oracle application or infrastructure that enables us to bring data in and to be able to trust and act on it. I think of two types of Oracle services.
00:02:06.426 - 00:02:20.666, Speaker A: One is for public data, which is generally pricing. So in many DeFi and other blockchain applications, we need to know the price of assets. And the price of an asset might come from external sources as well as sources on chain.
00:02:20.666 - 00:02:40.886, Speaker A: So that's your very typical data Oracle. But the other type we've been exploring ourselves is a privacy preserving Oracle. And there are some types of data that you might want to use in a blockchain application which belong to a user or which belong to a company.
00:02:40.886 - 00:03:17.346, Speaker A: And so you probably don't want or they probably don't want that data shared in any way with any third parties, let alone with a bunch of validators who are validating A Blockchain. Now those external data sources, I've got a few examples here, but we think about open banking. So I put plaid on here as a source for bank account data, credit scoring, zero company invoices instagram to prove that you're maybe the owner of an instagram account, maybe some KYC checks and so on.
00:03:17.346 - 00:03:44.402, Speaker A: So there's a bunch of different external data sources that you might want to verify in order for your DAP for your Web Three application to function. Generally we see that these fall into two categories or two use cases. The first one is tokenization, right? Few technical issues here in DFI.
00:03:44.402 - 00:03:50.582, Speaker A: Let's call it wanda. O. So what we've seen in the last 18 months, I'll just shout.
00:03:50.582 - 00:04:13.266, Speaker A: Most of the focus is on native assets. What we think we're going to see more of as the technology prevails and hopefully the next wave will be more real world assets. And for those real world assets, the assets are originated and anchored and they have part of their value comes from the external data sources from the real world.
00:04:13.266 - 00:04:26.790, Speaker A: That means that we need to be able to import that information into the blockchain and where that information is sensitive. So it's about a company, it's about an individual and so on. That's where we need a privacy preserving Oracle.
00:04:26.790 - 00:04:35.710, Speaker A: So, tokenization of real world assets. And the second is verification of off chain credentials. So identity, obviously anything to do with identity is super sensitive.
00:04:35.710 - 00:04:44.540, Speaker A: We don't really want to reveal it on chain at all. So we need to be able to prove things about it without revealing. So these are the types of data sources that we've been integrating with.
00:04:44.540 - 00:04:58.530, Speaker A: Now there's an unsecure way of doing this and there's a secure way of doing it. The unsecure way is what most people seem to do by default, which is I'm building an application. It's got a web server component, so it's got a Web Two component.
00:04:58.530 - 00:05:30.730, Speaker A: I'll integrate with different Web Two data sources through that and then I'll send the data to the blockchain, right? I'll send it to us. Problem with that type of application or that type of integration is you are the third party or whoever is hosting that Web Two application is the third party. They have to be trusted, one, to see the data and not to reveal it to others or not to abuse the fact that they can see the data, and two, they can actually change it to the original data source.
00:05:30.730 - 00:06:12.178, Speaker A: And therefore the blockchain or the smart contract application has no way to know whether this is original data that's come from the original API or whether it's actually been fabricated or interfered with by the API layer. The way this is solved in some Oracles is to decentralize that API layer, which basically means we're going to have a bunch of these integrations hosted by different participants. That's better because then instead of one party that can interfere, we have a group which is a bit harder for them to actually interfere and default the system, but they still all get to see the data.
00:06:12.178 - 00:06:33.840, Speaker A: And if the group is small enough, so if it's not very decentralized, then obviously they collude to interfere with the data as well. So in general, we wouldn't recommend this type of approach because it carries a lot of risk. And if in your smart contract you've got valuable assets, you don't want those assets to be moving based on data that isn't as secure as the blockchain itself.
00:06:33.840 - 00:06:46.206, Speaker A: So the way we solve this, we built a platform called Silent Data. Silent Data uses a technology called hardware secure Enclaves. Specifically, we use Intel SGX.
00:06:46.206 - 00:07:07.610, Speaker A: Now, I know that in the crypto community, not everybody is a huge fan of the technology because there's a hardware manufacturer, there's a corporate name behind it. In practice, the technology itself is fairly secure. It has some known and published vulnerabilities, just like any type of solution, including any types of cryptography.
00:07:07.610 - 00:07:27.410, Speaker A: But it does have some super interesting properties that allow us to solve this problem very well. Those properties are two primary properties. It's a hardware secure enclave, so when you put data in there, the data isn't visible to anyone, right? It's not visible to the operator of the platform, to the operator of the machine, to the administrator of the machine, and so on.
00:07:27.410 - 00:07:42.054, Speaker A: So nobody can actually see your data. And the way Silent Data works is the enclave itself. Our solution in the enclave calls out to the web two APIs using https, so there's nowhere in the middle where we could intercept or see that data.
00:07:42.054 - 00:08:01.930, Speaker A: It goes straight into the enclave encrypted. Once it's in the enclave, we can query it, and then we can produce a cryptographic proof proving some properties of that data, which we can then send to the blockchain so we have privacy. The second super interesting property of these hardware secure enclaves is the attestation.
00:08:01.930 - 00:08:24.274, Speaker A: So the way it works is we put the silent Data code into the enclave. The enclave itself has a unique key which was put in there by the manufacturer that signs our code, and we send that to intel, we send it to the manufacturer, manufacturer comes back signing that, saying it's one of ours. And we attest to the fact that this is correct.
00:08:24.274 - 00:08:54.110, Speaker A: And they can't fabricate that because it's based on the original keys that they put in the enclave. So they don't get to see our code, they just get a hash of it and they really have no way of interfering in this, right? The only thing they could potentially do is maybe not respond to us, so we get an attested version of the code. Now that's very interesting because we can then take the output from our enclave and we can prove the calculation that's been done there, right? We can prove the source code that we use to query our data.
00:08:54.110 - 00:09:15.650, Speaker A: We can prove where the data came from through TLS. So through Https, we have a certificate of the server from the bank or from wherever we've pulled the data from the web two API. So we can prove where the data has come from, what query was run on it, the fact that it was queried in a privacy preserving environment, and it hasn't been leaked.
00:09:15.650 - 00:09:47.370, Speaker A: And we can take that proof alone to the smart contract, and the smart contract can verify that in a very concise way. So we can basically extend we're effectively extending the computation logic of the smart contract into a privacy preserving environment where we can query these web two data sources. Does that make any sense? Okay, so I guess the overall benefit of that is we can integrate with web two APIs.
00:09:47.370 - 00:10:19.846, Speaker A: Those APIs don't have to change. So, unlike other types of ways of keeping data private, such as zero knowledge proofs, in zero knowledge proofs, you typically have to take the original data, have it exposed somewhere, and then generate the proof, which means that the data source would have to adopt the technology or it would have to be revealed somewhere. With this type of technology and with this solution, with silent data, the APIs don't need to change, the data source doesn't need to change.
00:10:19.846 - 00:10:48.180, Speaker A: So we've connected directly with open banking, for example, in its current form, and we can get the data from there and prove that the actual bank account data has been queried and not modified in the process. An example query for a bank account might be, I want to prove that someone's got more than 100 pounds a month, €100 a month income, and they've had it for the last three months, but I don't want to know anything else about the account. Well, I want to know they've got a certain amount of funds in the account, or they want to prove that to me.
00:10:48.180 - 00:11:04.520, Speaker A: And so these are things that can be used for things like credit checking, additional background checks. If you think about DeFi protocols, you want to look at on chain data, but you might also want to augment that with proof about off chain credentials. And this is how we do it.
00:11:04.520 - 00:11:23.002, Speaker A: Another example, by the way, is social media. So we've got an application that we're building where we want to be able to prove people are using instagram accounts to sell. We want to be able to prove that the owner of a wallet is actually the seller, right? So the owner of a wallet is actually the owner of an instagram account.
00:11:23.002 - 00:11:55.242, Speaker A: So we can use an integration that we have in silent data to enable a wallet to be linked to an instagram account and to prove, to provide the proof to the smart contract that the link is there without us actually having any access to that account or to its credentials or anything like that. So they're not revealed to anyone. Any questions? Yeah.
00:11:55.242 - 00:12:20.040, Speaker A: The enclaves are built by the manufacturers, right? So most chip manufacturers today intel, AMD, even Apple have enclaves in the chipsets. And so it's a standard technology in the chipset for Thailand data. We've used Intel's because it has some more advanced features that we rely on, but it's a feature of modern chips, basically.
00:12:20.040 - 00:12:29.162, Speaker A: There are some vulnerabilities known with these enclaves. Enclaves are everywhere, by the way. I mean, I have it here.
00:12:29.162 - 00:12:43.114, Speaker A: My Apple Pay is secured by an enclave that's on the iPhone. One of the known vulnerabilities is side channel attack. So if somebody has access to the hardware, they can try to listen into the energy levels and try and guess what's going on inside the chip.
00:12:43.114 - 00:12:59.320, Speaker A: So some people have managed to do some types of attacks and there's ways of protecting against those as well. So it's not a perfect technology, but it has a lot of really important, really useful features that we can bring into a blockchain environment. Yeah.
00:12:59.320 - 00:13:29.166, Speaker A: How close are we to Web Two financial services wanting to integrate with something like site data, say equifax and credit checking? Yeah, I mean, the way equifax works is it kind of collects everybody's data into the middle and kind of acts as that honeypot and has all of that data. We're kind of thinking about more of a decentralized world. Right.
00:13:29.166 - 00:13:43.634, Speaker A: So we think the actual financing happens on chain because that's where it's most efficient. And then there's really signals that come from off chain that can then be brought to the smart contract. Now, ideally, from a privacy perspective, that's not one place that's gathering that data.
00:13:43.634 - 00:14:02.902, Speaker A: You're going to different data sources that the user is enabling is giving access to those going to an environment where nobody, not an equifax or anybody, can actually access that data. There's some proof that comes out that says this is good for a DFI loan for this type of and the smart contract verifies that, and that's it. So the data doesn't get revealed anywhere.
00:14:02.902 - 00:14:07.674, Speaker A: Right. It's just with the user or with their original Web Two accounts. Right.
00:14:07.674 - 00:14:10.860, Speaker A: So data sits in the bank. We can't help that. Right, for now.
00:14:10.860 - 00:14:31.220, Speaker A: But the original data source is the only place the data is ever exposed. Yes, exactly. So we have open banking, that was the first one that we launched with that works in Europe, UK, US.
00:14:31.220 - 00:14:49.494, Speaker A: We have, for example, an NFT platform which takes as well as crypto payments. They take Fiat payments and they use the open banking to verify if someone has the fiat amount in their account in order to be able to bid for a high value NFT, for example. Right.
00:14:49.494 - 00:15:01.690, Speaker A: So there's uses for open banking already. The next one that we're releasing is Instagram. So I mentioned that we're doing proof of ownership of the Instagram account that will be released in September.
00:15:01.690 - 00:15:18.584, Speaker A: And we have a KYC AML integration with on Fido as well, which we're preparing. And really, the next stage for us is to open this up so people can build their own adapters. Yeah.
00:15:18.584 - 00:15:23.048, Speaker A: Have a look. Silentdata.com. You can see information, papers and so on.
00:15:23.048 - 00:15:36.228, Speaker A: Please take a look very quickly. We've also built on Intel, SGX and Enclaves. We've got a token bridge which we've built between Algorand and Ethereum to enable liquidity between those two blockchains.
00:15:36.228 - 00:15:47.360, Speaker A: And we'll be integrating with others as well. But we use the Attest station feature of the enclave to make the bridge more secure. So again, as a bridge operator, we can't interfere.
00:15:47.360 - 00:15:49.890, Speaker A: Thank you very much.
