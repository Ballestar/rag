00:00:17.930 - 00:00:19.662, Speaker A: Cool. Awesome. Welcome everybody.
00:00:19.662 - 00:00:27.358, Speaker A: We'll get started now. Right on time. I'm here to talk to you today about Radical, which is a project that I work for.
00:00:27.358 - 00:00:34.378, Speaker A: We're going to be talking about building decentralized code collaboration on Ethereum. So let's get started. My name is Abby.
00:00:34.378 - 00:00:40.022, Speaker A: I kind of lead all things community at the Radical Project. It is the radical project. It is a free and open source project.
00:00:40.022 - 00:00:51.820, Speaker A: So we have a bunch of different contributing teams. I lead the community team, which touches all parts of the stack, if you will. And I also talk about Radical the most.
00:00:51.820 - 00:01:05.370, Speaker A: So today we're going to be doing a brief overview of why Radical. Last year's talk at ECC was really diving into the problem that Radical is solving. So this will be like a really nice natural continuation.
00:01:05.370 - 00:01:21.682, Speaker A: I should have given everybody homework before coming. So we'll talk about why Radical, then we'll talk about what is Radical and then really the meat of what I'd like to chat about today is what Radical is doing on Ethereum with our newly launched Ethereum integration. So that should be really fun.
00:01:21.682 - 00:01:38.098, Speaker A: I'll talk I think I have 40 minutes, which is a really long time. So I'll just talk for 40 minutes. And then if we have extra time, I'll just demo some stuff and kind of show you guys some stuff live to kind of frame the conversation to ECC.
00:01:38.098 - 00:02:02.590, Speaker A: And while we're here so right now I'm in the Web Three track and I think all of us can kind of agree. I mean, Ethereum is a lot of things, but I think a lot of people who are in it for the tech agree that Ethereum is the platform for the decentralized web, right? And it's a huge part of this thing, this ephemeral thing that we call Web Three. I think you can call it like a religion, you can call it like a lifestyle.
00:02:02.590 - 00:02:39.494, Speaker A: But I think that Web Three really does represent this transition from an Internet controlled by centralized platforms to an Internet powered by decentralized protocols, right? So it's taking this like, Web Two version where corporations and gatekeepers are in control of what you read and what you write and it's returning control back to the user and saying you can read and write to the web, but you can do that in a verifiable and secure way. And so that's kind of what I think the Web Three vision is and how Ethereum is taking part in that. So if we look at the state of Web Three, there's been a ton of progress towards this vision.
00:02:39.494 - 00:02:52.878, Speaker A: Of course, this vision started before Ethereum as well. I think people have been kind of this is more of a general trend that people have been moving towards in the Internet, but specifically in the crypto space. We've been building so much in Web Three.
00:02:52.878 - 00:03:25.510, Speaker A: We have infrastructure, developer tooling. Even financial primitives are very strongly contributing like DFI and everything contributing to the vision of Web Three and all these user interfaces that are making it easier than ever to kind of build, use and experience the decentralized web. The other thing that I think is really cool about the Web Three space is kind of its inherent qualities, right? Like the Web Three movement is one that is entirely online, right, completely open source and values decentralization.
00:03:25.510 - 00:03:50.050, Speaker A: And this is like the trifecta, right? And I think that this is a really cool part about this space is that not only are we building an online, open source, decentralized web, but we're doing it completely online, we're doing it in a decentralized way, and we're doing it completely open source. So it's a movement that embodies its values as well as kind of its values of what it wants to build. You could call that principle development.
00:03:50.050 - 00:04:12.342, Speaker A: But us at Radical think that there's kind of this elephant in the room, right, which is, as we're building towards this decentralized web, our hosting, our code sharing, our hosting, our collaboration, and the distribution of the code that makes up Web Three is actually very centralized, inherently centralized. I think that this is really funny. You have to sign into GitHub to access your Web Three code.
00:04:12.342 - 00:04:27.822, Speaker A: And so I think a lot of people can ask, maybe you're wondering what is the problem with centralized code collaboration? We use GitHub every day. We use GitHub at radical. GitHub is an example of centralized forge and it works really well.
00:04:27.822 - 00:04:59.542, Speaker A: And I think a lot of people, as we try to define and talk about why Radical ask, okay, well, why not like, why fix something that isn't broken? And so to answer that question, I'd recommend to go watch my last ECC talk from, I guess last year, whatever, two years ago time is not real anymore, where I literally spent 40 minutes kind of like talking through this. And I think that the problem is actually systemic and has so much more color and it's so much more of like an ideological argument. But I'll give the TLDR here.
00:04:59.542 - 00:05:39.566, Speaker A: So I think that the TLDR of why centralized code collaboration is a problem is because at the end of the day, GitHub is another walled garden, right? GitHub is a hosting service for hosting Git repositories that's built on top of Git, right? So it actually is a walled garden built on open soil. Git is open, free and open source distributed version control system that was designed to be completely decentralized, designed to be completely free and open source. And GitHub actually built a proprietary platform on top of that open protocol, similar to all the other walled gardens that we're trying to break down and build alternatives to in the Web Three ecosystem.
00:05:39.566 - 00:06:07.534, Speaker A: So at the end of the day, GitHub is this, right? GitHub is a walled garden. And so it does experience the issues that come with being a centralized censorable and corporate owned platform. And so I think that all of us being in the Web Three space, we can kind of agree that ideologically, that's something that we want to move away from, right? Like that's a future that we don't really want to be a part of, we don't want to support, we don't want to subscribe to, and we want to build alternatives too.
00:06:07.534 - 00:06:46.250, Speaker A: So ideologically it makes sense that we start seeking towards and building towards decentralized alternatives to centralized collaboration. However, the argument is not only ideological, right? There are very real problems with code collaboration that right now are kind of just like bubbling under the surface. But the more and more software eats the world, the more and more we build technology that is challenging traditional institutions who might not be happy with what we're building, the more these problems will kind of come to the surface and become critical points of failure for not just the software, but the Web three movement as a whole.
00:06:46.250 - 00:06:58.650, Speaker A: So these problems, I kind of like categorize them in three problems. Like the first is platform risk. So these corporate owned platforms are obviously very vulnerable to censorship, right, and capitalist ends.
00:06:58.650 - 00:07:11.010, Speaker A: So I think everybody is probably aware of recent things that have happened over the last, I guess like a year almost of GitHub censoring, actually. I have it in the next slide. So maybe I'll just reference in here.
00:07:11.010 - 00:07:47.754, Speaker A: Microsoft Disabling, a free and open source repository for YouTube DL, which is like a very widely used free and open source tool. After being legally asked to take it down by the RIAA, which is the Recording Industry Association of America, what do they have to say about code? Do you know what I mean? And this was a very interesting example of how a legal institution was able to attack source code and do that under the means of GitHub being a proprietary corporate platform that has certain terms of services attached to it. Another one is GitHub obviously blocking developers in Iran, Syria and Crimea.
00:07:47.754 - 00:08:21.826, Speaker A: Same with GitLab actually, due to, you know, these are US companies that are able to, like any other platform restrict who uses and who is able to access the data on their platforms. So that's the platform risk, right? And the capitalist ends is obvious. I think that there's this really good piece from Chris Dixon at a 16 about the argument for decentralization, which is that ultimately all centralized platforms will leave their users vulnerable to extraction just because of the way that they're systemically designed.
00:08:21.826 - 00:08:37.834, Speaker A: And so that's another really cool piece. Moving on though, there's also inherent security risk with hosting your code and not just your code, but your collaboration on a central platform. These central platforms are single points of failure and provide many different attack vectors for malicious actors.
00:08:37.834 - 00:09:07.846, Speaker A: And I think that we've seen different security breaches, leaks and other people manipulating everything that is kind of like a web interface to insert malicious code into repositories. Obviously this is more important for people who are building like very security conscious software and who need to be thinking about this. But this is another point and then vendor lock in, which I think is the one that really convinced me, which is that all non git artifacts so git is your source code, it's your commits, it's your version controlled history.
00:09:07.846 - 00:09:52.778, Speaker A: All non git artifacts that we use to collaborate, everybody's like, okay, well, git is decentralized, so it's whatever that means that you have the source code. I think all of us know, I'm sure I'm surrounded by a bunch of developers right now, that code collaboration goes beyond the code, right? And it's actually more about the collaboration, it's about the issues, it's about the discussions, it's about the PRS, the reviews, even the identity, the GitHub profile, the contribution graph. There is so much more that goes into collaboration that is represented by social coding, right? And so it's really these artifacts and these workflows that are built around the repository that are sometimes arguably more important than the source code itself, right? And so all of these non git artifacts are entirely hosted by place your centralized forge.
00:09:52.778 - 00:10:12.118, Speaker A: I use GitHub too much in this presentation. But so this social layer that's built on top of these repositories, which is taking code as kind of just source code and actually turning it into value. So the thing that's turning code from a liability into an asset is entirely locked into these platforms.
00:10:12.118 - 00:10:23.514, Speaker A: And so this is kind of an issue because if you wanted to move your collaboration somewhere else, you actually couldn't. It would be really hard and it's not within the platform's interest to allow you to do that. So that's kind of like the framing.
00:10:23.514 - 00:10:36.402, Speaker A: If I haven't convinced you, go watch my ACC talk, I have a way better story around it. But obviously this is super important. These three points are all things that us as people building towards this Web Three vision, we can't have this.
00:10:36.402 - 00:11:07.898, Speaker A: You know what I mean? This is completely antithetical to the values of the future that we're building and presenting. So I think it's a pretty important problem statement. So I think that this kind of really wraps up into the core belief of our team and kind of the belief that we're presenting, which is that our dependence, our dependence as people building towards web three in the Ethereum community, our dependence on centrally hosted platforms and corporations for the distribution of critical open source infrastructure is inherently unsustainable.
00:11:07.898 - 00:11:28.450, Speaker A: And so not only does a Web Three movement need resilient infrastructure, but the free and open source movement needs resilient infrastructure. There needs to be a shift towards creating more resilient sovereign means of collaboration that aren't controlled by gatekeepers or third parties. So that's where radical comes in.
00:11:28.450 - 00:11:35.714, Speaker A: So radical tis the root. It's kind of this like little slogan that we have. So Radical is a peer to peer network for co collaboration.
00:11:35.714 - 00:11:44.818, Speaker A: And so quickly, before we get into what is Radical? Radical. R-A-D-I-C-L-E is actually a botanical term. It's actually the first sprout from a seed.
00:11:44.818 - 00:12:00.826, Speaker A: So it's like the first part of the plant that pops out of the seed. And I think that that's very fitting for what Radical represents is that we want Radical to be the root of all collaboration. We want it to be the first seed that springs from the seed, that allows people to bloom and blossom.
00:12:00.826 - 00:12:12.750, Speaker A: I think that's just a cute little tidbit. And so I think that this also plays into kind of what Radical is all about, right? So we're all about no more walled gardens. Radical is built entirely on open protocols.
00:12:12.750 - 00:12:31.794, Speaker A: So it starts with our peer to peer network, which is powered by a gossip protocol called Radical Link. So Radical Link is actually built on top of git and it gives you a way to share and host your repositories without relying on a third party. So what it does is it actually builds peer to peer network, I mean, peer to peer discovery into on top of git.
00:12:31.794 - 00:12:42.342, Speaker A: So again, you don't have to rely, you don't have to push to a centralized server that then shares your gives everybody an access point for your code. You can do that with each other. You can do that peer to peer.
00:12:42.342 - 00:12:58.842, Speaker A: And so I could dive into Radicallink if we have more time as well. But so Radicalink at the baseline gives us this peer to peer network for us to share git repositories with each other without relying on a server. So on top of this, we have our decentralized GitHub.
00:12:58.842 - 00:13:26.422, Speaker A: So everybody's like, oh, what is radical? I say the TLDRs, it's decentralized GitHub. But at the end of the day, GitHub is just the interface, right? Like GitHub is just how you're building the collaboration experience around the repositories. And so when your repositories are hosted on an open source peer to peer network, you can build whatever GitHub you want, you can build whatever interface, whatever client you want on top of that network to give people the ability to interact and publish data, read their data, and then collaborate on their data on that network.
00:13:26.422 - 00:13:47.550, Speaker A: So we built Radical Upstream, which is a disktop client that allows you to create identities, push code, host code, collaborate on code entirely from your machine, which is really cool. And we actually just launched a web client. One of our contributors, Alexi, one of the founders of Radical, hacked on app Radical Network, which is the first web version of Radical.
00:13:47.550 - 00:14:04.258, Speaker A: Both of these give you an entirely give you your social collaboration experience. And we're building out kind of like all these different features on top of that. But again, I'll say why this is so cool is that all of these clients are open source and forkable.
00:14:04.258 - 00:14:21.894, Speaker A: You can build your own, you can use ours, you can contribute. And I think that's also the power with Radical is again, it's open protocols that's building these experiences, not one interface or one platform. So then on top of this, which is really fun, and obviously what we'll be talking about today is Ethereum.
00:14:21.894 - 00:15:04.934, Speaker A: So we have an opt in Ethereum integration, which is basically like a set of open source generalized smart contracts that we use to design different collaboration experiences on top of all of this awesome code collab. So I think it's important to note, and I realize that some people get confused by this, is that we're not logging code on chain, you're not collaborating on chain, right? Everything's happening on this peer to peer network. And the power of Ethereum is that we're able to link our interactions on this peer to peer network in different ways and anchor it on Ethereum to kind of create this global discoverability this global layer on top of the peer to peer network, which is what comes so easily to centralized platforms because they own all parts of the flow.
00:15:04.934 - 00:15:16.240, Speaker A: So we'll get into that. But so our Ethereum integration is opt in. You don't have to use Ethereum to collaborate on Radical, but it does offer some really awesome features that we'll get into next.
00:15:16.240 - 00:15:29.370, Speaker A: So the value prop for Radical is basically like free your code. Radical allows you to collaborate entirely, peer to peer. This means no more central servers, no hassle to set up like self hosted Git instances, no censorship and no corporations.
00:15:29.370 - 00:15:44.982, Speaker A: It's a completely free and open source network. It allows you to work securely offline. So as I was saying before you had this lock in where all of your non Git artifacts are locked into platforms completely owned by platforms, radical is actually taking those social coding features and bringing them back to you.
00:15:44.982 - 00:16:07.542, Speaker A: So patches on Radical are Git tags, right? Issues will be local objects. And so this is also really freeing when you focus on the concept of local first development. It's like, what if I could take more of my data from the web and take it and bring it back locally to me so I can control it and I can interact with it offline and on my machine.
00:16:07.542 - 00:16:12.906, Speaker A: So it's also built on Git, obviously that's really cool. And it's more secure. So everything's backed by public key crypto.
00:16:12.906 - 00:16:26.194, Speaker A: So everything that I do on Radical is signed by my key pair. So there's also an added layer of security that comes into how I'm collaborating on these repositories that makes it easier to trust people online. So that's also another good point.
00:16:26.194 - 00:16:31.630, Speaker A: And then it allows you to own your own infrastructure. So like, Radical is a free and open source project. It's free forever.
00:16:31.630 - 00:16:38.134, Speaker A: It's available to everyone no matter where you are in the world. And it's completely open source. It's forkable customizable you can do whatever you want.
00:16:38.134 - 00:16:58.110, Speaker A: Like Radical will be more than what we're building right now and that's the point. And I think also what code collaboration infrastructure should be. I think that was the original vision of Git and so we're trying to return to that ethos, right? Trying to return to those principles of owning your own infrastructure and building completely free forever.
00:17:01.090 - 00:17:01.550, Speaker B: Great.
00:17:01.620 - 00:17:10.898, Speaker A: So we launched Radical in beta this past December. We launched the network and our desktop client. So actually you can use Radical today.
00:17:10.898 - 00:17:30.114, Speaker A: You can push code, you can publish code to the network and host it completely peer to peer share, follow projects and collaborate, albeit in an old school way. So we launched this project and immediately saw thousands of projects on the network. Also some web Three projects already experimenting.
00:17:30.114 - 00:17:46.990, Speaker A: The graph hosting their protocol governance on it, synthetix actually is mirroring their repositories on Radical. And so we've already started seeing the web Three space start experimenting with what it means to have decentralized code collaboration built into their workflows. We also started building out the app.
00:17:46.990 - 00:18:35.390, Speaker A: So recently we launched Patches, which are basically our version of PRS or like a super important means of collaboration before we were doing it, very old school with mailing lists, huge feature and I think it represents kind of what's on the roadmap for our code collaboration side of things, right? Which is to continue building out the social coding experiences that make it easy to build software together, but doing that in our own way and doing that through our clients and alongside of our users. So now, yeah, we're halfway through, we can talk about the really exciting stuff which is what I think I've been excited about to talk about for some time and kind of some of the newest stuff that's coming with Radical, which is Radical and Ethereum. So as I mentioned before, radical has an opt in Ethereum integration that kind of offers up the world of Ethereum to Radical users.
00:18:35.390 - 00:18:48.522, Speaker A: And so what the Ethereum integration does is enables three really awesome features that we think are going to really change the game for how people are building software together. So the first of those is Radical. Orgs.
00:18:48.522 - 00:19:09.926, Speaker A: So Radical orgs are basically decentralized code management tool for DAOs DAOs. I use generally more decentralized online communities of people, you know what I mean, people coordinating on the internet. And so orgs actually take this super user admin model that we have, everybody knows GitHub orgs that's like the way that you coordinate, that's the way that you represent and show yourself that you're on a team.
00:19:09.926 - 00:19:56.290, Speaker A: And we say, okay, what if that's managed by Smart Contracts, right? So orgs allow you to manage, write access to your code repositories with Smart Contracts. Orgs are actually on chain entities and these repos, sorry, these orgs can be owned by Nosisafe, by Multisigs, so they allow you to actually have a shared ownership of your code repositories and collectively manage the right access to those repositories. This is extremely powerful primitive, right? This is actually saying as a dow that's building this software, that's governing this protocol, that's building this project together, we can collectively own, truly own our code repositories and manage in a trustless manner how people interact with those repositories.
00:19:56.290 - 00:20:18.714, Speaker A: We can also secure and anchor our project state, our canonical project state on chain in a way that's again, trustless and verifiable auditable and secure. And so this is really powerful. So anchoring, which is one of the features associated with orgs, allows you to anchor your latest project state via commit hash, which is related to data that's on radical on chain.
00:20:18.714 - 00:20:35.486, Speaker A: So people actually always know what is the most up to date version of your code base. So this is great for managing software releases, sharing code. You realize that when you introduce this kind of more secure way of distributing software that everything that we do now has all of these different attack vectors.
00:20:35.486 - 00:20:52.710, Speaker A: And so this is a really powerful primitive for people who want to organize around radical repos. So orgs actually launched last week and so we can even maybe go through a little demo if we have time. But you basically can create orgs that are either owned by ethereum addresses or by multi sigs.
00:20:52.710 - 00:21:03.882, Speaker A: And so this is kind of what orgs look like in Upstream. So again, orgs are on chain entities. So like whatever client you build is able to kind of build their own experience or their own UI around how you visualize these orgs.
00:21:03.882 - 00:21:19.922, Speaker A: But you can have members, you can create different quorum thresholds for anchoring projects. Our team radical Upstream has and maintains an.org and it's actually how we're going to be maintaining our core team development within the project.
00:21:19.922 - 00:21:41.726, Speaker A: So this is like a great coordination mechanism for people who are trying to show how they're organizing around sets of repositories and doing it in a way that's based on Ethereum identities, which is really powerful. So radical orgs becomes even cooler with radical names. So radical names are basically like uncensorable developer identities.
00:21:41.726 - 00:22:00.634, Speaker A: So when you create an.org on radical you can actually customize and configure an ENS domain using our radical registrar to that. So you can say this is owned by Dxdow radical ETH and you can configure an identity to this, which is basically what you do when you create an.org
00:22:00.634 - 00:22:15.214, Speaker A: via your GitHub account. And you can use this to kind of identify your team, your project on the internet. In addition to this, teams will be able to specify where their code is actually hosted with seed nodes.
00:22:15.214 - 00:22:37.606, Speaker A: I didn't touch on this, but seed nodes are basically how you ensure data availability on the radical peer to peer network. And so orgs can actually create their own seed nodes and they can say this is where our code is always going to be guaranteeing the availability of their code on the peer to peer network and also giving them a way to kind of this is like what their hosting will be. Instead of relying on GitHub, these.org
00:22:37.606 - 00:23:01.090, Speaker A: identities are also integratable with other identity frameworks like IDX that's leaking some alpha. So you can also use these as a primitive that's composable and integratable with different identity frameworks on the web, making them more enriched with more data or enriching other identity frameworks with radical data. Right? And I think that the point of this is that this does become like the decentralized developer identity of Web Three.
00:23:01.090 - 00:23:15.110, Speaker A: You don't log in with GitHub anymore, right? Like you don't have to sign in off with GitHub. This can be the referenceable developer identity that we start building like Web Three off of. And that's kind of how we see it.
00:23:15.110 - 00:23:36.090, Speaker A: In the context of orgs, your profile becomes your new Github.org profile, right? Like this is like the decentralized Github.org profile that you can now share with people to say who's part of the organization, who's building what, what is the latest state of the code, and knowing and trusting that this is one all completely hosted on a peer to peer network.
00:23:36.090 - 00:23:49.662, Speaker A: It's based and anchored, secured on ethereum and it's based in all of these ethereum identities that are then linked to your radical identities. So it's a really powerful concept. So this is actually a screenshot from App radical network, our web client.
00:23:49.662 - 00:24:00.210, Speaker A: And this is the upstream.org and so you can see all of this information related with this. This is our radical upstream repo that then you could use and go find in the radical peer to peer network.
00:24:00.210 - 00:24:10.386, Speaker A: So building on top of this, this is also some alpha. Is that where this goes is it starts turning into a full blown web client. So once you have these.org
00:24:10.386 - 00:24:46.862, Speaker A: C nodes implemented, you'll be able to implement source code browsing in sorry, source browsing in the web client, which allows you to actually navigate through, to actually view the repositories that are hosted on the peer to peer network in the browser, which is like replicating the GitHub experience. So this is really powerful and something that we're going to be shipping soon, and allows you to kind of truly start creating this decentralized profile that you can point people to, to say, okay, this is where we're collaborating, this is what we're collaborating on. Finally, the last piece that plays into this is radical funding.
00:24:46.862 - 00:25:08.778, Speaker A: So radical funding is a vague term because there's a lot of things coming with this and we're teasing people about what it's going to be and starting to getting to it. But basically radical funding is bringing DeFi to the developer experience. Radical funding is open source generalized smart contracts that empower developers to control the production and distribution of their work.
00:25:08.778 - 00:25:44.354, Speaker A: And this can mean many things, but this is basically bringing DeFi to devs and creating something that we call devfi, which is developer finance, which is super corny. But the main idea is saying, okay, DeFi is used to play all these financial games. What if we could harness that and give developers a way to fund and sustain their open source work? So with Radical funding, we're designing experiences into these clients or in their own clients that will give developers a way to actually control and monetize and create sustainable recurring forms of revenue around their interactions on Radical.
00:25:44.354 - 00:26:03.222, Speaker A: So this could be creating and distributing monthly Foss support funds for projects that are like crypto native. It could be streaming tokens to contributors to people who are part of your orgs, right? It could be using radical. Orgs to run grants programs, creating community tokens to collectively govern projects using orgs.
00:26:03.222 - 00:26:29.730, Speaker A: There are tons of things that we can build, and our team is focused on delivering some core experiences, but more so, delivering the primitives that will allow people to build their own experiences. And so this is kind of like the what's coming next with Radical and Ethereum. So now we can shift into my last talk, which is last part of the talk, which is kind of just like contextualizing this on why we as a team think that Radical on Ethereum is kind of the future of collaboration.
00:26:29.730 - 00:26:59.850, Speaker A: And I think that we believe that Radical is a very fundamental part of this emerging Web Three stack that I showed you guys earlier. The state of Web Three is like Radical is able to underpin all of this development because it enables protocols, applications, organizations, these groups of people dgens in the Web Three world to build on truly decentralized infrastructure, which is a very important part of securing the resilience of the Web Three space. It is making the code that we're building and the software that we're building completely uncensoral.
00:26:59.850 - 00:27:17.842, Speaker A: You can't take it down. It's accessible by anyone anywhere in the world and it really embodies the values of the Web Three space. And we also think that Dows or Decentralized organizations of people on the Internet are the future of open source development as a whole.
00:27:17.842 - 00:27:46.554, Speaker A: I think that it's best kind of captured by this quote, which is from this really great essay about governance and open source software, is that open source development is best understood neither as a primarily technical development or social process. And it's actually more of an inherent network of interacting sociotechnical processes that are intertwined codependent and coevolving. And I think that this kind of resembles what is brewing in the Dow space, is that we realize that people can build software in better ways together, and they can do that on the Internet.
00:27:46.554 - 00:28:03.902, Speaker A: They can do that completely anonymously. And that is the future of open source software. And so if we need that, open source development is the OG version of common based peer production, right? Dows are all about building the Commons together, coordinating decentralized.
00:28:03.902 - 00:28:13.490, Speaker A: This all stemmed. From very early open source development. Commons based peer production was literally a term coined to describe the phenomenon of open source development.
00:28:13.490 - 00:28:31.866, Speaker A: And right now, we don't control the production or distribution of our code. We don't control any part of this process. And so we need to be able to retain control of this and we need secure and sovereign Web Three native collaboration to actually kind of steward this Web Three vision forward.
00:28:31.866 - 00:29:00.338, Speaker A: And so we actually believe the future of open source software is self sustaining, community owned and governed decentralized online organizations. And that's a bunch of words, but I do think that it's trying to contextualize what's happening now where we have protocols that are being built completely online with each other, often anomalously governing millions and millions of dollars and completely redefining. A lot of things that we know about money a lot of things that we know about the web and the Internet.
00:29:00.338 - 00:29:19.930, Speaker A: And so we think that the way that these projects and the software will be built is community owned, governed, focused on self sustaining, built on crypto networks. And if we want to be able to achieve that vision, we need to decentralize our infrastructure. We need to decentralize the infrastructure that we're building the code on.
00:29:19.930 - 00:29:43.826, Speaker A: And we need to start experimenting with how we can power up these new ways of working, how we can make it easier for people to coordinate and operate, coordinate resources, develop software in a trustless and verifiable way online. And so this is why we are building radical orgs. Like, radical isn't about reaching feature parity with GitHub, right? It's not about becoming what GitHub is.
00:29:43.826 - 00:30:01.730, Speaker A: It's about designing a new way of collaboration and building the infrastructure for that future instead of just replicating the future that we have now. And I think that that's a really important point when kind of understanding radical so we see all these Dows. This is from, I think, a defiant post about what is the landscape of Dows.
00:30:01.730 - 00:30:29.426, Speaker A: Look at all these people that are considered Dows. You know what I mean? Dows used to be kind of this weird esoteric framework for how someone coordinates and literally Dows are just like the way that we build software now in crypto. And I think that's really important because now these DAOs, these protocol DAOs, these projects are coordinating resources, they're coordinating reputation, they're building social infrastructure that's not just, again, focused in the Dow space.
00:30:29.426 - 00:30:50.450, Speaker A: It's more a greater part of this open source space. And we really believe that radical can underpin every single one of these Dows, that everybody can use radical to empower themselves to continue building towards this decentralized Web Three vision. And so that's kind of like the greater picture of how we think radical fits into Web Three is that we want every Dow in the world on radical.
00:30:50.450 - 00:31:05.854, Speaker A: We want to give online open source communities the ability to truly own their code because we believe that this is the future of collaboration. It's not crypto specific anymore. This is the future of free and open source software and this is where we want radical to fit into that future.
00:31:05.854 - 00:31:15.102, Speaker A: So that's it. That's all I have. You can join our discord, follow us on Twitter, go on our website and keep in touch.
00:31:15.102 - 00:31:35.446, Speaker A: I think that I still have eight minutes left, so we could maybe do A-Q-A or I could show you guys orgs in practice. Maybe I'll do like, I don't know, what do you guys want to do? Okay, wait, it won't be like a demo, you know what I mean? It's going to be like me just like messing around with everything. But yeah, we can do that.
00:31:35.446 - 00:31:50.114, Speaker A: But thanks for listening to the talk. I appreciate it. Okay, so I guess I should still talk into the mic.
00:31:50.114 - 00:31:59.454, Speaker A: So this is actually Radical upstream. So this is the desktop client that we launched with radical. Again, it's a de facto way of interacting with the radical network, but it's not the only way.
00:31:59.454 - 00:32:20.722, Speaker A: So if you've seen radical before, you'll see that this is new. So the baseline of the Ethereum integration in radical is it allows you to link an Ethereum identity, an Ethereum address to your radical identity via a protocol attestation actually, I could probably do this now. So we have integrated radical upstream with Wallet Connect.
00:32:20.722 - 00:32:35.002, Speaker A: So I should be able to do everything from rainbow. But this allows me to say, okay, this is the Ethereum address that's explicitly associated with my radical identity. And it's important that radical identities, this is a device ID.
00:32:35.002 - 00:32:49.294, Speaker A: So this is an actual key pair that's related to my device, similar to how GPG keys work and how you have to author yourself to get into GitHub. It's kind of the same way. And so this is cool because you're able to say this developer on this device is related to this Ethereum address.
00:32:49.294 - 00:33:00.266, Speaker A: And anything that I'm doing when I'm pushing to this repository and collaborating on this repository is associated kind of with me. So that's why it's my developer identity. So that's an error.
00:33:00.266 - 00:33:21.622, Speaker A: So I'm also in dev mode right now, so we'll see how this goes. But basically what's also really cool about the orgs feature is that it's so natively integrated with Gnosisafe that when I create a multi signature so you can see it's actually working, which is great. And I'm actually deploying a Gnosis safe via the app.
00:33:21.622 - 00:33:36.730, Speaker A: So what that transaction just did was deploy a Gnosis safe. So now it's creating and what that does is it allows me to now have this smart contract, which is a radical.org, and then the Gnosis safe, which is the owner of that, with me being the first member.
00:33:36.730 - 00:33:48.798, Speaker A: Is this the okay, so this is the new that's just created. But see, it might not work because I'm in the wrong mode, which is really disappointing. I can't even show you guys this, whatever.
00:33:48.798 - 00:34:06.150, Speaker A: But so this is on mainnet and I think it's not working because I'm in dev mode right now. But what you can see is all the orgs that have been created on the radical network. So this is the desktop client where you can create orgs and again you can do your radical identity and everything.
00:34:06.150 - 00:34:18.406, Speaker A: I can show you more after that. But so the web client is the newest thing that launched with radical orgs, which is really cool because this gives you a way to kind of view your on chain and the data associated with it. So for example, this is An.org
00:34:18.406 - 00:34:28.666, Speaker A: that I created called Jello. As you can see, this is the safe that's associated with this that owns this. This is the address of the contract.
00:34:28.666 - 00:34:43.854, Speaker A: And then this actually leads me directly to the Gnosis safe where I can anchor projects on chain. Let me find one that actually has an anchor. So as I mentioned before, anchoring is kind of the main function that you do with.
00:34:43.854 - 00:34:57.410, Speaker A: So I have to find An.org that has an anchor to it. But when I anchor a project, I submit an on chain message that contains the latest commit hash of a branch of someone's remote that then I can actually view via this browser.
00:34:57.410 - 00:35:07.338, Speaker A: And as I said, you can register ENS names. So you can do that via the web client as well. This kind of takes a little bit of time because it's just like ENS, you have to commit it.
00:35:07.338 - 00:35:23.114, Speaker A: So I'm not going to do this, but you can register an ENS name on this website and then you can actually set it to look, I'll just show you. Yeah. Do you like that? I thought that that was actually really funny.
00:35:23.114 - 00:35:38.718, Speaker A: I have it linked in all of our documentation as well. But so if we go to Tuniswap, you can actually edit the records that are associated with this ENS name. So this is me being able to say, okay, this is the URL, this is the Twitter, these are the social handles.
00:35:38.718 - 00:35:46.482, Speaker A: You can configure this name and then actually set it to An.org. So I can set it to An.org and then that will be populated in this profile.
00:35:46.482 - 00:35:56.934, Speaker A: So this is kind of like the real profile. If we switch to mainnet, I can show you some of the orgs that we have on mainnet right now. So radical upstream is ours.
00:35:56.934 - 00:36:05.062, Speaker A: As I said. So this is the anchor. So every time we do a release, we anchor our Radical Upstream repo on chain.
00:36:05.062 - 00:36:16.814, Speaker A: And so it's like just a better way for people to be able to say, okay, this is the latest version of that software. These are the members that are associated with the devs. These are going to be integrated with ceramic network, which will be really cool.
00:36:16.814 - 00:36:34.310, Speaker A: So these will be able to actually be IDX profiles on the profile that's super nice, right? That's some alpha that's coming soon. And then as I showed you in the presentation, you can actually click through here and be able to view this code right? And then potentially Git clone that repo in the future as well. So that's really powerful.
00:36:34.310 - 00:36:54.074, Speaker A: DX Dao is a project who actually created one of the first mainnet orgs. What's cool about Dxdao's implementation is that they're actually going to have their owned by the DX Dao, which is a DAOstack Dao, which shows the composability of orgs. It doesn't have to be a Nosisafe that owns it, it can be another Dao framework and that's also really cool.
00:36:54.074 - 00:37:11.454, Speaker A: So we're excited to see what they're building as well. I think another cool thing of how we see orgs being used is for governance and for grants. Specifically for us, we're going to be organizing our core teams via radical orgs because we ultimately want all of our projects to be funded via the radical Dow.
00:37:11.454 - 00:37:40.646, Speaker A: Orgs make it really easy for protocol treasuries for larger DAOs to modularize and understand who's developing what within a protocol organization. And so this is really cool when you're thinking of how can you fund project development via Dows. You can have these development teams that maintain these organizations which have a relevance and maybe receive resources from a larger Dow that allow you to kind of coordinate project development in a more modular and focused way that's more focused on development.
00:37:40.646 - 00:37:59.758, Speaker A: Interactions with these orgs can be used as a basis for establishing reputation as a way of understanding how to reward contributors. Everything now is again based with ethereum identities. You're able to kind of coordinate and program these different value flows around how people are interacting with an organization.
00:37:59.758 - 00:38:05.874, Speaker A: So that's also really powerful. That's kind of it. I wish I could show you the upstream thing, but for some reason it's not working.
00:38:05.874 - 00:38:15.350, Speaker A: And I could probably fix it right now, but maybe I won't. I think I might also be out of time. Regardless.
00:38:15.350 - 00:38:19.766, Speaker A: Yeah, thanks. I think we have time. So stick around.
00:38:19.766 - 00:38:20.920, Speaker A: I can show you stuff.
00:38:29.550 - 00:38:32.346, Speaker B: Everybody's sticking around. Okay. Here.
00:38:32.346 - 00:38:36.480, Speaker B: It actually works. This is great. Okay, cool.
00:38:36.480 - 00:38:50.654, Speaker B: The developer experience if you're moving from GitHub. Well, so what's nice about Radical is that it's really pushing publishing code to radical is like pushing to another remote. That's actually what it is, it's just adding another remote.
00:38:50.654 - 00:39:09.826, Speaker B: And so right now when I maintain repositories on Radical, I'm just adding another step to my developer workflow where I'm just pushing again to radical. Obviously this gets a little bit more tough when you have a lot of CI CD flows built in and that's something that's going to be a hurdle that we have to focus on. It kind of makes it a little bit harder to just completely automate the workflow.
00:39:09.826 - 00:39:17.526, Speaker B: But it's so easy to be mirroring code on Radical. And so with this is kind of how you use. So this is the that I created.
00:39:17.558 - 00:39:18.534, Speaker A: This is the notestape.
00:39:18.582 - 00:39:25.926, Speaker B: You can actually view it in nostalgia. This is the one that I just deployed with this address. And then I can anchor projects on chain.
00:39:25.926 - 00:39:30.746, Speaker B: So this is the state contract. I choose the remote. So I'm in the maintainer of that repo.
00:39:30.746 - 00:39:32.218, Speaker B: I'll choose the main branch.
00:39:32.314 - 00:39:33.546, Speaker A: This is the latest commit.
00:39:33.578 - 00:39:58.502, Speaker B: I'll be able to choose whatever commit that I want and then this actually triggers an on chain interaction that I confirm now, which submits this message on chain. And so if I had more members in my multi SIG that would then go to them, they'd have to confirm it and we'd have to form before being able to kind of agree on that anchor. And so I think that it's just me.
00:39:58.502 - 00:40:22.986, Speaker B: So I think that I would just have to execute this transaction. Oh my God, I hate when MetaMask does this whole screen but I think that this should trigger I think I already signed it since you're probably just being slow. But this would trigger a transaction here for me to execute which would then put this on chain.
00:40:22.986 - 00:40:42.950, Speaker B: So I think I could if this works, I can show you what anchor so this is anchor an example of anchor from another. It has a transaction hash and then also the commit hash. So basically you're just creating a log of project state that's audible, completely transparent and it just creates a better way to kind of distribute software.
00:40:42.950 - 00:40:46.002, Speaker B: So yeah, you can add members and notes.
00:40:46.066 - 00:40:46.354, Speaker A: Safe.
00:40:46.402 - 00:41:06.134, Speaker B: I think that there's some cool stuff that we can do with like Safenap. So how can you automate interactions with boards actually via governance? So what does it mean to implement and upgrade via governance? And how can you then create that decentralized process all the way to the code? So you're not going out of your decentralized workflow to GitHub or to something else. You can actually keep it all in radical.
00:41:06.134 - 00:41:20.654, Speaker B: And so I think that's what we're designing now over the next couple of months. So if people are keen on trying out orgs like get in touch with me because we're doing a lot of user research funding a lot of different development teams, getting people kind of moving towards cool. That's all I'll do.
00:41:20.654 - 00:41:44.980, Speaker B: I'll stop sharing my screen now. Really?
