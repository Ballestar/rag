00:00:14.420 - 00:00:57.184, Speaker A: I'm CEO and Co founder at Dibridge and today we're going to talk about cross chain interoperability and why it can be the next wave for DeFi and NFTs. Like everyone is discussing that the future is multi chain. But in fact we are already living in a cross chain world, right, with more than 50 blockchain publicly available and users would like to have a capital efficient way to move liquidity across all these different chains protocols would like to have the way to move data or perform a cross chain calls between smart contracts.
00:00:57.184 - 00:01:27.596, Speaker A: And there is a clear need for solution for the crosschain interoperability. And if we take a look into the kind of landscape of existing blockchain ecosystem, there are many EVM chains, there are roll ups and there are many ways to kind of interconnect ethereum and a roll up through native roll up bridges. But the main constraint is that there is no way to build the bridge that supports automatically incompatible blockchain ecosystems.
00:01:27.596 - 00:02:00.120, Speaker A: There is no solution that allows to move freely assets and data between, let's say, non EVM ecosystem such as Solana and some roll up or layer two solution like optimism. And liquidity is another big challenge because right now we have around $100 billion of liquidity fragmented across more than 50 blockchains. And there is a clear need for crosschain infrastructure to maximize the capital efficiency of various applications.
00:02:00.120 - 00:02:26.924, Speaker A: And the lack of unified standard for crosschain intercommunication leads to the set of problems, mainly fragmentation problems. For example, you have a fragmentation of technologies when many teams and people are working on solving the same problems or building the same solutions just in a different blockchain ecosystems. So for example, many teams are just like implementing some forks of uniswap or curve.
00:02:26.924 - 00:02:46.840, Speaker A: Many teams like implementing the same lending protocols across various blockchains. So instead of innovating, we are just like fragmentating resources on building the same solutions. So if we have the true interoperability, we may build the composable application.
00:02:46.840 - 00:03:10.204, Speaker A: And composability is one of the most powerful concepts of DeFi. And we saw many examples actually of compostable applications. So, for example, Ave and Maker, when MakerDAO can directly mint Dai token into Aave to have a fixed interest rate on loans in diet token or UXD coin and mango like UXD.
00:03:10.204 - 00:03:45.036, Speaker A: The algorithmic stablecoin on Solana ecosystem, which opens delta neutral positions on perpetual markets to maintain its pack and have some additional revenue flow from the delta neutral position. But the main problem is that we've seen all these great examples of compatibility only built within one specific blockchain ecosystem, right? So for example, like Convex and Curve is a great example as well, or like one inch and axis. But we have not seen any kind of money Legos that are built on a cross chain scale yet.
00:03:45.036 - 00:04:19.572, Speaker A: And just imagine if we have an interoperability layer, we can combine protocols and smart contracts across different chains. So for example, we can have an algorithmic stablecoin protocol in Ethereum like FRAX that can interact with various perpetual markets either on Solana or in Arbitrum or like Starquare and pick the best one. And that kind of design will help to maximize the efficiency of the solution because you always open position like protocol opens position on the perpetual market where the funding rate is the best.
00:04:19.572 - 00:04:49.820, Speaker A: Or just imagine if our protocol on Ethereum could interact with Mango markets on Solana, right? And that would allow us to build way more capital efficient solutions and interconnect protocols and smart contracts across various blockchain ecosystems. Within debris team we are building solution debris infrastructure that's the secure interoperability layer for web three. So Debris Protocol consists of two layers.
00:04:49.820 - 00:05:15.684, Speaker A: There is a protocol layer which is represented by the smart contract deployed in every supported blockchain and there is an infrastructure layer. So infrastructure layer is basically represented by Validators that are elected by Debris Governance, that work for Debris Governance. The point is that there is no way to build the bridge that will support data flows across many chains without the validation layer.
00:05:15.684 - 00:05:32.504, Speaker A: We may see different bridges that implement like full client or light client. But mainly all these bridges only support interconnection between base layer, layer one and layer two. But what we are building in Debris is the infrastructure that helps to interconnect all blockchain ecosystems.
00:05:32.504 - 00:06:23.592, Speaker A: Because just imagine, if we have truly decentralized and secure infrastructure, then theoretically all the blockchains are becoming layer two to each other, right? Because protocols can scale up to different chains, smart contracts can intercommunicate with each other and that's kind of crosschain future we believe in. So yeah, the design of Debris Protocol consists of two layers and any interaction or any cross chain message which is transferred is initiated by calling like Send method of Debris Protocol Smart contract. And whenever the transaction is confirmed, debris Validators sign the transaction, sign unique Identifier of transaction with their private key and store signature into IPFS so that anyone who has signatures from validators can execute this transaction on the destination chain.
00:06:23.592 - 00:06:47.568, Speaker A: So I truly believe that there is no need to build own blockchain for bridging or for interoperability because the throughput of the blockchain will not be bigger than throughput of all the support blockchains. That's why in Debris we have this kind of off chain validation because anyone who has signature can execute transaction on the destination chain. And that allows also to have unlimited throughput.
00:06:47.568 - 00:07:14.296, Speaker A: Because since the signing of transaction happens off chain, validators can sign any arbitrary amount per second, depending on the hardware, but way bigger than throughput of all supported blockchains. And there is no multisigs by this design. So we have a smart contract that just cross validates signatures of Validators and executes message or delivers message if at least two thirds of signatures are valid.
00:07:14.296 - 00:07:49.610, Speaker A: And you may ask why validators are secure, why Validators don't collude. In this case, validators don't collude because there is slashing mechanism delegator staking and slashing when any arbitrary user or protocol can delegate liquidity for validator to participate in the protocol revenue sharing. And if validators decide to validate some fake transaction or censorship some transaction, they are getting slashed and that allows to have some kind of closed loop economy when validators actually bear financial responsibility for their service.
00:07:49.610 - 00:08:05.608, Speaker A: So yeah, our protocol is live. We launched in the middle of February. Thus far we processed more than and delivered more than 100,000 crosschain messages or crosschain transactions from more than 55,000 unique users.
00:08:05.608 - 00:08:30.208, Speaker A: And the protocols life across seven EVM chains. So you can actually leverage debris infrastructure to build any arbitrary crosschain applications and primitives. So the main problem is like what is really needed for a true crosschain interoperability? Because historically all the bridges that we saw were mainly focused on a crosschain swaps or crosschain value transfers.
00:08:30.208 - 00:08:58.088, Speaker A: And the general model is like users lock asset in one blockchain and then receive the wrapped representation of this asset in another. And the problem of this type of bridges are that the Bridging protocols have to run liquidity mining campaigns and lock a lot of TVL within the protocol. But whenever a Bridging protocol has TVL, it starts to compete with liquidity giants such as Ave, FRAX or Compound.
00:08:58.088 - 00:09:33.720, Speaker A: And that's not the competition that bridge is going to win because you never know when there is a demand on liquidity. You may have like a billion dollars of liquidity in the protocol and pay like 18% of APY on the amount of liquidity locked but the actual utilization of liquidity will be like 2% or so. That's why I truly believe that all the bridges that have this kind of TVL model will eventually have to pivot either toward the generic messaging protocol or we'll have to leverage messaging capabilities of other protocols.
00:09:33.720 - 00:10:04.496, Speaker A: It's not enough to kind of deliver liquidity across chain and the only way to do that efficiently is to pass liquidity as a message. Because whenever there is a crosschain transfer, there is a request to transfer liquidity from chain A and chain B and somebody should settle this order in chain B and like 95% of all existing Bridging technologies they're using their own liquidity pools to settle this liquidity and in debris. We are taking a different approach.
00:10:04.496 - 00:10:39.532, Speaker A: We are like a big advocates of compatibility and we believe that synergies and integrations with other protocols can help us to maximize the capital efficiency. So instead of bringing our own TVL, we rather trying to integrate with liquidity protocols such as our for example, our introduced portals in their V, three of the protocol in order to borrow liquidity from the credit line to settle these cross chain orders. And at the same time we help liquidity protocols to monetize their liquidity and share the rewards from Bridging fees with those protocols.
00:10:39.532 - 00:11:00.964, Speaker A: And that design is way more efficient because we don't need to have any TVL, we just source liquidity from partner protocols when it's really needed. Because liquidity for bridges, liquidity is needed only during the very short time span when there is a transfer. And there is no any kind of sense to lock liquidity during all the other time.
00:11:00.964 - 00:11:36.176, Speaker A: And yeah, so in addition to value transfers, of course we need to have the message transfer. But the problem is how do receiver knows who was the sender of the message? Because let's say when we use telegram we receive the message from someone we know whether the sender is trusted or not. The same design should be implemented for interoperability layer when there is some messages been passed between protocols, let's say in Ethereum and Solana, the program on Solana should know whether the address and chain ID of the sender is trusted or not.
00:11:36.176 - 00:12:07.608, Speaker A: And yeah, that's what every interoperability protocol should have. And another very important aspect is the execution of transaction. Because any cross chain interaction consists of two transactions, right? So there is the one the transaction that is initiated in the original blockchain and then there is a transaction that is executed on the destination chain and in order to execute transaction you need to pay gas or you need to make your users, users of your DApps to switch wallets, switch networks and claim transaction manually.
00:12:07.608 - 00:12:32.080, Speaker A: That's why there should be someone who will trigger the transaction on the destination chain. And I believe in the crypto economical design with interoperability layer. So, for example, when user or like sender can specify the small fee, we call it execution fee to incentivize anyone to complete transaction on the destination chain and for example keepers or bot can complete transaction.
00:12:32.080 - 00:13:07.708, Speaker A: And if this execution fee exceeds the gas cost then all the bots or keepers get the incentive right and they compete for executing for execution of the transaction. So my bet that in the very near future we'll see that most of the transactions on chain will be executed by bots because for users it doesn't really matter what blockchain you interact with. When we use web two solutions or websites we never think like whether there is an Amazon web services or like hezner as a hosting and we don't need to switch between those.
00:13:07.708 - 00:13:41.348, Speaker A: All the traffic is routed automatically. And that's the level of user experience that we are trying to achieve in web Three when users don't need to think about wallets, think about networks, they just initiate transaction in any blockchain where they have a wallet or asset and then transaction automatically executed on other chains by keepers or bot. And user may not even sign transaction, but just sign some signature, some message, right? And then smart contract keepers will execute that message through some smart contract.
00:13:41.348 - 00:14:07.360, Speaker A: So yeah, that's quite interesting so I think that in near future all users will just interact with DApps without thinking about blockchains and wallets. So bridges itself will be some kind of TCP IP layer so that users will not even need to know about their existence. That's exactly what we are building actually, especially in regards to the security and the user experience.
00:14:07.360 - 00:14:32.632, Speaker A: So any developer or any project can pass arbitrary messages and value simultaneously across various blockchains. And if you build cross chain application or cross chain interaction the only thing you need to do is to create the sending smart contract and the chain a let's say ethereum and the receiving smart contract that will be on chain B, for example. Solana right.
00:14:32.632 - 00:14:59.440, Speaker A: And your smart contract interacts with the smart contract of the Debris Protocol or some other interoperability layer. Then the infrastructure confirms or validates the transaction and it gets automatically executed on the destination chain. And that allows to have to build money Legos on a cross chain scale when you can interconnect any arbitrary smart contract on any arbitrary chains.
00:14:59.440 - 00:15:27.624, Speaker A: And let's dive a bit deeper in the concept of the transaction bundling. That's a bit technical but very important because one of the most important aspects is being able to execute arbitrary complex cross chain interaction in a single transaction. And the point is that if you transfer message, there is a way to encode the set of transaction calls in this message.
00:15:27.624 - 00:15:49.192, Speaker A: So for example, you don't want to only do a crosschain swap, but you want to do a swap of some method and then you want to provide the resulting liquidity into the protocol such as Ave. Or maybe you want to transfer liquidity across chain and then to open position on perpetual markets in the same transaction. In this case, you'll most likely use the transaction bundling feature.
00:15:49.192 - 00:16:18.140, Speaker A: And the transaction bundling became possible through integrating Debris smart contract with Ignosis multisand library because if you've used the Safe app there is the function which is called Transaction Builder. It's based on the multi send library which was developed by Gnosis team and which is quite unique where you can pack set of transaction calls in a single transaction. So you don't need to make like signers of the multi SIG to sign every transaction calls separately.
00:16:18.140 - 00:16:38.012, Speaker A: And yeah, this is actually a powerful library and we've integrated that. So the idea that the message which has been transferred across chains can encode the set of transaction calls. So it can be, as I mentioned, like swap plus provision of liquidity into some protocol or swap plus interaction with another smart contract on another chain.
00:16:38.012 - 00:17:19.468, Speaker A: So any arbitrary interaction and yeah, as soon as transaction is confirmed, it's executed on the chain B. So Debris Gate like claimers or keepers or user itself just claims the transaction and then through the call proxy, call proxy smart contract sequentially executes all the transaction calls which are encoded into the message which has been sent and DApps. So probably the next bull cycle will be actually driven by the crosschain application and we call DApps the application that are built on top of debris generic messaging protocol.
00:17:19.468 - 00:17:37.008, Speaker A: So one of the most obvious application is the crosschain swap. And we have this solution which is called Dswap, which allows to perform swaps between arbitrary liquid assets. So if the asset is liquid, if there is a liquidity pool, then it can be swapped.
00:17:37.008 - 00:17:54.104, Speaker A: And that became possible through our integration with One Inch and with liquidity aggregators. So we source liquidity and routing algorithms from One inch. And we basically interconnect one inch rotors in different chains by passing messages between those.
00:17:54.104 - 00:18:24.612, Speaker A: And that allows to swap from any arbitrary liquid token to any arbitrary liquid token and cross chain. The asset is rotored through one of the intermediary the cross chain swap is rotored through one of the intermediary assets that can be USDC or that can be like some of the assets, let's say, stablecoin, borrowed from Ave or the asset which is settled by the market maker who fulfilled the cross chain value transfer. So, yeah, Dswap is life.
00:18:24.612 - 00:18:48.188, Speaker A: That's the application that can be used not only by users but also by protocols. So basically, protocols can manage their treasury or swap liquidity across different chains. Another interesting application, crosschain application would be MultiChain Governance because we have many protocols deployed on Ethereum, right? But one of the problem is the gas cost.
00:18:48.188 - 00:19:20.500, Speaker A: Not too many users are active or are participating in the Governance voting due to the high transaction fees. And instead of launching the Governance on Ethereum, we can simultaneously launch Governance voting on different chains, let's say Avalanche and Arbitrum or maybe even non event compatible chains. And once the voting period is over, the result is sent as a message to Ethereum and then settled by the Smart Contract on Ethereum and applied to the entire protocol.
00:19:20.500 - 00:20:02.944, Speaker A: And yeah, that would be interesting to see how the multi chain governance will evolve because the cheaper the Governance voting will be, the better participation from the token holders we'll see. Another application would be the cross chain lending when, let's say, you provided the asset or liquidity to Ava protocol on Ethereum. And at the same transaction you can draw a credit or take a loan from Ave on polygon or you can just directly transfer your position, let's say $10,000 from Ethereum to Ava protocol on avalanche and crosschain yield farming.
00:20:02.944 - 00:20:35.880, Speaker A: Yeah, that's another use case. So we all know in urine finance, when you supply liquidity in the form of, let's say, USDC to urine, and then urine automatically balances liquidity across different strategies. So we can have like, cross chain yield farming when you supply USDC and then the Smart contract automatically balances this liquidity across strategies in different chains and balances each strategy according to the best API, NFTs.
00:20:35.880 - 00:21:19.896, Speaker A: Of course, Gamify and NFT industry is evolving fast, and I think that NFT may be one of the main onboarding funnel for next billion users into DeFi. And we saw many great examples like Stapon where even my parents started to work with NFT sneakers which was quite yeah, NFTs is the interesting industry, right, and there is a clear need to be able to bridge NFTs across different chains. For example, to make them interoperable between metaverses when, let's say you can bridge your cryptopank from ethereum blockchain to solana metaverse like Star Atlas, and you have your cryptopank as an avatar.
00:21:19.896 - 00:21:48.752, Speaker A: Or you can just sell some of the game assets directly from the game itself, and it will be sold on OpenSea in different chains. Or maybe at Magic Aden in solana and crosschain paradigm. It's the interesting concept because normally all the protocols and projects were trying to tap into user base of other blockchain ecosystems by just deploying or forking themselves deploying the smart contract.
00:21:48.752 - 00:22:05.880, Speaker A: And that worked really well for Ave when ave is a good example. It started from one chain, Ethereum and now Ave exists across seven different blockchains. But if you're building your own protocol now in 95% of the cases you don't want to be deployed in all the chains.
00:22:05.880 - 00:22:49.364, Speaker A: That works for Ava and that works for projects and protocol that represent, like, foundational layer of DeFi such as DAX or like lending protocol or rotor, because we got to have those in every blockchain, because those are protocols where we need to have synchronous composability. But in 95% of all other cases, you don't need to have synchronous composability. And I really believe that projects and protocols that are deploying should follow the application centric approach when you just pick one blockchain which suits your needs in the best way and then through interoperability layer you become accessible to all the protocols and users from other blockchains.
00:22:49.364 - 00:23:20.928, Speaker A: So yeah, you can pick a blockchain depending on your specific needs but mainly that can be like transaction fees or security or throughput or maybe you need to pick blockchain where you would like to have a synchronous compatibility with some specific protocol. So yeah, this is basically the scheme of how any protocol can go cross chain. You just choose one blockchain and this blockchain you have a synchronous compatibility with other protocols as well as with users like EOA addresses.
00:23:20.928 - 00:23:53.260, Speaker A: And then through interoperability layer your protocol becomes accessible to all the protocols and users across all the other chains that are supported by interoperability layer. And you don't need to deploy there, you don't need to fragment your own liquidity because your liquidity and state of your smart contract is concentrated and located in the chain where your smart contract is deployed. So yeah, there are many ways, there are many reasons why you should know or explore the cross chain applications.
00:23:53.260 - 00:24:23.492, Speaker A: First of all, to maximize capital efficiency. Secondly, to enable global accessibility for protocols and for DApps so that users can interact with those from many chains. And yeah, this is example that we had with integrating Ave when you can do a cross chain swap from one chain to another, let's say, BNB, and you can swap directly from any of your asset to the asset, which is supported by Ava protocol and at the same transaction, supply resulting liquidity into Ave.
00:24:23.492 - 00:24:43.864, Speaker A: So this is like how the routing looks like BNB swapped into USDC on avalanche and staked or supplied into Ave in the same transaction. And, yeah, this is implemented through transaction bundling. And the very last concept that I would like to touch really quickly the way the projects can transfer their asset.
00:24:43.864 - 00:25:15.176, Speaker A: Because sometimes you want to have additional utility for your token and instead of relying on one specific breach and bearing risks of the breach, you can deploy your own token like anonymical smart contract address in another chain and then enable leverage generic messaging protocols by allocating specific limits on the minting rights of every bridge. And that allows to be like, bridge agnostic and diversify risks of the bridges. So, yeah, that's about it.
00:25:15.176 - 00:25:24.120, Speaker A: And feel free to reach out to me if you have any ideas or any cross chain needs. Thank you for your attention.
00:25:29.100 - 00:26:04.840, Speaker B: Okay, just how do you handle the case? That's no guarantee, that, like, a way to then transfer.
00:26:09.450 - 00:26:19.082, Speaker A: Yeah, that's a great question, actually. And there is a fallback mechanism. So if the transaction failed on the destination chain, all the liquidity will be transferred to the fallback address.
00:26:19.082 - 00:26:34.750, Speaker A: And if you're building some crosschain app, you got to also design the fallback mechanism. So, for example, actually, you can fine tune the execution flow, and in debriach, you can specify the set of flags. For example, you can set a flag that if transaction is reverted, you can send it again.
00:26:34.750 - 00:26:43.630, Speaker A: Or you can specify the flag that if transaction is reverted, all the funds are sent to the fallback address, which is like part of the message which has been transferred.
00:26:46.250 - 00:26:46.758, Speaker B: Thanks.
00:26:46.844 - 00:26:47.220, Speaker A: Thank you.
