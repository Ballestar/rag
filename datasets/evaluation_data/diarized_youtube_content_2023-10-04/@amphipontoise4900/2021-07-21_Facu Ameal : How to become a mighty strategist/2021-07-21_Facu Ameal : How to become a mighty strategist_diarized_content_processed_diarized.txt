00:00:51.770 - 00:01:00.334, Speaker A: Well, hello everyone. I'm Faku from Urine Finance and this talk is based on a true story. What I do at Urine Finance is a UPM stuff.
00:01:00.334 - 00:01:13.800, Speaker A: I facilitate stuff for the strategies on the vault. But I'm not a coder, not at all. But for this talk, I decided to show the world that a strategy can be written by anyone, even by me.
00:01:13.800 - 00:01:33.178, Speaker A: So what's a strategist? A strategist. In short, and this sounds like a joke, it's a big brain who can write strategies. But there are some nuances to this that it doesn't say you have to be a hardcore developer or hardcore byPort developer or whatever, or a financial genius.
00:01:33.178 - 00:01:51.250, Speaker A: No, you just have to know how things work. What's the relationship between stuff? And that's the core thing of being a strategist. Why could you do it? Because the team is amazing, the tech is fantastic and there are some rewards.
00:01:51.250 - 00:02:12.598, Speaker A: So you're paid $5 million during 2021 up to the 9 May. So on top of having an amazing team and great tech, the rewards are good. So bear with me with some theory about what's the vaults and what the strategies, and then we get to the process of writing a strategy.
00:02:12.598 - 00:02:33.022, Speaker A: That's the most interesting part of this talk. So the vaults are the first part that seems to be the simplest part. It's a token container, like a big safe box where you deposit all the tokens and that's it? Yeah, it does some accounting and some other stuff, but basically holds the tokens.
00:02:33.022 - 00:02:48.258, Speaker A: The strategies, they do all the heavy lifting, all the interesting stuff, investing. They investing, like collecting the rewards. And the best part is that you always earn in the same token.
00:02:48.258 - 00:03:03.580, Speaker A: If you are a fan of Dai, you will deposit Dai and earn more Dai and the strategy is going to take care of that. These two definitions are the definitions that Andre gave at the beginning of times. But I like to explain a little bit to everything.
00:03:03.580 - 00:03:14.138, Speaker A: So let's get a little bit deeper into what's a vault, how it's done. The vaults are written in Bipre. Why they are written in Bipart? It sounds like oh, super weird language.
00:03:14.138 - 00:03:25.290, Speaker A: No, it's because it has bare mass support. They also give you an ERC 20 when you deposit it's like a receipt. It's like something for you to redeem your deposit.
00:03:25.290 - 00:03:43.414, Speaker A: The good thing about being an ERC 20 is that you can transfer, you can swap, you can use that as collateral and you can do everything you do with any other token, like ETH or Die or whatever. It gets track of your shares, the shares. It's actually those tokens, those ERC twenty s and the price per share.
00:03:43.414 - 00:03:48.002, Speaker A: That is the money that you've been earning. This is an important thing. It's immutable.
00:03:48.002 - 00:04:06.394, Speaker A: It has only like tiny parts that you can change. And we try to keep the address injection to the minimum and that's really important to assure that the vault is going to do what it says, that the contract is not going to change too much over time. This is a V two feature.
00:04:06.394 - 00:04:15.570, Speaker A: It can run multiple strategies at the same time. It's like an octopus running multiple investment at the same time. This averages the risk.
00:04:15.570 - 00:04:29.586, Speaker A: And the keepers are decentralized bots who helps us keep everything running and everything okay. And it's again decentralized. What about strategies? Yeah, they are written in Solidity.
00:04:29.586 - 00:04:46.122, Speaker A: It's a different language, but it has a reason also because you can inherit, that is to say that you have a base contract, you inherit most of functionality. That is the interaction between the strategies and the vault. And you have to code only the custom logic that you're going to use.
00:04:46.122 - 00:05:06.334, Speaker A: And that's amazing. And anyways, solidity is much more popular than Viper, so that's better to have more people developing strategies, they manage the accounting of the strategy, like how many tokens they have, how many tokens are invested, how many rewards do they have and everything they invest and invest and recycle. This is what I said earlier.
00:05:06.334 - 00:05:21.160, Speaker A: They do all the heavy lifting, the harvest return and the slippage. Because when you have a lot of funds and you are going to swap them for another token, you are probably going to hit slippage. So we have to do it little by little.
00:05:21.160 - 00:05:36.540, Speaker A: And in the debt based strategies like America, Dow, CDP, a collateralized debt position, they keep the collateral healthy. And that's super important because you don't have to care about it. We take care about it.
00:05:36.540 - 00:05:52.430, Speaker A: This is an example because if not it seems too abstract. Like how the with vault is distributed, has the capital distributed among all the strategies. You will see that the strategies have different allocations.
00:05:52.430 - 00:06:07.320, Speaker A: We call them debt allocation. Why? Because how it works is the strategies take loans, they borrow money from the vault. And that's the concept you are going to see in the name of the functions and everything.
00:06:07.320 - 00:06:16.710, Speaker A: And you can have strategies that are ready to accept capital. They have zero debt allocation. So we're always waiting for the next opportunity.
00:06:16.710 - 00:06:46.834, Speaker A: So you will see that we have these strategies with zero allocation waiting for the right opportunity. Okay, this is super technical, but it's really important because I feel like to understand the interaction is the most important part, if not the only part important to understand about the whole schema. So you have all the components, the keeper, the vault, the strategy, a different protocol no matter what.
00:06:46.834 - 00:06:59.874, Speaker A: And decentralized exchange to exchange the tokens for the one token. So the keepers are bots that are always monitoring the harvest trigger. What's the harvest trigger? It's a boolean.
00:06:59.874 - 00:07:13.642, Speaker A: It's something that says true or false when it's really the best time to collect the rewards because we have to pay gas. So if the gas is too high or the rewards are too low, we're not going to harvest. When that's true, the keeper called the harvest function.
00:07:13.642 - 00:07:20.490, Speaker A: The harvest is like just like farming. They're going to collect the rewards and recycle them in the strategy. That's the important thing.
00:07:20.490 - 00:07:37.890, Speaker A: The strategy is going to claim the rewards from the DeFi protocol. When it gets the rewards in no matter what token, it's going to swap them for the one token, the token you used to deposit like ETH or die or whatever. And it's going to get some one token.
00:07:37.890 - 00:07:51.302, Speaker A: Then the strategy has to report to the vault because the vault is taking care of the accounting. So it does a report and the vault adjusts the debt available. Because if we have too much money in a strategy, that's not good.
00:07:51.302 - 00:08:22.160, Speaker A: Because what we're trying to do is to average the risk and to not crash any protocol because the strategy has a lot of money. The adjust position, that technical function there, the only thing it does is adjusting really the amount of money invested in that protocol and then it returns success and that's it. I know when you see it, it's like super technical, but when you take a closer look, it's like super intuitive how it works.
00:08:22.160 - 00:08:37.046, Speaker A: Okay, that's theory. Now let's get to the practical part. Like what's our process to write a strategy and how simple it is? Okay, this is what you need.
00:08:37.046 - 00:08:40.902, Speaker A: First, the software. You got to download this bunch of software. Git.
00:08:40.902 - 00:08:48.570, Speaker A: Because we use GitHub for everything. We want to keep things transparent. Ethbrowny and Ganache is the framework we use.
00:08:48.570 - 00:08:55.040, Speaker A: Sorry guys, if you're using hard hat, you're going to learn some python. It's not that hard. I did it.
00:08:55.040 - 00:09:08.126, Speaker A: The Brownie strategy mix, that's the cool part because we coded and we it's not me. All the interactions between the strategy and the vault. Yeah, so you only have to implement some functions.
00:09:08.126 - 00:09:13.874, Speaker A: You don't have to implement all this stuff. We saw in the graphic before and Vs code. I use Vs code.
00:09:13.874 - 00:09:22.722, Speaker A: You can use Beam, nano, notepad, whatever you want. And those are the skills. This is what I had when I started writing a strategy.
00:09:22.722 - 00:09:30.666, Speaker A: I submitted the talk, I didn't know if I was going to make it. And I started writing a strategy. I had some programming experience.
00:09:30.666 - 00:09:40.762, Speaker A: PHP, like a contact form, HTML and CSS. That's where I started with encrypted zombies. I did up until level four.
00:09:40.762 - 00:09:52.910, Speaker A: And I tried to do the ethernote for real, but it was like level one or two. So I was kind of ashamed to put it. And the last two things, it's understanding how things interact.
00:09:52.910 - 00:10:00.750, Speaker A: That's why I make so much emphasis in how bolts and strategies interact. That's the important part. And a ton of willpower.
00:10:00.750 - 00:10:16.738, Speaker A: I should sat down and try to code. You're going to have a lot of misses, a lot of tests failing, but in the end you're going to make it. This is the process in Yarn, we keep things safe.
00:10:16.738 - 00:10:47.522, Speaker A: So we have this process, we're going to go over it to see what each part and you are going to see that coding is the list of your worries. We don't want people wasted dumb coding. So the due diligence is a little investigation about how the protocol works, how the security of the protocol is, if there are withdrawal fees, deposit fees, how's the multi SIG? Does it have two signers, three signers, five signers, et cetera, code itself? Audits are really hard.
00:10:47.522 - 00:11:11.750, Speaker A: So we have the strategies review the review among themselves as peers. Then you can publish as experimental in eptax core dev, review it's, one of the security experts are going to review it and in parallel, the Safe Farming Committee, it's a committee of 13 people that are going to evaluate the security of the strat. You go to production.
00:11:11.750 - 00:11:40.258, Speaker A: So let's go due diligence. Okay, a lot of text, important part, raggability of the protocol. You got to evaluate how is it easy to rag the users? Is it not easy? And the good part about this, if you find a protocol that has, I don't know, like a multi C, one of two, you can ask the devs, hey guys, do you mind changing this? Because we want to do a strategy on this and that and whatever.
00:11:40.258 - 00:11:58.520, Speaker A: And most of the times you will find that they are really receptive and you can talk with them and they are willing to change it. Describing risk, that's the useful thing. Taking a look at audits, audits, it's like key finding a fixes if they acknowledge the problems and everything.
00:11:58.520 - 00:12:26.862, Speaker A: And the last part, it's super important because we don't have a magic orb to know the future, what you want to do. So if you want to just publish to APTax, APTax is the experimental web UI, you have to say yes and you are not going to deploy to production. But if you are going to deploy to production, we have to have an emergency plan because when things get bad, it's not easy to think straight.
00:12:26.862 - 00:12:41.394, Speaker A: So we need to have an emergency plan to withdraw the funds and save the users. Okay, lot of stacks again, we don't care. It's clone the repo, the one I told you, this is like step by step code the strategy.
00:12:41.394 - 00:12:49.466, Speaker A: What does it mean? You have to just code three functions. At least prepare, return. That is for accounting, that's super important.
00:12:49.466 - 00:13:13.354, Speaker A: Even if it's accounting, it sounds like, oh, accounting doesn't care because no, it's the funds, it's how the users funds are going to be accounting inside the strategy. The adjust position that we talked about earlier that invest the funds into a protocol. If you're going to stake, for example, as my strategy, it was staking in governance of 88 mph and collect the dive rewards.
00:13:13.354 - 00:13:27.250, Speaker A: It invest those funds and liquidity position that is going to remove the funds from the underlying protocol. Because if a user withdraw, withdraws. We need to give them their funds.
00:13:27.250 - 00:13:39.954, Speaker A: And then the third part, it's right test. This is why I say it takes a lot of willpower and sitting down and doing the stuff, because maybe you've done all this right, like one and two. But you need to write tests.
00:13:39.954 - 00:14:05.410, Speaker A: Like if I deposit $1 million, what does it happen if I withdraw the whole amount? If I withdraw the whole amount minus one way, what does it happen? Does it work? Well, if someone airdrops, like a donation, does it work? All that stuff got to be tested. And number four, you got to test, test and test and try to catch all the edge cases. Okay, peer review.
00:14:05.410 - 00:14:20.390, Speaker A: You got your strat written and you want to publish it and test it in the Experimental UI. What? I said, the experimental UI. What you see on my left, yeah, that's an experimental link bolt.
00:14:20.390 - 00:14:39.210, Speaker A: What we do is first we need two peers to review the strut. That's super important because Andra says we test in prod, but as you've seen, we are testing in prod, but we review the strats and we take care of that being a safe thing to do. So two peers reviewed.
00:14:39.210 - 00:15:02.946, Speaker A: You can publish the strat with a vault in the Experimental UI. And that's what you will see because you have to choose a name. It got to be fun, because this is all serious and stuff, but it got to be a fun name like the frog print and two emojis and then promote it, because these are real funds and we need users to test the edge cases we couldn't think about.
00:15:02.946 - 00:15:21.274, Speaker A: So we're testing with little funds, with not so much. But we need to test it because when you code a strategy, you are going to do stuff that the strategy is usually prepared to do, but users are going to do always weird stuff like send funds to a strategy or send funds to the bot or do weird stuff. So we need to test it.
00:15:21.274 - 00:15:32.366, Speaker A: Okay, you spent some time testing in the Experimental UI. It's time for primetime. Two things.
00:15:32.366 - 00:15:36.618, Speaker A: It's a new protocol. Let's say it's curve. Okay? We already have curve vaults.
00:15:36.618 - 00:15:56.710, Speaker A: We already evaluated the security of the whole protocol, so we are fine to go. You don't do the Safe Farming Committee because it's already approved in a decentralized way. But if it's a new protocol, there are 13 people that are going to evaluate your due diligence and investigation, and they are going to say, hey, we think it's ready, or we think it's not ready to go to production.
00:15:56.710 - 00:16:20.730, Speaker A: And then a core team review means we have two security specialists that are the I don't want to say replacement, but for the lack of a better word, it's like a replacement for an audit. They will take a look at the strat, they will give you comments, that's for sure, about security optimizations. And what you can do better security wise.
00:16:20.730 - 00:16:30.950, Speaker A: This guy is not going to know about the protocol you're farming or anything. They are going to take care of the security side of the thing. As usual.
00:16:30.950 - 00:16:39.806, Speaker A: Everything to GitHub. We want to give traceability and transparency. Last step, it's going to the multi.
00:16:39.806 - 00:16:52.630, Speaker A: SIG. Two options here. You gotta ask a delegate, you gotta ask one of the guys actually one of the team members to write a transaction to the multisig, the yearn main multisig.
00:16:52.630 - 00:17:02.650, Speaker A: If it's a new token, a new protocol, you need to create a new vault for the website to show it. That's called endorsement. That's the name of the function.
00:17:02.650 - 00:17:29.646, Speaker A: You can call it whatever you want. But if not, if it's just a strategy, believe it or not, it's more difficult because if you are going to add a strategy to a divalt, how much capital do you allocate to that new strategy? So that's something that the Strategist and the Safe Farming Committee is going to decide. Why? Because it's a way to again average the risk.
00:17:29.646 - 00:17:41.510, Speaker A: If it's a new strat, even if it's the safest strategy in the world, you want to deploy little capital because it's been testing experimental. But we still need to give it some time. And when you think about it, we have vaults with $500 million.
00:17:41.510 - 00:17:59.210, Speaker A: And if you say, hey, let's allocate 1%, okay, that's a lot of money. So we got to think twice about it. Once the transaction is done, the strategy is attached to the vault and it's going to be shown in the chart that I showed you earlier.
00:17:59.210 - 00:18:16.434, Speaker A: That's it. Your strategy is in production. But no, it's not the end of it because DeFi moves really, really fast and we don't want people coming and going like, hey, I did a strategy, we deployed it and that's it.
00:18:16.434 - 00:18:31.890, Speaker A: If you coded the strategy, you are going to be the expert in that protocol. And if something goes wrong or the Apr goes low, you got to be there. So we need really strategies that are going to do this like monitor, monitor, monitor, monitor harvest.
00:18:31.890 - 00:18:52.474, Speaker A: It's the function that collects the rewards, the debt ratio, the amount of capital deployed so we don't crash yields the Apr because maybe if we deploy less capital and more capital to other strategies, we can get a better yield for the users. In the end, this is for the users. So we got to take care of the Apr and the state of the underlying protocol.
00:18:52.474 - 00:19:18.536, Speaker A: If we see something going wrong or pooling balance or something, we have to take care even. What we can do is move the place of the strategy in the withdrawal queue or reduce the debt ratio or whatever and that's it. But I realized when I finished the stock and that's what that QR code is about.
00:19:18.536 - 00:19:34.504, Speaker A: I realized that I managed to build this strat because I had the support of the strategy of yearn. So a few months ago I started a group that is called the Wifey Boarding School. There you will find senior Strategists.
00:19:34.504 - 00:20:01.510, Speaker A: It's not all newbies as I am, so if you want to write a strat, you can join and we'll help you guys. Thank you very much. So if you've got questions and whatever super open, no problem.
00:20:01.510 - 00:20:09.380, Speaker A: Distribution across the strategies?
00:20:11.320 - 00:20:12.070, Speaker B: Yeah.
00:20:13.900 - 00:20:15.240, Speaker C: What tools you use?
00:20:15.310 - 00:20:22.072, Speaker B: Like to optimize the vaults, distributions or allocations across the strategies.
00:20:22.136 - 00:20:37.184, Speaker A: We do simulations like Apr and harvest simulations on main network. We use Ganache and we use Standardly to simulate what will be the outcome, for example, changing. Let's go back a little bit.
00:20:37.184 - 00:20:47.444, Speaker A: Let's go to this graph. I think changing the maker ETH delegate from 34.7% to 50%.
00:20:47.444 - 00:20:58.520, Speaker A: What does it happen when we change to that amount of debt allocation and we harvest the Apr? Is it going to be more? Is it going to be less? And it's based on simulations.
00:20:59.260 - 00:21:01.656, Speaker B: Are you doing this like daily or?
00:21:01.758 - 00:21:15.176, Speaker A: No, multiple times a day. But it's not like a random simulation. We have a lot of people that really understand how the market works and how the supply to a market and utilization of that market if you're lending.
00:21:15.176 - 00:21:22.080, Speaker A: So they really know more or less where to go and find these opportunities and change the debt ratios.
00:21:24.210 - 00:21:25.790, Speaker C: How many strategies?
00:21:29.410 - 00:21:39.250, Speaker A: How many strategies? No, they can have up to 20. That's the limitation. But the most we have, I think it's eight right now.
00:21:39.250 - 00:21:42.514, Speaker A: That's changing like all the time. So yeah, it's seven or eight and.
00:21:42.552 - 00:21:49.014, Speaker C: Running at the same time. So like, for example, here we have like, what, seven, no, six strategies, but like four only running, right?
00:21:49.132 - 00:21:50.646, Speaker A: Yeah, there's four.
00:21:50.748 - 00:22:02.600, Speaker C: I guess my question is what's the percentage of strategies being used? For example, if a vault has like ten strategies, do the vault usually use only three or eight?
00:22:03.230 - 00:22:13.822, Speaker A: No, we have eight working strategies in the divalt, for example, or USDC, like I said, it's changing all the time. But yeah, we have seven, eight strategies working right now.
00:22:13.876 - 00:22:15.406, Speaker C: So most of them are being used.
00:22:15.508 - 00:22:26.480, Speaker A: Yeah, that's the idea. The only time where we deploy, we attach sorry, strategies with zero debt ratio, for example. That's the case.
00:22:26.480 - 00:22:39.822, Speaker A: Strategy maker? Well, the ETH delegate, those have the same name, but the one with zero debt ratio, it's ETH A. The CDP from maker ETH A that has like 3.5 stability fee.
00:22:39.822 - 00:22:48.838, Speaker A: And this one is ETH C that has I think it's half a point or 1% maybe. So this one is better right now? That's the idea.
00:22:49.004 - 00:22:49.720, Speaker C: Okay.
00:22:54.110 - 00:23:05.390, Speaker D: Hey, question as you mentioned, this process is very involved and the diligence, I'm guessing, takes a lot of time as well. How much time does it take on average, give or take, for a strategy to be developed?
00:23:05.810 - 00:23:16.690, Speaker A: It really depends. If you're worrying. I wrote a strategy that stakes Mph and collects dai that are the rewards that Mph give you.
00:23:16.690 - 00:23:30.630, Speaker A: That's a really simple strategy. It took me three weeks and it's still in review, but it took me three weeks because I'm super newbie. But for Strategists, it would take much less time.
00:23:30.630 - 00:23:57.070, Speaker A: Now, if you're moving to something like SNX, the investigation part of the protocol and how to manage debt ratios and how to manage the actual economic security of the strategy maybe will take you a month and a half. Depends on the complexity of the strategy. No, but the guy in purple had the guy in black.
00:23:57.070 - 00:24:22.994, Speaker A: Sorry. Do you ever use formal verification for the strategies? Sorry, I didn't understand when you're testing because you said there could be so many edge cases, do they ever have to eventually go through some kind of formal verification where you do we're not using formal verification right now. We're just using unit tests, and we have a bunch of default tests in the repo.
00:24:22.994 - 00:24:38.212, Speaker A: That's what I love about the Brownie MX, and we run those tests and we encourage people to write more tests. Yeah, we're not doing formal verification right now. No.
00:24:38.212 - 00:24:39.750, Speaker A: You have the mic there?
00:24:42.440 - 00:25:01.992, Speaker D: Yeah. So would there ever be something that would hold you back from developing a strategy with a protocol? Let's say it had a lot of requirements, like, let's say generating zero knowledge proof, like, say if it didn't have support in certain clients. I know most of this using contracts.
00:25:01.992 - 00:25:25.060, Speaker D: I'm just trying to grasp about. There is yield strategies out there that require a bit more tedious processes to participate in. And I'm just kind of wondering, is there anything that would inhibit you from farming a certain strategy because of, let's say, depreciated SDKs or clients or let's say a lot of overhead instead of just like simple deposit and reaper reward?
00:25:26.520 - 00:25:31.504, Speaker A: You're asking if the amount of work will prohibit it might be off chain.
00:25:31.552 - 00:25:33.400, Speaker D: Like overhead. Off chain.
00:25:34.860 - 00:25:59.664, Speaker A: Overhead off chain, yeah. Generating yeah, that probably would be difficult to implement because in sake of transparency, we're trying to keep everything on chain because it's verifiable. Yeah, I know, but anyway, if you check the that's a good point, because I want to say something about it here.
00:25:59.664 - 00:26:07.650, Speaker A: It says lossless in a lossless way. The strategy is right there. That might not be the case.
00:26:07.650 - 00:26:18.960, Speaker A: If you come tomorrow and say, hey, Faku, I have this strategy, maybe it can lose money. Okay, let's find a way. Let's find a way to hedge the strategy.
00:26:18.960 - 00:26:31.050, Speaker A: Let's find a way to do it experimental, so if it has off chain calculations, let's check the case. That way it's on a case by case basis. It's okay, let's check it.
00:26:31.050 - 00:26:35.370, Speaker A: We're super open about it. So yeah, bring it on.
00:26:41.600 - 00:26:49.632, Speaker C: You mentioned this due diligence and this whole process. I guess that there is some discussion happening in this process.
00:26:49.766 - 00:26:50.752, Speaker A: Is it also public?
00:26:50.806 - 00:26:55.490, Speaker C: So can I look into how other due diligences went?
00:26:57.940 - 00:27:14.836, Speaker A: The discussion is not public because what we're trying to do is to decentralize to also decentralize the liability. So the strategist is not the only person responsible for the safety of the strategy. We as a team are responsible.
00:27:14.836 - 00:27:26.216, Speaker A: So the Safe Farming Committee is not a public group. It's been part of a farm post in governance, in urine governance. But the name of the people is not public.
00:27:26.216 - 00:27:40.860, Speaker A: Because of that. We're trying to offload the liability from one person only because the strategy in the end is managing a lot of funds. Maybe for some people it seems that the guy who coded it is responsible, but that's not the case.
00:27:40.860 - 00:27:45.772, Speaker A: We are responsible as a team. So that's why it's not public. But yeah, it's a discussion.
00:27:45.772 - 00:28:02.790, Speaker A: And let's say you wrote a strategy and the Safe Farming Company say, hey, man, it's a no go because of this. For example, the multic has one out of three or two out of three signers and you come and say no. Well, you can explain your case.
00:28:02.790 - 00:28:20.110, Speaker A: We're open when we want to implement strategies. No, but those are and I don't know if this will pass, but super public figures that they have their reputation at stake and I don't know, maybe it can pass.
00:28:23.200 - 00:28:44.740, Speaker B: Is there any communication between or any plan of communication between poles? Let's show, for example, that right now the awards are male or USDC and you have bolt of die that is full, but you don't know how to deploy this die. So there are some strategies like crossbows that are like changing die for USDC and deploying this USDC. In the meantime.
00:28:49.080 - 00:29:07.272, Speaker A: Not that kind like stable for stable. But this is a case of cross vault. The strategy maker ETH die delegate actually deposit ETH with raw die and deposit into the dai vault.
00:29:07.272 - 00:29:20.604, Speaker A: That happens a lot. And there we have another example that's the Ste curve, single side everything, single side deposit is going to deposit into a curve vault. So, yeah, we do that a lot.
00:29:20.604 - 00:29:28.384, Speaker A: A lot, because it's better because we've reused code. In the end we have die and we have a die vault. So we say, okay, let's deposit there.
00:29:28.384 - 00:29:41.530, Speaker A: So it's duck fooding also. So yeah, that's a good point. That's it.
00:29:41.530 - 00:30:00.720, Speaker A: Thanks a lot. Thanks a lot, guys. Um.
