00:00:08.490 - 00:00:36.790, Speaker A: Hello, everyone. Hey, guys, thanks for thanks for making your way down. I'm Jazz. I'm from Ren Labs. And today I'll be talking to you. Yes, one fan a bit about our learnings over the years working at Ren and our shift from the protocol side to the application side. We'll be going through some user experience, things that we've learned specifically with regards to cross chain.
00:00:36.790 - 00:01:14.610, Speaker A: Yeah, let's get started. And before we start, actually, can we get a quick show of hands as to who has used a cross chain application before? Okay, cool. And keep your hands raised if the experience you had while using that application is seamless to the point where you'd recommend it to your retail friends to use and wouldn't have to. Yes, that's what I thought. Yeah. So let's get started. I think these points might be useful for some of you guys, hopefully.
00:01:14.610 - 00:01:43.214, Speaker A: Sorry, I forgot I had to press a button. So we'll start with a brief history lesson on the Internet. Very brief. Yes. So in the early days, back in the around the think, the Internet was primarily used for military purposes. There were a bunch of fragmented networks, all disconnected. They communicated from point A to point B, but there wasn't much intercommunication between them.
00:01:43.214 - 00:02:23.690, Speaker A: So this was before the Internet was called the Internet. That changed when TCP IP was introduced. Communications protocol about a decade or so later, which all of these networks had to conform to in order to interoperate. And this really opened the Internet up to all kinds of use cases that we see today. And we're at a similar sort of place with blockchains up until recently, we see Bitcoin, ethereum, avalanche. All of these independent blockchains up until recently had no real communication between them. And over the last couple years, we've started seeing some approaches that are trying to fix this.
00:02:23.690 - 00:03:01.778, Speaker A: So different kinds of solutions. Some are cross chain messaging services, others at Ren, we have kind of like a central hub which connects to all of these blockchains and brings them all together. There are approaches like IBC, which is like a protocol standard that all of these blockchains have to conform to. They all have their trade offs, but they also all have pretty similar user experience when you interact with them. So we'll just go over a simple example of trading two assets, bitcoin and GMT. So Bitcoin, obviously on the Bitcoin blockchain, GMT is stepan. So that's on solana.
00:03:01.778 - 00:03:28.510, Speaker A: So the current user experience, step one, you send Bitcoin to an address. Step two, receive GMT on Solana. I wish. There are a few steps missing here, so let's break that down a bit. So first you need to traverse the Internet to find a bridge that has this pair. I think it'd be unlikely to even find a bridge that has this pair, so you might need to split it up into multiple trades. But for the purposes of this example, let's assume such a pair exists.
00:03:28.510 - 00:04:17.440, Speaker A: Next step, you send the bitcoin to an address that's given by the cross chain protocol, and then you have to wait for some amount of confirmations. In the case of Bitcoin, that's usually six confirmations, which is like ten minutes each. So an hour or so, twiddle your thumbs for a bit, and then you make sure you have a salana wallet, because some of these crosschain applications require you to submit a transaction on the receiving blockchain in order to receive your asset. If you don't, you install one and then you make sure you have enough solana for gas. Even though the trade you're doing doesn't involve solana, you need to have sol in your wallet, which is convenient. If you don't, you fund your solana address from another account. Maybe you have to go to a centralized exchange to convert some fiat into solana.
00:04:17.440 - 00:04:43.696, Speaker A: Most important step pray to the cross chain gods that everything works as expected and that's about it. Then you receive your GMT on solana if you're lucky. DeFi gods cross chain gods. There are fair few gods in our space. Vitalik. So some of the pain points in that process, let's go through them. You might have noticed a few as we were going through.
00:04:43.696 - 00:05:17.480, Speaker A: So the first one is the user needs multiple wallets generally when they're doing crosschain trading, cross chain anything, really. This was a screenshot of my browser. Don't ask why I have Terror Explorer still, but yeah, it's not great for new users when they have to you're showing them an application and they have to first go to the Google Web Store or use a different browser to install a new wallet. It's overall not great. Next pain point is gas. This is kind of self explanatory. Everyone has spoken about this already today, I'm sure, in the user experience talks.
00:05:17.480 - 00:05:54.580, Speaker A: So the two problems with gas are or the main problem is that you have to interact with an asset that you might not even be wanting to deal with. So it's lana in the example, and that's even worse in the cross chain space when there are a bunch of different native chains you're dealing with. This was some NFT drop. I think it costed more to receive. Yeah, questionable choice. And then we have confirmations. As mentioned, you usually have to wait for some amount of time before you receive your assets.
00:05:54.580 - 00:06:33.056, Speaker A: And there are some ways you can improve this, which we'll get into a bit later. Then there's the onboarding process. So how does a user get bitcoin or whatever asset they want to play with into their wallet? So there's a fiat aspect of onboarding, but then there's also the onboarding of new concepts. So things like impermanent loss or liquidity pools or AMMS, these kinds of concepts. A user, sorry, generally has to get a good idea of what they mean so they don't lose money. And then lastly, we have the concept of fragmentation. So this is also kind of broken up into two different parts.
00:06:33.056 - 00:07:06.504, Speaker A: There's the liquidity aspect. So liquidity can be fragmented across a bunch of different blockchains. For example, at Ren we support Bitcoin, and with every new layer one that we support, we need to deploy a wrapped representation of this Bitcoin on that chain. So that means you have a new pool suddenly for this chain that might be drawing liquidity away from the other pools. You need to provide incentives for this pool to get people to use it so that there's sufficient liquidity. And overall, it's not really sustainable the more chains you support. And then the second component of fragmentation is just generally fragmentation of action.
00:07:06.504 - 00:07:52.502, Speaker A: So you usually have to interact with a bunch of different applications. You have to jump through certain hoops in order to do what you're doing. So it's not usually the case that you can do all your tasks from one spot. So how can we fix this? So I'll give you a quick overview of how catalog works, which is a Dex we're working on, which is built on top of the Ren protocol. So Ren itself is a layer one blockchain, and in the coming months, we'll be introducing support for EVM. So you can deploy your applications that are already on Ethereum and other blockchains onto the Ren protocol itself. And the nice thing about doing that is you immediately get access to all of the assets that Ren supports.
00:07:52.502 - 00:08:47.840, Speaker A: So inside your smart contracts, you can imagine you can suddenly interact with Bitcoin and these sorts of assets. So catalog is the first application, first example of an application being deployed onto the Ren layer one. And it's a decentralized exchange with a few key features, the first of which being it has a single wallet. One of our key values, I guess, at catalog is to have sorry, wrong slide. Is to replicate sort of the centralized exchange experience. So the way the catalog wallet works is the user deposits funds into their account and they can do their trading, they can do lending whatever they want, and then they can withdraw their funds once they're done. So, kind of dissimilar to uniswap and traditional DEXes, more like a centralized exchange experience, but the difference being it's all trustless.
00:08:47.840 - 00:09:26.316, Speaker A: So with catalog, you can deposit your Bitcoin, Ethereum, all sorts of assets and then have them all in the same place. Secondly, we abstract all of the gas cost away for the user, so this gets abstracted. So the catalog wallet that I was just referring to, the user interacts with it using their Web three signature. So any wallet that they currently use, whether it's MetaMask or trust or something else, they can use that to control their catalog account. So they just have to sign messages in order to trade or to do any sort of actions using their funds inside catalog. So what that means is they don't have to pay gas. They don't have to deal with any sort of new assets that are irrelevant.
00:09:26.316 - 00:10:11.404, Speaker A: They don't have to pay additional gas fees. That just gets abstracted away. Either the protocol pays those fees and they get deferred to the protocol. It gets subsidized by the fees that the protocol is earning, or it gets hidden away into the price of the assets you're receiving. Thirdly, we have reduced confirmations. So instead of having to wait six confirmations for a trade that might only be a $10 bitcoin trade, you can just wait for one or two confirmations and be pretty confident that the user isn't trying to do a double spend, because if they were, I think they'd be trying to go for a bit more than that. And generally, you can cap this amount that you're reducing confirmations for at the block reward for the blockchain.
00:10:11.404 - 00:10:53.670, Speaker A: So ethereum, you might have a reward for mining a block, and you can cap this amount at that amount. You can cap the amount that they can trade with reduced confirmations at that block reward. So it's actually, if they're receiving more by mining a block, then they'll just go do that instead of double spending on your exchange. And then, fourth, we have a fiat onramp, which is a simple way for the user to onboard bitcoin and other sorts of assets into their catalog account. We use BankSA for this service. It's pretty nice. They have to KYC to use it, but there's no reason not to let the user go through that process if they want to get some funds into their catalog account instead of having to leave the exchange to go to a different sort of service.
00:10:53.670 - 00:11:51.036, Speaker A: And then, finally, we extend liquidity from all of the different blockchains. So one thing we do at catalog is we don't try and recreate any liquidity pools that already exist on other chains. For example, if there's an ETH to Ape pool that exists on uniswap, on Ethereum and that has all the liquidity, we won't try and recreate a ETH to Ape pool on catalog. It doesn't make sense to try and pull liquidity away from other pools that are already doing their job. Instead, what we do is we have a concept of cross chain liquidity pools inside catalog. So these are pools like BTC to ETH or BTC to AVAX, BTC to Sol, the kinds of pairs that you don't see on native DEXs, and we use them combined with Dex pools that are on other exchanges to allow for some pretty cool trades. So a user could go from BTC to Ape, and all they have to do is send their bitcoin to catalog.
00:11:51.036 - 00:12:44.516, Speaker A: They have to deposit it, submit a trade, and catalog will break that up into two components into the catalog side. So the side of the trade that's being executed on catalog and the portion of the trade being executed on uniswap. And this is made possible by catalog being deployed on RenVM because it allows catalog to guarantee that the trade either gets fully executed or not executed at all. So catalog can execute the second side of the trade, which is, in this case, die to Ethereum on Uniswap and wait for that to be confirmed before doing the BTC to ETH side on catalog so the user is not stuck with any kind of middle asset in between. And then finally we have an exclusive access form for you guys. If you want to, you can fill that out. You may or may not get access to catalog we'll be launching in the next few months.
00:12:44.516 - 00:13:15.676, Speaker A: So keep an eye on that. And then we'll have hopefully we can get some feedback from you all and inspire some other projects to take some of these UX concerns in crosschain pretty seriously. Yeah, that's about it. Thank you, guys. Yes. Permission settings are wrong. Okay, maybe take a photo of that for now and we'll get my man in the corner to fix that up.
00:13:15.676 - 00:13:38.934, Speaker A: It's actually my fault, but I'm going to blame it on him. Any other? Yes. All right, thank you. How do you guarantee the security with so little? So you had this chart with two.
00:13:38.972 - 00:13:41.110, Speaker B: Bars and five bars or six.
00:13:41.260 - 00:14:11.562, Speaker A: Yeah. How do you guarantee the security? This way? Yeah. So maybe I didn't explain this too well. So if a user is doing a trade that's 100 bitcoin, they want to convert that to Ape or whatever, then you will wait for the full confirmations. If there's only one trade happening throughout the catalog network, there's only a single trade and it's for a small amount, then you can sort of reduce the amount of confirmations you wait for. Additionally, that's one thing you could do. You can also offload that risk to someone else who's willing to take on that risk, and they can get a fee for the trade.
00:14:11.562 - 00:14:20.050, Speaker A: So if they're happy to wait for four confirmations instead of six, they can do that. They can take on the last two confirmation risks themselves, and then they can get paid for that.
00:14:20.200 - 00:14:21.140, Speaker B: Thank you.
00:14:28.180 - 00:14:45.290, Speaker A: Do you issue your own synthetic assets? Do you issue your own synthetic assets or you use other synthetic assets? We leverage the assets that are deployed on RenVM. So Ren native assets, catalog doesn't have its own synthetic assets. Okay.
00:14:49.100 - 00:15:03.292, Speaker C: I was going to ask if I'm going between, say, optimism and Arbitrum, is that a potential use case where I can use this? Then what's the sort of the trust profile there? Do I have to trust something or is it a trustless solution or what does that look like?
00:15:03.426 - 00:15:24.100, Speaker A: You have to trust that RenVM is trustless. There is a trust in a decentralized network that we've been running for the last five years. It's a cross chain network, and that's about it. You can have a look at the contracts on either chain that will be interacted with in the process, but that's about the level of trust you need to have. There's no single entity that you need to trust throughout.
00:15:25.960 - 00:15:44.220, Speaker B: So I haven't been following up with the Ren project that much, but like, maybe six or nine months ago when I checked, your node was still not open source. It was kind of gray sourced or portions of it was open source. Are you guys going to open source the entire project before you release this?
00:15:44.370 - 00:16:15.028, Speaker A: Yes, we are. So we have a roadmap that will be released as soon as we're back from this trip, which will include timelines for things like open sourcing. The reason we haven't been completely open source, so contracts and things are open source. The node itself hasn't been that's for security reasons, which I think, in my opinion, has paid dividends given we haven't been hacked. Probably the one of few cross chain protocols that hasn't. But you're right, that will be open source before the release. That's because you guys were running a.
00:16:15.034 - 00:16:21.610, Speaker B: Lot of MPC computations that I guess were more you guys were not 100% sure about it.
00:16:24.380 - 00:16:45.410, Speaker A: Yeah. So two reasons. One was just closed source. One was because the MPC protocol that we had developed in house was our own and we didn't want projects to know, just ripping that and claiming it as their own. But I think we've sort of passed that now, so we're happy to release that to the public.
00:16:48.180 - 00:16:55.664, Speaker D: Two questions. First is, could you just go back to the slide where you listed all the steps again of the current? UX? Yeah.
00:16:55.702 - 00:16:57.188, Speaker A: This 01:00 A.m. I missing something.
00:16:57.274 - 00:17:16.760, Speaker D: No, that's it. I just wanted to take a photo of this. I didn't sure. And then second one was, how do you select the decks in your routing? You mentioned uniswap, but what if there's a cheaper Dex? Or do you operate similarly to matcha?
00:17:17.340 - 00:17:29.724, Speaker A: Yeah, so it is aggregating through one inch to begin with. We'll support other aggregators in the future, so hopefully one inch is picking the cheapest option. But as the catalog relay is developed, there'll be more aggregators that we support. Okay.
00:17:29.762 - 00:17:32.828, Speaker D: Because I've heard Cowswap was the cheapest, for example.
00:17:32.914 - 00:17:34.830, Speaker A: Yeah, we'll look into that. Okay.
00:17:35.600 - 00:17:37.230, Speaker D: All right, thanks, man.
00:17:41.280 - 00:17:47.170, Speaker A: Is there any other question? No. Okay, thank you. Thank you very much.
