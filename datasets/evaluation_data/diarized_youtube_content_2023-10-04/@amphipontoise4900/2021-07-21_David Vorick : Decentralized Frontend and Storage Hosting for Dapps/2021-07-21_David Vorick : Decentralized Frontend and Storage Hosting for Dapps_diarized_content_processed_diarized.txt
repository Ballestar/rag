00:00:33.530 - 00:01:09.290, Speaker A: Okay. Hello, everyone. Thank you for coming to the talk. Today I'm going to be talking about Skynet, and in particular on a new product that we're building to help decentralized front ends targeted at DeFi, but just in general, front ends within the crypto ecosystem. So before we dive into that, I wanted to give some background about myself. So I'm the co founder and CEO of Skynet Labs. We built the Scia blockchain starting in 2014, and then in 2019, we came up with a product called Skynet.
00:01:09.290 - 00:01:49.766, Speaker A: We've been around for a long time. I've been in blockchain since 2011, mostly since about 2013. I've mostly been dialed in on decentralized storage. And then one of the things that I tend to focus on is points of failure. So kind of asking the question, what can go wrong? So that's just a little bit of background about me. Okay, so before we go into what we can do for decentralized ecosystem, I want to talk a little bit more about what Skynet is. And kind of the base layer of Skynet is this immutable content.
00:01:49.766 - 00:02:14.910, Speaker A: So you upload files, you get these hash links. These links are merkel trees of the content data. So after you download the file, if you have the link, you can verify that you got what you're expecting. And it's good for all types of data. So rather than open it in the browser just to keep things smooth, I just took a bunch of screenshots. You'll have to trust me that it works very fast. It's under a second for every single query.
00:02:14.910 - 00:02:48.762, Speaker A: But this first link here is an image. The second link is a 4K movie that streams. And so whether you're talking about a little 80 byte JSON file or like a 20 gigabyte movie file, skynet can handle all sorts of data. It's supported by ENS and MetaMask. That's pretty recent. And then just in general, you can kind of think of Skynet's immutable content layer as analogous to IPFS. And then kind of on the back end, it does things pretty differently, but the user experience is very similar.
00:02:48.762 - 00:03:13.374, Speaker A: So the first link is just my profile picture. This is me on Twitter. Then the second link, this is a screenshot of a movie playing. Obviously, screenshots don't have motion, but this is the movie Tears of Steel, which is an open source film. So it's free to share and distribute and present. And so it's one of my favorites. This is a six gigabyte file with 100 megabit per second bitrate.
00:03:13.374 - 00:03:40.714, Speaker A: It streams from Skynet just fine on the back end, rather than being like a peer to peer DHT routing solution. The way IPFS is we use the SIA blockchain. They're a bunch of storage contracts. You put data on hosts. Those hosts, you pay the hosts so they get revenue. They also put up collateral so they can be slashed if they don't hold the data. And then we don't just give files to one host, we erase your code.
00:03:40.714 - 00:04:14.530, Speaker A: It we spread it out. So the typical scheme is ten of 30. That means you put it on 30 different hosts, and any ten of those hosts are sufficient to recover the file. It doesn't matter which ten. And so this is kind of analogous to Filecoin, although I really feel like Filecoin is kind of behind the curve on this. So we've been doing this since 2015 and we've really, over the past six years, really worked on performance and reliability and stability in the repairing code. This stuff is kind of our core competency.
00:04:14.530 - 00:04:37.750, Speaker A: So when you combine these two things together, you can use Skynet. I already showed you the images. You can also do web pages, just like with IPFS, that can include things like web apps. And then we also support DNS links. So I've got two links here. The first one is you can see a base 32 version of a hash sciasky net. Scienceky net is the Skynet portal.
00:04:37.750 - 00:04:54.910, Speaker A: You can sub out that tail for any other Skynet portal. It'll load the same exact thing. So the first link looks like this. It's just a landing page. It'll collect an email. The email goes to a centralized server, so that's a centralized component. But the web page itself is loading from a decentralized CDN.
00:04:54.910 - 00:05:36.826, Speaker A: And then the second one, this is our DNS link. This is the dashboard that we use to see how our servers are doing, see if things are running, see what's low on balance, how the performance metrics are doing. So just two things you can do. Okay? On top of that, we have mutable storage. Kind of analogous to IPNs. You can link a public key to essentially an immutable data. So you get a public key, you can share that link with your friends and then as you update the content under it, when they go to that link, it'll load the latest thing you've posted.
00:05:36.826 - 00:06:18.090, Speaker A: So this is useful, for example, like blogs. If you are doing immutable storage, you give someone a link to your blog. It'll never change if you give them the mutable link or what we call a resolver link. When you add a new blog post, all of your friends can see that new blog post using the original link. And so, again, this is analogous to IPNs, and it's useful not just for things like blogs, but also for storing just general rich state for a web application. It allows you to build interesting things without needing any sort of backend. So your backend is just the Skynet network.
00:06:18.090 - 00:07:01.766, Speaker A: So when you deploy an application on Skynet, it has access to the APIs that allow it to the application, can talk to Skynet and can upload it, can download, it can use these mutable resolver links. And so I'm going to show you two examples of applications that people have built. So our default uploader on Skynet is not encrypted someone made a web application that's basically the same thing as the uploader, except it has encryption. And so if you upload a file here, you will get back an encrypted link that you can share with your friends. No one can see what the file is. Even the portal that you uploaded it to doesn't know what you've created and what you've shared. And this is entirely hosted on Skynet.
00:07:01.766 - 00:07:22.986, Speaker A: There is no centralized backend. This whole application exists completely decentralized. You can run your own portal and the whole application will just work, even if the creator disappears. So if you want to play around with it, I put the link up here in nice big text. It's Skysend. HNS. We use handshake for human readable names.
00:07:22.986 - 00:07:36.286, Speaker A: Sciasky. Net. Okay. Another app that I just wanted to showcase is called Note to Self. It's not meant to be a useful app. It's really just to show off the use cases of the mutable storage. So you create a passphrase.
00:07:36.286 - 00:07:53.302, Speaker A: This will be used to derive a public key. So I'm going to put in ECC 1234. Then it'll take me to a note. At the time I took the screenshot, there was no note. So we got to put in a note. I wrote, hello. This app was made using a fully decentralized back end submit.
00:07:53.302 - 00:08:20.818, Speaker A: We saved it opened up a private browser. And then if you want to follow along, you can just go to Note to Self. You can put in the password, ETCC. 1234, all lowercase. And you will see either you'll see the note I put in, or if someone else has already griefed, it has changed the note. You'll see whatever the person changed it to because obviously you guys have the secret key now, so you can manipulate this note. Okay, yeah.
00:08:20.818 - 00:08:47.994, Speaker A: And then here's the link in big text. So we have one more thing to go through before we get to the application to DeFi and decentralized front ends. And this is user accounts. So we've built a technology called MySky. It's actually entirely a web browser technology. So all the primitives that I've described so far, this is built on top of those. Anyone could have come along and made this.
00:08:47.994 - 00:09:23.862, Speaker A: It's a seed based single sign on for all of Skynet. So previously we kind of typed in ECC 1234 instead. What we could have done is we could have logged in with My Sky. When you log in with My Sky, you get a seed, you save it kind of similar to MetaMask, and then you can just automatically log in to all of your applications. So you log into MySky one time, and then when you visit various applications in the Skynet ecosystem, you're just already logged in with all of your user state. And so MySky also adds some nice abstractions for developers. When you want to store and save data, it just gives you nice functions you can use.
00:09:23.862 - 00:09:52.900, Speaker A: Another thing that I'm not going to go into detail today is that it gives you really nice abstractions for sharing data between applications. So, like application A might want to read data from application B. Application B wants to share that data but not give write access. MySky kind of encapsulates all that in really convenient APIs that developers can use to have this common data. But that's not nearly as relevant. So we're going to stop there. Give you final example.
00:09:52.900 - 00:10:12.246, Speaker A: This is a leaderboard that we built for a hackathon that we ran. So you can see right now I'm not logged in. This is in private browsing. Over here we have the MySky login. We come in. When I click login, it says I'm logged out. I can click the sign up button.
00:10:12.246 - 00:10:31.962, Speaker A: I get a seed. I don't know if you can see it on the projector, but there is kind of a grayed out seed in that box. So we can copy the seed, save it somewhere safe. And then we're logged in here. We have a sky profile down in the bottom left. So since it's a new account, it hasn't made one. Sky Profile is one of those data sharing things.
00:10:31.962 - 00:11:02.342, Speaker A: Once you make an avatar, you put a username, all of the applications can go to the sky profile and load that avatar and username. And so you just do it one time on the web ever. And then every application can access that in the future. And this also includes centralized applications. So you don't need to be a fully decentralized application to query the Skynet APIs. Something like GitHub could just drop in some code to query Skynet and pull your avatar down. So we could have like a decentralized gravatar using sky profile today.
00:11:02.342 - 00:11:27.200, Speaker A: And so once you've filled it all out, I won't go through that process. This is kind of what it looks like. You can see my profile, my username. And then this will follow me around on the ecosystem. And then the reason I picked the leaderboard is because if you want to see some of the other applications that have been built using MySky, this leaderboard kind of tracks which things are being used the most. And so you can just explore it around. So here is the link for that.
00:11:27.200 - 00:12:02.860, Speaker A: Okay, so we've gone through all of the primitives that we need to. We can talk about decentralized applications. And so just as a quick recap, we can store immutable data. That immutable data can be applications. The applications have access to APIs. We also have mutable data that allows us to store things like avatars and persistent user state. When you log into MySky from any machine, you get just the previous state, right? So it's this really nice seamless cloud.
00:12:02.860 - 00:12:46.722, Speaker A: And then you kind of can build all this together to build rich social applications which can help us attack problems in DeFi. And specifically, one of the things that I think I've been kind of focused on with DeFi are the centralization around the front ends. So you have things like app Uniswap.org or curve phi. It goes through a centralized DNS server, usually talks to a centralized hosting server, some of them DNS link through to IPFS, most of them don't. And then you have a whole bunch of issues with this, which is like, domains can be seized by the registrar. You have government letters, domains can be hacked.
00:12:46.722 - 00:13:20.914, Speaker A: The dev team can go rogue. The dev team can be forced to make changes or they may have profit incentives to take features away from you or add fees that you don't want. And so as a user, you're really not in control of the DeFi apps that you use. If you're going through these centralized services, some of you might be thinking ENS. And so I want to address that. ENS is not a complete solution. It solves the registrar problem and the DNS problem and it really makes the relationship between the user and the developer, which is a very good step.
00:13:20.914 - 00:14:19.154, Speaker A: So it eliminates points of failure, but not all of them. And so we still have the issues with rogue devs or keys getting lost or misaligned profit motives, or governments sending regulation letters like, you got to start doing KYC, whatever. So if we really want to decentralize the DeFi ecosystem, we need to put the user in the driver's seat, make it so that the user is always the one deciding what code is running on their machine or in their cloud. And so we can use all the stuff we talked about in Skynet earlier to make an app that I've been calling home screen, something that we're debuting today. It is a Skynet app that functions similarly to a smartphone home screen or like a desktop background. And you have all your applications you can click on. These things are fully owned by the user.
00:14:19.154 - 00:14:52.414, Speaker A: When you click on an application, it's not loading the application from say, app Uniswap.org, but instead it's looking at your Skynet storage, looking at a saved version of the application, pulling that from Skynet and loading that. And so that puts the user in control. Apps can be updated at any time. You can downgrade at any time. So we will keep a version history as you go from uniswap two to three. Or if there are like UI changes or UX changes, you can revert any of them just by going to a previous version of the front end that was rolled out.
00:14:52.414 - 00:15:27.558, Speaker A: And so we have a screenshot of what this might look like. Everything else I've showed you today was like real live mainnet and you can do it. Now, this is just a mock, it's still in alpha. But here's an example of a home screen with a bunch of apps on it. And you notice that uniswap is missing from this one. So what we can do is Uniswap can actually add a button that says Add to home screen. They can put it on their README or they can put it on their landing page, or you could even put it on something like CoinGecko or CoinMarketCap.
00:15:27.558 - 00:15:59.926, Speaker A: And it's just the simple button that a user can click. You get a pop up that asks, are you sure you want to install Uniswap? The user says yes and then boom. We have Uniswap in our home screen app. And so the real advantage of building something like this is, again, the user is the one in the driver's seat. Oh yeah. So if you then click on Uniswap, it'll take you to the Uniswap front end. You can see in the URL bar that's a hash link.
00:15:59.926 - 00:16:25.920, Speaker A: So it's specifically loading an exact version of Uniswap. It's not talking to ENS, it's not talking to DNS or any part. There's no part of your chain, your supply chain that is interfering with what application you're loading. The user is fully in control. So if you're excited about this, you want to get on the beta list, you can go to homescreen. HNS, sciasky. Net.
00:16:25.920 - 00:17:13.182, Speaker A: If you're a developer and you're interested in having your app support home screen, we also have information for you at this page. So I invite you guys to come and check it out. And then finally the point is to put the user in control and take out as much interference as possible, especially if things start to get more intense. On the regulatory side, we want to make sure that the users have the power to do what they think is right. So I got one more slide that I just want to talk about, skynet and the decentralization I want to cover the portal model. So you saw in all these links we have Sciasky net. Sciasky is the portal that we run.
00:17:13.182 - 00:17:44.802, Speaker A: It's kind of the official and the biggest portal, but the portal is open source infrastructure. Every piece of code that we run to make our portal work is available in a GitHub repo. Anyone can run it. It has well documented setup scripts, it has upgrade scripts. We've really been working on making the versioning as smooth and as clean as possible. It's permissionless in the sense that you don't need to talk to other portals to run. You can open up your portal in a vacuum.
00:17:44.802 - 00:18:28.466, Speaker A: You can be on a private network. It will have access to the full Skynet network. It's also stateless something that we've worked very hard to achieve, which means if a user switches portals, even mid session, like saya sky goes down mid session, you switch over to SkyPortal XYZ, which is a community operated portal. Everything will still be intact. Everything will run just as fast as it did on sky. We've worked very hard to not be dependent on a caching layer or like a local stateful database to make things fast. Everything goes directly to the Skynet network and this allows us to do things like, yeah, mid session, you can switch portals and the user might not even notice.
00:18:28.466 - 00:19:25.218, Speaker A: And then finally something that I think just in general, the whole crypto ecosystem could use more of every single API on the Skynet portal responds with cryptographic proofs. So if you do like a range request, you get a merkel proof that the data in the range is correct. If you do like a pub key, lookup, it'll give you the signature from the pub key. And then there are a couple other API queries that you can make that will give you proofs that the data you're getting is correct. So if you have a Verifier engine in your web browser, it can verify every single request coming from the portal. You do not need to trust the portal you are talking to, which I think is a big step up and something that it's a standard we like holding ourselves to. Okay, so if you want to learn more, there's a home screen URL.
00:19:25.218 - 00:19:58.020, Speaker A: We also have Sciasguy net docs, or you can email us at hello@scienceguy.net. We're pretty responsive. We have a couple of people who make sure that every email gets read and responded to. And then if you want to get involved with our community, probably the most active place is our discord, discord GG, Skynet Labs. And then we also have our GitHub repo, our website, and a Twitter handle. Okay, so I believe that wraps up everything I had, so I'm happy to take questions.
00:20:02.550 - 00:20:06.710, Speaker B: Thanks for the presentation. Is it possible to remove a data from the Skynet?
00:20:07.290 - 00:20:46.610, Speaker A: So the way that data works on Skynet is through a pinning model. When you pin data to Skynet, basically you're paying hosts to keep the data. Those contracts have a time duration. If you're the owner of the contracts, you can delete data from the contract, but at any time, someone else, if they get the data, can repin it. And then you don't have control over pulling that data off of Skynet. So it's kind of a yes, but if someone else is pinning all of your data, then you can't make it disappear. Just wait for the microphone.
00:20:47.110 - 00:21:08.466, Speaker C: Impressed by all the different layers that you guys have kind of built out for the usability aspect of it. But how do you see this kind of going from here as far as interoperability with IPFS and all these other systems? How do you go from all these new silos getting created for similar solutions versus something that's more palatable for the end users?
00:21:08.578 - 00:22:06.778, Speaker A: Yeah, so I think at the end of the day, the end user doesn't care what protocol they're using, whether it's http one or http two or now http three. And I think Skynet, IPFS, Rweave, all these other things are going to be in that same bucket where when they're working well, users aren't going to care what it's going to be on. And really, it's going to be about the devs. And so I think what we want is to get all of these APIs to the place where they're all Verifiable. You have this engine in the browser that's out of scope of today's talk, but we are working on this kind of kernel that can be arbitrarily extended to add any set of APIs and also do the verification of those APIs. And so then it's really in the control of the application developer to decide whether they want to do Skynet IVFs, Rweave, a mix of both, or like, if they want to add support for Cosmos, they can write the verification module for Cosmos. They don't even need to talk to us.
00:22:06.778 - 00:22:30.046, Speaker A: That's not deployed today. That's still kind of in the conceptual stage. But I see this moving to a place where the user is not really thinking about it, and just all these APIs are supported on the back end at, like, I think of it like an operating system kernel. You don't really think about what drivers your operating system has or what the file system is, but yet all the applications make use of it continuously.
00:22:30.158 - 00:22:33.780, Speaker C: How does your economic model differ from filecoin at this point?
00:22:35.510 - 00:23:18.174, Speaker A: Yeah, so the major thing is that everything on the Sci network is paid for. So every request, every upload, every download goes over payment channels. Actually, when you download a file, it does something like 500 payment channel transactions, and it just pays a whole bunch of hosts for all the data. It's fetching different pieces from different hosts. And the way that hits the end user is that Sciasky net operates on a freemium model. So if you're a user who's never heard of it and you haven't signed up, you get some speed. And then as the Internet kind of fills out and more people are making use of Skynet, you can upgrade to Sciasky premium.
00:23:18.174 - 00:24:07.742, Speaker A: You'll get faster speeds, and then Sciasky pays its bills. It covers the cost of the free users with the premium users. Would you mind talking about some of the traction numbers that you're seeing and also comps towards how hosting files on CNN compares to centralized file storage and then maybe where you see it going in the future? Yeah. So in terms of traction numbers, the file storage end of things is doing extremely well. I think in the month of June, we had something like a million unique visitors, 1.1 million unique visitors accessing the Scia network or the Skynet network. Most of it is for file sharing and not even the illegal type of file sharing.
00:24:07.742 - 00:24:35.100, Speaker A: It's just like on the Internet today. It's a pain in the ass to send if you have a PDF or a log file and you need to send it to a friend. Skynet works really well for doing that. This PDF, I don't know if you saw me before the talk started. I was downloading it from Skynet because that was the most efficient way I had to send it from my phone to this laptop. It's not my laptop. And so we're seeing a lot of that.
00:24:35.100 - 00:25:31.550, Speaker A: We also have some companies using Skynet as an actual CDN. So I don't know if I can share the name, but yeah, they have a bunch of users who browse web pages, and then some of the media assets on those web pages are coming directly from Skynet. And then your final question was the company comparing it to using a centralized yeah. So Skynet is an open marketplace, or I should say SIA is an open marketplace that makes the prices extremely competitive. It's about, I think at the moment, three to $4 per terabyte per month for storage bandwidth is about one dollars per terabyte. So the bandwidth is just absurdly cheap. And then the performance, which I think is really like the key place that we shine relative to all other decentralized storage projects.
00:25:31.550 - 00:25:49.730, Speaker A: The median response time for a 1 MB download, I believe is around 300 milliseconds. And that's behind the cache layer. So if you hit the cache layer, it'll be more like 30, 40 milliseconds, but with a cache miss again. Yeah, like 300 milliseconds.
00:25:51.910 - 00:26:03.400, Speaker B: So, two more questions, in fact. So, one in the freemium model, following back to my previous first question in the freemium model, what's the guarantee that the data will stay?
00:26:03.930 - 00:26:33.890, Speaker A: Yeah. So if you are using a portal that is not yours at this point in time, you're depending on the portal to keep the data pinned for you. Scia sky makes a public commitment to holding files for 90 days, a minimum of 90 days. We've actually never deleted files. So at least up till now, everyone's had permanent storage because it's been financially sustainable. And then if you run your own portal, you can get those pinning guarantees. You have the control yourself.
00:26:33.890 - 00:26:46.578, Speaker A: We're also working on a technology in the background. It's not super heavily requested, so it hasn't been super prioritized, but we can give you control over your own file contracts on the Scion network.
00:26:46.674 - 00:27:16.640, Speaker B: Okay, thanks. And the second is about the Verifiability. I was using Skynet like half a year ago. I mean, the Skynet portal uploading some website and playing with it, and I was not using any private key. So you mentioned, I mean, some new feature. How does it work? Who is owning the private key and who is signing it? Who's signing the data? So the question is less like, how the verification works and who is yeah.
00:27:17.890 - 00:28:00.234, Speaker A: When you upload data to so if you're using the Immutable part of Skynet, it's all just hash based. Right. And so you upload data, you get a hash back, and you share that hash with friends. They can just verify that what they're downloading matches the hash. If you didn't put in a seed and you're using the so if you're using the mutable or like the resolver part, of Skynet, somewhere there's a seed. Usually the application develop like usually the application either uses sky ID MySky, or it straight up asks you for a password, and it uses one of those three options to generate the public key that it then uses to sign the data. So if you didn't put in any seed at all, it probably means you're using the immutable part of the storage.
00:28:00.362 - 00:28:01.840, Speaker B: Oh, I see. Okay, thanks.
00:28:06.290 - 00:29:02.458, Speaker A: I'm wondering what would happen if someone were to post some illegal content on Skynet. Do you guys have some blacklist or are you not reliable for it? Yeah, so it is a decentralized network. We can't go and take things down from, saya, however we run, saya, sky net, and we can control what we serve. And so we do have a block list, and we're working on a malware filter that will just scan things for malware and automatically block them if it detects malware. And so if you're using a public portal, it's going to be the portal operator's choice, what they either allow or don't allow. And then, of course, if you disagree with our policies, for example, most of our blocked content is copyright infringement. If you disagree with that, you're free to run your own portal.
00:29:02.458 - 00:29:19.330, Speaker A: All the code is open source. Okay, it looks like we're done with questions. Thank you very much. I hope it was interesting.
00:29:31.460 - 00:29:39.630, Speaker C: What do you see as the biggest adoption, not just finance on any other? Yeah.
