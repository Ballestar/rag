00:00:00.250 - 00:00:40.730, Speaker A: Here? Yeah. Can you see my screen? Right? Yes, we can see your screen and it looks great. All right, awesome. Yeah. So I'm going to present on how protocol design affects searcher strategies. And this year the avalanche network had a few changes to the core protocol. Going to discuss what happened and how that affected Me researchers and vice versa.
00:00:40.730 - 00:02:07.240, Speaker A: Firstly, just for a little bit of history. Sure. A lot of the audience is aware before the MEB geth was big and network latency optimization was quite important and it isn't as much now on Ethereum, but it still is on other networks. I'm going to be focusing on this on avalanche because it is still quite important and I'll discuss it in the presentation. So yeah, I'm going to talk about how the changes in the protocol design of avalanche drove searchers to change their methods to minimize network latency. Primarily for both receiving what I refer to as target transactions. These are usually messages because depending on the messaging protocol or the Arbitrage that can be created, like if the Arbitrage is at the top of the block or background, I'm generalizing the same message there.
00:02:07.240 - 00:03:43.280, Speaker A: Yeah, this is what we're going to be doing. This is obviously like a very informal talk. What I am trying to loosely do is lay out this is hand wavy, but sort of this framework for how messages are gossiped on these peer to peer networks or like message propagation. And it's actually pretty interesting. It's sort of similar when I was researching this. It's sort of similar to how you it's sort of intuitive to how an infectious disease disease spreads because if you view like a pending transaction as I guess, a disease that's spread by the nodes on the peer to peer network in this discussion, these are some assumptions I'm going to make. The first one is a really big one because GeoDistribution and network latency, et cetera, are a very big part of searchers operations.
00:03:43.280 - 00:05:02.848, Speaker A: But that doesn't really change based on the protocol or with my simplifying assumptions, that doesn't change in this model. And then for certain liveness and ordering guarantees, I'm going to assume that two thirds plus one of validators are honest. And that's safe to say because everything falls apart on a lot of these networks. That's not true. And then this last one is sort of just like something relatively minor, is that we're going to assume that nodes validators on the network aren't say like Ethermind, like running their own searchers, they're not running the default client here. Yeah. So in this next paragraph, this is obviously very informal and very rough.
00:05:02.848 - 00:07:18.910, Speaker A: Just sort of a sketch of model of message propagation or essay, in fact, because I think the comparison sort of makes sense that we're going to be using. So first here, this is this initial state and this initial state, obviously in practice it's usually like infuria an RPC provider or some trader's local node that originates the transaction and then the messaging protocol propagates that message to other nodes on the network. And so I'm going to discuss, I'm going to focus specifically on how different messaging protocols affect the strategies of mev searchers, not in isolation, but that's sort of the core focus of what has changed over avalanche over the past year. So this is first, I'll give you this overview, but before I go into how the protocol changed, I'm going to separate the state of the protocol into three distinct phases. Where the dominant strategy for Optimizing network latency was each of these here. Which is actually quite interesting because, say as compared to ethereum, miners, in theory, don't have any advantage for hearing for optimized network latency. But the avalanche protocol implementation made such an advantage quite explicit in various ways over the past year.
00:07:18.910 - 00:08:28.724, Speaker A: And so it led to these novel strategies for me extraction or this novel layer that wasn't present on Ethereum. And so I'll briefly go through this first one is just maximize your stake avalanche. That was how it was initially when the network launched in early 2021. I think that's about when they launched their smart contract platform. And that's very similar right to other proof of stake networks. And even Ethereum, where the share of any of these should extract is approximately or your advantage is approximately equal to your hash rate or your stake. And then next for the the next phase was they implemented a change called they called Snowman plus plus or Apricot phase four.
00:08:28.724 - 00:09:40.750, Speaker A: And this was due to the result or this was fixed some of the contention issues that the network previously had. And the dominant strategy here was to hear about, sorry, to minimize your network latency, to hear about arbitrage creating transactions. The optimal strategy was to maximize the percentage of nodes you control on the network. And I believe this is very similar to how it works on Ethereum because the default number of peers is I think something like 50. And I believe you gossip to square root of the number of peers you have and to hear about a transaction as early as possible makes sense to be peered with everyone that's copying these transactions. And then this third one was quite interesting. It was due to some consequences of number two.
00:09:40.750 - 00:11:19.530, Speaker A: They only gossip these pending transactions to validating nodes. And this was quite interesting because it introduced the concept of what a lot of people refer to as a private mempool, which to my knowledge is not seen on other blockchain protocols. And so now I'll go through and discuss the setting for each of these strategies and work towards why they became or why they make sense. So, first phase, as I discussed, where the strategy is to maximize your staked AVAX, the probability distribution, which I talked about two slides ago here, this is one of the key differences between each phase is when you decide who to send or who to propagate a value a valuable target message to. It's decided by this probability distribution in the client implementation. And initially one of the key features of Avalanche was that there were no transactions that were propagated across the network, just unconfirmed and confirmed blocks. So the strategy was to maximize the amount of stake you have or one component of the optimal strategy is to maximize stake you have.
00:11:19.530 - 00:12:42.470, Speaker A: And then as soon as you hear about an unconfirmed block in the sense is similar possibly to in some ways tell you an unconfirmed transaction on ethereum where you could try to backrun it which is sort of what the dominant strategy became. One thing that was quite interesting was anyone could propose a block in this network not just validators, which was pretty unique. I'm not aware of other networks where that happens. And another unique feature was that there was a hard coded gas price in the network. So the only thing that mattered really was network latency. To achieve that network latency you just dominic rs to maximize your state. Then in late September there's a funny in late September the protocol changed to Snowman Plus Plus.
00:12:42.470 - 00:14:39.640, Speaker A: And one thing that remained unchanged here was this probability distribution for who you propagate blocks to. But there was two key changes here. One to fix the prior contention issues was that there was now a designated block producer for each block height and you. And to enable this there was now a global mempool and pending transactions were cost across the network. So back running in the same block was now possible which became the dominant strategy. And then another really important thing was that while before it was for this latency advantage you needed a large amount of stake, that was no longer the case because the probability distribution for sampling sorry, for sampling the recipients of pending transactions, it was uniform sampling, but across all peers, not just validating peers. And the dominant strategy now was to launch many many nodes to minimize the expected duration until you'd hear about a target transaction.
00:14:39.640 - 00:16:10.514, Speaker A: And then now also a key change was that rather than creating a block with your background transaction and profiting it to the network which you had done in the prior version, you actually couldn't do that anymore because of the designated block producers. So propagation to the block producer became quite important. And then oh, here's this picture. There's a lot of discussion about this I think in the Avalanche discord and this is just one picture that someone thank you to the person that gave this to me around that time. And what we're visualizing is this last bullet point which was I think Snowman Plus plus released on September 22. And right here you can see people very clearly playing around with launching large quantities of nodes all at the same time, which I thought was quite interesting. And then I don't have the later graph.
00:16:10.514 - 00:17:41.310, Speaker A: But I believe that once this no longer became viable, you can see a drop off in this chart of several hundred nodes, or like 1000. So about half of the nodes on the network, or at least a third from what I was told, were used to accept NEP. And the next phases was, for certain reasons this wasn't people. I think they were saying in the discord they thought that it could have been an attack. But for whatever reason, the protocol then changed. It was actually quite interesting that over a third were third of the nodes were running to attract NAD. And then in this most recent version, after which the protocol hasn't changed, this is what was causing a lot of interest in the community with the private mempool, was that the protocol changed such that for access to this valuable data need to run validating nodes.
00:17:41.310 - 00:18:36.320, Speaker A: Also interestingly sampling is uniform, not weighted by stake. As one might expect. The dominant strategy is now after this to launch many nodes. Instead of accumulating massive amounts of stake, as it was in this first phase, stake now matters less than the quantity of nodes, which is sort of interesting. And other than that, it's largely unchanged from the original form of snowman. Plus plus that's the whole presentation. Thank you.
