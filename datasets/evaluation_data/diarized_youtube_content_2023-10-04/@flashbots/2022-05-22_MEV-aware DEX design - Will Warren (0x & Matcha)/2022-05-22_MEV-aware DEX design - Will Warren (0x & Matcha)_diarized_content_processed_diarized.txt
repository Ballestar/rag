00:00:09.610 - 00:00:19.086, Speaker A: Hi everyone. My name is Will. I'm one of the co founders of Zero X and I'm excited to talk about Mev aware Dex design.
00:00:19.086 - 00:00:40.134, Speaker A: This is like an area that I think our team has been thinking about for a long time. And our learning has come quite a bit from when we were first looking at it with Flash bots and the emergence of really sophisticated Mev bots. So let's dig in.
00:00:40.134 - 00:00:59.230, Speaker A: Okay, so we're going to talk about Mev aware Dex design. Okay, well, what is the Dex? Let's define the dex. So that we need to look at kind of each layer of the Dex stack and understand how can mev be extracted or can we prevent mev from being extracted at each one of these different layers.
00:00:59.230 - 00:01:23.026, Speaker A: Then we're going to just cover the Ethereum fee market and transaction sequencing. So it might be something that you're already familiar with, but we're just going to go through it anyway. Then we're going to talk about how different searchers can capture Mev by engaging in priority Gas auctions.
00:01:23.026 - 00:01:46.960, Speaker A: So before Flashbots existed, the way that Mev was captured was through front running priority gas auctions. And then I'm going to talk about how we designed the third version of Zero X Protocol's Economics to take advantage of this mechanic and to internalize this Mev to the protocol. Then I'm going to just review some of the challenges with the design.
00:01:46.960 - 00:02:01.940, Speaker A: Going to talk about how Flashbots kind of change the entire game with respect to how that model works, and then going to also review EIP 1559 and its impact. Okay. Going to move quickly.
00:02:01.940 - 00:02:23.846, Speaker A: So the way that we think about the deck stack is that there's three layers. There's kind of the application layer, which is where users go to interact or to consume liquidity. There's the kind of trade, execution and routing layer, which is how a user's kind of demand for liquidity is routed to different sources of liquidity.
00:02:23.846 - 00:02:39.738, Speaker A: And this is where we'll dive into that piece deeper. Then finally, at the bottom, there's the settlement layer. And this is kind of the system of smart contracts that is actually settling trades, moving assets between two parties.
00:02:39.738 - 00:03:05.842, Speaker A: And the first few years of the Zerox project, our focus was purely on Zerox Protocol, which is a set of smart contracts that is designed to serve as public exchange infrastructure. It allows you to swap any ERC 27, 21, or 1155 token in a peer to peer manner. And so that's a little bit of important context.
00:03:05.842 - 00:03:30.666, Speaker A: These are kind of the three layers of the stack we think about and kind of the products that we're building around each of the layers. And so what are the things that you can do to address Mev at each one of these layers? At the application layer, there's not that much you can do. Mev is a really complex topic and expecting people that are just getting into the space to understand something like mev is pretty challenging.
00:03:30.666 - 00:04:01.590, Speaker A: The best that we can really do is offer price transparency to our users and we can do some education, but we can really have much more kind of control over mev emission or leakage in the bottom two layers. So in the trade, execution and routing layer, you can do things like add some sources of centralization to the system or elements of centralization. So things like RFQ systems where you kind of sidestep the public mem pool.
00:04:01.590 - 00:04:20.702, Speaker A: You can create things like private transaction pools. So things like Flashbots Protect, you can do things like batching transactions and orders together and internalizing them like cowswap. You can also do things like understand mev and Slippage and kind of factor that into your routing as well.
00:04:20.702 - 00:04:48.674, Speaker A: And then finally, at the settlement layer, this is where there's really an opportunity to capture mev and to bring it back into the system rather than trying to avoid it altogether. And so let's dig in here. Okay, so before going into the main focus, so we're going to talk about the settlement layer, we're going to talk about how Xerox Protocol was looking to internalize and capture mev.
00:04:48.674 - 00:05:07.534, Speaker A: It's a really cool design. I want to dig into it. But before I do that, I have to plug another presentation that I think was really, really good yesterday by my teammate Robert, and he was giving a presentation on how AMM slippage manifests itself in live trading data.
00:05:07.534 - 00:05:32.200, Speaker A: So looking at 700,000 different trades that went through zero X API, let's look at that data, let's measure Slippage, and let's figure out how Sandwich attacks and mevs actually manifest itself in users prices, the price they get on the blockchain rather than the price they see in the user interface. It's a really good blog post, really good research. I would highly recommend giving it a read.
00:05:32.200 - 00:06:02.400, Speaker A: Okay, so again, our focus is going to be on how do we, at the settlement layer, capture mev and internalize it. So first the prerequisites. What is the Ethereum fee market? What is transaction sequencing look like in the Ethereum blockchain? I really like the kind of visualization of a queue of people that are lining up to get onto a bus.
00:06:02.400 - 00:06:08.754, Speaker A: There's a really cool website called Transactionstreet.com. Highly recommend checking it out. It's cool.
00:06:08.754 - 00:06:32.026, Speaker A: You can see the Ethereum and bitcoin mempool in real time. And the pending transaction queue, it gives it a really good conceptual understanding of how the pending transaction pool works. But basically what it comes down to is each one of these people that's waiting to get their transaction mined, they have all taken Ethereum transaction and they have cryptographically signed it.
00:06:32.026 - 00:06:51.898, Speaker A: And one of the things that they put into that transaction is a gas price. And so the way that the Ethereum pending transaction pool works is that if you pay a higher gas price, you're going to skip to the front of the line. And typically you can look at all the other people and what they're bidding.
00:06:51.898 - 00:07:37.244, Speaker A: And if you want to make sure that you're kind of going to get your transaction in first, you might want to kind of look at what the people are paying towards the front of the line. Now when there are mev opportunities in general on the blockchain, the idea of looking at the pending transaction queue and the gas prices that are just kind of the background trading or user activity and the gas prices associated. With that, instead of looking at kind of those background prices, what you're focused on is basically paying whatever you need to pay to capture a juicy ARB opportunity.
00:07:37.244 - 00:08:02.736, Speaker A: So in this diagram here, for example, we have this nice $100 ARB opportunity. Only one person can take advantage of it and it's the person that gets to it first. And there might be two people that see this same opportunity and they might go back and forth by sending Ethereum transactions to the pending transaction pool.
00:08:02.736 - 00:08:32.184, Speaker A: And they might go back and forth bidding up the gas price up until the amount that they're paying the miner in gas approaches the total value of the arbitrage opportunity. So maybe someone's willing to pay $90 to get 100, but they're not going to be willing to pay more than that or more than the ARB opportunity itself. And so this diagram here is a really good visualization of like a real priority gas auction.
00:08:32.184 - 00:08:52.420, Speaker A: It's from the Flash Boys 2.0 White Paper and what you actually see here are these two arbots or two searchers that are going back and forth bidding up the gas price and they're doing it within this 15 2nd Ethereum block time and they're really low, latency going back and forth. They're very aggressive.
00:08:52.420 - 00:09:10.440, Speaker A: And so this is what a priority gas auction looks like. Now the mev space has come an incredibly long way since the Flash Boys 2.0 White Paper which was published in April 2019.
00:09:10.440 - 00:09:41.828, Speaker A: Back at that time, what they found was that most of the mev opportunities that were out there in the world were not being contested by multiple people competing for it. There was simply one person that saw the opportunity and they went and got it and no one challenged them. Despite that fact, the percentage of the mev that was actually paid to the miner at that time was 35% of the total opportunity size.
00:09:41.828 - 00:10:32.950, Speaker A: And the person that found the ARB opportunity or found that mev, they would get to retain a full 65% of it. And as the mev space has matured and more and more kind of our bots have come into this kind of battlefield, the Dark Forest, and are competing with each other back and forth, the percentage of mev that's being paid to these searchers, it's not increasing, it's decreasing rapidly. So as these different searchers come in and compete for different arbitrage opportunities and these opportunities are more and more competitive, the amount that they pay to the miner for that transaction very rapidly approaches almost the entire value of the mev opportunity itself.
00:10:32.950 - 00:11:04.216, Speaker A: And so this is a really cool plot someone on Twitter posted at the end of last year, and on the X axis, so it's a histogram. On the X axis, you can see there is a $100 ARB opportunity. What percentage of that $100 is paid to the miner, and what percentage remaining is kept by the ARB bot? And you can see that 95, 98% of the ARB opportunity is being paid to the miner.
00:11:04.216 - 00:11:10.604, Speaker A: So this is really great for miners. They don't really do anything and they just get paid for all this mev. It sucks for the searchers.
00:11:10.604 - 00:11:35.316, Speaker A: They're doing all sorts of innovative things to find these opportunities and to go after them, and they're basically getting very little of the upside. Okay, so we understand what priority gas auctions are at this point. We understand that when a priority gas auction occurs, you're basically bidding up the gas price, and that's all going to go to the miner.
00:11:35.316 - 00:11:55.136, Speaker A: So we had an idea. Actually, Peter Zeitz, our old teammate, had a brilliant idea. And that was why don't we make a fee that is associated with zero X protocol, such that every time you fill a zero X limit order so this offer to buy or sell an asset for another.
00:11:55.136 - 00:12:19.716, Speaker A: Every time you fill one of these limit orders, you have to pay the protocol the same amount of ETH that you're paying the miner for that transaction. And what's awesome about this is that you're paying the Zero X smart contracts some sum of ETH. And this sum of ETH is going to scale linearly with the gas price.
00:12:19.716 - 00:12:38.892, Speaker A: So if there is no mev present to fill a certain Zero X limit order, meaning that someone's just going in and they're hitting your bid, it's not like your limit order is mispriced or anything. It's just sitting there. If there is no mev present, the gas price will be pretty low.
00:12:38.892 - 00:13:10.580, Speaker A: It'll be baseline. And the protocol fee that Zero X is adding is going to be pretty insignificant, at least back in the 2019, at least if mev is present. And so this limit order or this NFT is thousands of dollars mispriced, well, then these searchers are going to be biding up the gas price as well as the protocol fee, and until that entire kind of mev opportunity has been consumed by these two different fees.
00:13:10.580 - 00:13:34.540, Speaker A: And so when that happens, zero X Protocol gets to actually take 50% of that revenue that the miner would have gotten if the protocol fee didn't exist. And so just to give an idea of how does this all look, under the surface, you have an ethereum transaction. It's just this data structure with these values.
00:13:34.540 - 00:14:01.364, Speaker A: The value field basically says, how much ether are you sending to the recipient of the transaction? There's the gas price and the amount of value that you're sending with the transaction is scaling with the gas price. So you can basically see as you spend more on gas, you're sending more ether to the protocol. All right? And this is a zero X limit order that you're passing in with the call data.
00:14:01.364 - 00:14:26.290, Speaker A: And so if you're not paying this fee, the zero X smart contract will not allow you to fill this limit order. And so now if you look at the percentage of mev and how it's distributed, maybe the searchers are bidding up the gas price and they're only going to end up with a small cut of the total available opportunity. But now, instead of the miner getting 95%, they're getting half of that, and the protocol is getting the other half.
00:14:26.290 - 00:14:43.380, Speaker A: So we launched this back in October 2019, and actually we proposed this idea like, a couple of weeks after Flashboys 2.0 was published. So we were thinking about this along a similar timeline as them.
00:14:43.380 - 00:15:11.352, Speaker A: And what we found is that the protocol fee actually does a pretty good job capturing mev. It's not like a perfect solution, but when a limit order is mispriced, or if someone is using a limit order in uniswap to kind of trade against each other and kind of get an atomic ARB opportunity, instead of going to the miner, it's going to the protocol. And so what you can see here is the distribution of zero X protocol fees.
00:15:11.352 - 00:15:37.572, Speaker A: So, like, how much is a user paying the protocol in dollars to fill one limit order? And then you can see kind of the frequency of these different dollar values on the Y axis. What's crazy is, like, someone paid $15,000 to the miner. They paid $15,000 to the protocol because that was kind of the ARB opportunity that they were going after.
00:15:37.572 - 00:15:53.896, Speaker A: They paid the protocol a really large amount on that trade. And there are a lot of kind of these trades where the protocol was paid a really significant sum. So during the entire time that this protocol fee was active, it accumulated 3700 ETH.
00:15:53.896 - 00:16:11.008, Speaker A: It was just like $4.6 million, which isn't a tremendous amount in the current day and age of crypto, but it was not yield farming, and it was like real pure revenue, which was exciting. Okay, so this was all going really well.
00:16:11.008 - 00:16:17.316, Speaker A: We have this awesome protocol fee. Actually, it's not awesome. There are trade offs, but it's kind of cool and it's working pretty well.
00:16:17.316 - 00:16:42.408, Speaker A: And then Flashbots arrived and Flashbots completely destroyed this model and it couldn't work any longer. And the reason why is because Flashbots caused users to pay their gas fees out of band. So instead of paying a higher gas price to the miner, you're setting the gas price to zero.
00:16:42.408 - 00:17:07.100, Speaker A: And it's actually the call data that you're passing in with the transaction that is going to end up kind of transferring ETH or whatever it is, to the miner. And so there was no way for us to basically have our protocol fee scale with the gas price any longer. And so we kind of saw Flashbots.
00:17:07.100 - 00:17:25.656, Speaker A: The percentage of limit orders that were filled via Flashbots kind of started to creep up and up and up. And it was very clear that, okay, this approach isn't really viable anymore, but maybe there are some things we can learn from it. So as I mentioned, this fee model was not perfect.
00:17:25.656 - 00:17:49.040, Speaker A: There were a number of downsides associated with it. And just to list them off, the fact that you have to have the person filling a limit order pay a protocol fee every single time they fill an order, even if there isn't any mev available to be captured, it sucks. It just creates additional overhead and expense for users in every single transaction.
00:17:49.040 - 00:18:10.208, Speaker A: And that makes things like transferring a three or $4 NFT to your friend or trading like a three or dollars four NFT. Now you're paying twice as much gas to do that and it just doesn't really remain viable. Other downsides, it created like, a worse developer experience.
00:18:10.208 - 00:18:29.784, Speaker A: Now these people that are building their smart contracts and plugging them into Zero X, their smart contracts have to send ETH to our smart contracts. Composability becomes more complex. The user experience also wasn't great because the user has to send us the same amount of ether that they're sending to the miner.
00:18:29.784 - 00:18:47.250, Speaker A: And if the user goes and manually increases the gas price in their wallet and they don't also increase the amount of ether they're sending to the Zero X contract, then it's going to revert. And so we basically have to tell users, don't increase the gas price in your wallet or your trade is going to fail. That's not good.
00:18:47.250 - 00:19:27.070, Speaker A: All right, so we're going to end it here, is it? The full 20 minutes? Okay, we're going to end it here, but I guess we'll just close this out with EIP 1559 introduced a new kind of fee market for ethereum and a new transaction type. Now, fees are broken into two components and there are some interesting things that we could do with EIP 1559 to more precisely target mev and to not cost, not to add overhead when mev is not present. But we'll leave it there.
00:19:27.070 - 00:19:27.930, Speaker A: Thank you.
