00:00:00.970 - 00:00:32.886, Speaker A: We're going to kind of talk about something that's kind of related to the dynamic fee collection. Going to basically talk about how proof of stake security can be related to how much mev you can redistribute. And in some cases quite counterintuitively. You can actually have significantly lower inflation rates and subsidy rates. And yeah, so that's what we've talking about. So first a little background. So mev in a proof of stake world actually becomes a lot more interesting.
00:00:32.886 - 00:01:32.362, Speaker A: So if you were here earlier at the panel, you may have heard Sriram talk about sort of the lack of adaptivity of proof of stake being a sort of problem. And sort of there's this trilemma between proof of stake and proof of work where you sort of need to know the stake distribution before you're able to actually sample how things change. But on the other hand, because you know the stake distribution, you could redistribute mev much more efficiently. And things like mev smoothing, or I guess we wrote this paper before we knew that was the term, so we called it mev redistribution, but is a lot easier to do in a proposer builder separated world. Part of the reason for this is that it just makes the cost of off chain agreements to avoid paying redistributing some of the mev to the rest of stakers significantly higher. Of course, you can't totally remove off chain agreements. I think you can reason about that.
00:01:32.362 - 00:02:34.406, Speaker A: But one of the questions then is how does redistribution change security properties of a proof of stake protocol? And so Abadia and Vemla probably performed the first sort of analysis of this. Actually, I think it was on one of Elaine's slides. That was a smooth curve. But we want to kind of analyze this more formally. So what is mev redistribution, mev smoothing? It's really about redistributing collected mev, some fraction of it per rada to stakers. And while we have no known credible way to prevent off chain agreements for now, in this paper, for this analysis, we sort of assume there exists such a mechanism. There are a bunch of ways to potentially do that, both either directly from how the proposer consensus rules are built or something like eigen layer.
00:02:34.406 - 00:03:53.960, Speaker A: But we just assume that there exists such a system and the real question is to understand how it affects security. So what does security actually mean in this case? Well, actually the last time I gave a talk on this stage was about this point about how do you ensure that stake is sticky in proof of stake. That people who are rational, not honest, not Byzantine, don't move their stake from locked in the network to reallocated to DeFi in some way, shape or form. And this paper showed this sort of non asymptotic phase transition between scenarios where all the stake stays staked versus all the stakes goes to DeFi. And sort of somewhere in the middle where you have this sort of like sort of probabilistic phase transition. Now one question about moving between staking and sort of DeFi like lending is that lending creates mev via liquidations. So this is basically there's a position that's underwater in say, ave or compound and one of the reasons it creates sort of semi V is there's sort of this race to submit the first bundle that follows an Oracle update for that price change you can buy the collateral at a discount and then resell it.
00:03:53.960 - 00:05:22.210, Speaker A: So you might say, okay, well, now that we know that there's this one form of mev, it's actually, in fact, the dominant form of the tail of the distribution dex mev is actually quite small. One question you might ask is how do we relate sort of yields from staking, yields from lending, and sort of the implied yield from mev? And so one thing that's been true since about March of this year is that empirically is that the utilization and lending rates in almost all on chain protocols have been quite correlated to future liquidation volume. It's sort of some type of slight autoregressive model and so we say okay, let's assume this correlation holds because then we can at least sort of reason about how things are going. So now let's just talk about sort of the simplification like what we do to be able to analyze this. So this talk definitely won't get into anything of the proofs we're just going to kind of state the results and give sort of the notation. So proof of stake protocol has a token supply s of k has a block reward r of k plus one this is a reward schedule there is an amount of protocol owned liquidity epsilon of K that is either burned so that means EIP 1559 something of that form or it's protocol owned. It's a protocol where basically the dow treasury takes some fraction of each block reward, and we have sort of this natural dynamics.
00:05:22.210 - 00:06:19.750, Speaker A: So they're n agents. They each have a portfolio. Their portfolio consists of coins, some allocated to staking, some allocated lending. And effectively you can compute the total stake supply, the total lent supply and the total protocol owned supply. So that's l lent t staked epsilon protocol owned. Lending yields so lending yields we model this just strictly off how compound inave's interest rate curves are constructed the lending yield is given by this following update in this case we use a linear model based on utilization the utilization in any DeFi lending protocol is the total amount demanded of borrows divided by the sort of total amount in supply. And for analytic tractability, assume that there's sort of a constant demand relative to the market supply.
00:06:19.750 - 00:06:28.360, Speaker A: But in simulation we simulate with more complex demand schedules. And I'll let shitha take from here.
00:06:29.550 - 00:07:30.602, Speaker B: Cool. So I think the next step is to model the mev and I think as Turin said the crucial assumption here is that lending yields now are correlated to mev at some point in the future. So this is sort of the idea that liquidations and mev lending right now causes liquidations in the future or something like that. And so basically we model this as this sort of regressive process where q at k plus one, which q of K is the amount of mev extracted at time k is correlated to mev, positively correlated to mev, is correlated to lending yields at some time in the past. And for simplicity, we can just assume that that time in the past is zero units of time in the past. So you get an equation that relates yields right now to mev in the next step. We already introduced the lending yield.
00:07:30.602 - 00:09:01.820, Speaker B: Now for the Staking yields, the agents choose portfolios and their Staking yields are basically the reward schedule of the proof of stake protocol, plus this added mev component distributed per audit to the stakers. So you bucket all these tokens up and then you distribute them according to their staked portfolios. And that's all this equation is staked. And so now the question is how do the agents sort of choose their portfolios? And if they're sort of economically rational, they should be choosing portfolios in a way that in some sense matches sort of the risks that they're taking in Staking and Lending. So to do this, we sort of introduce three additional parameters in the model. One is the risk that they're taking for Staking and Lending, which is given by this fixed in time covariance matrix sigma whose entries are say, just drawn from some exponential distributions that indicate their risk preferences over time. But these are fixed and then they use this covariance matrix and the return vector that they observed in the last time step along with a risk parameter lambda that says how do I want to trade off between the return and the risk? And they solve at every time step a mean variance optimization problem.
00:09:01.820 - 00:10:08.526, Speaker B: And so this optimization problem basically says I want to trade off some amount of return for some amount of risk. And each agent is solving this over their portfolios which are allocated to Staking and Lending. And it turns out that you can give an analytic solution to this optimization problem that every agent is solving at every timestep. So once you have this solution, you can plug it back into each agent's update for their staked portfolios. And now you get sort of a bona fide feedback system. So the only variables in the system are the reward schedule RFK plus one, and what the protocol is going to decide to be burned or protocol and liquidity. But this is truly a feedback system, it's a deterministic system that takes Staking yields and lending yields for every agent at time K and updates them at time K plus one, assuming that these agents are solving a mean variance optimization problem.
00:10:08.526 - 00:10:59.854, Speaker B: And so the states of the system are the N staking yields for all the N agents plus the one blending yield. So it's an N plus one dimensional system. But one thing that you can note is that alpha this fraction of mev that is redistributed to the stakers at every time Step shows up in these dynamics. And basically the goal is to understand how the system behaves as Alpha changes. That's basically the punchline of the paper. So I'm just going to now do 200 years of dynamical systems in two slides. What is a dynamical system? A dynamical system is just you fix some initial condition, which could be a number.
00:10:59.854 - 00:11:36.794, Speaker B: In our case, it's a vector. And you have a rule for updating the state over time given by this function f and in particular, we're interested because here we're trying to understand how alpha this parameter, that's shifting these dynamics at every time step affects proof of stake security. We want to understand the behavior of a dynamical system around an equilibrium point. And so what's? An equilibrium point. It's a point where if you plug that point into the system so if you take f of that point, you stay at that point forever. So you're never moving from that point. So that's an equilibrium point.
00:11:36.794 - 00:12:39.614, Speaker B: And then we need sort of one more definition, which is the definition of stability. So stability means roughly speaking, it means that if you have an equilibrium point somewhere in the state space, if you start close enough to that point, you will end up reaching that point as time goes to infinity or in some amount of time. And so there's one more concept that we sort of exploited in this paper to characterize how this system behaves under a particularly bad equilibrium that I'll mention in the next slide, which is this notion of linearization. And so what this says is if you have a dynamical system which is given by this function, f, you do one of the stupidest things that you can imagine doing. You take its Taylor approximation, you throw away all the higher order terms, and you create a linear system from that dynamical system. So you take the first order approximation, you throw away everything else. And it turns out that some properties of that linearization tell you a lot about the stability of the nonlinear system at this equilibrium point.
00:12:39.614 - 00:13:31.662, Speaker B: In particular, if the eigenvalues are smaller than one, then the nonlinear system is stable eigenvalues of this linearization. If the Eigenvalues are bigger than one, then it's unstable. And so coming back to Staking and Lending, we have this dynamical system. So what's the really bad equilibrium point here? From an economic security perspective, it's the point when Staking goes to zero or the Staking yields go to zero for all the players. Mathematically, this means that these gamma Is are going to zero identically for all I And so one thing you can verify is that this is indeed an equilibrium point. So if you plug at this point in there's some lending yield at which this equation is satisfied. The equation that if you plug it in, if you take f of x star is equal to x star.
00:13:31.662 - 00:14:31.806, Speaker B: So this point is an equilibrium point of these dynamics and it's really undesirable because it basically means your security system has the proof of stake security has crashed and your system is no longer useful. And so we want to avoid this equilibrium point. So how do we do this? The basic idea is make alpha large enough such that you make the linearization of the system unstable. So you force the eigenvalues of the linearization outside of being magnitude less than one. And if you can do this, then this equilibrium point, this bad equilibrium point is unstable. So sort of the basic insights here are if you make alpha large or large enough you can avoid this bad equilibrium point. That is if you and economically this means that if you feed back enough of the mev and distribute it to the stakers you can sort of force them out of this sort of very undesirable equilibrium from a security perspective.
00:14:31.806 - 00:16:02.230, Speaker B: But there's another interpretation which is if you fix an alpha, if you fix an amount to redistribute the reward schedule that you need to achieve this instability of this bad equilibrium point is going to be less than what you would need if alpha was zero. That is you don't need to inflate your token as much or at as fast a rate in order to make this equilibrium unstable. And and so we did some simulations and sort of it turns out that in many sort of inflation rates, in many rates of values of r and in sort of many instances you can in fact avoid this equilibrium point. Actually these simulations are even stronger, which is what they show is that you actually end up going away from this equilibrium sort of it's not even asymptotic like in a finite time you can escape and move to sort of here in this case the all staking equilibrium. So no one's lending but effectively or close enough to no one lending you can't actually reach there. So the punchline is you can use mev redistribution to sort of avoid these bad economic equilibria that occur in these proof of stake systems. And to do this you require actually less inflation or lower inflation rates than otherwise necessary.
00:16:02.230 - 00:16:07.860, Speaker B: And so I will just leave you with this meme and happy to take any questions.
00:16:19.130 - 00:16:25.800, Speaker C: Hi, just a quick question. Do liquid staking derivatives drive down the alpha requirements at all?
00:16:26.330 - 00:17:26.038, Speaker A: Yeah, good question. So there's a paper in between these two that reference me and Alex Evans that does show that they do do that they do have this bad port, they basically do reduce the genie coefficient at the expense of kind of increasing the slashing rate. So there's sort of some trade off when you have liquid staking derivatives. The main point here, I think that's more interesting than staking derivatives, is that this mev redistribution, mev smoothing, is actually this feedback control system, right? You took this very deterministic deer scholar process looking thing and you added in this feedback mechanism, and the feedback mechanism actually gave you exponentially less inflation needed. Like, one of the previous slides actually shows that a deflationary inflation schedule, even though you might have to give more mev back so that's the top left corner a deflationary mev schedule. So that's like a deflationary inflation schedule that's like Bitcoin, can actually avoid this bad thing if you redistribute. That's not true with staking derivatives.
00:17:26.134 - 00:17:30.446, Speaker C: Well, if you combine the two, could you drive the inflation rate even lower, though?
00:17:30.468 - 00:18:11.240, Speaker A: Yeah. Okay. We suspect the fact that you can go to fixed supply event asymptotically with mev redistributed. Now, of course, this assumes this sort of positive autoregressive model for lending, right? And that's not always true. And also, of course, there's many other types of mev, right? It's only the third largest type of mev, but the idea that sorry, must have passed. Yeah. This thing assumes beta p is greater than zero for all p or greater than equal to zero for all p, and there's at least one p for which it's greater than zero.
00:18:11.240 - 00:18:16.360, Speaker A: And that's not always true, but that has been extremely true this year.
00:18:17.370 - 00:18:20.190, Speaker C: Yeah, okay. Makes sense. Thanks.
00:18:20.380 - 00:18:27.720, Speaker A: Seven. Cool.
