00:00:06.170 - 00:00:14.346, Speaker A: We will now be moving on to our next one. We're going to have John Adler come on. And he's going to be talking about mev economics for modular blockchain stacks.
00:00:14.346 - 00:00:26.120, Speaker A: Okay, so let's get started. So today I guess I'll be talking about mev economics for modular blockchain stacks. Ah.
00:00:26.120 - 00:00:47.942, Speaker A: And I'm going to start with what appears to be blockchain 101. But if you bear with me, it'll become obvious why we kind of build intuitions by construction starting from the beginner. So what are some components of any blockchain protocol? Not just a modular blockchain one, it has a leader selection algorithm.
00:00:47.942 - 00:01:11.730, Speaker A: And these are some of these things, you'll have heard of them from previous talks, especially the ones that we're going to deep dive in today. So this is basically an algorithm that tells you who is permitted to actually produce new blocks. Blockchain that can't have new blocks added to it isn't particularly useful.
00:01:11.730 - 00:01:29.110, Speaker A: Then tying into this, you need a civil resistance mechanism. In any kind of decentralized blockchain, you need some decentralized permissionless blockchain. You need some mechanism to prevent someone from just spamming a bunch of potential candidate leaders.
00:01:29.110 - 00:01:39.980, Speaker A: And that's going to be the civil resistance mechanism. So things like crew of work, crew of stake, et cetera. Then you have a block validity function or a stage transition function.
00:01:39.980 - 00:02:11.346, Speaker A: Effectively the rules around the validity of the execution of a block independently of who got to produce it. And then finally, to wrap all of these up together, you have a fork choice rule which allows you well, by you I mean the nodes to distinguish between two otherwise valid chains. So two chains that have the correct leader, that has sufficient sibling resistance amounts, whatever you want to call it, and the blocks are all valid.
00:02:11.346 - 00:02:31.382, Speaker A: You need some way of distinguishing between these two otherwise completely valid chains. All right. And we're going to focus primarily on the first and the fourth one of these because things like block validity, yes, the specifics of the block validity function determine what mev may be extractable.
00:02:31.382 - 00:02:49.330, Speaker A: For instance, bitcoin may have less extractable mev than, for instance, a Turing complete blockchain like ethereum. But given that just a few days ago we saw RG on Bitcoin because of the energy mint, maybe that's not actually the case anymore. But leader selection and the fortress rule are definitely things that come into play with MEP.
00:02:49.330 - 00:03:04.680, Speaker A: So this is the only slide that will contain theorems and crawleries. So please bear with me. But the first theorem is that in any decentralized blockchain, it's required that leader cannot pulse the chain on their own.
00:03:04.680 - 00:03:26.974, Speaker A: Statistically, of course, if we're talking about proof of work, if one person gets really lucky, they can just produce every block forever, censor the whole chain, et cetera. Why do we want this to be the case? Well, because the one party acting alone can completely and permanently halt the chain. Then they effectively have the ability to destroy it.
00:03:26.974 - 00:04:01.750, Speaker A: And if they can destroy it then it's isomorphic to having control over it as a coach from Dune would say. Now corollary to this is that if an actor is given access to sufficient of the civil resistance mechanism amount they should be able to become a leader for at least one block in some finite time. Again statistically and as long as this is true then the system is permissionless.
00:04:01.750 - 00:04:19.950, Speaker A: So decentralized permissionless is all very good. The general way this is done is I mean there's leaderless protocols like avalanche but here we're not going into too many specifics. The general way this is done is that if a scienter doesn't act within some finite time bound then another entity becomes a leader.
00:04:19.950 - 00:04:44.694, Speaker A: Okay? So why this important? The reason it's important is that the leader can capture mev either directly or indirectly through things like Arbitrage, front running, Sandra stacks, et cetera. Now generally it's hard to manipulate who is going to be the leader because the leader is tied to a civil resistance mechanism. For instance proof of work.
00:04:44.694 - 00:04:57.094, Speaker A: You can't just show up and say hey, I'm the leader. You kind of have it to do a whole bunch of work. Similarly in proof of stake, various proof of stake protocols like tendermint or GasPro, whatever have preassigned leaders.
00:04:57.094 - 00:05:14.650, Speaker A: You can't really manipulate the leader in any meaningful or cheap way. But there's other things you can manipulate which is going to be the fork choice rule which works in tandem with the leader selection algorithm. And it could be easier to manipulate the fork choice rule than it is to manipulate the leader selection algorithm.
00:05:14.650 - 00:05:32.310, Speaker A: And manipulation of this could lead to things like time vendor attacks, et cetera. Then of course once you've reordered the chain then you're also the leader of those blocks. So then you can also engage in front running, et cetera, et cetera within a single block or a sequence of sequence of blocks.
00:05:32.310 - 00:06:15.406, Speaker A: Now these may not be that much of an issue in an l one context but we'll soon see why there's such a concern and why there's so much more flexible in a modular context. So what is the modular world? We're moving towards a multi chain and specifically modular world where you have shared data layers that provide a very high amount of data bandwidth such as Celestia or East Two I guess ethereum nowadays and then a number of execution layers or roll ups, sovereign roll ups, seldom and roll ups whatever you want to call them. Things like Eclipse, Arbitrum, ZKsync, Optimism, Starquare, Scroll, Astria just to name a few.
00:06:15.406 - 00:06:47.920, Speaker A: There's countless of these already in development, many already deployed, et cetera. Now in this multi chain world or rather if we're really being generalist multi domain world a lot of the current concern is around cross domain or horizontal as I like to call it mev. Where you have mev that comes from Arbitrage and other opportunities within two different execution layers, within two different roll ups, or any domains, really.
00:06:47.920 - 00:07:14.866, Speaker A: And this is obviously a very important problem, et cetera, but it's not going to be the topic of today's talk or today lightning talk, I guess is 15 minutes. We're going to be talking about and exploring what I would call vertical mev in a modular blockchain stack, which is the mev relationship between the roll up and the data layer. And this could of course extend to multiple roll ups on top of the roll up, et cetera, et cetera.
00:07:14.866 - 00:07:36.830, Speaker A: But this is like a vertical relationship instead of a horizontal relationship. And now you might be looking at this and saying, well, there shouldn't be any relationship between these two because there's two execution layers. Trades are being done on one that might create arbitrage opportunities, on the other, you can atomically execute transactions on each, et cetera, et cetera.
00:07:36.830 - 00:08:12.540, Speaker A: But if you have an execution layer in a data layer, the data layer itself doesn't have any arbitrage opportunities because it doesn't execute anything. So why would there be a relationship between these two? And this is why this is an interesting problem, because it's not cross domain MEB in the same way that this horizontal MEP is, it's very different. And for this we're going to keep in the back of our minds the tongue in cheek first law of crypto dynamics that mev cannot be added or removed, it can only be moved from one layer to another.
00:08:12.540 - 00:08:28.190, Speaker A: Or put another way, mev can't be destroyed, it can only be changed, removed around from one layer to another. This is, of course not actually like a formal law. It's just a tongue in cheek observation when dealing with vertical MEP specifically, not cross domain MEP.
00:08:28.190 - 00:09:10.470, Speaker A: So when it comes to building an execution layer, building a roll up on top of a data layer, you need to have some mechanism, just like in any blockchain to produce new blocks. You need a leader selection algorithm, right? But you would also like to leverage the data layer for security, because if you don't leverage it for security, then you're kind of losing half of what you get out of the modular blockchain, right? You can get the ordering and you also get availability. It would be nice if you can use the blockchain also for ordering, because if you only use it for availability now you have these synchronization issues between one blockchain's consensus and another blockchain's consensus.
00:09:10.470 - 00:09:45.586, Speaker A: You would like ultimately all consensus to be done ultimately only on the base data layer and of everything else, use some mechanism of merge consensus instead of their own completely independent consensus protocols. Because then if they use a completely independent consensus protocol, you'd have synchronization issues. So what do you want out of a leader selection algorithm for one of these Sproll ups on top of the data layer? Well, you would like to decentralize the sequencers, the use of one sequencer, the censorship concerns, there's potential for monopoly and mev extraction, regulatory concerns, et cetera.
00:09:45.586 - 00:10:01.926, Speaker A: Also, decentralizing sequencers is a very convenient and easy way to introduce a token, right? Just have a token, some stake weighted mechanism, round dropping leader selection, just like tendermint has. There's a greater way of introducing that. What else you want? You want strong liveness guarantees.
00:10:01.926 - 00:10:18.290, Speaker A: You don't want it so that a single sequencer going down, for instance, means that the roll up goes down forever. You'd also like to minimize trust assumptions here. You don't want the trust that a single party is operating or a small number of parties are operating correctly for the chain to operate correctly.
00:10:18.290 - 00:10:34.120, Speaker A: And also you want to minimize waste of the data layer's block space. And waste can happen if there's some sort of contention, et cetera, where two transactions show up and one of them becomes useless and it just wastes the data layer's block space. You like to avoid that.
00:10:34.120 - 00:10:52.574, Speaker A: What you don't want, though is you don't want the mev to bleed down to the data layer. And I gave a talk at, I think, some mev summit back a while ago, quite a few months ago. It's linked in the last slide of this.
00:10:52.574 - 00:11:23.538, Speaker A: If you have access to the slides, it's the YouTube link on the last slide here that kind of dives deeper into this. I don't dive too too deep, but the intuition is that depending on the leader selection algorithm, you can have me beep bleeding down to the base layer. Why do you not want that? Because now you have a situation where if you have a bunch of MEB bleeding down to the data layer, you have all of this mev to be captured that instead of being isolated to the individual roll ups is all going down to the data layer.
00:11:23.538 - 00:12:00.226, Speaker A: And all that MEB to be extracted means there's some centralization pressure on the validators of the data layer to actually extract that MAB. And we would prefer that the mev be isolated as much as possible to the individual execution layers that create that MEB. Now there's a problem here, and this is somewhat of a I don't want to say open research problem, but rather still an open challenge that we would definitely if you're an Mev researcher or et cetera, if you're interested in modular blockchains, please absolutely reach out to us so we can brainstorm on this problem.
00:12:00.226 - 00:12:17.170, Speaker A: One thing we can't guarantee is that roll ups don't necessarily care and aren't necessarily incentive aligned with the best interests of the data layer. They have their own interests, their own economic interest, et cetera. And they may just do something bad for the data layer.
00:12:17.170 - 00:12:36.970, Speaker A: We can't exactly guarantee that they won't do that. Okay, so let's maybe go over a few examples of potential leader selection algorithms, fork choice rules that you could have for one of these roll ups on top of a data layer. One of them is first come, first serve.
00:12:36.970 - 00:12:55.182, Speaker A: So the intuition here is basically bunch of people will just post Blobs that have a particular namespace or that say this Blob is for this particular role. Basically that's what I mean by namespace. Bunch of people who will post Blobs completely permissionlessly.
00:12:55.182 - 00:13:21.530, Speaker A: The first person who posts the Blob to the celestial block for the namespace is the one that is selected to be the leader. Expose facto what are some issues here? It means that the leader is ultimately decided by an auction on the base layer. In auctions, as we know in the blockchain context, well, you either have to trust the auctioneer or if the auctioneer is permissionless, then auctions can be manipulated.
00:13:21.530 - 00:13:44.030, Speaker A: I guess auctions can be manipulated by either case it's just a trust assumption rather than a permissionless assumption. Auctions can be manipulated, so that's not great. So this has the issue that it introduces PGA for who gets to be the leader and therefore bleeds the mev that comes from that auction down to the data layer.
00:13:44.030 - 00:14:01.850, Speaker A: On top of that, it also wastes a bunch of space, block space because all these other transactions that aren't the first still go on chain and they just don't do anything for the application. So they're useless, they pay fees. Yes, but it means that more block space is being used without providing value to end users.
00:14:01.850 - 00:14:31.326, Speaker A: Another example tendermint style of leader rotation, this one is fairly straightforward is basically you take just the leader selection protocol of tendermint, not like the whole quorum and voting and rounds and all the P to P stuff, just the leader selection protocol which is like 20 lines of go code. It's very straightforward and then based only on the state within the roll up. So you don't use anything about the ordering and Celestia or anything of that or the data layer.
00:14:31.326 - 00:14:52.506, Speaker A: Rather more generally you use only the state in the rollup. And the fork choice rule is trivial because well, tendermint is work free. Now, there's issues here which is that as a safety rather than liveness preferring protocol, this kind of scheme makes it a bit more challenging to have good liveness because as if you use tendermint on an L one, you can increment rounds very quickly.
00:14:52.506 - 00:15:14.558, Speaker A: But if you're on a roll up, potentially you have to wait one or more data layer blocks in order to say okay, the leader for the slot didn't actually post their block, therefore we will increment the round and rotate the leader permissionlessly. Another one is highest priority first. This was a proposal that was floating around just a few days ago.
00:15:14.558 - 00:15:39.282, Speaker A: It would require a protocol change to Celestia or the data layer. It's basically the intuition is introducing a field, a priority field that can be malleated by the block producers, the data layer, block producers and that serves to order Blobs instead of just the fees for instance, or the position in the block. Now, the issue is that it actually degenerates to being isomorphic, to first come, first serve, except the auction.
00:15:39.282 - 00:15:59.066, Speaker A: Instead of being done on chain, it's done out of band and opaquely, which may be even worse. Last example before I close it off is base roll ups. Our base roll up space are cringed or cringe, so the intuition here is base roll ups are based on work that I did minimal viable merge consensus from 2019.
00:15:59.066 - 00:16:21.240, Speaker A: So, like basically four years ago, almost combined with mev boost or some PPS thing, then mev boost is used to prevent waste. Of course, you introduce additional trust assumptions, since we know mev boost isn't completely trustless. So this is maybe a side grade rather than a strict upgrade over the work that I published four years ago.
00:16:21.240 - 00:16:31.180, Speaker A: Now, sure, you prevent waste, introduce trust assumptions. What are the issues? You still haven't mitigated the use of an auction to select a leader. So mev still bleeds down.
00:16:31.180 - 00:16:50.910, Speaker A: Okay, I was asked by Tina to add a slide on how this ties into mev economics. Someone will have to come after this and tell me specifically, concretely and completely what mev economics is. But I guess this ties into mev and the economics of mev bleeding across a vertical blockchain stack.
00:16:50.910 - 00:17:01.934, Speaker A: A lot of the work, ideas, thoughts, proposals that I listed here didn't come from me. They actually came from members of the solicitor team and others. I'll list some of them here, non exhaustively.
00:17:01.934 - 00:17:13.158, Speaker A: So there's Connor, Rutul, Evan, Callum and Gabriel. They worked very hard on these kind of things. If you have access to the slides, there's link to their socials if you click on the bubbles here.
00:17:13.158 - 00:17:27.446, Speaker A: So please follow these people on Twitter, GitHub or whatever. They're very bright and they're the ones who did a lot of the work on a lot of the ideas and proposals here. And if you want to do further reading as a tradition in the blockchain space, there's lots of prior art.
00:17:27.446 - 00:17:39.200, Speaker A: So I posted a bunch of links here with a variety of puzzles, intuitions, counterpoints, et cetera. Okay, that's about it. Sorry for being like a minute over.
00:17:39.200 - 00:17:39.850, Speaker A: Bye.
