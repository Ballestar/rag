00:00:06.810 - 00:00:15.210, Speaker A: So, without further ado, let's welcome Kelvin to tell us about how roll ups actually work. Kelvin.
00:00:15.370 - 00:00:18.880, Speaker B: Hello, Kartik. How you doing? How you doing? Doing Wonder.
00:00:19.410 - 00:00:30.710, Speaker A: And then I can't wait to see what you have for the next 30 minutes, because I got some he's on Twitter and I'm excited. So all you take on the floor.
00:00:31.290 - 00:00:39.770, Speaker B: Thank you. All right, we're good. All right.
00:00:39.770 - 00:00:46.074, Speaker B: Hello, everybody. This is am I Lagging? Maybe I'm lagging. No.
00:00:46.074 - 00:00:49.450, Speaker B: I don't know. Whatever. This is how roll ups actually work.
00:00:49.450 - 00:01:04.610, Speaker B: This is a talk for all of you who think you know how roll ups work, but you don't. I know you don't, because I don't even know how roll ups work, and I've been working on them for far too long. I've been working on them since before you were born.
00:01:04.610 - 00:01:16.866, Speaker B: This is a talk about how roll ups actually work, also known as where is it? ZK roll ups aren't real. That's correct. ZK roll ups are not real.
00:01:16.866 - 00:01:20.454, Speaker B: I don't believe in them. Birds are not real. ZK roll ups are not real.
00:01:20.454 - 00:01:24.402, Speaker B: That's correct. My name is Kelvin. I work for Op Labs.
00:01:24.402 - 00:01:36.602, Speaker B: I'm building the Optimism collective because I believe that we can actually change the world with the stuff that we're doing and not just build a whole bunch of garbage. Let's go. All right, I want to tell you a story.
00:01:36.602 - 00:01:45.390, Speaker B: I want to tell you about how you think roll ups work, because I know exactly how you think roll ups work. And I'm going to tell you in this story. Check it out.
00:01:45.390 - 00:02:06.498, Speaker B: This is you, right? You're happy, you're on Ethereum and you got some money. Who doesn't, right, in this situation? Then there's this scary bridge smart contract, right? And this is also on Ethereum. And the bridge smart contract kind of gets you over to Optimism Land or kind of protects optimism.
00:02:06.498 - 00:02:28.454, Speaker B: I don't know. I know you think that this is how it works. Then you want to get your money over to Optimism Land, right? So you send your money over to the bridge smart contract, the scary bridge, and it goes NUM NUM, and it eats it and spits it out on the other end, and somehow it gets over to optimist.
00:02:28.454 - 00:02:52.690, Speaker B: But we know that the sequencer can be malicious or something. And so we need to turn the bridge smart contract into a security guard, and we need to give it some sort of ability to protect the roll up. And so we add these things, these proofs, right? We add these, like, fault proofs that protect the roll up.
00:02:52.690 - 00:03:16.362, Speaker B: The fault proofs, it's like so I'm giving the security guard an AK 47, and then everybody knows that obviously Zkill roll ups are better than optimistic roll ups because the marketing department told you so. So that's like adding a second AK 47, but this time it's gold plated. And now we're really protecting the roll up.
00:03:16.362 - 00:03:30.078, Speaker B: Nobody's getting past the security guard. Bridge contract with two AK 47. And everyone knows that the bridge smart contract is how we protect the roll up, right? Wrong.
00:03:30.078 - 00:03:36.770, Speaker B: All of this is wrong. Every single thing in here is wrong. If you think that this is basically how roll ups work, you're wrong.
00:03:36.770 - 00:03:44.882, Speaker B: And that's okay because everybody is wrong. They all think that roll ups work like this and they don't. They don't work like this.
00:03:44.882 - 00:03:59.490, Speaker B: So I'm going to tell you how roll ups really work, all right? So I want you to forget everything you've learned here's. You I want you to take your mind eraser and blast yourself in the face with it. What is a roll up, right? Boom.
00:03:59.490 - 00:04:14.170, Speaker B: A function over an input array. That is a roll up at its core, right? When we think about a roll up, we always have a data availability layer. We have some sort of well, there's actually two important things about this input array.
00:04:14.170 - 00:04:24.046, Speaker B: There's two really important properties. There's ordering and there's data availability. And those two things are both critical.
00:04:24.046 - 00:04:47.240, Speaker B: Ordering is really, really important because if the order of my input array changes, then the outputs that I get change. And data availability is really, really important because if I don't know what the inputs are, then I can't compute over them. So in a roll up, you have an input array, right? And we usually think that that's a blockchain, but it could even be more than one blockchain put together.
00:04:47.240 - 00:05:02.794, Speaker B: But let's just say it's one blockchain for now and we run some kind of code over that input array and we generate an output array. This is how a roll up functions, right? So simple. This is the roll up.
00:05:02.794 - 00:05:16.750, Speaker B: This is the roll up. And I want to note that there's not necessarily one correspondence between the inputs and the outputs. It could be that one input produces multiple outputs or that multiple inputs are required to produce a single output.
00:05:16.750 - 00:05:29.042, Speaker B: But the point is that this picture right here, what you are staring at right here is the roll up. This is the roll up. When you think of a roll up, it's this thing, right? There's some inputs.
00:05:29.042 - 00:05:39.160, Speaker B: That's the l one blockchain. There's some code. That's the roll up node software and it produces some outputs and that's the roll up blockchain itself.
00:05:39.160 - 00:05:58.970, Speaker B: And so there's a very important question, which is how do you actually append stuff to this input array? Because a roll up is not useful unless we can put data into it and add transactions to it. And so we need to be able to append things to the input array. So generally one way of appending inputs is to append things directly, right? So here's the input array.
00:05:58.970 - 00:06:02.974, Speaker B: It's the blockchain. We're at the latest block here's. You, you're happy.
00:06:02.974 - 00:06:36.986, Speaker B: You want to put a transaction in depending on the capabilities of the layer. One blockchain that we're interacting with, you can usually just insert a transaction directly, right? So most roll ups have this capability. There's some sort of smart contract that you can interact with where you can send a transaction to that smart contract and you can insert a transaction into the L One directly that adds stuff to the input array, which also, as we see in this picture, will produce outputs, right? So that's approach number one.
00:06:36.986 - 00:06:54.610, Speaker B: And then a very common secondary approach is this thing called a sequencer. Now, a sequencer, the idea of a sequencer is that this is very inefficient. Posting data like this is very inefficient because there's a lot of fixed overhead when you submit transactions to a blockchain like Ethereum.
00:06:54.610 - 00:07:19.394, Speaker B: In Ethereum specifically, there's this 2100 gas base cost for every single transaction. That's actually a lot of gas for most transactions when most transactions can be compressed down into a lot less. So we tend to want to be able to batch things together, which allows us to do this fancy compression stuff and really take advantage of sort of economies of scale.
00:07:19.394 - 00:07:29.500, Speaker B: So we create this thing called a sequencer. The sequencer is our little king of the castle. And essentially all the sequencer does is that it takes user transactions and it bundles them together.
00:07:29.500 - 00:07:48.290, Speaker B: And what it's going to do is it's going to create bundles of these transactions and it's going to publish them to the data availability layer, to your L One system. But the important thing is that we want a good user experience publishing these. Getting these bundles together can take quite a while.
00:07:48.290 - 00:08:02.786, Speaker B: We don't always want to publish these bundles immediately. And so what the sequencer does is the sequencer pinky promises that they're going to include this bundle in the future. And you see, I've represented this pinky promise by highlighting this in gray.
00:08:02.786 - 00:08:32.358, Speaker B: And essentially what we can do is that we can run our roll up code over what we think the input array is going to look like in the future and we can generate these outputs and we know what the outputs are going to look like in the future. And this is before the sequencer has even published anything to the L One. We just know that this is what it's going to look like, assuming that the sequencer comes through on their pinky promise.
00:08:32.358 - 00:08:47.122, Speaker B: And eventually the sequencer sends off the transaction to the actual data availability layer and this becomes real. So the inputs become real and the outputs become real. All right? So that's the gist of the roll up.
00:08:47.122 - 00:09:01.210, Speaker B: This thing that I've represented to you is the roll up. And I'll note that I haven't talked about any sort of proof mechanisms or ZK roll ups or optimistic roll ups because all of that stuff is fake. And I'll explain to you that in a minute.
00:09:01.210 - 00:09:26.166, Speaker B: So the next thing is, well, we have systems, right? And we want to connect these systems with other systems because connecting with other systems is useful if we just had this roll up, I guess we could interact in our own little bubble here. And this is what you might call a sovereign roll up, right? You can post data to this data availability layer. You can interact in your own little bubble.
00:09:26.166 - 00:09:52.762, Speaker B: But if we want to interact with other things, we need to be able to connect with other systems. So how do we connect with other systems? Well, we have an automatic connection to the parent system, where the parent system is, where the l one data lives, where the inputs live, because sort of where is the I want to do the spinny thing? By definition, that's how the roll up works. The roll up is taking its data.
00:09:52.762 - 00:10:36.518, Speaker B: It is defined by the data and the ordering of that data. Right? So we have this automatic connection to the parent system, which is why I can include transactions by sending a transaction directly to the parent system, because just by definition, I am deriving the roll up from that parent system. But what about other data sources where you don't have this type of trustless connection, this definitional connection to these other data sources? What if there's another blockchain? There's Kelvin's super roll up two and I want to bridge Kelvin's super roll up two and Kelvin's super roll up one.
00:10:36.518 - 00:10:49.450, Speaker B: Right. I want to get information from this other roll up into my roll up. Well, like we said, anything from the input is trustless because the roll up is defined by the input.
00:10:49.450 - 00:11:43.962, Speaker B: But for anything else, we need a convincing argument, right? Why should smart contracts on my roll up listen to stuff that you're saying over on your roll up or that smart contracts are saying on your roll up? Why should I listen? Because at the end of the day, they are two separate independent systems, and I don't have this direct connection, so why should I listen to you? Well, we need to be convinced, right? So how do we do this? How do we generally be convinced of things on other chains? This is just asking how bridges work. How do bridge protocols work? Well, there's a lot of different ways that we can make bridge code protocols work. People do authority based bridge protocols, right? Which is like, where is it? God coming down with God little weird finger coming down and saying, this is what the other roll up or the other blockchain looks like right now.
00:11:43.962 - 00:11:56.914, Speaker B: Just trust me, right? Listen to me. And if you trust the Authority, if I'm a smart contract on my chain and I trust the Authority, and I'm like, whatever, god's not going to lie to me, who cares? Then I'm fine. Then we have sort of a strengthening of this.
00:11:56.914 - 00:12:09.442, Speaker B: We have threshold authorities. So maybe God has three hands now and two of them have to come down. We have light clients, which is sort of the ugly little brother of the chain.
00:12:09.442 - 00:12:26.090, Speaker B: Coming in and saying, Good enough. It's a representation of the chain. It's not the chain itself, but it's a representation of the chain with pretty good trust assumptions where we can say, okay, I'm convinced that this is the state of the other chain.
00:12:26.090 - 00:12:52.126, Speaker B: We have fault proofs, right? Fault proofs are essentially two people going back and forth saying no, you repeatedly until we figure out who's right? And then we have validity proofs. And that's the math nerd coming in with such a convincing argument that you can't reject it. Right? This is how we communicate between blockchains.
00:12:52.126 - 00:13:21.210, Speaker B: This is how blockchain communication happens. If I have a third party chain and it wants to communicate with me, it has to convince me what its state is. Now, what's the worst thing that can happen in this situation? What's the worst thing that can happen when somebody is trying to communicate with me in this way? Well, I would argue that the worst thing that can happen is that apps on our chain could be convinced of something invalid.
00:13:21.210 - 00:13:34.980, Speaker B: Right. The mechanism by which I'm convinced of the thing that's happening on this other chain could break. And it could convince me on my chain that something happened on your chain that didn't actually happen.
00:13:34.980 - 00:13:52.850, Speaker B: Right. Where is my oops? And I want to put this in caps because I'm going to come back to it later, but this does not directly impact the other chain. What has broken here is my view of the other chain.
00:13:52.850 - 00:14:20.080, Speaker B: The other chain is running independently, right? It could be that the other chain has absolutely no clue that I'm even trying to read data from that other chain. If my view of if that other chain breaks, the other chain does not break. I mean, my smart contracts might break because I might be making decisions based on bad data, but the other chain doesn't break.
00:14:20.080 - 00:14:41.334, Speaker B: All right, so let's get to withdrawals, right? Because I've talked about all this stuff and I've talked about a whole roll up system, but I haven't talked about this bridge stuff and the proof mechanisms yet. So what is it? What about withdrawals, right? So what are withdrawals? Let's look at this picture again. We have the roll up.
00:14:41.334 - 00:14:50.250, Speaker B: This is the roll up. When you think roll up, I want you to think about this. We're adults now, so we know that I was sort of lying to you and that these things are blockchains.
00:14:50.250 - 00:15:20.862, Speaker B: What are withdrawals? Well, I want to put these pieces back together and I want to show you something. So here's you and let's say you want to send some funds from the parent chain into the child blockchain, into the L two, from the L one into the L two. What do you do? Well, you use the mechanism that we talked about earlier to directly add inputs to the input array.
00:15:20.862 - 00:15:39.802, Speaker B: You send a transaction to the L one blockchain. This adds an input to the input array that tells the l Two kind of trustlessly that it can mint funds on the l Two. All right, so this is the same picture that we saw before.
00:15:39.802 - 00:15:47.370, Speaker B: It's one directional. It's one directional. And again, there's nothing in here about proofs, optimistic, or ZK.
00:15:47.370 - 00:15:58.030, Speaker B: But now I want to get my money out. So I light my money on fire on l Two, and I tell the l One that I burned it. And the l One is like, I have no clue.
00:15:58.030 - 00:16:07.218, Speaker B: The l One doesn't read the l Two. The l One has no clue what's happening on the l Two. And so the l One says, prove it.
00:16:07.218 - 00:16:23.074, Speaker B: Right? This smart contract on l One that is locking up these funds says, prove it. And so you got to put on your judge wig or your lawyer wig, and you have to prove it. So let's go to court.
00:16:23.074 - 00:16:35.754, Speaker B: Right here's you with your lawyer wig. Here's the smart contract on l One that has the key to your safe. How do you prove it? Well, one way to prove it is you could use a proof of authority, and that's God's finger coming down.
00:16:35.754 - 00:16:53.040, Speaker B: Then there's a threshold system, and then there's light clients, and then there's fault proofs, and then there's validity proofs. Wait a minute. This is exactly like what we just did when we wanted to receive data on the roll up.
00:16:53.040 - 00:17:06.340, Speaker B: It's the same image, but in reverse. Just like when we want to receive data. When we want to send data to the l One, we need to make a convincing argument to the l One.
00:17:06.340 - 00:17:15.350, Speaker B: About what? And this applies to any chain. When we want to send data to any other chain. Sending data is like receiving data, but in reverse.
00:17:15.350 - 00:17:26.700, Speaker B: That should seem obvious to us, but in our mental models, it traditionally isn't. But it is obvious. Withdrawals are just another chain receiving data from the l Two.
00:17:26.700 - 00:17:29.990, Speaker B: Yes. That's how this works. Withdrawals.
00:17:29.990 - 00:17:44.350, Speaker B: In this case, the standard thing is that withdrawals on the l One is the l One receiving data from the l Two. Just like how we talked about how the l two can receive data from other chains. It's a symmetrical image.
00:17:44.350 - 00:18:04.486, Speaker B: And so when I talked about this, what's the worst thing that could happen? It doesn't doesn't directly impact the other chain. Right. The worst thing that can happen is that the smart contract on l One releases some funds that it shouldn't release, which is bad, but it doesn't directly impact the l Two.
00:18:04.486 - 00:18:17.190, Speaker B: And this is a really important property to understand. If the bridge breaks, the roll up does not break. This is such an important thing to know about roll ups.
00:18:17.190 - 00:18:34.580, Speaker B: I think so many people have this mental model that the bridge defines the roll up, but in reality, the bridge does not define the roll up at all. The bridge is a view into the roll up. If the bridge breaks, that is obviously bad.
00:18:34.580 - 00:18:51.990, Speaker B: Assets on the roll up can become under collateralized. But if the bridge breaks, if the bridge finalizes a state that is not what's in the roll up that is a problem for the bridge. The roll up is still going to continue operating as if nothing ever happened.
00:18:51.990 - 00:19:11.142, Speaker B: Because just like I said in the slide many slides ago, the roll up may not even know that the bridge exists. And in many cases the roll up has absolutely no clue that the bridge exists. So let me get to the second part of this talk which is that ZK rollups aren't real.
00:19:11.142 - 00:19:41.186, Speaker B: Now obviously ZK rollups are real in the sense that people create these things and they call them, you know, we've got ZK sync, we've got polygon CKM, EVM. The wait is over, but I'm still waiting. And then we've got scroll, right? When I say ZK rollups aren't real, what I really mean to say is that the ZK part is not fundamental to the roll up in the way that we just described roll ups.
00:19:41.186 - 00:20:12.414, Speaker B: There is a roll up part. And then on these other chains, there's an implementation detail of a smart contract on a completely different system that has nothing to do with the roll up, that either uses a ZK or an optimistic or a light client or an authority proof or many different sort of things to establish a view into the roll up on a completely different system. The ZK part is not fundamental to the roll up.
00:20:12.414 - 00:20:22.094, Speaker B: There is no such thing as ZK or optimistic roll ups. There are just roll ups. At the end of the day, there are just roll ups.
00:20:22.094 - 00:21:16.020, Speaker B: And then we create these view mechanisms on other systems, completely separate systems, and they have proof systems and those things are ZK or optimistic. But if you tie these things together, if you think that there's a thing called a ZK roll up or an optimistic roll up and somehow ZK and optimistic rollups are fundamentally different, you're going to be at a disadvantage in the mental model for what a rollup is. And the reality is that I think the optimistic crew gets this now, but why not the ZK crew? What is this? And I think the answer is that ZK is really hard and people feel like they have to create the ZK proof because if you don't create a proof, if you don't create a ZK proof, are you really a ZK roll up? Are you really a ZK EVM if you don't have the proof? So they start with the proof and they build this proof, right? They build this proof system and they spend all this time building this proof system and it's really, really hard.
00:21:16.020 - 00:21:42.960, Speaker B: And then they sort of cram the EVM inside of this proof system. They shove it in and it sort know, looks like this and it's kind of like it doesn't want to be in this tight little space and parts are sticking out and it's not quite the EVM. And then they pat it on the head and they say that it's just looking extra equivalent today, but it's not really the let's whatever.
00:21:42.960 - 00:21:56.686, Speaker B: But what's the correct way to do this? What's the right way to build these systems? The right way is to build the EVM in all its glory. This is weightlifting EVM. Super EVM.
00:21:56.686 - 00:22:20.222, Speaker B: And what we want to do then is we want to build a box around it. Instead of cramming the EVM into the proof system, we want to create a proof system around the EVM. And this is what's really going to make it obvious that ZK rollups don't exist or optimistic rollups don't exist.
00:22:20.222 - 00:22:28.362, Speaker B: Really, it's just roll ups. And then we want to make a proof system around it. That's the gist of the talk.
00:22:28.362 - 00:22:41.006, Speaker B: I cut it a little bit short because we had some technical difficulties earlier, but thank you for coming to my Ted Talk. Remember that ZK rollups aren't real. Optimism is not a roll up.
00:22:41.006 - 00:22:53.682, Speaker B: Optimism is an upgrade to capitalism. Join the collective, change the incentives, and you will change the world. Come check out the vision of what optimism and the optimism collective is trying to do.
00:22:53.682 - 00:23:13.850, Speaker B: Come check out the Op stack docs. If you want to build your very own, blockchain your very own layer two today, and I just want to say, understand this property about roll ups. Understand that the proof system is not fundamental.
00:23:13.850 - 00:23:32.778, Speaker B: What you want to do is you want to build a really good roll up, and then you want to build a proof system on top of it. And if you build a roll up that way, you can build a roll up where it doesn't matter whether it's ZK or optimistic, you can slap a ZK proof on it later. You can slap an optimistic proof on it later.
00:23:32.778 - 00:23:46.758, Speaker B: You can slap ten different proof mechanisms at the same time. That's the right way to build roll ups. But if you tie the bridge to the roll up, you're thinking about these things wrong.
00:23:46.758 - 00:23:55.286, Speaker B: The bridge is an independent system. The bridge is a view into the rollup. So think about that.
00:23:55.286 - 00:23:59.590, Speaker B: That's how roll ups really work. ZK roll ups aren't real. Optimistic roll ups aren't real.
00:23:59.590 - 00:24:05.082, Speaker B: Join the optimism collective. Optimism is an upgrade to capitalism. Change the incentives and you change the world.
00:24:05.082 - 00:24:13.900, Speaker B: Have fun, build something cool. And if you want to fight me on Twitter, we can fight on Twitter. Thank you so much and have a wonderful day.
00:24:16.690 - 00:24:26.078, Speaker A: Well, it still worked out at the end. We got everything, and we'll make sure that once this goes edited out on YouTube, it's smooth and perfect.
00:24:26.244 - 00:24:27.118, Speaker B: Thank you.
00:24:27.284 - 00:24:38.706, Speaker A: That was a really informative talk. I think it's a really good way to think about those primitives and just break them down to those R components that actually matter and personal what I got out of it was that optimism is the real blockchain.
00:24:38.818 - 00:24:42.498, Speaker B: Only serious blockchain. Only serious blockchain. There are other real blockchain.
00:24:42.498 - 00:24:46.614, Speaker B: There are other real blockchains. But optimism is the only serious one. That's correct.
00:24:46.812 - 00:24:53.234, Speaker A: Basic well, Emmett, thank you so much for joining us. And we'll see you all on Discord Hacking Away on the Op stack.
00:24:53.362 - 00:24:54.900, Speaker B: Thank you. Bye, everybody.
