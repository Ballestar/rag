00:00:06.250 - 00:00:41.718, Speaker A: So my name is Quintus from the flashballs research team. Today I'm talking about auctions privacy and a cat and my motivation is sort of to take this discussion about mev and this discussion about distributing mev back to users and ground it in a mechanism or like a class of mechanisms people have been talking about implementing. The real point I'm trying to make is that the design space is bigger than we realize and there's much more to explore and I'll sort of give a direction in which we could go further.
00:00:41.718 - 00:01:06.146, Speaker A: But first like a brief overview of what I mean when I say a mechanism for distribution. So starting from basics we have the user tried to interact with the blockchain or blockchains in this case I just put ethereum because it's easy to think of. And so the user has some intent, something they're trying to accomplish on the chain but they don't understand how the chain works.
00:01:06.146 - 00:01:36.620, Speaker A: Most of us don't understand the intricacies of it and they don't understand what the best way of interacting with all the different smart contracts, et cetera, et cetera. Similarly, the mempool is very hard to pass many different transactions in there pretty much only searches and a couple of very technical parties that can reason of this well in the time frame required. So the user is confused like me and you.
00:01:36.620 - 00:01:52.622, Speaker A: And here the idea of an auction comes in nicely. I am just giving it my own definition which is a mechanism for price discovery through competition. And then once you think about it for a little bit, it doesn't have to be price discovery, it can just be discovery like in a reverse auction or something.
00:01:52.622 - 00:02:15.320, Speaker A: It doesn't have to be a price people are competing on. And that makes a lot of sense here because we actually need some discovery because we don't actually know how to do what we're trying to do. And so the sort of beautiful end case would be that this magical auction in between the happy user and the blockchain solving all of our problems and that's the direction we're going, or I'm proposing we go at least.
00:02:15.320 - 00:02:46.130, Speaker A: And just to be clear, when people hear auctions and mev they think of PBS usually. That's not what I'm talking about right? This PBS and the searcher, like build a relationship and all these things that takes part of what you could construe is like one large auction where the beneficiary is the proposer. But really the mental model I'm working with is like an auction that logically precedes all of this where the benefactor is the user.
00:02:46.130 - 00:03:04.680, Speaker A: And of course, in implementation these could be much more integrated. Maybe if you really want to reason about this perfectly then you should think of the whole system as a whole. But for now we're just going to focus on the order flow auction which is the green bar on the left if you haven't caught up yet.
00:03:04.680 - 00:03:35.182, Speaker A: And so just to give you a rough idea, I took a slide from a presentation, I gave them Thimbler with one way, one taxonomy. You could give breaking up the different archetypes of auctions and this really isn't super rigorous and you can definitely propose a different way of dividing things up and maybe it'll make more sense. But just to give a rough idea, you can have these kind of auctions, which I just labeled here, SAP Priori, where the winner is determined way in advance.
00:03:35.182 - 00:04:01.194, Speaker A: It resembles TradFi, Pfoth, these kind of things. What I've called Auction House because I don't have a better name for it, but there's some official name and there's different variations where people bid either on single items, right? And these items are going to usually be like users intents, among other things. But the items are related to the user's intents because the user is trying to execute something chain and that's what we care about.
00:04:01.194 - 00:04:26.160, Speaker A: Right. You have combinatorial auctions where people can bid on subsets of items and batch auctions are somewhat of a continuation of this where the batch is fixed. You can't pick and choose a subset, of course with some caveats and then Dutch auctions and I guess English auctions and whatnot are all run over time.
00:04:26.160 - 00:04:46.934, Speaker A: So anyway, so this is like one way of dividing things up and I've explained it all to you and thank you for listening. But so we're doing today. So the point I'm trying to make is that there's an argument, so there's a dimension that is missed in this taxonomy that is quite interesting and that we should be thinking more about.
00:04:46.934 - 00:05:07.630, Speaker A: I think it's like a large design space we haven't really explored much and that's kind of like control over memory. What does that mean? Well, we think about that's not good. There's supposed to be some little robots over there but I guess they're not showing.
00:05:07.630 - 00:05:36.866, Speaker A: I guess maybe it's because you're making your own chrome. Anyway, just imagine at the end of these bubbles there are a bunch of robots. The point I'm trying to make here is that in an auction the idea is to communicate that an item is being sold to as many bidders as possible because we're trying to get up a competition and of course they need to know about the item being sold to bid on the item.
00:05:36.866 - 00:06:15.974, Speaker A: But I'm going to argue that this is actually not desirable and also not the only thing that we need to do, necessarily the only thing that we can do to have this discovery through competition mechanism. So in order to do this, I'm introducing another character, or I guess the first character in the story, Schrodinger's other cat with half a sibling in expectation, I guess. And again we have the same setting with the bidders which are now invisible, but I promise they're there and an item which is being auctioned over.
00:06:15.974 - 00:06:38.298, Speaker A: But now we introduce as well a cat and a box. And a cat here acts as an auctioneer and as you can tell by its hat and stick, it is a magical cat. And so the cat controls all of the actions taken in the box and more importantly, it also controls the perimeter of the box.
00:06:38.298 - 00:07:14.710, Speaker A: So what this means is that the cat can control what information leaves and enters the box. So what can we do with this? And again, you can't see it, but there are a bunch of bidders outside the box, I promise, and there are bidders inside the box as well, which you can't see. But the idea is basically that the cap can allow bidders to submit, like emissaries copies themselves, if we're talking about bots or some version like that, that can do the biding on the auction for them.
00:07:14.710 - 00:07:48.990, Speaker A: And so the idea is that you inform all of these emissaries on the inside, but not necessarily the bidders on the outside, what's happening in the auction. If the boundary of the box is fully transparent, the outcome is that at the end of the auction, all of the bidders outside of the box are fully aware of what transpired in the auction, what the item was, perhaps even who won the item, what the largest bid was, who knows? But there's like, at the very least, they're aware that this item was auctioned off. But this may not be desirable.
00:07:48.990 - 00:08:10.700, Speaker A: And there's some other outcomes which we could have as well. For example, we could have an outcome where only the winning bidder is aware of the item which was auctioned off. Right, or going even further, no one is aware of who won the item until some other point in the future and the actions taken on the item are taken within the box.
00:08:10.700 - 00:08:32.800, Speaker A: Now, that's very abstract. So to make it a bit more concrete, let's imagine we're auctioning off a big trade, someone's trading a very large amount of the ship coin, they're going to move the price. There are different variations of how we could do this, but let's imagine we have some sort of RFQ system where bids come in the forward, like commitments to giving a certain price.
00:08:32.800 - 00:08:58.806, Speaker A: And so these emissaries within the box offer their different prices. And what happens if the barrier of the box is transparent? Well, at the end of the day, the winning bidder now has to execute this order, but the knowledge that this order will be executed is now public, or at least many entities are aware of it. And so there's competition to execute this order.
00:08:58.806 - 00:09:31.106, Speaker A: If they're going to move the price, maybe someone else is trying to price us in and it's not desirable or it's not like the best conditions for this bidder. And so they might actually want this information they'll have to price in this competition when they give their bid, knowing that when they're trying to execute this order, someone else might have already tried to price it in. If we change the setup so that only the winner is aware that they won the auction, the only one aware this big order needs to be executed, then the situation is much more favorable for them.
00:09:31.106 - 00:09:45.426, Speaker A: And that should mean that they are able to bid higher in the auction. But let's imagine that Dokwon is actually swapping on uniswap and he's asking to be back run only. That's one of his conditions on the auction.
00:09:45.426 - 00:09:55.654, Speaker A: Or maybe that's what the auctioneer wants. I'm leaving aside the question, it's actually the setup we want. Well, in this case, the cat has no control over what's actually happening outside of the auction.
00:09:55.654 - 00:10:34.070, Speaker A: So it's very hard to see if what the bidder is going to do about the auction. However, if the outside bottle bidder is never made aware, or is only made aware at some point in the future what the article of the auction was and the action taken on the order, like the formation of the bundle which the order is executed happens inside of the box, then the cat has control and we can make sure that the biding is along the line, uses utility function or whatever it is. To put it plainly, this example, there's no wrong drawing.
00:10:34.070 - 00:10:48.026, Speaker A: Similarly, you can think of an Oracle update. You can imagine many people are lined up for liquidations and the Oracle sort of like on the cliff. We don't know if they're going to be liquidated or not, if the auction is running in the clear.
00:10:48.026 - 00:11:00.640, Speaker A: All of the bidders are aware of this Oracle update whether people being liquidated or not. But only the winner is able to backrog it. For example.
00:11:00.640 - 00:11:24.822, Speaker A: However, if we make this barrier less transparent somewhere else on the permeability spectrum, and only the winners aware of this, they now have incentive to bid more for this information as well, because it gives them an edge in the market. They know something that their competitors don't, their competing traders don't. Right.
00:11:24.822 - 00:11:43.770, Speaker A: And so I'm running out of time. So just to briefly go over the kind of thing that I covered, here what we can do with information. One is we can select for desirable competition, competition that drives up revenue, but not competition that is detrimental to the users, we users wishes or their intent.
00:11:43.770 - 00:12:07.560, Speaker A: Right? Monetization of information, theoretical example covers that quite clearly. And then control over action, takeout information. If we have control over what happens inside of the box, but not outside, if we can keep sensitive information within the box, then we can stock things which we don't want from happening, which we don't want to happen from happening.
00:12:07.560 - 00:12:31.962, Speaker A: And I gave a very specific instantiation of the cap in the box. But actually the point I'm trying to make is that we can combine many boxes, we can combine many cats, you can get dogs, you can get triangles, you can get go crazy. My point is that there's a lot we can do with privacy, how information flows and how we can draw things that cryptography and distributed systems have allowed us to do.
00:12:31.962 - 00:12:50.050, Speaker A: And we haven't really, I don't think we've explored the full design space. And so it'd be interesting to see what people come up with. Yeah, so that's why I always say it's not if you know, you know, you should ask yourself, what action can I take on what information? And that's pretty much it over time, I think.
00:12:50.050 - 00:12:59.334, Speaker A: And so just highlighting a special cause. A lot of homeless cats out there do your best to donate or adopt. Cool.
00:12:59.334 - 00:13:02.760, Speaker A: I think that's it. There we go.
00:13:03.210 - 00:13:07.558, Speaker B: Awesome. Thank you. We're still waiting for Danning to join in.
00:13:07.564 - 00:13:08.280, Speaker A: Just a.
00:13:10.330 - 00:13:18.810, Speaker B: You guess you probably get one or two. One of them that was asked is, how do you control information access here without leaking?
00:13:19.790 - 00:13:31.722, Speaker A: Yeah. So here's one very basic example. You could just have a bunch of people submitting scripts which are, like, encode their bids.
00:13:31.722 - 00:13:44.674, Speaker A: You take us input the item, you give us output the bid, and now they're running Solar and some trusted party calculates the bids for these people. That's like one way of doing it. A lot of trust assumptions there.
00:13:44.674 - 00:13:56.920, Speaker A: And then you can scale up. Like Flash was exploring the SGX route, either via one central SGX. I'm not a Phonographer, I'm not going to talk about the trust assumptions there.
00:13:56.920 - 00:14:12.400, Speaker A: But then moving outside of that, maybe you can have multiple parties running these SGX, maybe you can have the bidders themselves running different instances. I'll the answer there before I say something that doesn't make sense.
00:14:13.730 - 00:14:20.780, Speaker B: Well, that's perfect timing. Danning just joined in now. So thank you again and we will go over to the next one.
