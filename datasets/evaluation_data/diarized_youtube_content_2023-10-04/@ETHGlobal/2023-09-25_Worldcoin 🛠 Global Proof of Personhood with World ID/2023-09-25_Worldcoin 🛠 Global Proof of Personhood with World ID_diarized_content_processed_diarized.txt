00:00:07.210 - 00:00:15.354, Speaker A: Hi everyone. I'm Ian Dillick. I lead developer relations at WorldCoin, and I'm here to tell you about World ID, our global proof of personhood protocol.
00:00:15.354 - 00:00:31.400, Speaker A: I will try to keep this to within 20 minutes so we can get back on track in here. So what I'll go over in this workshop what World ID is, why WorldCoin created it, what you can do with World ID, and most importantly, how to integrate. It quite simple, actually.
00:00:31.400 - 00:00:54.686, Speaker A: So WorldCoin sort of big question that we're answering with World ID is how do you know who or what is a real and unique person? Right? You want to know that your user isn't a bot, and you want to know that they're only going to need to do something once. World ID helps with both of those. So World ID, just a couple of months ago became publicly available.
00:00:54.686 - 00:01:09.106, Speaker A: Before that, it was on a waitlist, but thankfully, that's gone. And World ID is designed to be private, inclusive, and robust. Right? We want to collect as little information as possible about who you are.
00:01:09.106 - 00:01:25.702, Speaker A: We want as many people as possible to be able to participate in this system. And we want to make sure that each person can only have one World ID. So we looked at a bunch of different ways that we could actually get that information about you being a unique human.
00:01:25.702 - 00:01:46.350, Speaker A: Right? We looked at verifying with an email or phone, but those really aren't robust. I have multiple emails, I have multiple phone numbers breaks that tenant. We looked at doing KYC of official government IDs, but less than half of the global population has a digitally verifiable ID, so that's not inclusive enough for us.
00:01:46.350 - 00:02:09.942, Speaker A: We looked at web of trust systems, but they really don't scale to all of humanity super. Well, if you start with an initial verified set of 100 or even 1000 people, you have to be many hops away from that initial set in order to verify, say, a billion people. And every hop away from that initial trusted set you are is really the less trusted you are.
00:02:09.942 - 00:02:36.318, Speaker A: So we settled on biometrics, which initially sounds a little bit scary, but it is something that you can actually do in a privacy preserving way. And when it comes to which biometrics we use, we looked at fingerprints, face scans, palm scans, but none of those actually have enough entropy to distinguish between billions of people. Face ID and Touch ID on your iPhone can distinguish about one in 30 million people.
00:02:36.318 - 00:02:56.574, Speaker A: That works fine for making sure that you are the same one person who set up Face ID on that phone, right? If you're one of the, like, twelve people in the US. Who could steal my phone and unlock it with Face ID, you know what? More power to you. We also looked at DNA, an incredibly high level of entropy, also incredibly invasive.
00:02:56.574 - 00:03:19.210, Speaker A: It's impossible to not know a lot about that person if you have their DNA. So we settled on Iris biometrics because it doesn't tell much about who you are, but there is an incredibly high level of entropy. So it can actually be used to distinguish between people at the scale of all of humanity, right? Even identical twins have very different irises.
00:03:19.210 - 00:03:39.010, Speaker A: And when it comes to how we do those iris scans, we looked at using users phones, but the issue is that the resolution on the cameras there isn't high enough to capture that level of entropy that we need to distinguish billions of people. We looked at off the shelf hardware like what they use for clear at airports in the US. But it's really expensive.
00:03:39.010 - 00:04:07.734, Speaker A: Also is used for one to one, right? Are you the same person as your, you know, are you unique from billions of other people? So we settled on building custom hardware and that hardware is the Orb. You might have seen them at our booth, you might have heard about them before. So the Orb has been in development since early 2020, gone through lots of different revisions and is also the hardware is 95% open source.
00:04:07.734 - 00:04:22.318, Speaker A: We have an open source to the hardware for like tamper resistance and security for hopefully clear reasons. But all the rest of the hardware you can go look at on our GitHub right now if you're someone into hardware like that. So the Orb first makes sure that you're actually a human.
00:04:22.318 - 00:04:37.170, Speaker A: Not a photo of a human, not a cat or a dog, takes photos of your irises, calculates this Iris code. So a nonreversible digital representation of the pattern of your iris. If you don't opt into data custody, we never store those images that the Orb takes.
00:04:37.170 - 00:04:49.414, Speaker A: They get deleted from memory on the Orb. They don't even touch it to storage. And then we use that Iris code check to make sure it's unique from all the other iris codes of everyone else who's signed up at the Orb before.
00:04:49.414 - 00:05:06.800, Speaker A: And with that, we verify your World ID. The public key of your self custodial identity in WorldAPP gets added to a merkel tree on chain. And I'll talk a little bit more about how that actually makes World ID this proof of personhood protocol that's everything the Orb does.
00:05:06.800 - 00:05:32.070, Speaker A: World ID is designed to be privacy first, decentralized and open source. So again, we don't ask your name, your email, your address, your ID, anything like that, we ask your phone number, but that's optional, it is decentralizing, right? We have the Worldscoin foundation that stewards this protocol. Right now the Orb is the one device that you can use for verifying at the highest level with World ID.
00:05:32.070 - 00:05:44.086, Speaker A: But we are exploring other verification methods and those may even come from other companies. And it's open source. All of our smart contracts, our signup sequencer, everything like that is on GitHub.
00:05:44.086 - 00:05:59.082, Speaker A: You can go deploy your own if you'd like. World ID has lots of different use cases, right? Voting is one that makes a lot of sense. You want to know that the person voting is actually a human and not a bot, and that they only get to vote once on each proposal.
00:05:59.082 - 00:06:12.718, Speaker A: And as an added bonus, you can't correlate two different votes on two different proposals back to the same person. So it helps with that privacy aspect, right. Social media, again want to know that it's not a bot.
00:06:12.718 - 00:06:36.940, Speaker A: Customer incentives is one that I find particularly interesting. Maybe you want to give your user a sign up discount, but sometimes with sign up discounts, users get them more than once. I know I've spun up multiple emails to get a bunch of those two week free trials on Netflix, but if they used World ID, maybe they'd be willing to give you a three month free trial because they know you're getting that free trial only one time.
00:06:36.940 - 00:06:56.130, Speaker A: And we've also designed World ID to be super, super easy to integrate. You can use it on the web, on mobile, and on chain. There's two main ways to integrate World ID, and the first and the easiest is sign in with WorldCoin.
00:06:56.130 - 00:07:13.430, Speaker A: So let's see what it's like to use sign in with WorldCoin. We actually use sign in with WorldCoin for logging into our developer portal, so I'll go ahead and show what that looks like now. So when I hit in, it takes me to this page with a QR code.
00:07:13.430 - 00:07:27.622, Speaker A: I can scan this from within World app, or I can even just scan it with my phone's camera, and it will automatically direct me into the app sees. Okay. It wants me to sign in with World ID for the developer portal.
00:07:27.622 - 00:07:37.694, Speaker A: I tap verify with world ID. Does a little face ID check? Oh, it didn't work because I had been waiting on the page too long. Promise this works.
00:07:37.694 - 00:07:50.920, Speaker A: I just had that page open for like half an hour before this. Verify with world ID. Do the face ID check.
00:07:50.920 - 00:08:04.014, Speaker A: And now I'm logged into our developer portal. So any of you who are building on World ID will need to log into this developer portal. You can add a new app, give it a name, select staging or production.
00:08:04.014 - 00:08:17.200, Speaker A: If you choose staging, you have to use the WorldCoin simulator, which I'll show you in a little bit. If you choose production, users have to use the World app, and then you can also choose cloud or on chain. And again, I'll talk about that in a little bit.
00:08:17.200 - 00:08:30.178, Speaker A: But Developer Portal is pretty simple, and it's a really simple flow for sign in with World ID. And there's lots of different ways you can actually integrate sign in with World 20 into your app. We have an integration with Auth Zero.
00:08:30.178 - 00:08:48.834, Speaker A: If your app already uses that for sign in nextauth JS, we have a template repository for that one that makes it super simple. You can use our OIDC well known file with any other OpenID connect library. You can custom implement OpenID connect flows, but I'll walk through how you can do it with nextauth.
00:08:48.834 - 00:08:56.022, Speaker A: JS. This is all it takes to integrate sign in with WorldCoin. If you use nextaut.
00:08:56.022 - 00:09:08.606, Speaker A: JS, this is the file for configuring nextaut. JS, we set up a provider for WorldCoin. We pass it that well known file that tells it all of the configuration parameters it needs.
00:09:08.606 - 00:09:37.362, Speaker A: You have to set the client ID and client secret that you get from the developer portal in your environment variables. And then we assign the nullifier hash that you'll get back from World ID as the unique ID for that user and the Credential type, whether they are phone or orb verified, those are the two credentials available in World ID. Phone being much, much weaker, they've verified their phone number in WorldAPP.
00:09:37.362 - 00:10:08.382, Speaker A: Your app doesn't get to know that phone number because of the zero knowledge proof system we use to preserve the user's privacy, or they're verified@the.org. So to use Anonymous actions, which are quite a bit more powerful and more configurable, there's a little bit more complexity, but it's still really simple. Using Anonymous actions, you can know that your user is a unique human doing something once or an arbitrary number of however many times you want to limit them to doing it with a specific signal.
00:10:08.382 - 00:10:45.866, Speaker A: That signal is optional, but that's an extra bit of information that can be encoded into the zero knowledge proof so that you know it's not tampered with. For example, that signal for claiming an AirDrop would be the address that that AirDrop is being sent to, or if it's a voting situation, that signal would be which choice they're actually voting for in that proposal. And the basic flow for anonymous actions is that the user scans that QR code from our front end widget user generates the proof on their device, and then your app has to verify that proof either with our API or on chain.
00:10:45.866 - 00:10:58.420, Speaker A: And I walk through the front end widget and how you can verify both of the API and on chain. But it's important to note you have to verify the proof. I'll reiterate it again later, but that's an essential step here.
00:10:58.420 - 00:11:12.098, Speaker A: So let's see a quick demo of what using anonymous actions looks like. And this is where I will also introduce you to the simulator. So on our docs page we do have a little try it out section as a demonstrator.
00:11:12.098 - 00:11:20.846, Speaker A: So for anonymous actions I'll choose staging so I can use the simulator. Here at simulator Worldcoin.org looks pretty similar to WorldAPP.
00:11:20.846 - 00:11:42.560, Speaker A: We'll just leave this at test action for the action name, and we'll only accept orb credentials. So I click continue with WorldCoin and the Idkit widget pops up and it takes a minute to load this QR code. I'll reload the page real quick because again, sometimes things are a little bit slow and I'm tethering to my phone for Internet right now.
00:11:42.560 - 00:11:49.550, Speaker A: There we go. Let's try this again. Staging test action.
00:11:49.550 - 00:12:06.294, Speaker A: Sure didn't need with WorldCoin, so pops this up. If I'm using World app as like an actual end user, I would scan this QR code with my phone for the simulator. You can either run the simulator on your phone just in the mobile browser and you can also scan it with the camera just like you would in World app.
00:12:06.294 - 00:12:18.374, Speaker A: Or if you want to run the simulator on your laptop or desktop like I am now, you can actually just click the QR code in Idkit to copy that information. So hit scan QR paste data. I'll go to manual input.
00:12:18.374 - 00:12:41.084, Speaker A: Since I'm on the computer, I paste in everything that got copied from the QR code and hit submit. All right, so because I'm in the simulator, I can select which credentials I want to allow. Click verify with world ID and the proof was successful.
00:12:41.084 - 00:12:58.544, Speaker A: And if I actually look at the console here, you can see what gets returned from Idkit. And again, I'll talk a little bit more about that in 1 second. So with Idkit, it's one react component.
00:12:58.544 - 00:13:06.932, Speaker A: You can also use it with vanilla JS that is described more in our documentation. So you have to provide it a couple parameters. One is the action.
00:13:06.932 - 00:13:28.828, Speaker A: So the name of the action that you've configured in our developer portal on Success and Handle Verify are two callback functions. Handle Verify is optional, but it runs while Idkit is still showing a sort of pending state after the user has generated that proof on their device and sent it back to your app. On Success runs after the modal has closed, app ID.
00:13:28.828 - 00:13:41.040, Speaker A: Again, that's from your Developer portal, Credential types. You can also just leave that blank. It defaults to only orb, but you get to pick which Credential types you want to actually accept.
00:13:41.040 - 00:14:08.860, Speaker A: It also needs a child component that is typically just going to be a button that will open this widget. So this response that we saw in the console on the try it out page of the developer of our documentation, this is what gets sent as an input to the two callback functions handle Verify and On Success. So we have the merkel root, which is the root of the merkel tree that this proof has to be verified against.
00:14:08.860 - 00:14:34.508, Speaker A: The nullifier hash is the unique Identifier of your user in the context of that specific app and action. So if that app ID and action name are the same, same user will always generate the same nullifier hash. But if that action name changes or the app changes, then user will always have a different nullifier hash that helps preserve their privacy, prevents tracking that user across multiple actions.
00:14:34.508 - 00:14:55.480, Speaker A: But that nullifier hash is also what we use for civil resistance because if that user tries to do the same thing twice, we know we've already seen that nullifier hash the proof is the super long hexadecimal string that actually is like the zero knowledge proof that we do all the fancy math to verify. And finally you get the Credential type that that user is verified with. In this situation, just orb.
00:14:55.480 - 00:15:07.336, Speaker A: So we have to verify the proof. Just receiving that back from the Widget doesn't mean anything. Any information that's just in the front end like that, your user can manipulate.
00:15:07.336 - 00:15:24.612, Speaker A: And if you don't verify that proof either with our API or on chain, you don't actually know if the user is a unique human or not. Your project is not eligible for Bounties from WorldCoin if you don't verify that proof have to implement this properly. Verifying the proof is important.
00:15:24.612 - 00:15:37.640, Speaker A: I cannot reiterate that enough. So if you want to verify that proof with our API, then quite simple. The Base URL would be Developer Worldcoin.org
00:15:37.640 - 00:15:44.600, Speaker A: API v. One. Verifyyourappid that is the endpoint for proof verification.
00:15:44.600 - 00:16:10.560, Speaker A: So you send it a post request with the body basically being what you got back from Know that thing right here. Plus information about your app ID and action name and the signal if that was used as well. So you should first send that information to your back end and then your back end should call this API endpoint.
00:16:10.560 - 00:16:25.592, Speaker A: And if you get a 200 response, great. You know that user is a unique human. They're doing this thing within the limited number of times you've set in the developer portal for API verification apps, ones where you selected cloud.
00:16:25.592 - 00:16:44.860, Speaker A: In the developer portal, there's a drop down and you can select how many times you want to let them do that action. And yeah, otherwise there will be an error. We'll have some description of what the error actually is, whether that the proof didn't verify correctly or that the user has already performed this action.
00:16:44.860 - 00:17:10.308, Speaker A: And again, there's more detail in our documentation at docs Worldcoin.org. So after you've gotten that 200 response still in your back end, that's where you should do something like setting your user as verified in a database, right? Do that thing in the protected environment that you control rather than from the front end. If you want to verify a proof on chain, it's a little bit more complex, but still really simple.
00:17:10.308 - 00:17:22.600, Speaker A: In the constructor, we set the World ID, which is the address of the World ID router contract. We have an address book in our documentation. Make sure you use the relevant address for your chain.
00:17:22.600 - 00:17:38.836, Speaker A: In terms of change, we support ethereum optimism and polygon both on mainnet and testnet Gurley, Gurley and Mumbai. And additionally, we support Base Gurley for testnets as well. So in this example, we're just doing a single action.
00:17:38.836 - 00:17:52.790, Speaker A: So we set this stuff in the constructor. The external nullifier is essentially just the app ID and action ID shoved together. This proof verification system is built on Semaphore, so external nullifier is the terminology they use.
00:17:52.790 - 00:18:22.444, Speaker A: And then in this function, verify and execute, we would verify this proof and then immediately after do something like minting an NFT to that user, for example. So in this situation, we use the signal as the address to hypothetically, we could use the signal as the address to mint those tokens to. The first thing we do in this function is check if we've seen this nullifier hash before.
00:18:22.444 - 00:18:37.612, Speaker A: One thing I left out in the earlier slide was defining the mapping of nullifier hashes where if you set it to true, you've seen that nullifier hash before. First thing we do is check if we've seen it before. If we have revert, then we try to verify the proof.
00:18:37.612 - 00:18:51.190, Speaker A: We include that signal. The group ID for verify proof is going to be one for orb verifications. We don't support the phone credential on chain, so you can hard code that to one in your contract with no issues.
00:18:51.190 - 00:19:23.184, Speaker A: And then the rest of the information is what we received from Idkit. If that proof doesn't verify, for whatever reason, that will revert and the transaction won't continue. So if that doesn't revert immediately after that, we should go ahead and set that nullifier hash to True so that we track that we've seen that nullifier hash before, right? The one big difference between API verification and on chain verification is that for on chain verification, you have to implement the civil resistance part of it yourself.
00:19:23.184 - 00:19:30.048, Speaker A: That is why we're tracking the nullifier hashes here. It's very important you do that. If you want civil resistance, we can do that for you.
00:19:30.048 - 00:19:54.136, Speaker A: With the API verification, we can't do that for you for on chain verification. Finally, after we've set that nullifier hash is true, to know that we're tracking it, go ahead and do whatever else you want. So we have 20K worth of Bounties, five k to Best overall, 2500 each to Best Governance app, most Creative, Best AI, use Case Best Sign in with WorldCoin app, $2,000.02
00:19:54.136 - 00:20:13.890, Speaker A: $1,000 honorable mentions, and a $3,000 prize pool for every project that properly integrates World ID, whether that's sign in or anonymous actions and doesn't receive another prize. And let's build together. If you go to WorldCoin thank you.
00:20:13.890 - 00:20:30.160, Speaker A: If you go to Worldcoin.org NYC 23, you'll find a notion page with a lot of the information contained here. Information on our Bounties, a ton of resources, links to our documentation, developer, portal template, repositories, everything like that.
00:20:30.160 - 00:20:37.350, Speaker A: And if you have any other questions or want to get very fight at the orb, come find our booth. It's like all the way in the back corner. Thank you all.
