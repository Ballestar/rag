00:00:07.370 - 00:00:29.906, Speaker A: So today what we're going to go over is a quick introduction into what Uniswap is, the Uniswap Foundation specifically, and how we're different, and teaching you parts of our SDK and how to get started building on Uniswap. Before I get started, how many people are familiar with Uniswap here? Okay, cool. How many people have built on Uniswap before? Okay, sweet.
00:00:29.906 - 00:00:36.614, Speaker A: So a lot of people familiar, some new builders. Cool. So before we get started, a little bit about me.
00:00:36.614 - 00:00:48.826, Speaker A: My name is Tylin. I'm the head of developer relations at Uniswap. And if you guys have any issues or any questions about building on top of Uniswap, this is my contact information.
00:00:48.826 - 00:01:10.754, Speaker A: Happy to help out with whatever you guys need. Our mission at the Uniswap Foundation for Devrel is to fuel creativity and cultivate a community of empowered and influential developers who are shaping the future of technology. We feel like Uniswap has pushed crypto and DeFi forward, and we believe that the people that build on top of Uniswap will keep on doing the same thing.
00:01:10.754 - 00:01:41.594, Speaker A: So we want to empower you to do that, and we think we have a great community that enables that. Now, what is the Uniswap Foundation? Have you guys heard of the Uniswap Foundation, first of all? Okay, sweet. So for those of you who haven't, we were created almost a year ago and the foundation passed as a governance vote to create a foundation that would be the mainstay and the hold for pushing Uniswap and the protocol forward.
00:01:41.594 - 00:01:58.430, Speaker A: In addition to helping out on the developer community side, we also help provide grants. So if you guys are looking to build on top of Uniswap, if you have a great hackathon idea that you want to keep pushing forward after this is done, please connect with me. We do provide grants so that we can help support you even afterwards.
00:01:58.430 - 00:02:06.914, Speaker A: We have tons of RFPs as well for things that we're looking for. We release them every quarter. Our teams is here that actually does that as well.
00:02:06.914 - 00:02:26.762, Speaker A: So you can ask them what we're looking for also, and we'd be happy to explain some of the workings of the foundation and how we go about doing that. So, to the hackathon, we have this really great resource for people that are new to Uniswap, that are new to building on top of Uniswap. It's called our hacker home.
00:02:26.762 - 00:02:54.302, Speaker A: And what we do here is we actually have a page that allows you to go to it, and we have some intro resources to building on top of uniswap to learning things from. How do you do swaps, how do you create liquidity pools, how do you go a little bit more advanced, and how do you use subgraphs, how do you create flash swaps, all of these things. And if you have any ideas you're thinking about building, please go to our Hacker Homepage.
00:02:54.302 - 00:03:23.390, Speaker A: And it's a great resource for a ton of hackers and also, if you have feedback on how we could improve the hacking experience, we would love to have that also. So with that, let's get into for those of you who don't know what uniswap is and how it operates, or for even those of you that do know how it operates but maybe don't know the inner workings of maybe more than a swap. Let's take a look at that.
00:03:23.390 - 00:03:46.354, Speaker A: So what is a uniswap pool? Well, it consists of basically two tokens, token A and Token B. So in order to swap Token A for Token B, you need to have people providing liquidity into this pool so that this pool can have funds to actually execute the swaps. So you have accounts that provide liquidity to both sides of the pool.
00:03:46.354 - 00:04:09.580, Speaker A: And then when this liquidity is provided and when swaps occur, the people who are actually providing liquidity collect fees on these swaps. So there's a whole mechanism behind uniswap that's not just swapping, but it's also a whole liquidity side that's very engaging and enticing for people to build on top of. And uniswap has a lot of liquidity and there are a lot of cool projects that can be built using that.
00:04:09.580 - 00:04:25.166, Speaker A: Maybe, you know, you see this and it's a little abstract. It's token A and token B. Well, what does that look like in real life? Well, if you're trading Ethereum, can anyone think of a pretty popular token that people are trading ETH for right now? Pepe.
00:04:25.166 - 00:04:42.658, Speaker A: Oh, yes, Pepe, of course. So to actually have Pepe and to have trades happening on Pepe, a lot of people are going through uniswap to do this. So you'd have accounts depositing both Ethereum and Pepe at different price ranges.
00:04:42.658 - 00:05:02.990, Speaker A: And then when that happens, you create a pool. And now things can be swapped on top of uniswap. So now that we've gotten over this kind of cringe meme coin, maybe we can go into some code and see how now that you have a pool, how you can actually interact with that pool and do something simple like pulling the price of the certain coins in that pool.
00:05:02.990 - 00:05:34.790, Speaker A: So we're going to be looking at fetching spot prices live for uniswap pools. And to do that, we're going to be using documentation on the Uniswap SDK. And how we do that is the first thing, in case you're new to crypto, you have to create a provider and essentially you're going to be using a tool called Ethersjs to interact with the smart contracts and call certain functions on there so that you're able to live pull data that you need on chain.
00:05:34.790 - 00:06:08.410, Speaker A: So what we'll do is we're going to get a provider from infiro. Once we get that provider, we're going to call Ethersjs and we're going to use the pool address of the uniswap pool that we want the spot price for and we're going to use the quoter address, which is a built in contract that Uniswap created to actually get live quotes from the pools. So if we're looking at this pool address right here, you might be, you know, these are just a random contract.
00:06:08.410 - 00:06:21.682, Speaker A: Know what pool is this actually calling? Well, this is for the ETH wrapped BTC pool. And a really simple way to get the pool information that you want is you can go to info. Uniswap.org
00:06:21.682 - 00:06:43.550, Speaker A: for wrapbtc slash ETH, I can click on this info, and in the URL you can see the contract for the pool right here. So anytime you want to know if it's Pepe and ETH, if it's USDC Dai, you can just go and click on this website and you can see the contract that you want. And then you can plug it in to basically this code to get the live spot pricing.
00:06:43.550 - 00:07:09.026, Speaker A: So once we get the pool address and once we have the quota address and we've set up our provider variables, we can now start creating the function to get the live price of the pool. So what we do here is we create a constant called pool contract, and then we use Ethers to initiate the contract and we put in our address. We also call in the Uniswap.
00:07:09.026 - 00:07:17.058, Speaker A: V three pool abi. What an Abi is essentially it dictates all the functions in the smart contract. And then you can call these functions.
00:07:17.058 - 00:07:38.282, Speaker A: And when you're calling these functions, you're able to read and write real time on the smart contracts. So the uniswap B three Abi comes with the uniswap B three SDK. So you're going to be using this Abi to pull the addresses, to pull basically the addresses of each of these token pairs.
00:07:38.282 - 00:08:00.280, Speaker A: Now once you have the addresses of these token pairs, you can use that to call these contracts individually to pull information from each specific token. So here we have wrap, BTC and ETH. We're using this code to go and get the actual contract information.
00:08:00.280 - 00:08:18.780, Speaker A: So as we're doing this, we're starting to get variables that will help us get the live swap price in the Uniswap pool. So we'll go here and we're going to use this helper function we just created called Getabis. We're going to pass this into our Get price function.
00:08:18.780 - 00:08:45.300, Speaker A: When we're getting the Abis for these token addresses that we just got from our pool contract, we use that to now get information, or we use that now to instantiate new Ethers contracts for the specific token contracts. So now that we have wrap BTC individually and ETH individually, we have Avis. We can now access in those contracts to get additional information as well.
00:08:45.300 - 00:09:17.354, Speaker A: So what we're going to do here is we're going to get the symbols for each contract so WBTC and ETH, and then we're also going to get the decimal information. Decimal information is pretty important in crypto, and it's a good thing to note as you're working with Uniswap, it really impacts the formatting of how certain tokens look and operate or even feel. So you would use this token decimal information as you're outputting the information to output it in a format.
00:09:17.354 - 00:09:36.360, Speaker A: And the other thing to note is that tokens have varying decimals attached to it. I believe like Rap BTC may have eight decimals after it and I think ETH may have like 16 or something more. We go on to that into the code, but it makes a difference as you're thinking of how do I do the swap exactly.
00:09:36.360 - 00:10:06.414, Speaker A: So we then create another helper function that will take in that pool contract that we initiated early on and we will get the actual tokens in that pool contract and then we're going to get the fee of that contract. If you've used uniswap before, you've probably seen that we have different amounts of fees based on what the liquidity provider has provided liquidity at. So it can be one basis, .35
00:10:06.414 - 00:10:21.330, Speaker A: basis points. And based on that fee, it dictates the actual price in the pool pairing and it dictates how much the liquidity providers will get in return for providing liquidity at those fees. And we need to know that as we're calculating the spot pricing.
00:10:21.330 - 00:10:36.518, Speaker A: So we get the symbols, we have the decimals. Now is the time where we use our quota contract. Our quota contract is going to be used to get the quotes for the prices and then it'll be used in our calculations as well.
00:10:36.518 - 00:11:09.700, Speaker A: So we have our helper function that we did earlier, which was right here, get our pool immutables, we're going to be getting our token information and our fees for app BTC and ETH. And then what we're going to do is we're going to pass in our pool contract, which we initiated right here, so we use the pool address for Rap, etc. ETH, the Abi, the providers, and now we're going to get all that information.
00:11:09.700 - 00:11:36.598, Speaker A: And what we're going to do is now that we have all the information we need to actually get the live spot price, we're going to use Ethers to calculate an amount in and then a quoted amount out and then format that and get our result. So here we're putting in an input amount which will be what is the price of one wrap BTC to ETH. And then we're going to also include the decimals for one wrap BTC so it could be formatted correctly.
00:11:36.598 - 00:12:05.074, Speaker A: As you can see here, one wrap BTC has eight decimals, while as one ETH has 18 decimals after it. And that will impact what your result looks like after you've actually calculated it. So we take in our amount in and then what we're going to do now is create this const called quoted amount out and we're going to take in our tokens, our fees, the amount in that we're looking for.
00:12:05.074 - 00:12:25.446, Speaker A: And then zero is just a constant variable you will put in there. And then we're going to get an amount out that will be showing us the live spot price of this pool. So you can console log your result here, you get the price, and then boom, you run your code and you can see the live price of one wrap.
00:12:25.446 - 00:12:42.506, Speaker A: BTC, whether this is live today or not is that it can be swapped for 13.3 rapt. And this is a simple way to just start getting used to the Uniswap contract, integrating with it, and then start building on top of Uniswap really seamlessly and easily.
00:12:42.506 - 00:13:12.460, Speaker A: The more you get familiar and comfortable with the Abis, the better you can get with doing more advanced things like liquidity providing, creating different variable fees or working with fees and building more unique solutions on top of Uniswap. With that, I do want to go into our bounties that we're having for this hackathon. So if it's your first time, if you built on Uniswap, if you've got some kind of idea, we have a wide variety of bounties for you to go after.
00:13:12.460 - 00:13:41.346, Speaker A: We have an ecosystem prize, which is essentially any tools that you could build that are unique and help our ecosystem grow. This could be expanding the realm in which Uniswap even operates anything around decentralized social applications that are integrating unique tokens that you create in these experiences and then helping provide liquidity pools for people to trade. On top of these tokens, we have a whole governance suite that's important to us, and we also help lead a lot of governance in the space.
00:13:41.346 - 00:14:01.638, Speaker A: So we're constantly looking for ways to improve the communication between delegates, to improve the voting experience, to work on different I think even different chains would be exciting to see how they could help operate and expedite the voting process. And again, liquidity. You're working with a ton of liquidity within Uniswap.
00:14:01.638 - 00:14:18.442, Speaker A: I think there's lots of ample ways to use that liquidity that isn't being built right now that is very relevant to this hackathon. And I would love to see things like that built. Developer tooling, things that will help developers build on top of Uniswap.
00:14:18.442 - 00:14:29.390, Speaker A: We're looking at infrastructure. We're looking at things that could help people understand Lping, understanding different analytics for helping strategies be developed. And then we also have an open innovation prize.
00:14:29.390 - 00:14:40.760, Speaker A: It's whatever goes. Anything that is the most exciting and innovative project on top of Uniswap can apply for this prize. You're also welcome to apply for all three of them if you think your idea hits all three.
00:14:40.760 - 00:14:52.140, Speaker A: But yeah, that was our Intro to Uniswap. A quick overview, open for any questions if you guys have any. Yes, sir.
00:14:52.140 - 00:15:24.236, Speaker A: Yes, it is the best pool for yeah. So the gentleman asked the question about using we showed how to just do one pool and pick the spot price of the pool. But when you're using the actual application, it shows you three or so different, or it shows you the best route to the best price, and then it routes it to the best price for you to execute the swap.
00:15:24.236 - 00:15:58.220, Speaker A: Is that correct and how does it do that and is there an easy way to do that? We do have documentation on how to do routes and it is within our SDK. So if you go to Docs. Uniswap, you'll be able to actually use our routing a swap documentation here and then it will show you how to do that and how to use the different tools we built as well with like the permit two router.
00:15:58.220 - 00:16:03.790, Speaker A: Cool. Any other questions? I saw a few. Hands up.
00:16:03.790 - 00:16:21.360, Speaker A: Sweet. Well, maybe now you guys have time to go get the Ravi tickets that this has finished early. It's a party here, so that's about as much as I know.
00:16:21.360 - 00:16:26.290, Speaker A: Sweet it. Thank you guys for your time. Hope you guys build on Uniswap.
00:16:26.290 - 00:16:26.980, Speaker A: Looking forward to.
