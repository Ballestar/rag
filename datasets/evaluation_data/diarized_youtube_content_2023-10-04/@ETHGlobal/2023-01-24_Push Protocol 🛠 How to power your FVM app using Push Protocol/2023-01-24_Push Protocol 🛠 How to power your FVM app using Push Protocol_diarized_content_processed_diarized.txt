00:00:06.570 - 00:00:08.490, Speaker A: All right. Good morning. Good afternoon.
00:00:08.490 - 00:00:24.270, Speaker A: Good evening. Depending on where you're calling from, we have Fabio here from Push Protocol, who's going to be doing a workshop on how to power your FBM app using Push Protocol. If you have any questions, they can go into the zoom chat and Fabio will be more than happy to answer them.
00:00:24.270 - 00:00:28.470, Speaker A: And let that being said, I will pass the mic off to Fabio.
00:00:30.170 - 00:00:34.182, Speaker B: Yeah. Thank you, Anna. Hey, everyone, thank you so much for being here today.
00:00:34.182 - 00:00:51.290, Speaker B: So, my name is Fabio, I work at Push, working on the backend team. And so today we're going to be talking about what is very technical workshop. So first off, we're going to be talking about what is Bush, and I think most importantly, what problem Push is solving.
00:00:51.290 - 00:01:29.060, Speaker B: And in the end, we're going to be doing some workshop code demo to show different ways of how you can integrate Pushmore or into your DAP with your back end, your smart contract or subgrass. So, first of all, something that we always say is that everything starts with a notification, right? And Bush was a project from ETH Global back in 2020, and almost three years later, we're happy to be now sponsoring the hackathon, something that we came from. And it's very nice looking back to see how much has happened in those three years.
00:01:29.060 - 00:01:45.706, Speaker B: So I think the most important question is, so there are a lot of missing pieces in web three. And I think one of the missing pieces that we have currently having is improving user experience. And let's just give you an example.
00:01:45.706 - 00:02:12.260, Speaker B: So more specifically, an example about notifications. So for example, everything that we do, digital Life, everything starts with a notification. What do I mean by this? It's not like I'm constantly on Gmail, refreshing to see if I have a new email, right? So how do I know I have a new email? Well, I just receive a notification, and from the notifications I can see that I receive an email.
00:02:12.260 - 00:02:26.550, Speaker B: Or when someone sends a message on Telegram, I receive a notification. And then from the notification, I do some action, like me to the telegram, and I can see that someone has messaged me. So in web two, that's how we go by our lives.
00:02:26.550 - 00:02:43.994, Speaker B: We receive a notification and then based on the notification, we can take some action. If we think about it, in web three, we still don't have the same user experience that we had in web two. So, for example, protocol quality, expect users to come back to the protocol infect the information themselves.
00:02:43.994 - 00:03:26.522, Speaker B: So for example, how do we know today there is a new governance proposal for your favorite Dow? Well, you have to be very active on Discord or Twitter to keep yourself updated if there is any new proposal for you to vote. Or for example, how do you know if you're about to get liquidated in 85 protocol? Well, you as a user, as a liquidity provider, have to constantly keep checking your collateral ratio to see if you're going to get liquidated. Would be much easier from the user perspective to receive a notification whenever an event that interests me instead of me going to the protocol and fetching the information itself.
00:03:26.522 - 00:03:41.722, Speaker B: And this is exactly what Push protocols do. So we're bringing the Web Two user experience into Web Three and the applications for these are pretty endless. So as I said, for Governance, you can receive notifications whenever there is a new governance proposal.
00:03:41.722 - 00:04:08.546, Speaker B: For defied, whenever you're about to get libidated, you can get a notification. You can get a notification whenever someone outbids you on an NFT marketplace or for example, you should follow an NFT artist will be super nice to get notified whenever this artist publishes a new collection. And I think the beauty of the notifications powered by Pushburg call is that they are completely customizable.
00:04:08.546 - 00:04:31.914, Speaker B: So if you have a use case in mind for notifications, how to add the notifications for a protocol, it's completely flexible. I'm going to show you how to do this later, but there are different ways of how you can do this. So what is the solution that Push protocol is building? So it's a decentralized communication protocol, it's an open communication layer.
00:04:31.914 - 00:04:48.514, Speaker B: So that means anyone can simply tackle to the network and fetch the notifications to themselves. And I think very important, it's very important to note that the notifications, they are tied to wallet addresses. In Web Three, your identity is your wallet address.
00:04:48.514 - 00:05:13.354, Speaker B: So we're sending notifications to your wallet address and sysap since it's a local network, anyone can simply tag into the network and say, hey, give me all the notifications that I have for this wallet here. The notifications there are completely dynamic. That means that what's going to trigger the notification, how the notification looks like it's all customizable by you.
00:05:13.354 - 00:05:28.930, Speaker B: You have 100% control all the nook and tunes of the notification and the notifications, it's multi chain. So we started on Ethereum, but now we are in multiple Ugam chains. It's gasless.
00:05:28.930 - 00:05:49.634, Speaker B: That means that for sending notification, want to send notification off chain, it's completely gasless. All you have to do is just to sign a transaction and spat for magnolistic delivery probably that's the beauty of this. It's because any front end can display the notifications.
00:05:49.634 - 00:06:12.750, Speaker B: So you don't need to install a Bush protocol browser extension or a mobile app to display the notifications. We have set of react components that you can import into our tab to display the notifications right there. So users don't need to know that they have received a notification for Push protocol, they just receive the notifications right? Because that's how we do web two.
00:06:12.750 - 00:06:22.260, Speaker B: We just receive the notification. We don't care how the notification is delivered. I just want to get notified about things that I care and that's what we are doing.
00:06:22.260 - 00:06:34.594, Speaker B: So in Push, we have sent over 82 million notifications. We have over 60,000 subscribers. Subscribers are wallets that opt in to receive the notifications.
00:06:34.594 - 00:06:44.538, Speaker B: And we have over 100 integrations. That means over 100 different use cases for notifications. And I think it's mostly notifications by itself.
00:06:44.538 - 00:06:58.286, Speaker B: They are only useful if you see value in them. Nobody wants to get notifications from things they do not care. So notifications should have different use cases, things that care that you as a user are interested in.
00:06:58.286 - 00:07:08.910, Speaker B: So we have different use cases for notification. This is just one handful of notification, types of notification pieces that we have. We call them friends of Bush.
00:07:08.910 - 00:07:20.050, Speaker B: So we have different cases for notification. For example, for uniswap altogether Qdal or Gitcoin, cryptocurrency jobs. And I can give them another example of notification.
00:07:20.050 - 00:07:45.658, Speaker B: Imagine for cryptocurrency jobs, whenever there is a new job post, you can get notified on your Wallet address that there is a new post for you. For example, for the defiance, let's say whenever there is a new post, you can get notified on your wallets whenever there's a new post for you to read. So Push, we started back in 2020.
00:07:45.658 - 00:08:01.006, Speaker B: We were previously EPNS if you're in Push notification service, and now we have rebranded to Push. And we started with notifications back in 2020, almost three years later. We're now happy to announce that we took the notifications one step further.
00:08:01.006 - 00:08:19.382, Speaker B: And now we announced something called Push Chat. So with some webtree messaging platform provided by Push, that every notification sent on the protocol, they have a long ping notification. So if I send a message from my wallet to our wallet, you will receive a notification there.
00:08:19.382 - 00:08:46.318, Speaker B: And the idea is, we're taking all the webtree experience that we have, for example, for WhatsApp or Telegram and then bringing this to Web Three. So the experience for sending messages and receiving messages or receiving notifications on your messaging platform will be the same as doing on those web two platforms that we are very used to. So this here on the left is how the dad looks like.
00:08:46.318 - 00:08:58.798, Speaker B: So it's just a classic messaging platform. And we added here that's how the notifications look like on your phone. And here on the right, we did a demo on Defcon.
00:08:58.798 - 00:09:14.890, Speaker B: This is a demo that we did for Push video. So we added on top of Wallet, wallet messaging video calls as well. So you can not only message receive notifications, but you can also receive video calls on the Push pro golf.
00:09:14.890 - 00:09:36.634, Speaker B: So we have the date of 2020, and the beginning of 2023 is going to be a super exciting year for Bush protocol at tons of new feature are coming. So we have dastdk. So to integrate Push protocol, we're going to go over Dastdk different ways how to integrate Push.
00:09:36.634 - 00:09:56.790, Speaker B: In our SDK, we have mobile notifications. We also have an SDK for this. We're currently working on group chats very soon we're going to announce the SDK for group chats, privacy chat as well, where all the information, all the metadata for the chat is going to be encrypted and so on and so forth.
00:09:56.790 - 00:10:07.610, Speaker B: And here the rights. Just a prototype was halted the mobile app for the chat looped a couple of months ago, but now has completely changed. Yeah.
00:10:07.610 - 00:10:36.212, Speaker B: So let's start with the demo. So first off, I just want to show you guys how the DApps look like. And I'm just logging here, demonstrate Ching maintenance, and then we can log in.
00:10:36.212 - 00:10:48.370, Speaker B: Cool. So the apps for Bush protocol is app bush. So on Bush Protocol, we have a concept of channels, right? And the analogy is the same as a YouTube channel.
00:10:48.370 - 00:10:59.264, Speaker B: So we have different channels here. And you as an end user can opt in to receive notifications from those channels here. So, for example, we have Makerdal Lens Work blog.
00:10:59.264 - 00:11:18.672, Speaker B: Let's say, for example, I am interested in receiving notifications from Kiddow. Let's say, hey, I want to be notified whenever there is a new whenever Kiddow sends a notification, I'm interested in seeing those notifications. Me, as an end user, all I have to do is click into Octail.
00:11:18.672 - 00:11:33.276, Speaker B: All I have to do is just sign a message and then boom. Now, whenever there is a new notification by Kidaw Propol, I'll get notified. So for the end user, they don't pay to receive the notifications.
00:11:33.276 - 00:11:53.556, Speaker B: And for the sender of the notification, when if you send off chain notifications, then you only pay to send on chain notification. So now let's take a look. I've opt in to receive a notification, right? So in this example, I just opt in to receive notifications from keydao.
00:11:53.556 - 00:12:01.900, Speaker B: Now let's look into the other side. Let's see how we can send notifications. So what I have opting to receive notifications.
00:12:01.900 - 00:12:14.770, Speaker B: Let's start sending notifications. So to send a notification, all I have to do is first to create a channel. So I have a channel that I had previously created here.
00:12:14.770 - 00:12:36.220, Speaker B: But what I can do, I can just create a brand new wallet here, just show you guys how does it look to create a channel. And right here and disconnect. Cool.
00:12:36.220 - 00:12:46.368, Speaker B: So this is the UI, creating a channel. All you have to do is to stake 50 Bush. And then you need to pay the transaction fees for this.
00:12:46.368 - 00:13:01.830, Speaker B: But if you go to staging Bush staging Bush, that's our testnets URL. So we can create end channels here for free. Net, fake push, fake push and fake value.
00:13:01.830 - 00:13:17.820, Speaker B: So all I have to create a channel is just the channel name. You set the network, you add a channel description, and then you add here the URL from your channel. Once you do this, just upload the nolo, and then you have a channel created.
00:13:17.820 - 00:13:26.990, Speaker B: I had previously created a channel here. Once you create a channel, this is how it looks like. This is how the device looks like.
00:13:26.990 - 00:13:34.930, Speaker B: And I have a channel here. Now let's send a notification. Let's show guys how select.
00:13:34.930 - 00:13:54.756, Speaker B: So if I come back here, so I have here on the right, what I'm going to do is here on the right, I'm going to opt in to receive notifications from this channel here on the left. And then I'm going to show you how can seek the notifications. So I go to staging push channels.
00:13:54.756 - 00:14:03.930, Speaker B: So how does my channel my channel is called Demo Channel. Let's come back here, demo Channel. Let's look for my channel.
00:14:03.930 - 00:14:12.700, Speaker B: And I already opting to my channel. So whenever this channel sends a notification, I will receive it. So now let's receive the notification.
00:14:12.700 - 00:14:21.564, Speaker B: I click here on send notification. So there are three types of notification. There is broadcast, targeted, and subset.
00:14:21.564 - 00:14:36.016, Speaker B: A broadcast notification that means hey, notify all the subscribers of my channel. A targeted notification is hey, notify that address. And the third one is subset, which is notify this array of addresses.
00:14:36.016 - 00:14:46.344, Speaker B: In this case, let's send a broadcast notification to notify all the subscribers of my channel. The notification can have a title. Call it.
00:14:46.344 - 00:14:58.200, Speaker B: Hello, world. And this is going to be the payment of the notification here below we see how the notification slide. Now, let's click on send notification.
00:14:58.200 - 00:15:19.970, Speaker B: But I'm back opens. All I have to do is sign a message and the notification has been sent. So if I go to the other browser, link my inbox here and I see the notification that I just sent, it's here.
00:15:19.970 - 00:15:32.036, Speaker B: Not only this, we have a mobile app. So you're going to receive a push notification on your phone whenever there is a new notification you're going to receive. We have a browser extension here as well.
00:15:32.036 - 00:15:47.452, Speaker B: So you're going to see see notifications here, hello world. And you don't need as I said before, you don't need to rely on push front ends to display the notification. You can display those notifications on your own tab as well.
00:15:47.452 - 00:15:59.372, Speaker B: All I have to do is just import the react components that we have. So we have sent notifications manually. Now let's see how to send notifications using the SDK.
00:15:59.372 - 00:16:08.800, Speaker B: It's a JavaScript SDK. Let me show you guys what it looks like. All this code here is in our repo.
00:16:08.800 - 00:16:18.980, Speaker B: It's in our docs. Actually, I just took this from the docs. And where is the docs? So if you go to Docs.org,
00:16:18.980 - 00:16:40.854, Speaker B: we click on Developer Docs, and these are the Docs. So if you want to send a notification here, we have a section called Send Notifications. And here we have different demos or different ways how we can send notifications.
00:16:40.854 - 00:16:53.920, Speaker B: Let's send notifications using the SDK. So click here, Send notifications using push SDK. And all I did, I just copied and paste the portal gear and I had it here.
00:16:53.920 - 00:17:11.260, Speaker B: So all this code is doing here is let me zoom on this. All it's doing is to send a notification using the SDK. We just need three information.
00:17:11.260 - 00:17:32.226, Speaker B: First of all is the private key from the channel you're sending notification from. And the private key is going to be the private key from the wallet to create a channel. So in this example here, from my channel here, called demo channel, the private key is going to be the private key from this wallet here.
00:17:32.226 - 00:17:42.106, Speaker B: So just export the private key. I added this environment variable and I just prepared with zero. Then I'm just using ether and just get the signer.
00:17:42.106 - 00:17:56.220, Speaker B: And now we just need actually one more information. But in this case, I have two here. I have the channel address and the channel address is going to be this address here.
00:17:56.220 - 00:18:07.322, Speaker B: Just copy and paste here. And as you can see, the address has EAP one five, five column, five column. So we're just adding here, we call this ten format.
00:18:07.322 - 00:18:34.520, Speaker B: We're just saying that this address is on gen 85, which is Whirly. So we just paste here address. And then in this case, with this example, we're sending a targeted notification, which means, hey, notify only the seconds here and this address here should be this one, which is let me just copy this.
00:18:34.520 - 00:18:56.994, Speaker B: Yeah, reconnect. We're just going to copy this address here and we opt in to let you know again, dangled arrow opting. Cool.
00:18:56.994 - 00:19:18.940, Speaker B: So I'm just going to copy this address here and that should be it. The rest all of these are just copied from the docs. So if I come here and I just run this code, so I set a notification.
00:19:18.940 - 00:19:51.340, Speaker B: So if I come back here, click on the inbox and I see this notification with a bunch of X that's the water added here and that's it. So if I come here to the browser extension, all I can do is log in my account here and I received a notification here why you receive a notification on your mobile app or whatever you want to see. You see the notification.
00:19:51.340 - 00:20:10.540, Speaker B: I see a couple of questions here. How does pushproba work under the to get messages from letters? Can you talk about underlying mechanism a bit? Of course. So ultimately, how pushpropo work under the bullet, we have something called push nodes.
00:20:10.540 - 00:20:16.580, Speaker B: It's a network cuff. We call them communication modes. And all they do is to index communication.
00:20:16.580 - 00:20:31.960, Speaker B: So whenever you send a notification, for example, using the SDK, all you're doing is talking to the push network. And then the push network is going to index this notification. And then we have a node called delivery node.
00:20:31.960 - 00:20:44.664, Speaker B: And these nodes are responsible for dispatching the notifications. So all the indexing inspecting the notification is done by this push network. And as of now, it's a decentralized network.
00:20:44.664 - 00:21:00.480, Speaker B: And as of now, it's a network that is run by push protocol. And we're in the work of decentralized this. And the end goal is for the community to be able to work this network and actually get incentivized by running it before contributing to the centralization of the network.
00:21:00.480 - 00:21:17.380, Speaker B: Though the key part of here is the pushing out. Does it mean fido? Cause a little message? Henry asked this question, and yes, correct. So the demo that we did in Vogue Doc for push video is exactly this.
00:21:17.380 - 00:21:27.530, Speaker B: So on the deck itself, if you come here, push that. We have a section here called chat. Just click here.
00:21:27.530 - 00:21:44.444, Speaker B: This is how push chat looks like, right? And the demo that we did on Bogota was there was a video button here. I just click here, and I just video chat to the other address. So the other address will receive a notification.
00:21:44.444 - 00:21:56.260, Speaker B: Exactly. How we're doing? Web two, we receive a notification saying, hey, this address is calling you, and you just accept and then you start the video call. I'm just doing some argument.
00:21:56.260 - 00:22:09.530, Speaker B: I see. Third question here. I created a channel using the wrong website.
00:22:09.530 - 00:22:16.522, Speaker B: Can update the channel with localhost address. Totally. Edward asked this question if he can update a channel setting.
00:22:16.522 - 00:22:34.398, Speaker B: Yes, now you can. Before you couldn't, but now you can with the devil. So we send notifications using the SDK.
00:22:34.398 - 00:22:54.362, Speaker B: I want to show you guys something very nice that we personally like a lot, which is how to display the notifications on your DAP. So I have a branded code here able to get start. So this is how to display the notifications on your own depth, right.
00:22:54.362 - 00:23:10.670, Speaker B: So here, let me show you where this comes from. So the code to display the notifications, I just got from Docs as well. So if you go to Docs Bush, you go to Receiving notifications.
00:23:10.670 - 00:23:37.640, Speaker B: We're integrating front ends, integrating notifications. So all the codes that I showed there here on the Docs integrated front end batch user channel names, all this folder is doing here show you the end result. We have a react component that displays the notification exactly like this.
00:23:37.640 - 00:23:44.380, Speaker B: So these were some demo that I was doing. You can see Notifications has YouTube biddings. They're pretty direct.
00:23:44.380 - 00:24:00.670, Speaker B: So we can depart this on your own DA display notification there. So you don't need to tell your users to go to alternative notifications and then call to do this. Pretty straightforward.
00:24:00.670 - 00:24:16.606, Speaker B: It's just notification. Yes. So all it does is we have a reactible bonus called Notification item.
00:24:16.606 - 00:24:38.330, Speaker B: And these notification items responsible for rendering the notifications like this, as we can see here. And this is getting called Mulching. We're calling this.
00:24:38.330 - 00:24:50.172, Speaker B: Yeah. And this is called by that scenario, with the current setup, that's zero. Yeah.
00:24:50.172 - 00:25:13.912, Speaker B: And that notification components here is being called here on the apps JS. And all it's doing is we're using the rest API SDK to get the notifications. Yeah, we're just using the push SDK get feeds function to get the notifications.
00:25:13.912 - 00:25:31.968, Speaker B: And then we'll pass the notifications. We get the array of notification, and that we pass the array of notifications to direct opponents that we had postpristrate forge and displayed the notification level that but please, if you have any questions, just ask. You can ask us on Discord.
00:25:31.968 - 00:25:53.004, Speaker B: Me personally, I will be on Discord to answer more questions and we have a lot of team members there as well to help to assist you in the questions that you've had. There are other ways to send notifications, but I'll just briefly touch up on them. First of all, you can send all chain notifications as well.
00:25:53.004 - 00:26:23.172, Speaker B: And what does it mean? For example, let's say that you have a smart contract and from the smart contract itself you want to notify another wallet that something happened on your smart contract. You can do this. You go to Docs Wish, click on Sending Notifications using Smart Contracts and here all you have to do is to do a function call to the Push protocol smart contract and all the rest taken care of.
00:26:23.172 - 00:26:43.390, Speaker B: We take the event, interm the event notification and then we inspect the notification. We also have another way to send notification, which is by using subgraphs. So if you have subgraph, if you already have an existing subgraph, you don't have to change anything to start sending notifications from the subgraph itself.
00:26:43.390 - 00:27:12.174, Speaker B: We have a helper function that you can import and from the helper function itself that we provide, we take care of getting the event and respecting the notifications for you. I see a couple more questions here. Is Push to a call available on FPM? Yes, so we're on FPM as of now.
00:27:12.174 - 00:27:41.654, Speaker B: So I think we're going to be deploying this on QR main debt by tomorrow. So I'll say probably by tomorrow morning, VTC starts sending notifications from FPM whether they're on chain off chain manual using the SDK. The Push protocol has been developed from the ground up to be EVM compatible and in future we're going to be in other game chains as well, non EVM chains as well.
00:27:41.654 - 00:27:56.824, Speaker B: But yes, by tomorrow we can send notifications. Similar question here. Using Push SDK, can we make push group chats ourselves? Basically set up using just chat components.
00:27:56.824 - 00:28:16.870, Speaker B: If you use the SDK, is it good to make a group chat? That's a good question. You can so basically you can replicate the group in a sense that for example, I send a message to a group and we have three members, I can send the same message to all the other members. So you can manually create a group.
00:28:16.870 - 00:28:49.448, Speaker B: All I have to do is just iterate over the people want to send message and send to them yes, this question that answering yes would be possible to do. All you have to do is to move over the people who want to send message and then send a message and they're going to get notification whenever they receive a message. But what I can say is we're almost done with the group chat implementation SDK.
00:28:49.448 - 00:29:01.788, Speaker B: So what I can say is, in a couple of weeks we're going to launch this. You can just use the chat react component and we're going to be doing on your behalf. So you just care on your logic.
00:29:01.788 - 00:29:16.384, Speaker B: But if you want to do the second of this, please go ahead. I hope I answered your question. Another question here is India hackathon conducted simply.
00:29:16.384 - 00:29:26.312, Speaker B: My group had used PushPro calls on you guys, had provided API key. Will the API key also work? No. That's an amazing be.
00:29:26.312 - 00:29:39.360, Speaker B: You can use the same API key, no problem. If you need another just because of discord. One question for Bola Ahmed.
00:29:39.360 - 00:30:09.908, Speaker B: Does this work with Smart Contract address as well or with Els? Since we do not have interface smart Contract like for EMIs, literally, you can send notifications from Smart Contracts as all, no issue at all. If you just want to see how it looks like, go to docs push or send notifications using Smart Contract. And then you can all have to do is to call this function on our contract and we'll have a sample code here that just copy and paste.
00:30:09.908 - 00:30:46.710, Speaker B: That is how the notification looks like, but it can trigger a notification unchecked. And we ask the question, is it available in hyperspace currently? No, not currently. Another question from Sohab can you give us some insights on how those push chat do a gasless transaction? So whenever I send a chat message, they are not stored on chain, so they're gasless because the chat messages, they're stored on network, so there's no cost to send chat messages.
00:30:46.710 - 00:30:58.954, Speaker B: So each chat message or notifications, they're not stored, don't change. They're stored all the push and effort or IPFS, it's flexible. So for this reason, you don't pay per message.
00:30:58.954 - 00:31:13.472, Speaker B: That's why we don't have to pay anything. We can do it perpetrator gases. Yeah, I think that was all the questions.
00:31:13.472 - 00:31:23.350, Speaker B: If I had any other questions, just I think that's it. Thank you so much for being here.
00:31:24.920 - 00:31:38.300, Speaker A: Yeah, thanks Fabio for doing this awesome workshop for the spaceborp hackers. This will be a great resource as people do their hacks for the future. And thanks so much for the rest of you for tuning in.
00:31:38.300 - 00:31:46.520, Speaker A: We do have another workshop in a couple of hours, so hope to see you there. And with that being said, I hope everyone has a great rest of your day. Bye.
