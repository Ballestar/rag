00:00:07.450 - 00:00:11.354, Speaker A: Hey, everybody. My name is Nick. I'm a developer from Xmtp.
00:00:11.354 - 00:00:23.120, Speaker A: And today I'm going to be showing you all how to build your bot army with Xmtp. So first, let's back up. What is Xmtp? It is the secure messaging network for Web Three.
00:00:23.120 - 00:00:41.122, Speaker A: And so what problems is Xmtp designed to solve in the Web Three world? There are some problems that anyone who's built a DAP has probably experienced. It's hard to reach your users if all you have is a zero X address. If you're a creator in Web Three, you can't interact with your audience.
00:00:41.122 - 00:00:58.350, Speaker A: Maybe you sold 10,000 NFTs, but how do you actually talk to them? How do you get feedback from them? And users can't reach each other. We see decentralized marketplaces, but there's no chat button. There's no way to communicate between different participants in this on chain economy.
00:00:58.350 - 00:01:11.410, Speaker A: Xmdb is also designed to solve some of web two's biggest problems. In web Two, messaging is siloed. Inside each app, I can't send a WhatsApp message to Snapchat or a Twitter message to Facebook.
00:01:11.410 - 00:01:24.694, Speaker A: That's because you don't own your messages, the apps do. And they want to control them very tightly. So Xmtp was created with Composability and Interoperability in mind, as you can see here.
00:01:24.694 - 00:01:37.894, Speaker A: These are three different apps on Xmtp, and you can have one inbox shared between them. You can send a message from coinbase wallet to Lenster. You can use Converse to see the exact same inbox as your Coinbase Wallet.
00:01:37.894 - 00:01:54.530, Speaker A: And that's a really powerful unlock for developers. It means anyone getting started can have access to the inbox of their user, even if they've been using Coinbase Wallet for the last know. If you have a better app, it's really easy for people to switch over to yours.
00:01:54.530 - 00:02:20.880, Speaker A: So if you want to say hi, you can scan one of these two QR codes, one's for Coinbase Wallet and one is for an app called Converse. And just shoot me a message and I can pull it up on the screen here. Hold on, let me go back.
00:02:20.880 - 00:02:51.682, Speaker A: Somebody's got to send me a message. There we go. So this is our example app.
00:02:51.682 - 00:03:13.992, Speaker A: Xmtp is not in the app business, but we have a nice little web example at Xmtp chat just so debs have something to play. So I want to show you a few of the apps built on top of Xmtp. This is probably the biggest bot army on the network right now.
00:03:13.992 - 00:03:34.400, Speaker A: Coinbase launched on chain Summer in August and built a massive list of users on the Xmtp network. They were getting drops every day for new NFTs to Mint, and you could actually mint an NFT in like two taps from getting a message. So became really popular.
00:03:34.400 - 00:03:49.510, Speaker A: Orb is one of the most popular apps in the Lens ecosystem. All Lens apps use Xmtp as the default messaging layer. And so if you have Orb, you have Xmdp on your phone, even if you don't know it.
00:03:49.510 - 00:04:28.758, Speaker A: At this event we're launching a new bot that you can actually order toothpaste, deodorant, Red Bull anywhere in this venue on Xmtp you can come by our booth, scan the QR code and then order anything day or night and we will come delivered to you. This is powered by ENS and an app called Chainjet that built the bot framework for it. Very cool, highly recommend you try and pretty much everything on the menu is $0 and biggest launch of this summer we launched Messaging inside Coinbase Wallet.
00:04:28.758 - 00:04:44.682, Speaker A: So anyone who has access to Coinbase Wallet can actually have an inbox and send messages inside Coinbase Wallet. Converse is an app based out of France. They have a really cool feature where they can do matchmaking based on your on chain interactions.
00:04:44.682 - 00:04:54.398, Speaker A: So they'll look at your Farcaster or your Lens Social graph and tell you who you should be chatting with. Very cool. Highly recommend you try it out.
00:04:54.398 - 00:05:13.116, Speaker A: And there's know hundreds more apps built on top of Xmtp, including a whole lot that came out of hackathons just like this one. The reason we have so many apps is because this is designed to be a simple protocol for developers to pick up, send and receive messages. You can see a bit of code here.
00:05:13.116 - 00:05:42.644, Speaker A: This is really all you need to do a full round trip on the Xmtp network, create a random wallet, create a client, start a new conversation with some address, read the messages, send a message, and you can listen on a stream of all messages. And that's kind of all you need to build any sort of a messaging app. But what we found is that when you're building a bot, you have more demanding needs.
00:05:42.644 - 00:05:55.152, Speaker A: And so we wanted to build a framework to allow any developer to build a really high quality bot. Bots are an essential part of any sort of messaging ecosystem. DApps use them to keep in touch with users.
00:05:55.152 - 00:06:16.610, Speaker A: They can connect from your wallet to all kinds of services like Chat, GPT and allow you to build really complex workflows without smart contracts or needing a lot of complicated on chain code. You can just spin up a bot, write JavaScript and have a very sophisticated application. And so that's what we're going to do today.
00:06:16.610 - 00:06:37.796, Speaker A: Yeah, this botkit pro was released last week, but I think you're the first people to ever look at it since we kind of soft launched it. But it's designed to just make building a high quality bot dead simple and follows all the best practices that we've been educating developers on for building a good bot. So I have a replete.
00:06:37.796 - 00:06:50.990, Speaker A: If anyone has their laptop and wants to follow along at home, you certainly can. And then I'm going to run you through what it looks like to build this bot. Give everyone a second to take down the address that'll pull up the code.
00:06:50.990 - 00:07:43.620, Speaker A: So this is the simplest bot you build with Xmdp. This is all you need as a handler for the bot. It's just going to reply GM anytime a message comes in.
00:07:43.620 - 00:08:04.646, Speaker A: We have this run function that lets you pass in that little bot here and connect to a database to store the messages and allow you to resume. If your bot gets interrupted, it can go back and fill in missing messages, which is a common pain point for people who are trying to run actual bots in production. You don't want to miss anything.
00:08:04.646 - 00:08:12.854, Speaker A: Gives people a bad user experience. So we built this to smartly. Just pick up where it left off, fill in any missing messages, and send replies.
00:08:12.854 - 00:08:28.830, Speaker A: So we can actually run this bot in the terminal right here. All right. And this has printed a QR code of how to message this bot.
00:08:28.830 - 00:09:02.164, Speaker A: If you want the very exciting experience of getting a GM back from this code, you can scan the QR code right now, shoot a message in converse, and hopefully this will work. Oh, I see messages coming in. So sending a GM, that's good and fun, but a lot of people want to build much more sophisticated things inside of their bots.
00:09:02.164 - 00:09:35.328, Speaker A: And so we're going to run through a more powerful example using some of the advanced features of Xmtp. Xmtp has a notion of content types, and so in addition to text messages, you can also send images, videos, you can send reactions and replies. So we're going to use the remote attachment codec, which lets you upload media and a number of Xmtp apps already have built in support for the remote attachments, and we're going to use that to do a GIF search bot.
00:09:35.328 - 00:09:49.924, Speaker A: And so let's make sure this thing runs. So let me show you what the code for our gifsearch looks like. This is the bot handler.
00:09:49.924 - 00:10:01.500, Speaker A: So this is all the code that will run every time a message comes in. And so it comes with the Xmtp message that was delivered. Message content property is going to be the text.
00:10:01.500 - 00:10:19.700, Speaker A: So someone's going to ask for know office GIF maybe. So search query is the office. I wrote a little wrapper for the Tenor API, and so we're just going to search Tenor, which is free GIF search engine and get back the URL of the GIF.
00:10:19.700 - 00:10:29.600, Speaker A: Since I don't work for tenor, we're not going to go too deep into that. Once you have that, we got to create an attachment. Attachments aren't actually stored on the Xmdp network.
00:10:29.600 - 00:10:44.628, Speaker A: We're kind of designed for small, lightweight messages and movie files or multi megabyte gifs. Not a great fit. And so what we do is we actually upload this to IPFS, and then we have a pointer to the encrypted file on IPFS.
00:10:44.628 - 00:10:58.800, Speaker A: So the file is public, but no one can read it except for the recipient of the message that has the decryption keys. So I can run through the code here for creating an attachment. So we're actually going to download the file so we have the bytes.
00:10:58.800 - 00:11:30.170, Speaker A: We're going to create this encrypted attachment where we have some very nice helpers built into the codec. This is all a package called Xmtp Content Type remote attachment, which you can use to send files, movies, whatever you want on the Xmtp network of unlimited size, since you're going to store it somewhere else and just have to take care of having enough credits in your IPFS token. So you create this attachment and then we can send it.
00:11:30.170 - 00:11:51.040, Speaker A: And so when you send something with a custom content type, you just have to specify what content type it is. That also comes from the Xmtp Content Type remote attachment repo and you pass in that attachment and it'll send that reply. So we're going to restart this bot now with the GIF.
00:11:51.040 - 00:12:04.964, Speaker A: Going to turn off the GM bot. All right. And we got a new QR code.
00:12:04.964 - 00:12:35.070, Speaker A: This bot's going to be on a totally different address, but let's see if it can actually send you a GIF. You could put in anything you want. It's going to search tenor, which is the equivalent of Jiffy, get you back a matching yeah.
00:12:35.070 - 00:13:06.984, Speaker A: All right, so we have five minutes left on this talk. I want to open things up for Q a, what can I answer for you about Xmtp? Shoot, not currently. They have their own kind of custom.
00:13:06.984 - 00:13:22.876, Speaker A: Oh. The question is, does Farcaster use Xmtp? And the answer is no, they have their own kind of homebrewed DM solution if you think they should use Xmtp. Love it if people get vocal and in their face about it.
00:13:22.876 - 00:13:34.770, Speaker A: We certainly have a lot of chats with the Farcaster team. I think everyone would love to move to a single interoperable standard. I think they'd like to see that there's support from their users as well.
00:13:34.770 - 00:13:41.866, Speaker A: Yes. A dash. My desktop beer.
00:13:41.866 - 00:14:00.102, Speaker A: And it's only accessible. That's right, yes. So the way that it works is we just generate a random encryption key on the sender side and we send that as a message along with the URL of the encrypted content.
00:14:00.102 - 00:14:09.580, Speaker A: And so both sides who have access to that message have all you need to decrypt the content. And so you can see it as well. Yes.
00:14:09.580 - 00:14:40.018, Speaker A: Oh, what about heavy files? So, in the case of remote attachments, storage is handled off of our network and so you can make it as heavy as you want. Obviously, it's going to be a strain on the recipient. If you have a five gigabyte file, we tell app developers to make it an explicit action to download the content so that you can't just accidentally download a four gigabyte movie on your phone if someone sends it to you.
00:14:40.018 - 00:14:47.122, Speaker A: And that's kind of a good UX practice. But us as a protocol, we don't specify that. It's just what we tell developers to do.
00:14:47.122 - 00:15:02.122, Speaker A: And if you look at most apps in the ecosystem, they will try and do that. We also do include the size of the file. And so you could build an app that would download something if it's under five megabytes and then ask you to download it if it's over five megabytes, something like that.
00:15:02.122 - 00:15:38.090, Speaker A: That's all possible. All right, if there's no other questions, we will be at the booth right next to Base and the EF and ENS, and you can come by anytime and ping me for questions. I think this botkit pro is going to be a fun tool to build hackathon projects with, so I hope to see a lot of people trying.
00:15:38.090 - 00:15:56.460, Speaker A: Oh, the question is, is there an environment we recommend? I am the developer of this botkit Pro, and it's very new. It works definitely on Linux and macOS windows. Your mileage may vary, but I'm happy to help you work through whatever issues there are.
00:15:56.460 - 00:16:09.490, Speaker A: It's a simple node JS app. It runs in docker too, so you could definitely make it work inside a docker container. All right, thank you, everyone.
