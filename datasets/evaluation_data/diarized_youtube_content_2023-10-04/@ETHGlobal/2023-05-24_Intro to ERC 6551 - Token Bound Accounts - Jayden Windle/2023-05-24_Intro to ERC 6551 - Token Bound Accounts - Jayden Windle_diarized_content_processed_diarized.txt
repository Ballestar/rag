00:00:07.530 - 00:00:22.382, Speaker A: Cool. So this is going to be a talk. This talk is an intro to, ERC six, five, one this is an upcoming standard as an EIP, and this kind of talk is going to be a walkthrough of what it is, how it works, why it's important, and most importantly, how you can use it to build cool stuff at the hackathon this week.
00:00:22.382 - 00:00:28.626, Speaker A: So before we go too much farther, obligatory intro slide. I'm Jaden, I'm one of the founding engineers at Future Primitive. We're a venture studio.
00:00:28.626 - 00:00:36.226, Speaker A: We build crazy crypto stuff. I'm also one of the authors of, ERC six, five, one. If you want to follow me on Twitter, that's where you can DM me teacher Primitive.
00:00:36.226 - 00:00:44.822, Speaker A: So we are a on chain venture studio. We build crazy crypto experiments and we love everything NFTs. Benny, one of our founders, is sitting here in the front row.
00:00:44.822 - 00:01:07.902, Speaker A: He was one of the founding team of CryptoKitties back at ETH Waterloo, an early ETH global hackathon, and from there worked with Dapper, where they launched Cheese Wizards and Top Shot. So been around in the MFT space for a long time and have launched a lot of crazy NFTs since then. You can see a couple of the ones we built here, but we believe really deeply that NFTs are much more than just a financial commodity or something you buy, sell and flip.
00:01:07.902 - 00:01:19.570, Speaker A: We believe really strongly in the potential of NFTs as an on chain medium. We think every NFT should be able to do more than just be an asset that sits in your wallet. Shouldn't just be a static image, a static thing that sits there.
00:01:19.570 - 00:01:33.862, Speaker A: NFTs should be able to own things. They should be able to take actions and do things. They should be able to change states, they should be able to claim things like airdrops, they should be able to be used as an ethereum identity because that's the potential of NFTs as a token.
00:01:33.862 - 00:01:49.566, Speaker A: But right now it's not really realized NFTs are just a thing that sits in your wallet. So how can we change that? I mean, if you zoom out on the history of media on the Internet as a whole, JPEGs kind of brought media onto the Internet, where you can now see images online. And then we built stuff like Facebook and things like that.
00:01:49.566 - 00:01:57.754, Speaker A: We could start doing things with media. You can start liking it, you can share it, you can send it to your mom, you can do all these things with media. And then NFTs took that even further.
00:01:57.754 - 00:02:04.522, Speaker A: Now, not only can you interact with media, you can also own it. You can buy it, sell it, trade it, you can own a piece of it. It lives on chain.
00:02:04.522 - 00:02:15.826, Speaker A: And we think kind of the next evolution of NFTs is that you can become your NFT. You can use your NFT, you can interact with it. It's no longer just a thing that gets passed around it's its own unique identity.
00:02:15.826 - 00:02:27.642, Speaker A: And that's what ERC six five one is designed to allow. ERC six five one were the token bound account standard. This is a proposal that gives every single NFT a wallet and not just new NFTs that you build.
00:02:27.642 - 00:02:41.146, Speaker A: Every NFT that's ever existed on any EVM compatible chain has a wallet now that it can start using today. And you can see up here, these are real wallets, real token about accounts for these NFTs on ethereum. So now every NFT is a wallet.
00:02:41.146 - 00:03:05.190, Speaker A: NFTs can do crazy things like own any kind of asset because it's just a wallet your NFTs can connect to DApps you can trade your favorite meme coin on uniswap using your NFT rather than using your wallet. Your NFT is that same ability that used to be only something that wallets could do. And NFTs can have their own transaction history, right? With their own wallet, they can generate their own history outside of the history that your wallet creates.
00:03:05.190 - 00:03:16.758, Speaker A: So how does that work? So, ERC six five one, the standard, you go and read it, it's live on the EIP page. What it does, it defines a single registry that is permissionlessly deployable. Nobody owns it, it's fully decentralized.
00:03:16.758 - 00:03:37.838, Speaker A: You can deploy it on your favorite chain, this hackathon, if it doesn't exist there yet. And that registry gives every NFT its wallet address and it does so using the magic of create Two, create Two lets you deploy smart contracts to predetermined addresses. And so the registry reserves wallet addresses for every NFT that's ever existed or ever will exist.
00:03:37.838 - 00:03:53.346, Speaker A: Every NFT gets a unique wallet address that only the owner of that NFT will be able to use. And so when that wallet address is deployed, the only person who can use that wallet is the owner of the NFT. You can think of it kind of like a token gated, one of one safe.
00:03:53.346 - 00:04:05.542, Speaker A: The owner of the NFT will always own the wallet and all assets inside it and all execution permissions on the wallet. And this is all allowed by having that registry that's open and public. The whole source code is in the IP.
00:04:05.542 - 00:04:09.580, Speaker A: You can go and start using it today. It's fully decentralized, works with every NFT. It's pretty cool.
00:04:09.580 - 00:04:55.062, Speaker A: One of the things we get asked a lot since we started this process of trying to get this standardized as an EIP is, well, wait, isn't this just X? Isn't this just, ERC, nine nine eight? Didn't we do this a long time ago? Isn't this just some other, ERC, isn't this just some other centralized company that I've heard of that does like NFT nesting or NFT holding things? And we've built with all of those at Future Primitive. We built a lot of experiments with NFTs and we've used all the tooling that's out there and none of the things that we saw really fit our use case because we had some really core beliefs about what NFTs should be able to do. What rights should an NFT have? First of all, every NFT should get a wallet, not just some NFTs that implement a certain standard, right? Just because you launched your NFT a long time ago doesn't mean your NFT shouldn't be able to use all of these cool features.
00:04:55.062 - 00:05:06.714, Speaker A: And most of the standards out there, they only work for new NFTs and they only work for a subset of NFTs and so that didn't fit our use case. We also wanted NFTs to be able to own anything. They shouldn't just work with some types of assets.
00:05:06.714 - 00:05:19.858, Speaker A: It's no fun if your NFT can only own other NFTs in the same collection. NFTs should be able to own anything, ERC, twenty s, seven twenty one s, eleven fifty five s. If somebody comes out with a crazy new token standard tomorrow, it should work with your NFT, your NFT should be able to own it.
00:05:19.858 - 00:05:39.378, Speaker A: And the big thing was we wanted all this to work without any contract, wrapping or burning. A lot of the other standards, if you wanted to use existing NFTs with them, you'd have to wrap the NFT into another NFT that could then be used with the standard. And wrapping NFTs is great for some mechanics, but in a lot of ways you lose the provenance and the value of the original NFT when it gets wrapped.
00:05:39.378 - 00:05:57.290, Speaker A: So we wanted to do all of this without any wrapping and we wanted to work with existing platforms, right? It's cool if your NFT can own things, it's cool if your NFT can own anything. But if you can't see the things your NFT owns anywhere other than some app that somebody builds, that's no fun. It should just work with existing infrastructure so you can see what your NFT owns.
00:05:57.290 - 00:06:08.970, Speaker A: And finally, it should be fully decentralized. There's a lot of other projects that do this in like a centralized we've got upgradable contracts, everything goes through one place. We really think that NFTs should have their own self sovereign wallets.
00:06:08.970 - 00:06:17.250, Speaker A: Nobody should be able to control what you do with your NFT. It's a bear asset, it's something you own. The chain should be true of the things that your NFT owns.
00:06:17.250 - 00:06:30.342, Speaker A: And so we thought all of this was really, really important and we didn't see anything out there that did all of these things. And so we started talking to friends of ours about this idea we had about giving NFTs wallets and they were like wow, this is super cool. We would use this for a whole bunch of things.
00:06:30.342 - 00:06:42.160, Speaker A: And as soon as we heard that, we know this is way bigger than just our projects, just things we want to work on. This should be a standard that every NFT should be able to use, that every Ethereum should be able to use. So we launched DRC six five one.
00:06:42.160 - 00:06:56.254, Speaker A: Now you're an NFC developer, you're here at a hackathon, you're building cool stuff, you kind of have the chance to choose your own adventure. If you're building with NFTs, there's a couple of options you have. First, you can just pull like an off the shelf open Zeppelin NFT, spit it up and then you can worry about all the utility for it later.
00:06:56.254 - 00:07:18.806, Speaker A: If you want to build like a staking contract, you want to build some game mechanic with your NFTs, you can launch a really plain NFT and then put all the logic in some external contract that you use. That's good and all, but you have to build a whole bunch of custom contracts and it's only going to work with some NFTs. I mean, you can make it work with all NFTs, but there's just some necessarily non standard things you're going to be able to do to make that work.
00:07:18.806 - 00:07:32.766, Speaker A: And so it's not going to work with every system out there because a lot of it has to do with wrapping NFTs or burning NFTs when they go into a certain circumstance. And so you can do it, it just gets kind of messy and everybody does their own thing. And then if you're going to bring this to production, you've got to get an audit, you got to do all of that.
00:07:32.766 - 00:07:46.926, Speaker A: It could be pretty heavyweight. The other alternative you have is to use one of these other standards that have come out. You could build your NFT project on something like ERC nine nine eight and you could write all of the logic about your NFT owning things into the core NFT contract itself.
00:07:46.926 - 00:08:02.658, Speaker A: You can do that. The problem is with standards like ERC nine nine eight, it only works with NFTs and ERC twenty S and I think only NFTs and ERC twenty S that also implements the sum nine nine eight compatible interface. And so you can build all this logic into your NFT contract, but you're making some trade offs.
00:08:02.658 - 00:08:14.650, Speaker A: It might not work with every other token out there. Your NFT might not be able to own every other thing and that's only talking about ownership. It's not talking at all about being able to use your NFT to interact with DApps or all of those other things.
00:08:14.650 - 00:08:34.090, Speaker A: So you can build a lot of logic into your NFT contract, but at the end of the day it'll still be hindered by even if it is using some sort of standard, it's not going to have the same level of compatibility that your NFT having a wallet is going to have. Because wallets are universally supported. Any application on Ethereum has some concept of a wallet and some support for the concept of a wallet.
00:08:34.090 - 00:08:55.558, Speaker A: So your third option with ERC Six five One is you can launch the most boring NFT. Nothing special about the NFT contract. You could launch an open edition or you could launch an open Zeppelin fork and all of a sudden every NFT you've launched will have its own wallet and you can start building and putting things in that wallet, building authentication logic using those wallets and your NFT project doesn't have to be anything crazy.
00:08:55.558 - 00:09:05.046, Speaker A: You don't even have to write very much custom code to support this. Your NFT can just own things and do things out of the box and that's a really powerful mechanism. You don't need to make this decision when you're launching your NFT.
00:09:05.046 - 00:09:17.534, Speaker A: You don't need to do crazy custom contract development afterwards. You can just bank on the fact that every NFT in the collection that you launch has a wallet and you can build applications around that because that's a really powerful medium. Some cool things you can build with this.
00:09:17.534 - 00:09:32.238, Speaker A: So this kind of turns every NFT into a folder. So if you're doing Airdrops or if you're collecting COAPS, or if you've got soulbound tokens in your project, all of a sudden NFTs can start collecting those poaps and those soul bound tokens. You can start putting assets inside of an NFT.
00:09:32.238 - 00:09:42.520, Speaker A: This opens up some really cool mechanics that you can build inside of a hackathon project. And especially for airdrops. It's really interesting when, say, you have a big collection of NFTs and you want to do an AirDrop to all of them.
00:09:42.520 - 00:10:04.990, Speaker A: Every NFT having a static token bound account address versus a dynamic owner address makes stuff like Airdrops really easy because you don't have to do snapshots and you can do some really neat gas hacks to save gas when doing that. So your NFT being able to have a wallet you being able to put assets into it is a really cool thing that you can use for your hackathon on projects this week. A couple of other interesting ideas to throw away Dao membership.
00:10:04.990 - 00:10:19.646, Speaker A: A lot of DAOs have this concept of a membership card or an NFT that represents your membership in the Dao. You can see in this case, this is the FWB membership card NFT. And the more things you do within the Dao, the more stickers you collect to prove that you've done things in the past.
00:10:19.646 - 00:10:35.218, Speaker A: Except as it stands right now, all of that just sits in your vault. So every time you do something in the Dao, it's your wallet that gets the sticker. But what happens if you sell the membership card but keep all the stickers? You kind of have this weird out of sync history about your participation in the Dao where you keep the membership card, but you sell all your stickers.
00:10:35.218 - 00:10:56.058, Speaker A: What are you supposed to do with that? When all of the NFTs are supposed to render the card and all of the stickers? You just get this weird kind of out of sync this because the membership card isn't really your four membership in the Dao, your wallet is. And trying to represent that as an NFT gets difficult. But with tokenbound accounts, your NFT can actually own all of the artifacts from the actions it's taken within the Dao.
00:10:56.058 - 00:11:18.146, Speaker A: Your NFT can be the core participant in the Dao rather than your wallet being the core participant. And your NFT can collect artifacts about its historical contributions to the Dao, can collect soulbound tokens, it can collect Attributions, and all of that will go wherever the NFT goes. If you sell that NFT on OpenSea, all of that history goes with the NFT to the new owner, whereas before it's just stuck in your wallet address.
00:11:18.146 - 00:11:38.822, Speaker A: And finally, this is a really cool mechanic for on chain gaming because it works with every asset. So your characters in the games can own ETH or they can own meme coins, or you can represent items in the game as 1155. And because every NFT has its own wallet, you can have your character represented as an NFT collecting all of these assets in game.
00:11:38.822 - 00:11:53.966, Speaker A: And then when you go to sell your character, all of the assets it's collected over time go with the character versus right now, if you're putting all of those assets into somebody's wallet, then they can sell the character but keep all the assets. Or sell all the assets but keep the character. And you have to figure out how to do like bundle orders on OpenSea to make that work.
00:11:53.966 - 00:12:03.970, Speaker A: It just gets messy. But with this, characters can be represented as NFTs and this forms a really interesting basis for on chain inventory management inside of an on chain gaming context. So, crazy amount of stuff.
00:12:03.970 - 00:12:18.594, Speaker A: We can go down many, many deep rabbit holes to share what that's all about. But to start, we'll get to a demo eventually, but we've got a crazy community of developers who have helped contribute to this standard. There's been a ton of folks in our DMs in a Telegram working group that we've formed.
00:12:18.594 - 00:12:29.754, Speaker A: If you want an invite to join, come see me afterwards. We'd love your contributions. Because with EIPS, the biggest thing is getting community support is rallying the community to come to consensus about what is the standard that should be there.
00:12:29.754 - 00:12:45.214, Speaker A: We really think it's important that the concept of NFTs having a wallet, NFTs having an account, is something that everybody agrees upon, that we can come to consensus on. And so people at all of these companies have been helping us do that. We've got a killer group of devs if you want to join, so I'll give you a quick demo.
00:12:45.214 - 00:12:53.486, Speaker A: We built a bunch of tooling around this. If you want to build on top of ERC, six, five one at the hackathon, we've got some tooling for you. So the first thing we've built is an Explorer.
00:12:53.486 - 00:13:10.294, Speaker A: You can think of it as Ether scan for token bound accounts for any NFT that exists, you can find its wallet address and you can interact with the wallet if you're the holder of the NFT. Let me just see if this works here. I'm going to pop this open all right, does anybody have an ENS address? I'll just pick someone random in the audience.
00:13:10.294 - 00:13:29.770, Speaker A: Okay, what's your ENS? Zero xjax ETH Jacquese okay, so I'm going to go to Etherscan, and I'm going to grab your wallet address so Ether scan doesn't think of a BOP. Okay. It's not the right wallet address.
00:13:29.770 - 00:13:51.664, Speaker A: Okay, yeah, give me a different one. Whale East John. Okay.
00:13:51.664 - 00:13:55.884, Speaker A: I don't see it anyways, I'll use mine. It would have been super cool to use somebody in the audience's. Butt.
00:13:55.884 - 00:14:00.436, Speaker A: Oh, yeah, sure, yeah. Jordan Public. Okay.
00:14:00.436 - 00:14:08.116, Speaker A: Jordan public east. Okay, is this the right wallet address? AAC two. Perfect.
00:14:08.116 - 00:14:16.884, Speaker A: Okay, so let's go and take a look at all of your NFTs there Jordan. So I just got to paste your wallet address in here. And so here are some NFTs you owe, right? You've got a pragma? NFT.
00:14:16.884 - 00:14:20.148, Speaker A: You've got JordanPublic ETH. So let's pick the pragma. NFT.
00:14:20.148 - 00:14:28.876, Speaker A: So here's the NFT, and here's the wallet address. Your NFT is a wallet, and you can see it there. So if I pop this guy open here in Etherscan, you can see it's got a wallet address.
00:14:28.876 - 00:14:42.556, Speaker A: It works just fine. So now what I'm going to do is I'm going to go into a NFT that we have. This is our nice feature primitive logo here, and I'm going to AirDrop an NFT into that NFT's wallet.
00:14:42.556 - 00:14:50.950, Speaker A: Let me just send this through. Yeah, you got the free AirDrop here. So if we just wait for that transaction to go through.
00:14:50.950 - 00:15:12.568, Speaker A: Excuse me. Well, the Ethereum network takes a little while. Cool is in there in the MetaMask.
00:15:12.568 - 00:15:15.708, Speaker A: Oh, I airdropped in the MetaMask. Oh, my bad. Yeah, sorry.
00:15:15.708 - 00:15:19.490, Speaker A: Let me AirDrop it in the Tokenbound account today. You get two. You get one in your MetaMask, too.
00:15:19.490 - 00:15:28.874, Speaker A: All right, pop it in there. Great. And we're going to put one in the Token bound account of the NFT.
00:15:28.874 - 00:15:37.198, Speaker A: So in a second, when that happens, you'll see that NFT just shows up here. It shows up in this wallet. Because this NFT's wallet now owns that NFT.
00:15:37.198 - 00:15:48.114, Speaker A: We just use an external tool that knows nothing about Token bound accounts, knows nothing about ERC, six, five, one. And it just works. If you want to AirDrop NFTs to this wallet as the way we refresh the page, bam.
00:15:48.114 - 00:15:57.202, Speaker A: This NFT now owns this token. And this works anywhere. Like, you can copy the same address and go see it on Openc, right? If I copy and paste this address in here on Openc whoops.
00:15:57.202 - 00:16:05.180, Speaker A: Sorry, I got to search for a wallet. There we go. If we go see this address on OpenSea, you can see that it's probably going to be under Hidden, because we just Airdropped it.
00:16:05.180 - 00:16:17.616, Speaker A: Sorry. OpenSea sometimes hides it when it's an AirDrop like that, especially when it's an Open edition. But it is in there.
00:16:17.616 - 00:16:31.782, Speaker A: You can go see it on Etherscan. If we pop this guy back open, you can see that the NFT really exists. We go under NFT transfers.
00:16:31.782 - 00:16:44.106, Speaker A: You can see we minted this NFT into this wallet. So stuff like Etherscan, stuff like OpenSea, all of that, it all just works. Even despite not knowing about this NFT being owned by an NFT, it knows this NFT is owned by a wallet.
00:16:44.106 - 00:16:55.074, Speaker A: And that's really important because wallets are universally supported on Ethereum. Doesn't matter what you're building, you're going to support wallets. And if you support wallets, you naturally support six five five, what out of the box.
00:16:55.074 - 00:17:08.042, Speaker A: That's part of the power of this. And so by giving every NFT a wallet, we let NFTs participate equally in the Ethereum ecosystem. Just like any human, just like any wallet, ethereum NFTs can participate.
00:17:08.042 - 00:17:15.314, Speaker A: And that's a really, really powerful thing. There's a ton of stuff we go into that to start, because this is the hackathon. We'll dive in mostly into what you can use this weekend.
00:17:15.314 - 00:17:19.074, Speaker A: So the explorer is there. You can check it out. Works on main net works on Gurley.
00:17:19.074 - 00:17:29.806, Speaker A: Adding polygon support this afternoon for you guys who want to play around on Lens, because there's some really cool things with Lens. We're also sponsoring a bounty with Lens if you want to build a cool Lens X 6551 integration. But the Tokenbound explorer is there.
00:17:29.806 - 00:17:36.174, Speaker A: You can go to Tokenbound.org for any NFT you own. You can see its wallet, and you can start using its wallet today, which we think is pretty cool.
00:17:36.174 - 00:17:51.294, Speaker A: Second thing we build is an SDK. So if you want to build deep support for ERC six five one accounts into your application, you can install the Tokenbound SDK. It's on GitHub NPM install at Tokenbound SDK if you're using VM SDK, ethers if you're using Ethers.
00:17:51.294 - 00:18:09.434, Speaker A: If you have issues with that, come see me, happy to help out. But you can just pull this into your applications and start calculating the addresses for any NFT right away. If you launch an NFT this weekend, you can get the address for that NFT within your application and start airdropping stuff into it, or start executing transactions from that NFT's wallet within your application.
00:18:09.434 - 00:18:15.302, Speaker A: And you don't have to worry about any of it. You can just pull in the NFT. You can just pull in the SDK and go to Tout.
00:18:15.302 - 00:18:22.650, Speaker A: It works really simply. The other thing we've launched is a Token bound wallet. So it's actually really hard to build a wallet.
00:18:22.650 - 00:18:36.030, Speaker A: Smart contract, SAFE's, done a great job that a lot of other teams have. But for a hackathon or for a product in general, you shouldn't be responsible for the security of your NFT's wallets with some contract you threw together. You should use something proven, something audited, something that you can trust.
00:18:36.030 - 00:18:41.278, Speaker A: And so we've got a Token bound wallet implementation. It's live on Mainnet. It's live on all the testnets for you to play around with.
00:18:41.278 - 00:18:49.814, Speaker A: If it's not on your favorite chain, come see me. We'll get it up there together. But this is a really extensible, ERC six five one account implementation that you can start using right out of the box.
00:18:49.814 - 00:18:59.759, Speaker A: If you use the SDK, you don't even have to worry about this, the SDK takes care of it for you. But if you want to do some crazy custom smart contract wallet stuff, that's our implementation. You can feel free to play around with it.
00:18:59.759 - 00:19:14.234, Speaker A: It's open source and it is 4337 compatible. One really powerful part of 6551 is you can think about it as account abstraction for NFTs. Every NFT gets an abstract account that the NFT owns and that's a really powerful paradigm.
00:19:14.234 - 00:19:26.946, Speaker A: Means you can use all the crazy cool four three seven tooling that's coming out with your NFT's wallet. So your NFT's wallet gets automatically deployed on the first transaction. Your NFT's wallet can use Paymasters, so it can use other tokens other than eat the big ass.
00:19:26.946 - 00:19:37.266, Speaker A: Like all the crazy four through seven stuff you've seen, it works out of the box and so you can start using it with token mount accounts. It's extensible. So if you want to add custom logic to your token mount account, our wallet implementation supports that.
00:19:37.266 - 00:19:45.014, Speaker A: That's super cool for folks who want to do stuff like overriding receiver methods and stuff. It's live on mainnet so you can play around with it. We do have some audits for it.
00:19:45.014 - 00:19:51.606, Speaker A: So this is kind of like out of the box. You don't want to do anything crazy, you just want to start using this paradigm. Feel free to pull in the SDK and the token bound account.
00:19:51.606 - 00:19:57.822, Speaker A: Token bound wallet implementation. And if you have any questions about how any of this works docs tokenbound.org work is your friends.
00:19:57.822 - 00:20:08.830, Speaker A: So that'll cover the SDK, cover our wallet implementation. It's a little sparse, forgive me, we are working on that, but if you have any issues, please, I'm here all weekend, come and see me. And for anything like, ERC, specific.
00:20:08.830 - 00:20:26.366, Speaker A: If you want to dive into the internals of how this works under the hood, how 6551 actually gives every NFT a wallet without requiring any interaction from NFT creators or NFT holders, you can look it up on the EIP website. Just google EIP six, five, one and it'll come up. That's all the crazy nerdy details if you're into like EIP development.
00:20:26.366 - 00:20:33.654, Speaker A: So that's that that's token bound accounts that's ERC, six, five, one. We think it's really cool. We think there's a ton of applications you can use.
00:20:33.654 - 00:20:52.844, Speaker A: We've got a few minutes left if anybody has questions. Would love to answer some of them. Totally.
00:20:52.844 - 00:21:07.872, Speaker A: So the question is, every NFT has a wallet that's cool, but how do I actually use that wallet, right? If there's assets in there, how do I pull it out or how do I interact with it? And so there's a couple of ways you can do that. First, every wallet is its own smart contract. So every NFT gets its own smart contract that is Token Gated.
00:21:07.872 - 00:21:24.232, Speaker A: So the owner of the NFT is the owner of the smart contract wallet. And that means that you can use any tool that interacts with smart contracts to use the wallet. So if you want to go on Etherscan and manually execute transactions using your Tokenbound account, you can, because it's a smart contract that you control.
00:21:24.232 - 00:21:34.904, Speaker A: If your NFT is owned by your MetaMask wallet, you can use your MetaMask wallet to control the Tokenbound account smart contract. That ownership is transitive. So if you own the NFT, you own the smart contract wallet.
00:21:34.904 - 00:21:46.076, Speaker A: And if you ever sell the NFT, you will no longer have access to the NFT smart contract wallet. The new owner will automatically have access the moment that transfer takes place. And so you can use either scan, you can use the Tokenbound.org
00:21:46.076 - 00:21:56.950, Speaker A: website, there's some you can pull assets in, put them in, pull them out on the Tokenbound.org site, deploy the contract. We've got some tooling around that you can use, but really anything that works with smart contracts, you can use your wallet with.
00:21:56.950 - 00:22:16.628, Speaker A: That's a good question. So question is, what happens if you burn the NFT? What happens to the stuff in the vault? It's all burned too. Because nobody's ever going to be able to access that Token bound account again because the NFT changed hands is now the burn address.
00:22:16.628 - 00:22:34.584, Speaker A: And unless you can somehow figure out how to execute transactions from the burn address, which would cause other very significant issues, all of the NFTs in the Token bound account will be forever burned. So if you burn the core NFT, you also burn the assets in the wallet. Oh yeah, absolutely.
00:22:34.584 - 00:22:45.116, Speaker A: Let me see if I could pull up this demo. We do have a demo of this, it gets crazy quickly, but anyway, what's it called? Token bound demo first lab. Yeah, so excuse this.
00:22:45.116 - 00:22:57.484, Speaker A: This was kind of an early iteration of this concept that we built, but yeah, NFTs can totally own NFTs, that own NFTs, that own NFTs as deep as you want. You can create a whole family tree of NFTs. And this is a real live example of that on chain.
00:22:57.484 - 00:23:10.416, Speaker A: So you can see this testnet Clonex owns these three NFTs, these three NFTs each own NFTs themselves, and these NFTs own other NFTs. You can make this as deep as you want. It's crazy enough that NFTs can have their own wallet.
00:23:10.416 - 00:23:19.444, Speaker A: That's kind of what we're focusing on. But if you want to go really off the deep end, NFTs can own NFTs in any depth. That creates a graph of NFT and Token ownership, which has some crazy implications.
00:23:19.444 - 00:23:35.820, Speaker A: And importantly, with some of the changes we have coming up to the wallet, you'll be able to, if you own this root NFT, you can just execute directly against the contract of any sub NFT because transitively, you're the owner of it. And so it creates. Some really interesting ways that you can build like tree based structures on chain.
00:23:35.820 - 00:24:06.720, Speaker A: One more. Go for it, you would think, but that's actually not the case. So the question is, isn't it really expensive in gas fees? Because you have to work out the transitive properties of the graph and yes, it will cost more gas if you execute further down in the tree, it will cost more gas, but it's actually not incredibly much more gas because what you can do is because all of the tokenbound accounts, their addresses are computable.
00:24:06.720 - 00:24:19.764, Speaker A: Right. You can compute the account for any NFT without making any external contract calls. And so you can pass in a set of data that you can compute the owner addresses all the way down the tree locally within the contract.
00:24:19.764 - 00:24:44.676, Speaker A: You want to do the logic. So in this case, the lower level NFT account can do this computation on a proof that verifies that you, the caller, are calling from the top level NFT without having to execute a waterfall of contract calls all the way down. So you as the caller can call just into the bottom NFT and it will cost a little bit more gas because you're like verifying data on chain, but it's much, much cheaper than if you had to call into the top contract which calls into the next one.
00:24:44.676 - 00:24:57.304, Speaker A: Which calls into the next one. Yeah, go for it. Yep, totally.
00:24:57.304 - 00:25:02.904, Speaker A: Yeah. So that's an important thing, the security of wallets. In this concept, your wallet is only secure.
00:25:02.904 - 00:25:16.284, Speaker A: Your token amount account is only as secure as the wallet you hold it in. That's true for all NFTs, but it becomes especially true when your NFT can own assets. So if your wallet gets rugged and you lose your NFTs, sorry, you lost your you know, if you get rugged, you get rugged.
00:25:16.284 - 00:25:25.716, Speaker A: If there's something malicious on the contract where somebody steals your NFT from you even though your wallet was still secure. Sorry. Your wallet will also get stolen wherever the NFT goes.
00:25:25.716 - 00:25:38.104, Speaker A: Specifically wherever the NFT contract says the owner of the NFT is, that person will have execution permissions on the smart contract wallet. So if you get rugged or if you lose your private keys or something like that, not much we can do. I'm sorry.
00:25:38.104 - 00:25:48.284, Speaker A: That's just the nature of self sovereignty. Cool. I think we had a question here that's a really interesting thing.
00:25:48.284 - 00:26:07.650, Speaker A: Yeah. You can totally have a Gnosis safe that has NFTs as signers on the nosis safe now because you know the wallet address for any NFT. So you can have a 505 Gnosis SIG that the signers are actually NFTs and no matter who owns that NFT, they'll automatically be a signer on the Nosisfe to their token about account.
00:26:07.650 - 00:26:22.588, Speaker A: Sure, yeah. Yes, it would work for every contract. The question is, where do you draw the lies? Like, where does this become useful? Because if it's not token bound, it's really just contract bound contracts.
00:26:22.588 - 00:26:32.436, Speaker A: And what does that mean? What are you going to do with contract bound contracts? Totally. And so importantly, this works with seven hundred and twenty one s the best. Right.
00:26:32.436 - 00:26:52.504, Speaker A: So a lot of this assumes there's a single owner per token, but this can also be extended pretty easily to work with other types of tokens where there's not just one owner. So you can make this work with 1155s if there's the cases where 1155s have one owner. Like ENS names are now works out of the box because ENS supports the owner of Method.
00:26:52.504 - 00:27:04.160, Speaker A: So token bound accounts work with some box. They can also work with some more fungible, 1155s with a little bit of Tweaking. And so you can use this same pattern to support other types of tokens.
00:27:04.160 - 00:27:27.848, Speaker A: You would be very much breaking kind of the spirit and the lines that we've drawn in the standard to do contract bound accounts. But theoretically, if you put an owner of Method on the contract, this could be contract bound accounts. But we just think that because of the liquid nature of tokens, because tokens change hands, that makes this really powerful because we haven't had a way to do wallets that have liquid marketplaces for their contents before.
00:27:27.848 - 00:27:43.402, Speaker A: And so by tying wallets to tokens, you get to take advantage of all the infrastructure that exists around tokens rather than working with custom contracts. Question in the back. Totally.
00:27:43.402 - 00:27:50.622, Speaker A: Yeah. So the question is what are some use cases? So we talked about three of them a little bit in the slide. So this is really cool for Airdrops because you can AirDrop the token amount accounts.
00:27:50.622 - 00:28:10.966, Speaker A: It's cool for DAOs because NFTs can now be members of DAOs, signers on the safe voters on the contract and your entire history of membership in the Dao can be a part of that NFT you've got on chain games, which is super cool. This is kind of like the perfect inventory management solution for on chain games. But there's lots of cool things beyond like what are some of the things people in the what's that? Oh, digital fashion.
00:28:10.966 - 00:28:17.958, Speaker A: Yeah. So for like one of the projects we're working on, I'll demo this real quick because I think it's in my wallets. We're working on a contract called Sapiens.
00:28:17.958 - 00:28:28.154, Speaker A: If I can find the NFT in the sea of stuff I've collected here. We're working on a project called Sapiens that uses this mechanic for digital fashion. And so this is a Sapiens NFT.
00:28:28.154 - 00:28:35.602, Speaker A: You can see inside the Sapiens NFT are two other NFTs. One is an NFT that's part of the previous collection. We did that once.
00:28:35.602 - 00:28:53.282, Speaker A: This all reveals this NFT at the beginning is going to turn into a T shirt. And the PFP that's revealed in this artwork is going to be able to wear that T shirt and then collect future NFTs that become T shirts and hats and other items equipped on the NFT. And if the NFT owns the assets, the NFT has the rights to appropriate those assets.
00:28:53.282 - 00:29:04.614, Speaker A: We think that's super cool. The other one is one of the reasons we're here at this hackathon is NFTs can own lens profiles. So this NFT owns a lens profile, and that means this NFT can post on lens.
00:29:04.614 - 00:29:19.310, Speaker A: It's got its own social profile that goes wherever the NFT owns, wherever the NFT goes. If I sell this NFT, the new owner automatically gets the lens profile and can keep posting from it. So some really cool use cases around NFTs can now become identities in social context.
00:29:19.310 - 00:29:34.082, Speaker A: They can chat with each other, they can use lens, they can use other decentralized social protocols. And really, by giving an NFT a wallet, which is the core of all of this, you let an NFT do all of the same things that you can already do as a web three user. So if you can do it, your NFT can do it now.
00:29:34.082 - 00:29:37.940, Speaker A: And that's pretty powerful. I think that's all the time we've got. Thank you so much, you guys.
