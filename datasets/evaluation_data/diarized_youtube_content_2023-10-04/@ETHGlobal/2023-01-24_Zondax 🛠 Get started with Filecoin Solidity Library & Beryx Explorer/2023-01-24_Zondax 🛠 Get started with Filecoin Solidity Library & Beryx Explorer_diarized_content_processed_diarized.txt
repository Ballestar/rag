00:00:06.010 - 00:00:18.554, Speaker A: All right. Good morning, good afternoon, good evening. Depending on where you're calling from, we have Emmanuel and Juan here from Zondax, who's going to do a workshop on get Started with File Point, Solidity Library and Barracks Explorer.
00:00:18.554 - 00:00:28.710, Speaker A: If you have any questions, feel free to send them into the Zoom Chat and our speakers will be more than happy to answer them. And with being said, I will pass the mic off to our two speakers.
00:00:29.850 - 00:00:40.742, Speaker B: Okay, I will start and I will manage the presentation, the slides. So, first of all, thank you for being here. And we are Emmanuel Johan from Sundax.
00:00:40.742 - 00:01:04.340, Speaker B: I will share my screen so we can start with the presentation. And I think now you are looking at my screen, so everything should be ready to start. So I want to introduce us as a company first, because we are a bunch of people that we are distributed around the world.
00:01:04.340 - 00:01:28.346, Speaker B: This is part of the team that we have immediately in place some time ago. We're a company that we work with different we work in the blockchain ecosystem from the last four or five years. We are actually working in pretty innovative tech solutions for the blockchain system.
00:01:28.346 - 00:01:52.438, Speaker B: And we have partnered with Filecoin for the last three or four years, really close partnership. So we have been a lot of tools for the Filcoin ecosystem. And today we are going to talk about two of them, two or three of them that are really specific for this hackathon.
00:01:52.438 - 00:02:08.626, Speaker B: And I want to go straight forward to them. We have three groups to talk about them today, and they are like two groups. They're divided in two groups.
00:02:08.626 - 00:02:37.274, Speaker B: One of them is a solidity set of solidity libraries that we will see. That what they are for in the next slides, but they're really specific or related with your smart contracts and your code, the way that you can travel from your smart contract. The other one is a protocol Verix that will allow you to see the historical data on the blockchain.
00:02:37.274 - 00:03:01.190, Speaker B: So anything you do or even interact with an API, so anything you do with your smart contracts or accounts, anything that's happening behind the scenes in the Falcon blockchain, you will be able to see and interact with them from this specific product. I'm going to talk about the solidity libraries, and Jan is going to talk about the new product. So I will start with the solidity libraries.
00:03:01.190 - 00:03:25.630, Speaker B: This story is really specific for developers and what they are. There are a set of libraries of solid libraries. What I meant with that is function and types that will allow you to interact with the FICO futures from the solidity smart contracts that you're writing.
00:03:25.630 - 00:04:11.386, Speaker B: If you don't have this IRA, you would need to do everything by your own understanding how to call the file connectors, the filecon functionality from your solidity smart contract. So we have created a lot of functions on top of Solidity that models all the types and the methods that all the actors in the filecoin network have. So for us, for you, it's just going to be a matter of importing this package and using all the methods that you can find on the documentation, the FICON documentation about the actor.
00:04:11.386 - 00:05:12.974, Speaker B: So if you want to interact with some minor actor with the market to see deals, to create a deal, you are going to do it really easy because everything is solidical so you can see what is happening and understand the types and match that with the Fico's documentation. So it was conceived to be easy to understand, to use and deploy and what I mean with this, easy to understand because it's validity and there is a really close relationship between the data types and the methods and the method names between the library and the FICO in actors. So if you check the documentation for the FICO NTOs you will be able to understand what those methods and types are and do it's easy to use because as we're going to speak in a minute, there is an NPM package.
00:05:12.974 - 00:05:28.520, Speaker B: So you can import it on your smart and your IDE on your developer tool hard Hat Andre Remix. And just importing it. You will get all the contracts and you will be able to consume them.
00:05:28.520 - 00:05:48.742, Speaker B: And it's easy to deploy because they are libraries, they are not contracts, so they are completely available. So it's going to be part of your smart contract when you compile them. So there's a need to deploy them and interact with them through an address in the blockchain.
00:05:48.742 - 00:06:05.006, Speaker B: So that's the main three points that we tried to focus on when we were trying to develop the libraries. As I mentioned before, we have an NVM package, it's called PyCon Solidity. As you can see there in the images at PyCon solidity.
00:06:05.006 - 00:06:26.566, Speaker B: It has the entire set of libraries. And you will see that there is some test libraries, the libraries itself, the types, and there are some mocks libraries that don't do anything specific with the falcon network, with the real falcon network. But they have some mock scenarios depending on what you pass to them.
00:06:26.566 - 00:06:41.114, Speaker B: But you will find everything there in the package. We handle the version, I mean it's easier to handle version than updates because we are using Sembra standards. So breaking change, new features and patches.
00:06:41.114 - 00:07:12.194, Speaker B: It's going to be easy to see what is happening when we release a new version and it's perfect for developers because as you might know, it's easy to use them, as I mentioned before, from Remix. Just a matter of naming them on your smart contract code and Remix will fetch the package itself for you. And that's what I have to tell you about the Solidity library.
00:07:12.194 - 00:07:25.420, Speaker B: We will try to make it go through the library at the end of the presentation, but I will pass the microphone for Jan. I'm just going to tell you about the Verix API. Thank you.
00:07:27.310 - 00:07:33.382, Speaker C: Everyone. Thank you, mano. I'm Yuan, and I'm going to talk about Verix.
00:07:33.382 - 00:07:37.950, Speaker C: So Verix. I will explain two parts. One is the API, the other one is the Explorer.
00:07:37.950 - 00:07:51.730, Speaker C: What is the API? So varix API indexes behind and exposes it through the API of the filecoin. Data historical and real time. Next slide, please.
00:07:51.730 - 00:08:06.760, Speaker C: MRL. What can barix API do? It provides information like transactions, account information, fees, addresses and stepsets. Next slide, please.
00:08:06.760 - 00:08:18.780, Speaker C: Where you can find it? You can find it at docs. Ch verrax or just go to Docs and you'll find it there. We will go through all of this by the end.
00:08:18.780 - 00:08:27.760, Speaker C: There are two steps. You have to get a free token and of course, you must have a GitHub account first. And then you can test it right here.
00:08:27.760 - 00:08:40.674, Speaker C: On top of that, for developers, we have an NPM package that has the same benefits as the API. And it's in TypeScript perfect for developers. Next slide, please.
00:08:40.674 - 00:08:54.470, Speaker C: Okay. Leaksporter. Leakstore is a platform for developers like a Blockchain Explorer that includes historical data, real time data streaming, and metrics developed on blockchain.
00:08:54.470 - 00:09:05.830, Speaker C: Next slide, please. What can you do besides searching like a normal explorer does? Searching transactions, addresses, tip sets. You can interact with the contracts.
00:09:05.830 - 00:09:27.810, Speaker C: You can call, read and write methods and see their decoded API, float your own, see the bytecode, the OB code. Of course, for the write methods especially, you will need funds for that. And don't worry, we have a faucet so you don't have to go outside, come back in and you can connect with MetaMask.
00:09:27.810 - 00:09:41.238, Speaker C: We also have a memple view to check if your transaction got stuck or it went through. And the network metrics are going to be inside the dashboard. And they are going to come soon.
00:09:41.238 - 00:09:50.182, Speaker C: SAP. Of course you can find it at Dereks Zondak ch. Next slide, please.
00:09:50.182 - 00:10:03.694, Speaker C: And it has a nice feature because during these weeks we will progressively add more features. We would really appreciate if you can give us feedback. We can use the small tool on the right side.
00:10:03.694 - 00:10:15.700, Speaker C: It takes a screenshot. You can draw on it and write a message and can even ask for new features. If you need them urgently for your project, we will be happy to help.
00:10:15.700 - 00:10:26.470, Speaker C: Thank. Here is a summary of all the useful links. You can take a screenshot, take a picture.
00:10:26.470 - 00:10:29.960, Speaker C: Then I'm sure you'll find this presentation after.
00:10:31.370 - 00:10:42.940, Speaker B: Yes, I mean, we can share the links. We can share the presentation, make it available for you. So you have the links and you can check.
00:10:46.350 - 00:10:59.400, Speaker C: Okay. You can contact us at hello at ch. Okay.
00:10:59.400 - 00:11:02.984, Speaker C: Demo. Should I go first? The barracks?
00:11:03.032 - 00:11:10.396, Speaker B: Yes. We have a question. There is why is Bolley not supporting Barix by default? We have to hyperspace.
00:11:10.396 - 00:11:27.188, Speaker B: Because hyperspace is the long term testnet that was deployed like a week ago. That's why. But we are planning to add the wallaby again in the Verix Explorer because we had it in two or three weeks ago.
00:11:27.188 - 00:11:33.560, Speaker B: So it's going to be there really soon. So I will stop sharing.
00:11:41.280 - 00:11:44.750, Speaker C: I'm okay. Everything's all right? Can you see my.
00:11:47.280 - 00:11:48.030, Speaker B: Yeah.
00:11:48.820 - 00:11:53.970, Speaker C: Perfect. Okay, so we'll go first with the API. See how you can get the key.
00:11:53.970 - 00:12:17.530, Speaker C: So you have to go to Docs Ch, scroll until you see Barracks API or just type Docs at the Chberx. And here you can get the key, see the Docs and see the NPM package. Let's try to give a key.
00:12:17.530 - 00:12:33.630, Speaker C: Okay. Here you don't see it because I already have GitHub connected, but you'll have to have a GitHub account and accept it. Perfect.
00:12:33.630 - 00:12:45.552, Speaker C: It redirects me back to the documentation when it pops up to appear with my token. Don't forget to copy it. And in here you can test it.
00:12:45.552 - 00:12:58.960, Speaker C: You can test all the endpoints, but make sure that in case it gives you a photo, one error. Make sure to replace this one in here with the new one and press Update. Let's make a try.
00:12:58.960 - 00:13:15.144, Speaker C: So let's choose the latest tipSet. This is the easiest one for one, the same error. So in case this happens, you can go in here, delete it, take the one on top, paste it and fade.
00:13:15.144 - 00:13:22.700, Speaker C: Hopefully this time works. Perfect. So here you can see the latest Tips information.
00:13:22.700 - 00:13:35.072, Speaker C: The same with all the others, like account balance, info, transactions. Get all the transactions using from a tipSet or from an address. Good.
00:13:35.072 - 00:13:48.630, Speaker C: Let's move to the explorer. Here's the explorer at varix Zoning PH. And you can see on the left side all the tools we have.
00:13:48.630 - 00:13:53.992, Speaker C: We have the Home, which is a search Bart. We have the interact. We'll have the dashboard soon.
00:13:53.992 - 00:14:13.176, Speaker C: And the Memphis and the Faucet also is coming ASAP. On top you can select the network hyperspace Mainet valerie, as Eman said before, explain why we don't have wallaby active yet. A search switch.
00:14:13.176 - 00:14:19.520, Speaker C: The theme connect digital wallet. To connect with MetaMask. You will have to use Chrome for the wallet.
00:14:19.520 - 00:14:26.736, Speaker C: And then here is the tool. Please use it. Okay, let's make a test.
00:14:26.736 - 00:14:34.532, Speaker C: We are here in hyperspace. We have three examples in case you don't know what to search. You're new and just want to check it out.
00:14:34.532 - 00:14:52.860, Speaker C: Choose one of them. If you go to tipSet, you'll see the tipSet information. And if you are a developer and want to see a bit more or more dev style, you can go here on top and enable the Dev mode and you will see the exact response.
00:14:52.860 - 00:15:06.572, Speaker C: On the right side you will be able to see other transactions. But first you have to choose one from the table below, like this one. And from this table.
00:15:06.572 - 00:15:19.110, Speaker C: Everything you see in blue is clickable and you can go inside it. For example, let's see this account. This is the account information list transactions that came in and out.
00:15:19.110 - 00:15:52.430, Speaker C: Perfect. Okay, now let's check the I have it here coupon the interact part you can use both the address kind and official check the contract if it exists, if it's deployed, view it API bycode op code and playground still some bugs to fix in the playground. Back in the playground you can call the write and read methods and you'll get the response down here.
00:15:52.430 - 00:16:10.900, Speaker C: Okay, let's see the mempool. This is the current mempool in the hyperspace. Okay I just want to mention that the gray ones are outside the mempool but I can just kept them there so you can access it so it doesn't disappear instantly.
00:16:10.900 - 00:16:15.910, Speaker C: Okay, and that's it for my side?
00:16:18.280 - 00:16:33.796, Speaker B: Yeah thank you. I will share my screen now. I will give you like a walkthrough the repository let me share my screen again controls.
00:16:33.796 - 00:16:43.224, Speaker B: Okay, so do you see my screen Jan? Okay, perfect. This is a repository in Sundax. It's Sundax python solidity.
00:16:43.224 - 00:17:24.300, Speaker B: As you can see here there is a link to go to the web, to the docs web and here you will find short description about it, an introduction about some assumptions that we did when we created the library and you will have here information about it. I mean for mocks you will have all the methods that are mock and the libraries and that you can consume. Again mocks are the same method interfaces that we have on the real library but we are not calling the actual file coin the actual file actors.
00:17:24.300 - 00:17:48.656, Speaker B: We are responding, answering to your request with preloading scenarios depending on what you ask, what you send. And for the API, you have a little description of how you can deploy, how you can use it. As you can see here, it's really short with an NPM package.
00:17:48.656 - 00:18:12.200, Speaker B: If you're using hard hat it's just importing them from the contract and do a call. As you can hear you are more than welcome to invited to check the website. All the contracts are here in the contract.
00:18:12.200 - 00:18:31.004, Speaker B: They are organized in a way that we have different versions for different solidity compilers. For now we are using 0.8, it's one of the latest one and as you can see here you have a lot of solidity libraries.
00:18:31.004 - 00:18:41.456, Speaker B: There are these ones that say API. One for each actor that we have exposed on the library. And maybe if we go to the account API.
00:18:41.456 - 00:18:50.964, Speaker B: As you can see here, it's a library. And you have three or two different in this case, two different methods. This Authenticate message and universal receiver hook.
00:18:50.964 - 00:19:14.864, Speaker B: And they have different parameters. These parameters are exactly the same representation or pretty close to the same representation that in the file coin blockchain have. You can go to the types file that you will find there a lot of structs with the description with each field that these types has.
00:19:14.864 - 00:19:45.252, Speaker B: As you can see here we are calling they're really straightforward functions they're really simple because we are already serializing the data, sending the data to the actual response, parsing it and give it back to the insolidity code. Here you can find the mocks. Those are again as I said before, it's the same signature for each method.
00:19:45.252 - 00:19:58.952, Speaker B: But we are not coding anything. We are just doing acting based on your arguments, giving you different answer. And here you can find some tests.
00:19:58.952 - 00:20:36.170, Speaker B: These are actual variable contracts because as you can see here, there are contracts we're importing, in this case the Power API library and creating functions for each of those methods. So now you can call them from this contract that is going to be deployed but can be deployed on the network. What else can be useful to be displayed? What else? Here is the NPM package you saw before.
00:20:36.170 - 00:20:57.292, Speaker B: This is the classic NPM JS registry, okay? And I explained the documentation. And lastly I want to show you this is Remix and I think you are seeing my screen here. This is a test smart contract I created in Remix.
00:20:57.292 - 00:21:39.496, Speaker B: As you can see here, the only thing I did was to write that I want to get the market API library from the sendback solidity contracts B eight and create short contract where I am just creating functions that are public and I can call from the outsource and getting the response in this case for the get deal label with a deal ID and returning the label string. The same for the Gitin provider. It's being compiled at this moment with this version of the compiler.
00:21:39.496 - 00:21:55.632, Speaker B: And if you deploy it, as you can see here, I have two deployments here. I think we can try to do it. It will take some time because it will give me here I get some funds before I can confirm it.
00:21:55.632 - 00:22:11.832, Speaker B: And now I have to wait for the creation. It will take like a minute because there are not many miners on the network so it takes more time than it usually takes in mainnet. But at the end you will have something like this you can execute here.
00:22:11.832 - 00:22:29.950, Speaker B: As you can see, the Get label code pyramid. I did it like one or two minutes ago. Again when we need to wait here for it.
00:22:29.950 - 00:23:17.580, Speaker B: But as you can see here, it's just a matter of importing it or mentioning it at your Spark contract and Remix will fetch the package directly from that way it's really easy to use it. And again, for all the actors and methods that you see on the different actors, they are like an exceptional presentation, the file coin functionality, the native functionality. So if you check the filecoin documentation, you should find a better representation of what each actor does and its methods and everything mean for the Solid library, we are not doing anything special in that sense.
00:23:17.580 - 00:23:39.860, Speaker B: So let's say Lucas before, if you can from here add some collateral to a new strategy or anything else. We have a lot of methods here. Some of them are commented, we are trying to comment them all so you have more information on the contract on the library itself.
00:23:39.860 - 00:24:25.788, Speaker B: But for now if okay you can check the method that you have there and what methods of different access you need in order to do what you want to do and see if in that sense it's possible to do it from a solidity smart contract. I know that there are a lot of example tools that Tycoon is creating for you as examples using heart and so we can point you to those examples and everything discord and I think that's all for me too. I will leave like a couple, three or four minutes for any questions that I didn't see on the chat.
00:24:25.788 - 00:24:42.330, Speaker B: If you have any please feel free to write them there and thank you all for your time. It's been a nice experience to be here and explain you about these two amazing, three amazing tools that we are working on.
00:24:43.980 - 00:24:46.440, Speaker C: If we have support on the global.
00:24:49.420 - 00:25:16.480, Speaker B: Yeah, we are going to be there as helping or answering questions there so feel free to tag us there. We are going to be there and some others partners from the company so feel free to tag us there and we'll be able to answer you, us or any of the partners.
00:25:25.700 - 00:25:27.490, Speaker A: Oh I know you have a question.
00:25:28.420 - 00:25:58.528, Speaker B: How do expect people to use I mean what we expect here we want you to use the tools. The libraries are a must if you want to interact with five point features from Solidity they're a must because it's going to take a lot of time for you to discover how to call the precompiles that allows you to interact with the underlying filecoin blockchain. So it's a really helpful tool if you want to do that.
00:25:58.528 - 00:26:52.880, Speaker B: I mean that's the key feature of this EVM, this ethereum virtual machine running double filecoin solidity taking advantage of the filecoin features that Filio has and Explorer. I mean, it's a way for you to interact because you have kind of a remix section that you can fetch with an address and see the code, the Evi and interact with it with your metabask run view and any other method and even change the state of your smart contract and at the same time you can see the mempool and you can see what is happening in the network mainnet or what is in hybrid space all at the same place. So it's kind of like one of kind tool because you have everything there.
00:26:52.880 - 00:27:06.212, Speaker B: The only thing that you don't have there is an ape to write your spark code. But maybe in the future. And the idea is for you to give us feedback, because we know that maybe bugs can happen.
00:27:06.212 - 00:27:19.370, Speaker B: I mean, will happen. And maybe features that want to have there are never Explorer too. And the API is for any developer that wants to integrate in an application.
00:27:19.370 - 00:27:35.818, Speaker B: Not for humans that do something. You can use postmode, but just for testing. And I think I hope I answered the question all right.
00:27:35.818 - 00:27:45.454, Speaker B: I don't think you have time to answer the last one. Maybe we can continue on this corner. Not sure.
00:27:45.454 - 00:27:46.960, Speaker B: I mean, minor type.
00:27:47.570 - 00:27:49.726, Speaker A: Feel free to answer that last one.
00:27:49.908 - 00:28:01.410, Speaker B: Okay. Binarype has all the types, the structures that defines different methods. For the minor actor.
00:28:01.410 - 00:28:23.850, Speaker B: For the minor actor. The minor actor is the one that is created when a new miner is deployed on the network. And if you want to know the characteristics, the features, the values that miner has in the network, you can use it to fetch information about it.
00:28:23.850 - 00:28:35.242, Speaker B: You need to pass the address of that specific miner that you want to interact with. And you will be able to see here, I'm looking at some functions here. Get owner.
00:28:35.242 - 00:28:56.610, Speaker B: I think it will give you the owner of that minor. You can get the sector size, the balance that it has, some funds. Beneficiary, I mean, again, this is pretty much related with a fine coin network and the documentation.
00:28:56.610 - 00:29:22.590, Speaker B: So you won't find like a really big documentation about what is an actor inside the CD library because that's part of the file point network. But if you go to the file print documentation and check there, it will allow you to have a better representation, what is a minor on the network. And then you will be able to come back to the Solidity library, understand it better.
00:29:22.590 - 00:29:40.900, Speaker B: We're working on adding more documentation on the solidity itself, but we don't want to build redundant between the Solidity library and Pytcoin documentation itself. But yeah. Okay, I think we are ready now.
00:29:42.630 - 00:29:49.042, Speaker A: Awesome. Yeah. Thank you, Emmanuel, anyone, for taking the time to do this workshop for the Space warp hackathon.
00:29:49.042 - 00:29:59.554, Speaker A: Sincerely appreciate it. For the rest of you, thank you so much for tuning in. And as mentioned in the chat, if you do want to look back on this workshop, it is recorded and on YouTube.
00:29:59.554 - 00:30:14.526, Speaker A: So you can access it at any time during the event or afterwards as a resource. And with that being said, see you all on discord and also see you at the kickoff and summit happening soon. Goodbye, everyone.
00:30:14.526 - 00:30:15.018, Speaker A: Bye.
