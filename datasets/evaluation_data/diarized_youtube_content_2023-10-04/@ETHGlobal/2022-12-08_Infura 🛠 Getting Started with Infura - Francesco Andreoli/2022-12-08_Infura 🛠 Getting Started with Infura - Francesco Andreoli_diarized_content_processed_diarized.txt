00:00:06.090 - 00:00:08.302, Speaker A: Yeah. Welcome everybody. Let's let's see.
00:00:08.302 - 00:00:13.470, Speaker A: Let's do a quick round. Are you guys excited? I want to hear some voice. Yeah.
00:00:13.470 - 00:00:21.774, Speaker A: Are you guys excited? Awesome. Even if we are doing a silent keynote, it looks like we are here. That's great.
00:00:21.774 - 00:00:33.174, Speaker A: I see some laptops here, but yeah, idea was having a workshop of 1 hour and I think we have only 30 minutes. How many of people know Infuria or deployed already? DAP. Awesome.
00:00:33.174 - 00:00:41.138, Speaker A: Cool. Yeah, this is like literally some getting started guide. And yeah, basically I'm Francesco.
00:00:41.138 - 00:00:53.274, Speaker A: I'm doing Devrel for consensus. Mostly doing MetaMask naps lately. But I'm excited that this hackathon we have not just Snaps Bounty, but we also have specific Infura.
00:00:53.274 - 00:01:19.586, Speaker A: If you guys went to get some swag on Infura, we are, I think, on the full right side. Yeah. So the idea of this workshop is literally like trying to get an idea on how adapt look like, what's the review, what's the structure and the infrastructure that you want to do an intro to Infura and then basically do it for basic operations, sending and reading Ethereum transactions.
00:01:19.586 - 00:01:37.210, Speaker A: We are doing an IPFS transaction when we are storing an image that's quite excited. And then if we have time I don't think we have time, but I will definitely send you the resources. Deploying an NFT on Mainet and mint an NFT on Mainet.
00:01:37.210 - 00:01:45.710, Speaker A: Cool. So depth review. So, I guess everybody, how many of you are hacking this weekend? Just want to try to understand.
00:01:45.710 - 00:02:07.474, Speaker A: Okay, everybody's hacking and I guess also you have an idea to use Infuria or build a Snap. So that's quite cool. But the anatomy is quite simple, right? We have our own front end HTML, CSS, JavaScript, web three JS, where you inject Ethereum truffle Ganache for testing your smart contract.
00:02:07.474 - 00:02:20.630, Speaker A: How many of you test your smart contract with Truffle? Normally we use some other tools. Okay, cool. And then obviously, like on a lower level, we are defining our smart contract.
00:02:20.630 - 00:02:35.710, Speaker A: We can take some pre built templates from Open Zeppelin. Yeah. So basically like some react web three JS truffle for testing and lower end Open Zeppelin and Solidity.
00:02:35.710 - 00:03:02.786, Speaker A: So let's do a quick intro. So where InfUr is actually playing the role in all your anatomy of the DAP, you're obviously connecting to MetaMask when you're doing your transaction, but if you don't want to basically deploy your DAP locally when you're testing and you want to deploy it on main. Net or on testnet, you can use basically the Infura RPC.
00:03:02.786 - 00:03:23.034, Speaker A: Right? And basically it's an old provider that is injecting in between MetaMask and Ethereum. Yeah, that's kind of the high level. Obviously, like you guys, for the people that raised their hands, you know, a little bit already, we also launched the Decentralizing Fura Node network, I don't know, in Berlin.
00:03:23.034 - 00:03:37.090, Speaker A: That's super. So the idea is not just deploying your DAP locally and testing it, but having an efficient and smart way to deploy on different networks. Ethereum Networks is just an example.
00:03:37.090 - 00:03:47.730, Speaker A: But if you go and we will go on the Infura website, we can see also that you can deploy your DAP on different networks. StarkNet is actually the latest. That's quite exciting.
00:03:47.730 - 00:04:04.090, Speaker A: Why use blockchain infrastructure? Obviously we are using Infura because we don't want to have and run our own node. Those I think we're using that a couple of months ago. But single full node requirements around 500 gigs.
00:04:04.090 - 00:04:23.562, Speaker A: And obviously, like, full archive. I don't know if you were here, like, four years ago, but I remember I was doing some full archive stuff and it was taking like, three weeks, and now it's probably even more. Three, four weeks, I think, like around eight, to sync and download all the theorem blockchain distributed system or Ard.
00:04:23.562 - 00:04:37.730, Speaker A: So there are basically different things. That's why we're going through an RPC provider like Infura Cool. So you can run your own node and use a provider and you can rely exclusively on your provider.
00:04:37.730 - 00:05:19.934, Speaker A: And I think the most powerful things that I see in the future is that with this decentralized Infura we can literally have full distributed node ownership and at the same time rely on the uptime time for having different nodes. So introscable IP, ethereum on IPFS layer twos near Aurora, those are just the main one and it's basically an infrastructure provider where you can actually create different instant connection to Ethereum and IPFS. You have your set of APIs, you have different features like node archive and interesting is analytics and metrics.
00:05:19.934 - 00:05:52.670, Speaker A: So you can see how many transactions you're doing and you can see also there are different tiers, obviously. But I think the main one, it's like 100,000 transaction per day. Yeah, 1000 developers application trust infura, I don't know, obviously MetaMask, but there is a bunch of other cool providers like I don't know if you know, Uniswap is using Fura and Comrade wallet zero x Opera, although some people don't know Opera, they're also running a wallet.
00:05:52.670 - 00:06:18.866, Speaker A: But that is quite interesting. Those are the top five method call, right? Obviously the get block, my number, the get price, the syncing and the logs. And basically what you see when you have in your account on the bottom right, you see your bandwidth usage on a peak and on an average usage.
00:06:18.866 - 00:06:54.338, Speaker A: So that's quite interesting infuria infrastructure overview. Yeah, this is a little bit going deeper, but basically what's happening there are two ways that is talking on the architecture level, but Gateway is speaking directly with the RPC system or through WebSocket and it's basically diving into the performance cache and there is the data reconciliation part happening directly to the RPC system. Yeah, this is another deep dive, a little bit on the backend side.
00:06:54.338 - 00:07:20.486, Speaker A: But the most important part are the two like the transaction service and the node management service basically where you can have your watcher the nodes and the peer to peer connector and on the transaction side you have the broadcaster and the pool and then optimization index. There are specific toolings that you can record different specific features that's also quite interesting. Cool.
00:07:20.486 - 00:07:31.100, Speaker A: Yeah. So the idea of this workshop was not me running only through slides. I have also a couple of colleagues here that had support but the idea was actually doing something just for purpose of time.
00:07:31.100 - 00:07:48.574, Speaker A: I can run through already a pre built tutorial but the idea is that I can also provide these resources that you can go home and do it yourself afterwards obviously with style. MetaMask. I'm using flask.
00:07:48.574 - 00:08:07.046, Speaker A: How many of you know Flask? Yeah, it's basically the canary version of MetaMask where there are a bunch of settings and developer part like for snaps for example, when you're building a Snap you can deploy and use Flask. I'm just using flask. It's easier but it doesn't really change anything.
00:08:07.046 - 00:08:16.586, Speaker A: So let's assume that you're going through the MetaMask phase. We have also getting some girly testnets. It's not my favorite but paradigm is working well.
00:08:16.586 - 00:08:35.810, Speaker A: Also ask me later if you need some girly happy to provide some. And yeah, sign up infura literally we can go through but I can show you directly my infura. Let's see if there is Internet.
00:08:35.810 - 00:08:44.478, Speaker A: So basically that's the normal. So I already created an account. This is just a test account with three sample projects.
00:08:44.478 - 00:08:54.946, Speaker A: So what you can see here is when you create a new key, basically you can create a new project but these are previous project that I build. This is for itIndia. We have also Truffle and net India.
00:08:54.946 - 00:09:13.470, Speaker A: IPFS. Basically when you create a new key you can select the network right web three API, IPFS or Ficoin. And based on that you can create a name and get your basically keys for talking with the env file.
00:09:13.470 - 00:09:35.406, Speaker A: But yeah, basically assume that you registered. Probably you guys want to do it afterwards, but that's basically what I see, let's say on my project. And when you create the project you can go on the manage APIs and you can see basically all the endpoints that are provided.
00:09:35.406 - 00:09:44.966, Speaker A: So API key, obviously. So this is like a test account so you can copy and do everything as you want but this is just for purpose of testing. Interesting.
00:09:44.966 - 00:10:11.870, Speaker A: You can see obviously we get started with Ether but you can also deploying on scaling and side chain solutions like Polygon, Arbitrum, Avalanche, near and StarkNet. This is like the newest, let's say family member that you can deploy to and it's quite exciting. You can also have different settings and specific security settings when you're accessing your secret recovery.
00:10:11.870 - 00:10:36.440, Speaker A: Yeah, that's a little bit. So mostly what we will use is basically on the API key and when we basically do and deploy our DAP, we can go in statistic and see how many calls actually happens in the past 24 hours. And this is basically the limit of 100,000 calls every 24 hours.
00:10:36.440 - 00:10:58.720, Speaker A: And obviously if you need more, although if you look at different RPC provider like 100,000 calls for 24 hours it's quite good. Yeah, you see also which requests volume and which network request of volume. Obviously we did Mainet today.
00:10:58.720 - 00:11:37.390, Speaker A: Cool. Oh yeah, this is just an example. What you can do is using the curl let me just get we can try it out but basically what you can see here is I already added my oh, I need to see the I need to get in the folder in the Getting Started.
00:11:37.390 - 00:12:55.120, Speaker A: What you can do is we can just do that but basically what's happening here is let's see where the oh yeah, it's on the right but basically what happens is when you're calling infuria with your API key you can basically see a resort like JSON RPC 2.0. The ID is basically the chain where you are and the result zero X. Yeah, so the idea was basically going through like the Getting Started guide with Infura and that's basically this one here already basically downloaded for you.
00:12:55.120 - 00:13:29.730, Speaker A: We were following those and after I put also some QR codes that you can go through. But let's just see what's going on here. So we are what happens basically is already run through this.
00:13:29.730 - 00:14:01.656, Speaker A: So I updated the terminal, we go to our project directory, we install the dependencies, we basically go through the template NVM. And this is basically this one here the TNV. So the structure that is let me just do it a little bit bigger.
00:14:01.656 - 00:14:30.304, Speaker A: So basically the structure of the Getting Started is yes, you have a bunch of components. You have the two contracts, the migration and the NFT contract. You have different pages for the react part and here you have the NV that basically you can define on sending the transaction variable and the IPFS variable and those you will get from the Infura provider.
00:14:30.304 - 00:14:47.020, Speaker A: Here the one that we saw it before. So you go on your project and you manage key and it's basically the one that you see here. Yeah, so I did already this before.
00:14:47.020 - 00:15:21.830, Speaker A: So basically you install Env, you go through this change, you put your key and basically now we are running it and basically what's happening is I deployed that locally and this is basically what look like. Let me refresh that's basically like a normal DAP that we deployed now locally, what you can do is connect. You see okay, this is my Flask account.
00:15:21.830 - 00:15:54.444, Speaker A: And what we're doing here we're just doing a transaction, right? We can do like, I don't know, like one or something probably spending even more gas fee right now. And basically this is where the send transaction is happening. We just did the transfer ETH and basically we did the first sample project.
00:15:54.444 - 00:16:38.170, Speaker A: If you want to deep dive a little bit in the code, there is this blog post that we wrote and you can see exactly where those transaction code implementation are implemented. So the transaction inside is in this one here where basically you send the function and you basically do the web three provider, HTP provider and getting your current ETH balance. This is basically normal using a web three JS part that's basically like not the best, but it's the most common one.
00:16:38.170 - 00:17:02.208, Speaker A: And yeah, those are basically all the parts that are happening every time that you are clicking on the DAP and we are connecting the wallet where you're basically getting the balance value. And when you broadcast the transaction, basically you are using the transfer. It's basically this one on line.
00:17:02.208 - 00:17:09.080, Speaker A: That's a good question. Line 130 or something. This one here.
00:17:09.080 - 00:17:27.610, Speaker A: Yeah, so that's basically it for the first part. And by the way, if you have any questions like shoot, because it's a long tutorial, it should take at least 1 hour to do it. And yeah, that's basically it.
00:17:27.610 - 00:18:00.518, Speaker A: So what now we did is we sent a transaction with the depth and we saw the structure, the anatomy, how it looks like and where you're actually doing the specific injection that's a little bit. So basically what's happening is the other things that we can do is that's the review of the transaction, you see the transaction summary. So this is the second part I already pre run for you.
00:18:00.518 - 00:18:17.942, Speaker A: Basically what's happening is we're uploading a documents on IPFS and it will basically take this time, this is what we did. So we set up the environment variable. So endpoints project idea, project secret.
00:18:17.942 - 00:18:55.494, Speaker A: This as before we go through the IPFS project. So what you're doing is basically creating the IPFS project, you manage key and these are basically the idea, the secret and the endpoint are you guys following? Okay, cool, we run it. So I basically already run it and what we are doing is we can upload, I don't know, like an image or something, something like that.
00:18:55.494 - 00:19:11.260, Speaker A: This is the QR code for our infura survey. We can just do it test infura. Those are attributes that are optional, but we can put number one and number two.
00:19:11.260 - 00:19:24.160, Speaker A: So what's happening here is we are basically uploading the documents on IPFS. Boom, it worked. And we have also the IPFS ash that we are copying it for the next step.
00:19:24.160 - 00:19:49.734, Speaker A: What's here happening is basically we prebuild the IPFS explorer that is happening. We are just submitting and boom, we have the display file that we can check. It basically here what's happening is we upload an image to IPFS and what we can do right now is checking code.
00:19:49.734 - 00:20:03.578, Speaker A: We can actually, I think even like display on local. We did that already. And this basically what happened is we upload that upload successful.
00:20:03.578 - 00:20:13.150, Speaker A: This dash, this is where it's displayed. Yeah. Okay, so running Radibi through the code, we are almost done.
00:20:13.150 - 00:20:28.706, Speaker A: Almost, yeah, it's basically running through a code. We are doing the file upload part and that's you will find in the upload form TypeScript. We do this one basically those are the full file with the attributes.
00:20:28.706 - 00:20:50.154, Speaker A: Then we do the upload operation where the JSON package is. There we upload. Basically what's happening is we are running through the IPFS node for the upload part and then we are displaying it in the second part.
00:20:50.154 - 00:20:57.118, Speaker A: Yeah, so that's a little bit it. Let me go back to the presentation, what we did. So the blog post that you saw is here.
00:20:57.118 - 00:21:13.490, Speaker A: So if you want to run this through at home, that's a useful resource for the next step. We need to use Truffle for testing our smart contract. But you can get getting started here.
00:21:13.490 - 00:21:22.118, Speaker A: This is less important. You can also find it online. And yeah, we are basically going through what I did right now.
00:21:22.118 - 00:21:34.454, Speaker A: We pull out the code, we touch the NVF file and we set it up locally. We started the DAP, we run through the localhost right now. We send a transaction.
00:21:34.454 - 00:21:44.614, Speaker A: We upload through IPFS. This is basically the next step, right? The minting and NFT. And then here I put some additional resources.
00:21:44.614 - 00:22:13.254, Speaker A: This QR code is the survey that we're doing. We can send also when you're doing the survey like this presentation, if you're interested to take like three, four minutes and it's also helping us to trying to understand which network you want us to deploy next for infura purposes. Yeah, I mentioned before the decentralized infura and if you guys are a node provider or you're interested to be part of, you can apply directly through this.
00:22:13.254 - 00:22:19.670, Speaker A: I also added the QR code. Cool. I think we are there.
00:22:19.670 - 00:22:45.578, Speaker A: You can obviously follow infura and we have a bunch of videos from our Deverel friends at infura and yeah, you can find our booth there if you're interested in also hacking on Metamas Naps. We are around for the next three days. We have 10,000 in Bounties and yeah, also feel free to stop me wherever you see me and awesome to be here in India.
00:22:45.578 - 00:22:46.640, Speaker A: Thanks guys.
