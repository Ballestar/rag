00:00:07.370 - 00:00:09.274, Speaker A: All right. Hi, everyone. I'm Ian.
00:00:09.274 - 00:00:21.498, Speaker A: I also go by Penrin on Twitter and telegram. That's why my pseudonym's up there instead of my real name. So I do developer relations at WorldCoin, technically Tools for Humanity, the corporation supporting the WorldCoin ecosystem.
00:00:21.498 - 00:00:40.250, Speaker A: And I am here to give you an overview into our global proof of personhood system. How you can use it in your app to know that your users are unique humans doing something only once without having to know anything about which unique human they are. So it's very privacy preserving, but also great to know that your user is not a bot.
00:00:40.250 - 00:01:26.120, Speaker A: So I'll go over what World ID is, I'll go over why WorldCoin created it, I'll go over what you should do with World ID, and most importantly, how you integrate World ID into your hackathon project or even later into an app that you're working on after this hackathon. So start World ID answers the question, how do you know who or what is a real and unique person? Right? WorldCoin started out as a project that wanted to give everyone in the world a little bit of cryptocurrency to introduce them to this digital economy. But in order to do that fairly and effectively, you basically have to solve the civil resistance problem, right? You want to make sure everyone who's claiming WorldCoin is a real person, and you want to make sure that they only get to claim their fair share.
00:01:26.120 - 00:01:42.014, Speaker A: So for that, we built World ID. World ID is built to be private, right? So we don't have to collect any information about who you are. We never ask for names, emails, government ID, anything like that.
00:01:42.014 - 00:02:09.154, Speaker A: It's designed to be inclusive so that as much as possible of the global population can sign up for World ID. And it's meant to be robust, right? Each person only gets one account, can't have someone with ten accounts or anything like that. And there's a couple of different ways that we wanted to a couple of different ways we looked at doing this proof of personhood, right? Email or phone is like the weakest possible version of this.
00:02:09.154 - 00:02:36.222, Speaker A: I have multiple emails, I have multiple phone numbers. It's great when you just want to make sure, like, all right, did they at least have to put in some effort to try and create multiple accounts here? But it's not super useful when there's a big incentive for someone to make multiple accounts. We looked at doing KYC of official government IDs, but less than half of the global population has a digitally verifiable government ID, and for us, that meant that it wasn't inclusive enough.
00:02:36.222 - 00:03:14.314, Speaker A: We looked at web of trust systems, right? I'm not going to name any names, but existing web of trust systems really don't work that well when you have an initial trusted set of 64 or 1000 users. Because in a web of trust system, every step you take past that initial core trusted set is a less trusted profile, right? And when you're dealing with trying to sign up the entire global population and your initial trusted set is 64, you get really far away from that initial trusted set and it becomes a very gameable system. So that leaves us with biometrics, which initially sounds scary, but we can do in a privacy preserving way.
00:03:14.314 - 00:03:28.030, Speaker A: And I'll explain how in a little bit. We looked at fingerprint, face scans, palm scans, but the problem with all of those is that they simply just don't have enough entropy to distinguish unique humans at the scale of humanity. Right.
00:03:28.030 - 00:03:58.726, Speaker A: With Face ID or Touch ID on your phone, apple can distinguish about one in 30 million people, which sounds like a lot, but at the scale of 8 billion isn't, right? And that's because that's for authentication. They want to check, is the person in front of the device now the same as the person who is in front of the device during sign up? And the odds that some random person who steals your phone is the one in the 30 million who would be able to authenticate as you is really, really low. And it works sufficiently for that use case.
00:03:58.726 - 00:04:10.140, Speaker A: But for us, we have a different use case. We're trying to distinguish, are you unique? From everyone else who's ever signed up. So we need to be able to do on the scale of one in a billion or higher.
00:04:10.140 - 00:04:31.742, Speaker A: So one in 30 million that Face ID or Touch ID can do just doesn't cut it for us. And the other end of the spectrum with biometrics is DNA, right? Lots of entropy, lots of data, but it breaks the privacy. There's a lot you know about a person just by having their DNA, right? You can tell what race they are, what sex they are, and those are things we don't want to know about our users.
00:04:31.742 - 00:04:38.610, Speaker A: And it's also just generally really invasive. So that one was thrown out as well. But we settled on iris recognition.
00:04:38.610 - 00:04:54.250, Speaker A: Your iris has a ton of entropy in it. It's something that's non invasive for us to see. It's something that to get at a high level of detail, it requires your attention and your focus and inherently then your consent.
00:04:54.250 - 00:05:12.698, Speaker A: And it's very, very unique, right? Even identical twins will have very different irises. So it's useful because you can't tell a lot about who that person is just by knowing what their iris looks like. Additionally, iris recognition has been studied for decades.
00:05:12.698 - 00:05:29.590, Speaker A: You also all probably heard about the Apple Vision pro. They use tech quite similar to what we do, but again, they use it for authentication rather than proving uniqueness. So the level of detail that they're getting with the Vision Pro isn't going to be sufficient for, say, signing up for WorldCoin.
00:05:29.590 - 00:05:46.700, Speaker A: So then when it comes time to how we do these iris scans, we looked at phone sensors, right? Phone cameras are great, but they're not good enough to distinguish one in a billion people. We looked at off the shelf hardware. If any of you are familiar with Clear at airport security in the US.
00:05:46.700 - 00:05:59.066, Speaker A: It uses Iris verification. But for us, those still sometimes didn't have enough detail for us. And additionally, it wasn't a trusted environment.
00:05:59.066 - 00:06:12.910, Speaker A: So it became really tricky to actually trust that that hardware was doing what it was saying it was doing. So that left us with developing custom hardware. And if any of you have ever built hardware in here before, you know that hardware is hard, it kind of sucks.
00:06:12.910 - 00:06:23.800, Speaker A: But it's what we had to do, and frankly, I think it's kind of fun. So with that, I introduce you to the Orb. The Orb is the device we use to identify you as a unique human.
00:06:23.800 - 00:06:48.286, Speaker A: It does this by taking photos of your Iris, computing an Iris code on the device, and comparing that Iris code to all the other Iris codes that have been scanned and can verify that that Iris code is unique. Today, we're confident our algorithms can handle one in a billion, and they're always improving. The Orb has been in development since before COVID so early 2020.
00:06:48.286 - 00:07:02.642, Speaker A: It's gone through lots of different revisions, as you can see here. We started out with two cameras, one for each eye, but eventually moved to one camera that can actually move a gimbal mirror to see both eyes. Right.
00:07:02.642 - 00:07:23.610, Speaker A: So the Orb makes sure you're real checks your unique Iris code, and then it verifies your unique World ID. World ID is kind of like this global digital identity protocol, like an Internet passport in a sense. And it supports multiple proof of personhood credentials, starting with Or Biometrics and phone number.
00:07:23.610 - 00:07:40.046, Speaker A: Right. We see this proof of personhood is a spectrum in a sense, right. How strongly can we trust that this is truly a unique human? So for some use cases, you're going to want Or Biometrics, we consider it the gold standard for knowing someone's a unique human.
00:07:40.046 - 00:07:54.900, Speaker A: But in other use cases, just knowing that they have a phone number and have verified that in the World app will be good enough. And we're always looking to add more proof of personhood mechanisms to this one. That we may add at some point in the future would be verifying a government ID.
00:07:54.900 - 00:08:21.760, Speaker A: But it is up to app developers using World ID to determine where they set the bar for how strong a proof of personhood they want to allow users to take certain actions in their app. World ID is privacy first, decentralized and open source, right? We never collect personally identifying information from you. That's sort of the whole point of it is that we can't even disclose which person you are because we don't know in the first place.
00:08:21.760 - 00:08:31.018, Speaker A: It's decentralized and open source. So the Protocol, all the smart contracts are open source. Our developer portal code is open source.
00:08:31.018 - 00:08:46.610, Speaker A: Our ID kit, the front end SDK, that's open source as well. And there's lots of different use cases for World ID. So some that I really like, voting one person, one vote is something I'm a big fan of compared to one token, one vote.
00:08:46.610 - 00:09:16.350, Speaker A: Customer incentives are another one I really like. That I think play in well with the fact that we see personhood as a spectrum, right? So if you have a user who's orb verified, maybe you give them a one month free trial and a 25% discount on their first order. But if they're phone Verified, right, because you're a lot less certain that they are a unique human with only one account, maybe you give them a week long free trial and a 5% discount on their first order, right? Airdrops are another great use case.
00:09:16.350 - 00:09:35.990, Speaker A: You want to make sure you don't have someone claiming the AirDrop 100 times social media, it's great to know that you're working with a real person instead of a bot. Lots of different ways that this tech can be used. So we designed World ID to be super, super easy to integrate across web, mobile and on chain use cases.
00:09:35.990 - 00:09:50.060, Speaker A: There's two ways that you can integrate World ID. One is sign in with WorldCoin, one is anonymous actions. So let's start with sign in with WorldCoin and let's see how it works.
00:09:50.060 - 00:10:16.274, Speaker A: So I'm actually going to sign into our developer portal here. So with the developer portal, I hit Login and it takes me to this page with a QR code that I scan within the World app. So what's happening here is that QR code tells the app which app it is that I'm signing into.
00:10:16.274 - 00:10:39.020, Speaker A: When I press verify with World ID, a zero knowledge proof will be generated on my device attesting that I am one of the verified WorldCoin identities without revealing which one. The list of those identities is stored in a merkel tree on chain. So to test that I am one of those identities, performing an action without revealing which identity I actually am.
00:10:39.020 - 00:10:53.600, Speaker A: So I press verify, that information gets passed back to sign in portal, and then I'm logged in. Simple as that. So I can come back to the developer portal in a little bit, but that's a quick demo of how we sign in with World ID.
00:10:53.600 - 00:11:13.320, Speaker A: And there's lots of different ways that you can integrate sign in with WorldCoin. So I put Auth zero at the top there. We're going to be launching an integration soon where if you're using Alt Zero in your web Two app, you can implement sign in with WorldCoin just as easily as you can implement sign in with Google, sign in with Apple, sign in with Facebook, whatever it may be, right? Five minute process.
00:11:13.320 - 00:11:22.322, Speaker A: Nextauth. JS is sort of the go to right now for using it in any of your web apps. We have our OpenID Connect provider.
00:11:22.322 - 00:11:35.998, Speaker A: It provides an OIDC well known file. So if you've worked with OIDC before, you're almost certainly familiar with that and makes it quite easy or you can even implement OpenID connect flows yourself. But that's a very masochistic exercise and I don't recommend it.
00:11:35.998 - 00:11:51.890, Speaker A: So here I'll talk about how we can integrate signing with WorldCoin using Nextauth JS. This is all you need. You put this configuration for the WorldCoin Provider into nextoff's configuration file.
00:11:51.890 - 00:12:20.134, Speaker A: You pass it this well known file or the URL to the well known file that instructs it on what endpoints to use for authorization, for exchanging login token. You pass the client ID and client secret that you get from Worldcoin's Developer Portal when you create an app. And then down here we are mapping the information returned from sign in with WorldCoin to that user.
00:12:20.134 - 00:12:41.380, Speaker A: So the user ID is going to be the nullifier hash. It is a unique identifier for a combination of user and action within World ID. Anytime that action a user is taking changes, that nullifier hash changes and anytime the user performing a specified action changes nullifier hash changes as well.
00:12:41.380 - 00:13:09.066, Speaker A: The fact that nullifier hash will always be the same for any combination of user and action means that we use that as your unique identifier when you're signing into Platform A. But when that action changes, say you're signing into Platform B instead. That nullifier hash also changes, which means that your accounts across multiple platforms using sign in with WorldCoin can't be correlated to each other, at least with the information passed by World ID.
00:13:09.066 - 00:13:33.380, Speaker A: If you were to give platform A and platform B both your email and they were to compare their list of accounts, they'd be able to correlate you then, but that's with extra information that they have to ask you for specifically. World ID doesn't disclose any information like that because we don't have it in the first place. And now we can talk a little bit about anonymous actions which are more powerful, they can be used for on chain use cases and likely what most of you will be interested in.
00:13:33.380 - 00:14:08.106, Speaker A: So anonymous actions attest that you are a unique human doing something once or within a specified number of times you can set that number arbitrarily I'll talk about how you can set that later and for on chain use cases specifically with a specific signal, right? So say you're claiming an AirDrop, that signal would be the wallet address. You want to claim that AirDrop to for on chain use cases. Even though there is a wallet within the World app, it is not designed to be a fully functional cryptocurrency wallet.
00:14:08.106 - 00:14:26.690, Speaker A: You can't connect it to DApps. So you would have users connect their wallet same way that they always do and then they would additionally verify with World ID as part of the transaction to claim that AirDrop or mint that NFT. So let's see a quick demo of anonymous actions.
00:14:26.690 - 00:14:45.850, Speaker A: So if I go over here, we actually have a try it out section in our documentation. And additionally, here on the right, I am using our simulator. So the simulator is how you can test your apps for staging use cases.
00:14:45.850 - 00:15:10.046, Speaker A: So if any of you guys are doing on chain apps when you use testnet, specifically Polygon Bombay testnet, you have to use the simulator in order to do these actions. So in the simulator, you can create temporary identities and then validate them as Orb and or Phone verified. Or you can actually sign in with an existing crypto wallet.
00:15:10.046 - 00:15:39.100, Speaker A: You have to generate a persistent identity that you can verify once reuse for multiple use cases. But the reason the simulator is important for testing is that if you're just testing civil resistance and all you have is your real world app, you will run out of opportunities to test your civil resistant the first time it works, right? So as soon as you have performed an action with that ID, you won't be able to anymore. Whereas in the simulator, you can spin up lots of identities to test different use cases and things like that.
00:15:39.100 - 00:15:52.074, Speaker A: So let's say we're using the staging network. Let's make this the Waterloo test action. Let's only accept Orb credentials and let's hit continue with WorldCoin.
00:15:52.074 - 00:16:05.042, Speaker A: Oh, it thinks that this is a mobile use case. So this is what your users would normally see. This modal pops up, and for testing use cases, we can very conveniently click on the QR code to copy the information within it.
00:16:05.042 - 00:16:17.560, Speaker A: You can also run the simulator on your phone and scan it just as I did in the app earlier. And in the simulator, we can tap up here to go into the scanner or insert QR manually. I paste that in there.
00:16:17.560 - 00:16:27.660, Speaker A: Oh, I did hit Submit. Let me try that again real quick. So I copy the QR code, insert it here.
00:16:27.660 - 00:16:47.020, Speaker A: I will verify with my biometrics the verification. I click Verify with World ID and the proof gets passed back to the front end. So that's what the flow for your users looks like when they're verifying with World ID.
00:16:47.020 - 00:17:06.978, Speaker A: And now we can get into how to actually implement it. So when you're using anonymous actions, everything starts with Idkit. Idkit is our front end SDK and it's a single react component, right? So the Idkit widget, you tell it what action your users are performing as well as the app ID.
00:17:06.978 - 00:17:23.618, Speaker A: You get both of those things from the developer portal. You pass it two callback functions handle Verify, which is actually optional, and On Success, handle Verify is called as soon as that proof is returned from the user's device. On Success gets called when the user closes out of the modal.
00:17:23.618 - 00:17:36.726, Speaker A: And then you have to pass which Credential types you want to accept. So you can limit that to just phone verification, just Orb verification, or both if you leave that one. If you don't specify it will assume just orb credentials.
00:17:36.726 - 00:17:50.622, Speaker A: Additionally you pass it the button that is displayed and then pops up the modal when you click it. And this is what gets returned from Idkit. This is the proof generated on a user's device and passed back to your app's front end.
00:17:50.622 - 00:18:13.382, Speaker A: So the merkel root specifies root of the merkel tree with the user's identity listed within it. The nullifier hash, as I said earlier, is the unique identifier for that combination of user and action. The proof is much longer than shown here and that is actually the cryptographic proof with semaphore and then the Credential type is passed back as well.
00:18:13.382 - 00:18:36.314, Speaker A: So orb or phone at the moment is more to be supported in the future. But what do we do with this? We still have to verify that proof, right? Because on the front end anyone can put in any data they want and you can't really trust it. So you have to do something on a back end, whether that is your web apps back end or if that is on chain.
00:18:36.314 - 00:18:47.650, Speaker A: So let's start with talking about how you would do this in a web apps backend. So you would pass that information to your back end. There's many different ways you can do that.
00:18:47.650 - 00:19:07.986, Speaker A: In our cloud actions template repository that gets handled for you. And then in your backend you would run a bit of code like this that would call Worldcoin's API, right? So the base URL would be ID Worldcoin.org or I'm sorry, developer Worldcoin.org
00:19:07.986 - 00:19:24.480, Speaker A: API v one verify and then your app ID that this action is for you. Pass it that request body. Additionally with values, the actual request body, there will include values that you had to pass to Idkit in the first place, like your app ID and action ID.
00:19:24.480 - 00:19:44.974, Speaker A: And then we handle verifying that proof for you. You don't have to worry about any of the math for the zero knowledge proofs, anything like that. But then when you get a 200 response back, you know that user has been verified and then you perform whatever actions you want to perform for that user from there.
00:19:44.974 - 00:20:01.180, Speaker A: So that can be marking their profile as verified in your database. Lots of other things you can potentially do, but you have to verify them on the back end. If you just verify it on the front end, a user can manipulate that and it's not actually proving anything.
00:20:01.180 - 00:20:23.860, Speaker A: Now, if you want to verify it on chain, first you have to construct your World ID instance, right? So underscore World ID here you would pass the address of the WorldCoin Smart contract. We do have an ENS name for that, it's listed in our documentation, which I'll link to at the end. And then you have to pass your app ID and action ID as well.
00:20:23.860 - 00:20:52.410, Speaker A: Then you have to actually build the external nullifier yourself. But that's sort of the first step. Get everything set up from there you can define your verify and execute function, right? Which you give the signal that that user wants for this specific action, right? So again, AirDrop could be wallet address, you give it the root of the merkel tree, you give it the nullifier hash and the proof.
00:20:52.410 - 00:21:14.526, Speaker A: So in this example, we've implemented civil resistance, right? For off chain use cases, we handle the civil resistance for you. You can pick an arbitrary number of times you want to let a user do something in the developer portal, but for onchain use cases, you have to implement that yourself. So in this instance, the first thing it does is check if we've seen that nullifier hash before.
00:21:14.526 - 00:21:22.034, Speaker A: And if it does, we revert. We just have a list of the nullifier hashes we've seen and we know if it's in there. We've seen it before.
00:21:22.034 - 00:21:34.438, Speaker A: This user is trying to perform an action twice. We don't want to let them do that. So then we call the verify proof function on Worldcoins contract, we pass it root of the merkel tree, the group ID.
00:21:34.438 - 00:21:47.686, Speaker A: So the group ID is going to be either zero or 10 is. If that user is phone verified, one is if that user is orb verified. We do that because we have separate merkel trees for orb and phone verification.
00:21:47.686 - 00:22:15.750, Speaker A: It's explained in our documentation. And in your smart contract, if you only want orb verified users, for example, then you can just hard code that as one, right? But there may be some use cases where you're going to want to pass that information in based on whether that user is orb or phone verified. So you abi encode the signal and hashed field, you pass the nullifier hash and the external nullifier and the proof.
00:22:15.750 - 00:22:39.470, Speaker A: So if that proof doesn't verify, this will revert. But if this does verify, we'll continue on and we add the nullifier hash for this example into the list of nullifier hashes so that we make sure that that user can't perform this action again. Once we've done all that, that's when we continue on to do whatever it is that we want our smart contract to do.
00:22:39.470 - 00:22:55.150, Speaker A: Minting an NFT, claiming an AirDrop, whatever that may be. So that is like the really quick overview into how to integrate World ID. It covers everything, right? It's actually quite simple.
00:22:55.150 - 00:23:21.738, Speaker A: And for us, we have twenty k in prizes here at the Hackathon. So $5,000 to the best overall use case, 2500 each to the best Governance app, most creative use case, best AI use case and best sign in with WorldCoin App, right? So the governance app can be a bunch of different things that could be dao governance, that can be more political voting systems. Governance is pretty broad there.
00:23:21.738 - 00:23:46.420, Speaker A: Similarly with AI, right? That can be AI safety, that can be ensuring a human's in the loop with your AI system, that can be ensuring that that training data is actually generated by a human. Again, lots of different things there, but for all of these, I want to clarify that you do have to integrate World ID into your project. It's not that we're giving away 2500 to just some cool AI project that doesn't use World ID.
00:23:46.420 - 00:24:12.090, Speaker A: Additionally oh, I made a slight typo here. We have two $1,000 honorable mention prizes and then a $3,000 prize pool split among all submissions that properly integrate World ID. So our SDK and Developer Portal is still in beta, but we're letting all of you skip the waitlist for hacking here at ETH Global Waterloo.
00:24:12.090 - 00:24:21.574, Speaker A: Additionally, you can continue to build on top of World ID after the hackathon. If you do, please let me know because I really want to be able to help you out. I am developer relations.
00:24:21.574 - 00:24:30.894, Speaker A: It's kind of my job. But this will get you access to the SDK. I would recommend visiting the URL on a desktop instead of doing it from your phone.
00:24:30.894 - 00:24:45.560, Speaker A: But you can also if you missed this here, come find me at the booth. This information will be available there. Everyone good? Can I move on? All right, so if you guys still want to get access, I'll give you questions.
00:24:45.560 - 00:25:08.780, Speaker A: Okay, so I'll do questions right after I put this link up as well, which links to a bunch of resources including our documentation, our developer portal template repositories that we have available for you all information on our Bounties and where to contact us if you have any questions. So now questions. All right, I'll go with you first.
00:25:12.130 - 00:25:44.520, Speaker B: My personal thought of product was likely to build the unchanged down can make the smart contract to be upgraded to change the parameters, make the smart contract intend those accounts and also able to change the code. The way that I've been doing that is through the upchand. So we have considered several options to actually bring the cost.
00:25:44.520 - 00:26:34.562, Speaker B: One is that the role have the identity to identify a specific role is to use the Soba token and the other way is the did. But as my understanding, let's say the more like we can identify persons as entropy, there is more exposure of their actual personal information there. It's not like the private information it's probably not private anymore.
00:26:34.562 - 00:26:55.450, Speaker B: And especially the one that you talk about that workforce use personal file information. I just want to know you guys are the central entity and you use the personal information, how does that keep the preference?
00:26:57.250 - 00:27:11.694, Speaker A: So I can expand a little bit on how we use the biometric data in the orb. So in the orb it does take photos of your irises. Unless you opt in, those photos never get stored anywhere.
00:27:11.694 - 00:27:51.360, Speaker A: We compute the iris code that digital representation of the entropy of your iris in Ram and if you didn't opt into having those photos stored, they get deleted. If you did opt in, they are encrypted temporarily stored on the orb until they get uploaded to our server using a sealed box encryption mechanism to prevent, say, a rogue operator from trying to get that data off of the orb. The orb itself has lots of other physical security measures like tamper resistance, things like that, but if that is stored, it is encrypted, full stop.
00:27:51.360 - 00:28:31.818, Speaker A: And once we have that iris code, we also know as part of the sign up process the public key of your world ID. And to clarify, the wallet in the world app and the world ID are based on two entirely separate secrets. Right? Your biometrics never touch anything related to the wallet, but the public key of your world ID, we know which iris code it's associated with, but we just add that public key to the merkel tree on chain so that when your device generates a proof that merkel tree is publicly available for verifying that proof.
00:28:31.818 - 00:28:54.230, Speaker A: But that public key never gets revealed. Not even WorldCoin knows which actions any specific identity is taking because that zero knowledge proof is generated on your device. The only way to associate actions back to a public key is if you have the private key and you are the only one who has that private key on your device.
00:28:57.450 - 00:28:58.610, Speaker B: Thanks for answering.
00:28:58.690 - 00:28:59.480, Speaker A: Of course.
00:29:02.490 - 00:29:14.920, Speaker B: I understand how the iris is stored and it's on chain, but is there any on chain API associate with the public?
00:29:15.550 - 00:29:33.170, Speaker A: So the iris code is not stored on chain, just the merkle tree of World ID public keys. But those public keys themselves aren't really useful for anything because you can't associate them with actions they're not meant to be a true public Identifier of who you are. Right.
00:29:33.170 - 00:29:44.440, Speaker A: Everything with world ID is context specific. You have your nullifier hash in the context of a specific app, but you don't know that user's public key for their world ID.
00:29:46.970 - 00:30:08.280, Speaker B: Right, now I can see there is sign. Yes, but I want to use sign with MetaMask and associate the world coin ID once to identify this particular ID or the wallet where ID associated with that world ID.
00:30:09.330 - 00:30:38.562, Speaker A: So that's possible, but you would have to have the user sign in with both. Right. In that use case, would you want your user to be able to sign in later with WorldCoin or would you still want to have them connect their wallet? Okay, so in that case, I would say actually just using an anonymous action to have that user verify once right, it's using the anonymous action rather than sign in with WorldCoin makes more sense for the use case you're talking about, which I would describe as verifying that wallet.
00:30:38.562 - 00:30:48.180, Speaker A: Right? Right. And that's all you're looking to check for? Yeah. So anonymous actions work great for that.
00:30:48.180 - 00:31:43.724, Speaker A: Can you speak up, please? Yes. So I couldn't hear you perfectly. Was the question specifically about why you have to custom do the civil resistance for on chain? So that's because for off chain.
00:31:43.724 - 00:32:03.320, Speaker A: Use cases. It's very simple for us in our back end to just track how many times this action has been performed and let you pick that for your app. It really is just more of a convenience feature for developers who are using things off chain.
00:32:03.320 - 00:32:19.736, Speaker A: But for on chain use cases, it would add a tremendous amount of bloke to our contracts to track that for you so that the more people use World ID, the more expensive it would become for you to use World ID, which we don't want to do. Right. So that's why we have you track that yourself.
00:32:19.736 - 00:32:35.120, Speaker A: It is, as you saw, an extra two line ends of code. So that's why we did that, or at least saving you money that you don't have to spend in the first place. Any other questions? Yep.
00:32:35.120 - 00:32:45.580, Speaker A: It's most efficient to verify an inclusion proof in a merkel route.
