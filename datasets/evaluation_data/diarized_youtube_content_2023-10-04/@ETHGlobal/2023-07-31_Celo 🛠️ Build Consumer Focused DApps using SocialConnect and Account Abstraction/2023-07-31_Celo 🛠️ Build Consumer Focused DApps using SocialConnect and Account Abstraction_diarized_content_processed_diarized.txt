00:00:07.290 - 00:00:22.686, Speaker A: Hi everybody. Thanks for coming out. Excited to talk to you today about sello. So my name is Eric Nakagawa, based in San Francisco. Very excited to be here at ETH Global. It's been a long week. A bunch of our team are also here.
00:00:22.686 - 00:00:40.906, Speaker A: We got Harpal, who's going to be talking in a little bit, and a bunch of folks down by our booth. So if you have any questions after, come ask us questions. We're also handing out a little starter sheet. A few folks are hackers. How many here are hackers? Great. So before you leave, please grab one. It says a starter guide to help you folks save some time.
00:00:40.906 - 00:01:07.540, Speaker A: So what is cello? Celo, if you haven't heard, is a blockchain focused on prosperity. That's what we like to say. And we are building a very large global community of both builders, founders that believe in this concept of prosperity for all. There's who we are again. We have a bunch of folks here to help you folks out. We have folks who can give you mentor around ideas. Come talk to me about that.
00:01:07.540 - 00:01:38.506, Speaker A: Community aspects, technical from the solidity and the front end dev side, and then some product feedback as well. First, let's talk about what is cello. So when I say building for purpose, we want to build for real people. And we've been doing this for several years. When Celo launched, it was carbon negative from the beginning. So if you've ever heard of regen refi, regenerative finance, we didn't know that word was going to become a word. Back then.
00:01:38.506 - 00:02:13.334, Speaker A: It was more like about climate and social impact. So a lot of people have been building with that and have embraced cello when it comes to refi projects. We think a lot about the planet and we want people to be building for real world use cases, trying to help a lot of people. And what that means is people in Latin America, people in Africa, and our focus has been there for quite a long time. What kind of features to talk about if you're a dev? Well, we start with mobile. So a lot of times if you're building, you want to start with mobile. And the reason for that is everybody here has a mobile phone, everybody in the world.
00:02:13.334 - 00:02:49.346, Speaker A: Most people have access to a mobile phone, but they don't have access to a computer. And the user experience of that, I think it's really important to be thoughtful when you're building your projects. And again, like I said, regenerative finance, that can be things like it's not just climate credits, it can be community tokens. And if you want a book to read, if you're into this stuff, sager Economics is a great book to learn more. As I mentioned before, carbon negative built into the protocol. We actually have a hard fork coming that will make every transaction carbon negative. And very excited about that coming soon.
00:02:49.346 - 00:03:07.874, Speaker A: A bunch of other features in terms of how many people use the project. There are almost or over 30 million wallets. Bunch of mobile users that we're targeting. We've given out a lot of grants. As I mentioned before, we've offset a bunch of carbon since day one. We really believe in that. A lot of transactions.
00:03:07.874 - 00:03:35.486, Speaker A: There's also a bunch of with 1000 projects that are building on Sello. There's a lot of recently large uptake in a lot of people doing things on chain. So right now we have stablecoins things like CUSD, C, Euro and Crayl. We have an ultra light client for helping with mobile phones that might not be that strong. Bunch of bridges. Fiat Connect actually helps to connect on ramps for the users no matter where they are in the world. Excited about that.
00:03:35.486 - 00:03:55.510, Speaker A: And Social Connect is something that Harpal is going to be talking about. As I mentioned, the ultra green hard fork. Very excited for this to happen. Coming in August. And then if you've watched the news, you've heard about the proposal in the community for turning cello into an L two. So there's a governance call that is about 40 or 55 minutes from now. Excited to see what the community wants to say.
00:03:55.510 - 00:04:19.274, Speaker A: We want to be more aligned with theorem. When we launched, we were proof of stake. So we've been proof of stake from the beginning. And now that Ethereum is in that Ethereum is proof of stake, I think it makes sense to come back home. A lot of focus on interoperability going to quickly run through our boundies. If you're building, we are getting out 3000 for 1st 2001, thousand for second and third. And then we're also looking for people to implement Social Connect and a con abstraction on Sello.
00:04:19.274 - 00:04:23.650, Speaker A: So without further ado, here's Harpal to talk about each of these pieces.
00:04:26.990 - 00:04:58.510, Speaker B: GM. Everyone, harpal here. So let's talk about Social Connect because this is one of the theme boundaries we have. So first of all, rather than learning about Social Connect, let's learn why we need Social Connect in the first place. Right? This is how my Ethereum address looks like. Personally, I don't even remember it myself. But imagine in the future as we go more mobile and we use a lot of applications which will involve our friends and our contacts and family, you might have to memorize Ethereum addresses of all the people in your contacts.
00:04:58.510 - 00:05:30.410, Speaker B: Right? And it's going to be very tough. I mean, I don't remember myself, the address, my own address. How am I going to remember everyone else's address? Unless you are this guy who is like eight world eight time memory world champion. I'm pretty sure he's going to be also having problems at some point. But let's talk about Identifiers, right? We have email. We have Twitter, LinkedIn, Discord, Telegram, ENS, Facebook. I don't remember because I haven't used it for a while.
00:05:30.410 - 00:05:35.466, Speaker B: And now we have a new thing called threads. Yeah. Too many identifiers.
00:05:35.498 - 00:05:35.742, Speaker A: Right?
00:05:35.796 - 00:06:24.398, Speaker B: Too many things to remember. Oh, I want to send crypto to my friend. I don't remember his Ethereum address, I don't remember his cello address, I don't remember his yeah, you get the point, right? So what if we can make it possible to let users use their existing Identifiers as their wallet address, right? What if the user can just know, I want you use my Twitter handle as my wallet address from now on. So if my friend wants to do something with my wallet, send tokens or just use my address somewhere, they can just put in my Twitter handle, right? And that's what Social connect is. So it's a simpler way of sending value between wallets, but it can be expanded into other things. It's basically ENS, but you can decide what the Identifier can be. So here's the GitHub repo for that in case you're interested.
00:06:24.398 - 00:06:41.246, Speaker B: And this is a screenshot of how it looks like in an app. It's already live and these are some apps which are already using it. Veloura is a wallet node. Finance is a developer tool. Libra and Kala are also wallets that you can check out. They are using Social Connect right now in production. And here's a cheat sheet.
00:06:41.246 - 00:07:19.570, Speaker B: I highly recommend that you scan this QR code, but if you don't want to, we have a physical cheat sheet that you can take here from Lyle, which is in the cello t shirt. But yeah, let's move it. So how does social connect work? So there are three parties in this protocol. One is Issuers, second is DApps and then there's an on chain contract which keeps track of the attestations. So what are issuers? Issuers can be anybody who wants to attest users based on Identifier of their choice. So for example, let's say I want to make it easy for users to use their Telegram handle as their wallet address. So I can become an issuer for Telegram and it's up to me.
00:07:19.570 - 00:08:07.226, Speaker B: You don't have to take permission from anyone. It's open for all. You can become an issuer and yeah, you can just start authenticating users and getting their Telegram and just verifying if a user holds it. And once you do, you can basically use that obfuscated Identifier and put it on the smart contract on chain and then you are issuer. So what is the second party? The second party is DAPs. So let's say you're a DAP builder and you know that there exists an issuer already for the Identifier that you want to use or you want your users to use. Then you can just trust those issuers, right? Issuers could be seller foundation testing some form of Identifier.
00:08:07.226 - 00:08:55.546, Speaker B: It could be your own protocol contributing for other DApps to use an Identifier. So DApps basically trust issuers. They can trust issuer or they can become an issuer themselves so they don't have to do the overhead of doing authentication, et cetera. And then there's an Onchain contract. This is the part where once you are done with authentication of the Identifier, you need a place where it cannot be changed without the permission of the issuer. That's where the Onchain contract comes into place, where you are basically whenever you want to store something on this on chain contract, which is the Attestations contract, you will have to sign with your issuer keys. So everybody knows who did the process of authentication, who is responsible for this, et cetera.
00:08:55.546 - 00:09:22.390, Speaker B: And these Identifiers are not stored as plain text. They are encrypted to preserve privacy. So what to bill, right? Since this is a hackathon, what are you supposed to bill? Using Social Connect, you can become an issuer for a new Identifier. It could be something that you use for your own product. It could be an internal Identifier of your choice. There are many Identifiers that don't have issuers on the seller network. Discord Telegram.
00:09:22.390 - 00:09:55.620, Speaker B: These don't exist right now. So opportunity is available for you guys. And you can integrate Social Connect into existing DApps for issuers that already exist. Or you can enable walletless onboarding using an Escrow contract that we already have on Sello right now. It supports ERC 20 tokens. So basically, if you want to send some ERC tokens to a user of your app, they don't even need a wallet. And we don't have an Escrow contract for NFTs, so that's also an opportunity for you guys.
00:09:55.620 - 00:10:25.754, Speaker B: Cello Composer so this is a template that we have built internally for you guys to get started quickly. This is for hackathon people, right? Get started in less than 1 minute. You just run one command and you will have an option to select whether you want to use React. You want to use React native, you want to use Expo without expo, angular flutter, any framework of your choice or library of your choice, you can just start building in less than 1 minute. And Rainbow Kit is already in there. Wallet. Connect V two is already in there.
00:10:25.754 - 00:10:49.380, Speaker B: So you don't have to worry about going through the docs of these technologies and figuring out and losing those essential early hours of the hackathon. So I highly recommend scanning this QR code as well. So social connect with cello composer. Just five steps. Scan this QR code. You will get these steps in more detail in the QR code. We also have a physical version of the same year.
00:10:49.380 - 00:11:08.746, Speaker B: It's just five steps to get started and you will be up and running with Social Connect in your DAP. So the second bounty we have, the second team bounty is Account Abstraction 2000 USDC. So let's see, raise of hands. How many of you know about account abstraction already?
00:11:08.848 - 00:11:09.162, Speaker A: Right?
00:11:09.216 - 00:11:45.974, Speaker B: Okay, a few people. Great. So why do we need AA, right? This is how popular wallets are onboarding. If you must have already been through the screen maybe a couple of times, nothing against MetaMask. I personally use it. But it's not friendly. For a person who does not know about tech, a normal user, a person who uses Twitter or Telegram or all these social apps, might not want to learn how to do all the secret recovery phrase, where to put it, why to write it down, and they might not even write it down and just throw it away.
00:11:45.974 - 00:12:18.330, Speaker B: And later, when they have issues, they will be looking around for help, but nobody will be able to help them. And even as the onboarding is done, you still need native tokens to start. So that's another barrier for that user, barrier to entry for that user. Right. And as you move towards MultiChain DApps, the complexity will keep on increasing, making the experience worse, difficult to operate. And these complexity will just not allow Web Three to express the full potential to the user. That what it can let you achieve.
00:12:18.330 - 00:12:45.266, Speaker B: Right. And this is where account abstraction comes into play. Right. It's a way to solve problems by allowing users to flexibly program their wallets with more security and create better user accounts. Obviously the developer will do it, but if we do this work, then the user will have a much better user experience using Web Three products. Cool. So a lot of people might know about the 4337 EIP.
00:12:45.266 - 00:13:22.494, Speaker B: It's not exactly account abstraction, because account abstraction is actually a general concept. A lot of people have been working on it before the ERC even came up. But it does give you some basic rules and standards that we can adopt to enable account abstraction at the application layer of ethereum some people have achieved on the protocol. Yeah. How does it work? We have four parties in this ERC that was proposed that one of them is Account Factories. It helps you create smart accounts. You can create your own account factory based on the account factory, the accounts will be created.
00:13:22.494 - 00:13:52.046, Speaker B: So if you want to use a different type of account, then Account Factories is what you want to build. Bundlers. These are like validators or nodes who can process user operations. Now, emphasis on the word user operations. This is different from transactions because the structure is different, but they are similar to transactions, but not exactly transactions. Entry Point is like the central place where all the user operation flow takes place. Entry .1
00:13:52.046 - 00:14:22.274, Speaker B: of the main objective of Entry Point is to make sure that the bundlers are paid for the work that they do. Npmaster is an optional part, but a very useful one. It helps you sponsor gas fees for accounts. So let's dive more into details. I guess I talked about Account Factory, that it lets you create different types of accounts. If you want to create a different type of account, account Factory is what you want to build bundle. So they have a special mempool for operations.
00:14:22.274 - 00:15:07.330, Speaker B: They're always keeping an eye on those mempos and whenever user operations come in, they process them, they order them, they make sure that the user operation is not valid. They also check whether the user operation will lead to fees getting paid to the bundler or not because they are doing the work they need to get paid. And entry point basically coordinates the entire process of the user operation going from the user to execution. And one of the crucial roles it plays is that bundlers are paid for their work because bundlers need to voluntarily participate in this system. If there are no bundlers, there is no account abstraction. Paymasters paymasters are basically smart contracts which are already deployed on the blockchain. They are willing to sponsor gas for the execution of user operation.
00:15:07.330 - 00:15:40.154, Speaker B: Sponsorship does not always mean that it's free, it's just an alternative method. Paymasters could be taking tokens in, let's say they are taking token X and they are willing to pay the native token for you on your behalf. But you can basically build any type of method to accept tokens as a paymaster and pay for the user. But yeah, it could also be free, it could be app specific as well. So we will talk more about it. So how do you build account abstraction? DApps on cello.
00:15:40.202 - 00:15:40.846, Speaker A: Right?
00:15:41.028 - 00:16:06.422, Speaker B: You can use third web SDK right now. Third Web SDK is right now supported and it allows custom account factory. So if you want to build custom accounts account factory. If you want to build custom Paymasters, that's also supported. If you want to use their bundlers, feel free. Third web is already running them up. You can just send a transaction to the user operation to their bundler and it will go through, I mean, if it's valid.
00:16:06.422 - 00:16:56.006, Speaker B: And it also supports all popular connector types. So you might be surprised that not all the SDKs out there for account abstractions support Rainbocket Wallet Connect but Third Web does. So yeah, use that and transaction batching is also supported. And what to build for the bounty? Right, here are some ideas. You can build social recovery based wallets combining both the Bounties Social Connect and account abstraction and create a wallet which can be recovered using Social Connect. You can create family accounts where there are multiple owners with different limits. So a wallet which is owned by the family, where kids have a limit of let's say $10 or $20 per day and the adults in the family have more limits and they can choose which apps they can use or not use, et cetera.
00:16:56.006 - 00:17:35.454, Speaker B: Account where the transaction validation is done using fingerprints or Face ID. That is also possible. I've seen already this being built and session based case in accounts. So this is where you would create a special type of account which can be suitable for gaming or social media specific use cases where the social media app or the gaming app says I'm going to take over for your account for the next 30 minutes. So whatever action you are trying to take in my app, I won't ask for your signature, I will just do it myself. So something like that. And you can build custom Baymasters token Baymasters for Good dollar.
00:17:35.454 - 00:18:02.878, Speaker B: Good Dollar is a UBI protocol on sello. So everybody gets a small amount of UBI. Or you could say a good dollar every day. Maybe you can build a paymaster which uses those small amount of UBI for paying gas fees. Since people are getting that every day, they will always have something to pay for gas. Staking reward Tokens maybe you have a protocol where there's some staking mechanism and the reward tokens that they get can be used for gas fees. Pretty simple.
00:18:02.878 - 00:18:44.700, Speaker B: Or you could have referral based transaction sponsoring, which is let's say you are just into production and you want user adoption. Then you tell if you bring five more people, I will sponsor gas for you. If you bring ten more people, I will sponsor more gas for you. Something like that. You could have app specific sponsoring, so maybe you are something like Ave where you have multiple apps on the blockchain and you want to say if you want free gas, then you can get free gas if you're using Aave products, ave or Lens protocol, et cetera. So free gas for you. If you're using any Ave products, you can build paymasters that can do that as well.
00:18:44.700 - 00:19:07.554, Speaker B: And use Cello Composer for a quick head start. So account abstraction with cello composer. Again, only five steps. Scan this QR code, you will get details about what those steps are. We also have a physical copy. You can get that one on your exit. And again, to summarize, we have three bounties in total.
00:19:07.554 - 00:19:42.714, Speaker B: Five bounties. So if you are first place, you get 3002nd place, 2003rd place, 1000 USDC and two theme bounties social Connect and Account Abstraction 2000 USDC each. So I was a hacker, I am a hacker and I will forever be a hacker. So you want to stack bounties, right? You are not going to just build on sello and be like okay, I just build on cello. Just one bounty? No, you're going to target other folks who are already here in the cello ecosystem and who are also part of the hackathon. So build with chainlink. Chainlink price feeds are available on Cello.
00:19:42.714 - 00:20:16.454, Speaker B: Use them. Build something with safe on the Cello network. Use the Graph protocol if you need any indexing in your app. Use hyperlane bridges to make cross contract calls, cross chain calls, sorry. And use MetaMask snaps. Or obviously you want to use Wallet Connect at some point. You can use lit protocol if you need any encryption and I highly recommend using Quicknode RPC Endpoints, but that's there and some other folks who are not part of the hackathon, but I highly recommend that you use them.
00:20:16.454 - 00:20:41.054, Speaker B: Valora, third Web, massa finance, good dollar, superfluid and two count protocol. And that's it. Good luck to everyone here in the room who is hacking and find these faces. I know you might not be able to remember names, but I hope you remember faces. One of them is me. Eric is here, and there are a bunch of more folks at the booth. So if you have any questions, just feel free to trouble us and yeah, that's it.
00:20:41.054 - 00:20:46.220, Speaker B: If you have any questions, please take it.
