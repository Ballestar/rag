00:00:07.210 - 00:00:11.242, Speaker A: Thanks man. Thanks for having me here. I'm Mitrav, co founder and CTO of Seron.
00:00:11.242 - 00:00:39.382, Speaker A: So I'll be demonstrating how you can use or if you can scale your DAP with Seron by gliding like the storage SDKs, our website hosting tool and also the compute that is that we have to actually deploy our servers on our decentralized computer. So yeah, I think we can. Also for that I'll be showcasing NFT Mentor tab.
00:00:39.382 - 00:01:08.898, Speaker A: So I have built before coming to this session just to showcase all of these features and tooling and I'll be going through one by one to showcase how you can use each one of them online. So for that just showcase this is what we have. I'll not be doing any coding here but I'll be showcasing all of the ports that is important for you to understand how you can use that for your own DAPs as well.
00:01:08.898 - 00:01:30.186, Speaker A: This is a quick NFT Minter where you can pass on your image and upload it to filecoin and then pass on the name description and then mint it on Fevf which is an EVF compatible chain for Palcoin. And yeah, you can use it and see it in the build box Explorer as. So yeah, let's get into the code.
00:01:30.186 - 00:02:01.934, Speaker A: Let's first dive in there's a couple of steps before I even go into the code let me where you can check out like we have two type of SDKs. One is for Node JS or Node JS version environment and another person browser one. I'll be showing you the browser one where you can directly upload from your front end app on and you can do it on your Node JS or any server app as well with this SDK.
00:02:01.934 - 00:02:30.746, Speaker A: The browser SDK has a couple of steps that you have to follow which requires you to have your server that will create temporary token. With our Seron token I'll show you how you can actually create a Seron token and you can use that token to create a temporary token that will send to the front end to get the upload started. And why we did that is basically to give you flexibility to upload the data directly from the front end without exposing your tokens.
00:02:30.746 - 00:02:49.700, Speaker A: As well as you can also have all the multi chunking and uploads to make sure that your data getting faster, your uploads are getting faster. So for that I'll show you a small expenses app. This is just one.
00:02:49.700 - 00:03:03.222, Speaker A: Mitra, can you zoom in some more on the text here because it's very small. Is it visible now? Another one or two more. Yeah, right, yeah, I think that's better.
00:03:03.222 - 00:03:07.078, Speaker A: Thank you. Yeah, that's great. Yeah, that's great.
00:03:07.078 - 00:03:26.542, Speaker A: Thanks for pointing out. Yeah, as I was saying, we have like a small SAP, like a server with a single endpoint which will take like a bucket name with whatever you send from your front end. As a bucket name will take that and then it will take that as a bucket name.
00:03:26.542 - 00:03:52.530, Speaker A: And you can pass on this protocol I am using icfn, but I can pass on filecoin here as well. So once I switch to filecoin It will just use Filecoin as a base and load it directly to that and also create another instance on the ICFs side as well for fast retrieval. So we have this client which creates using the token.
00:03:52.530 - 00:04:06.726, Speaker A: This token is I have it in my environment variable. As you can see, we have an environment variable here which will provide me this run token. And whenever you deploy this to any server, you can actually dice.
00:04:06.726 - 00:04:34.030, Speaker A: The pass on using your environment variables once you create this client with the token and yeah, before even I get into this, let me show you how you can create a token for you to get started. So, to create your first token, you have to come to your dashboard. That is the seron dashboard.
00:04:34.030 - 00:04:55.802, Speaker A: And in the dashboard you have this user setting and there is this token tab. In this tab, you have this create token. Where? You can pass on the name of the token say VVM test and then select Web app type.
00:04:55.802 - 00:05:09.706, Speaker A: The scope can be any of your organizer. So I select test and the launched Inspects by set. So the scope is whichever you organize, it select will be the scope.
00:05:09.706 - 00:05:24.450, Speaker A: And whenever you upload anything, it will be added as a usage in yours, in that organizer. So once it is done, you then click on Create and it will give. You this token, which will be soon to you for the first time.
00:05:24.450 - 00:05:38.310, Speaker A: And once you copy it and click on OK, you can't see it again. So you have to save it somewhere in your local to make sure. That it doesn't forgotten or something.
00:05:38.310 - 00:05:45.242, Speaker A: But you can delete them if you want to. That's one thing. Once it is done, let's get back to the code again.
00:05:45.242 - 00:05:54.106, Speaker A: We have the token now. Next thing is to create this. Upload token, which is like a temporary token for your front end.
00:05:54.106 - 00:06:06.238, Speaker A: And we create it using this specific function. Create single upload token where we pass, like, the name and the protocol and it will create a specific token. For you, which you can send by the response.
00:06:06.238 - 00:06:32.330, Speaker A: And once it is there on your front end so you're here. This is the function where we are minting it. So we make the first call to the server and then we get this JSON and then we get the JSON, the upload token from here and then calls this upload upload function.
00:06:32.330 - 00:06:41.660, Speaker A: And this upload function requires it is here. Like, this is the browser upload package you import. Directly from here.
00:06:41.660 - 00:07:02.962, Speaker A: So you answer on this files. It takes array of files and also the token to get the upload started. Once the upload is done, you will get a series of responses with upload IDs and also link IBFS link the dynamic links and the deal details as well.
00:07:02.962 - 00:07:25.674, Speaker A: Once the deal is so on the NFT, what we are doing is we are uploading the asset first. That is the files here which you see this thing. So once you click on this you upload a file and this get uploaded using this link we create a metadata out of it.
00:07:25.674 - 00:07:39.258, Speaker A: So we create this metadata as a JSON. And then we upload this again to our server for the start of this. And once we get this we have this JSON.
00:07:39.258 - 00:08:03.750, Speaker A: Now we actually start the configuration which is actually happening on Fpvm. And I'm kind of using this wagme sh the pretty good tool to interact with the contract. So I'm using that here to start the right and mint the NFT.
00:08:03.750 - 00:08:37.650, Speaker A: So that's the simple way I'll do a demo here. Test it, give it some description here. Let's open the console tab or you can see the network as well.
00:08:37.650 - 00:09:03.192, Speaker A: By the way is that spaceable? I think it is right. So when I click on Mint the first call goes through. So this is the first call that we send to the API once the I'll get back to that.
00:09:03.192 - 00:09:18.910, Speaker A: So once this is done and you get the response with the upload token we then start with the multi chunk upload. So the upload is done. It's finished and it gives me all this details like the site preview and all this.
00:09:18.910 - 00:09:51.886, Speaker A: Once it is done we upload this thing our metadata and when it is done I got this thing and we are going to start with this thing. So with this I think we'll be getting this. It is happening on Calibration net though since we know the hyperspace is going to be sensitive pretty soon.
00:09:51.886 - 00:10:09.250, Speaker A: We try to deploy calibration it and it's pretty getting pretty nicely. We'll wait for it to done and in the meantime I'll show you the next thing. That is how you can deploy your server as well as the front end on Seron.
00:10:09.250 - 00:10:31.700, Speaker A: So first let's do deployment of our server. Was that let me open this. So for you to deploy your server you need one thing that is a docker file.
00:10:31.700 - 00:10:54.348, Speaker A: So this is a standard docker file that I copied CPT and added it here. And after that you can just create. So I created this build which will be this 1.2.
00:10:54.348 - 00:11:32.968, Speaker A: Once I create this build it like this and then docker put to my docker hub. Let me open the docker hub here. It's a public image and we have all the tags here.
00:11:32.968 - 00:11:48.640, Speaker A: I'll upload this and once it is first with the docker we'll start the deployment. So starts with deployment. Let me start from here.
00:11:48.640 - 00:12:28.910, Speaker A: So it'll start with the new cluster. Select docker health and then I'll name it. Next is I need to pass the image JS, pop the disks paste it and the tag is once I click on next I'll be asked to select which Ram and which way you want to choose and I'll choose this one, a small instance.
00:12:28.910 - 00:12:54.540, Speaker A: Next I have to pass on this port policy which I'll be selecting a random port. So this port will be assigned a random port which you can get to access this server as well. So for environment variable copy paste my environment it's not visible.
00:12:54.540 - 00:13:25.588, Speaker A: Next value make it a secret rather it's going to be exposed and just deploy. So once I click on this deploy it will start the deployment process for us and it will be deployed and the links will be given to us. So in the meantime we can start our deployment for the website like the front end.
00:13:25.588 - 00:14:05.810, Speaker A: So also get started. So I have this NFT demo this is my GitHub and this GitHub is also public so I'll share it on the chat I will select filecoin. So I'll be deploying this app on filecoin selecting the react app the root directory will be front end.
00:14:05.810 - 00:14:35.180, Speaker A: We need to be deploying this specific thing. I'll select front end as a root directory. Next is already prefilled this we need to env give which is the API URL and the node JS person is this.
00:14:35.180 - 00:14:52.170, Speaker A: Once it is done so I'll start the deployment here. In the meantime, I'll show you our deployment on the server side is done up as well. We have our deployment here.
00:14:52.170 - 00:15:51.500, Speaker A: Let me fix some logs, fix some love and also yeah somehow I missed this step which is required for uploading this. So let me do this it so as it is happening. Let me third version.
00:15:51.500 - 00:16:32.660, Speaker A: Like Three Landlord. So just to again show you what's happening is since I'm on this Mac environment, I need to make sure my docker default platform is actually on Linux because most of the providers systems are on Linux and it will not actually take one PRM configuration. So that's going to give errors.
00:16:32.660 - 00:17:18.670, Speaker A: So let me just quickly access documents here and let me hit and in the meantime let me remove this domain. So we'll be attaching a domain on top of this deployment and I'll show you how we are using that domain. Let it get deployed.
00:17:18.670 - 00:17:49.280, Speaker A: If you see here we are getting some locks which is regarding the beds, the provider and all this extra things required to get it. So we get this connection URL which is like where you can actually hit and use the server. On top of that we'll be adding a domain.
00:17:49.280 - 00:18:09.048, Speaker A: Yes. So you need to add these values in your DNS configuration before but I have already done that so I'll just verify and now it is up and running. So this is done and this is still building.
00:18:09.048 - 00:19:08.030, Speaker A: So I'll show you the older version which we already have that is this. Okay so this is deployed once they're on which is also on Pycoin. You can see it is on Pycoin access the IPFS link as well and in this you can actually make a head to the API which is I'll show you so I'm click on Mint here and as you can see it is making ahead to our demo API rector Mem which is this one.
00:19:08.030 - 00:19:49.180, Speaker A: I get this one again do this. We have it deployed here. The mint is happening with this I think I have shown you all of the from SDK where you can upload to filecoin IPFS then the compute where you can directly deploy your service and then attach your domains subdomains and the next thing was your front end deployment.
00:19:49.180 - 00:20:38.456, Speaker A: So since you have a front end we deployed it and we are using that to hit our front end and also interact fdvf domain. Yeah, I think if you have any question, you can join our discord. If you face any loop regarding any kind of infrastructure or some kind of downtime of time, each loop then bring us as well as you can check out our docs if you need any kind of guidance regarding the SDK we have all the concern methods written here so you can check out the domain archival as well as usage and token and we also have IPNs as well, so if you want to use IPNs with IPFS, you can use that on our SDK.
00:20:38.456 - 00:20:51.844, Speaker A: So we natively support IPNs it I think that's it from my side. I have any question, happy to answer that as well. Fantastic, thanks a lot.
00:20:51.844 - 00:20:52.320, Speaker A: Bye.
