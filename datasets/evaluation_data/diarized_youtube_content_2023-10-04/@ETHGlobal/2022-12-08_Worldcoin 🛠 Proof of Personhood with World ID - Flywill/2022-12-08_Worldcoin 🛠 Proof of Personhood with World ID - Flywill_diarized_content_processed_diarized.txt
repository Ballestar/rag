00:00:06.250 - 00:00:25.010, Speaker A: All right, GM, everyone, I'm flywell. I'm here to talk about WorldCoin. Today I'm going to start talking about how WorldCoin started. So crypto is awesome. We all know that. That's why we're all here. Unfortunately, the value has been hoard.
00:00:25.010 - 00:00:58.446, Speaker A: It by around 2% of the population. So what we wanted to build in WorldCoin is a way to bring crypto to everyone in the world and not just this 2%. So we started with this premise of what if bitcoin started by giving one bitcoin to each person? How would things have turned out? Of course, we cannot do this right now. So that's why we decided to create the WorldCoin Token. The WorldCoin token. It's not live yet. We're going to launch it next year.
00:00:58.446 - 00:02:01.186, Speaker A: It has a limited supply of 10 billion tokens. Every person in the world will get some share for free until it runs out. Of course, the problem we immediately run into is how do we make sure each person only claims their share once? If you can claim your share 100 times, then it's no longer a fair AirDrop, and we're going to end up in the same place that we were before. That's why we sort of run into this concept of civil attacks, and we realize it's a bigger problem than just for airdrops. And I'll talk a little bit more about that. But civil attacks is this concept that you can very easily create multiple identities that look like the real thing and then undermine whatever share mechanisms, fraud mechanisms that you have in place. So we created this protocol called World ID.
00:02:01.186 - 00:02:42.398, Speaker A: So World ID and the thing that we're here to present today and the thing that you can build on is a privacy preserving proof of personhood protocol. I'll explain in a second what that means. But what we wanted to do is be able to identify a single person and be sure that it's an actual human doing some interaction. What we ran into is we wanted to make sure that this protocol was private, inclusive, and scalable. So private, we want to make sure that no information gets leaked about a person. Inclusive. We want to make sure that everyone in the world can get it.
00:02:42.398 - 00:03:28.190, Speaker A: And scalable, it's part of the same inclusivity mission, right? So we looked at all of these options here to see what we could do to solve this civil attack problem and actually identify single persons. And we realized none of these options fill these three requirements that we had. Email or phone is very easy to spoof. KYC is not very inclusive. A lot of people don't have passports. Fingerprint is not scalable because there's a limit to how many unique humans you can identify with. Fingerprint MDNA is just very complicated and just a little bit privacy invasive.
00:03:28.190 - 00:04:30.850, Speaker A: So we created this beauty called the orb. You can actually see one here live. What the orb does is it checks that you're a unique person by, first of all, checking you're a human, you're alive. It has different fraud prevention mechanisms. And then it takes a picture of your iris, extracts that entropy that lives in the iris and uses that to ensure that you're a unique person. And I'll talk about how the iris extraction works, but what this enables is with no images, no name, no personal information, no KYC, we can actually make sure that a human is doing something only once. But even though we are not keeping these images, we wanted to go even further to preserve privacy.
00:04:30.850 - 00:05:40.682, Speaker A: So we introduce a little bit of zero knowledge proof magic to the protocol. The way it works is whenever you're using this identity, you use it through zero knowledge proofs. So even though there's no personal information tied to this concept of an identity, through zero knowledge proofs, we can be sure that you're not even tracked across actions, across applications. So this protocol enables you to say, I'm a real person, and I have never claimed WorldCoin or, I have never voted in this polled or I am only creating one social network account. All of these different use cases that we realized were susceptible to civil attacks, you can prevent with a protocol like this. This is, in a more succinct way, what the protocol does. And we realized we could take this a step further by making this protocol privacy first.
00:05:40.682 - 00:06:15.490, Speaker A: Decentralized identity, all centered around a single person. It's a fully open protocol, fully open source, self custodial. It lives only on the user's phone. And this is how it looks like. So you have your application like you're doing like this, you're doing an AirDrop, and you would mount something that looks like a captcha. The user will get QR code. They would scan it with their WorldCoin app and they would prove they're a unique person doing something only once, completely privacy preserving.
00:06:15.490 - 00:07:00.770, Speaker A: So how does it actually work from a user standpoint? They go to an orph like this. Our goal is to have them distributed all around different cities, and you get your World ID. So this World ID that you get, lives only on your phone, fully self custodial. And you can use it to continuously prove to different applications that you're doing something only once. So this is where it starts to get a little bit tricky because of the privacy preserving characteristics. So you download the WorldCoin app. The WorldCoin app will generate a random identity with a public and private pair.
00:07:00.770 - 00:07:34.000, Speaker A: And you'll show the public pair to the ORV with a QR code. The ORV will then look at you, make sure that you're human, that you're unique. And once it passes that check, the ORV only access a gate. It'll add your public key to a set on chain. So as you can see, your identity is not really tied to a wallet or tied to anything. And the set is fully public on chain because it's just a list of public keys. It means nothing.
00:07:34.000 - 00:08:37.662, Speaker A: So whenever you're using it, your phone, which has a private key, will generate the zero knowledge proof that proves that you know the private key to a public key in the set without revealing which one. So you can continuously prove, hey, I'm a verified person in the verified set, but I'm not telling you who I am in terms of how you would actually do this. It does look a little bit complicated, but it's actually not. So from your application, you would integrate this in two sides in your front end, in your back end, in your front end, you would mount the widget that we saw and that will enable the user to actually generate the zero knowledge proof and send it back to you. And then you just have to verify the proof. To verify the proof, you can either verify it on chain or you can verify it with our API. So if you verify it on chain, you will get the proof.
00:08:37.662 - 00:09:05.820, Speaker A: You would execute a transaction as you would normally do. Let's say you're minting an NFT and then the transaction would be the same. It would just include this zero knowledge proof. And then on your smart contract, you would verify the proof first meant the NFT later. So yeah, this is what the captcha looks like. This is how it looks like on the WorldCoin app. When the user scans the QR code, it'll tell you like, hey, this app wants to verify you for something.
00:09:05.820 - 00:09:43.190, Speaker A: And when they click Verify with World ID, that's when the zero knowledge proof will get generated. There's a lot of use cases that would benefit from civil attacks, protection, these are just to name a few. We have other ideas that you can look at in our documentation. But the most intuitive things is of course, things around voting and governance. One person, one vote, fair airdrops, person bound tokens, et cetera. You can start building already on world. ID worldcoin.org.
00:09:43.190 - 00:10:26.722, Speaker A: A key important distinction here is while you're developing to use the network on testing mode, you can go to the simulator that we have it's linked there, simulator Worldcoin.org, where you can actually generate random identities. That is as if you've gone to an Orph so that you can actually test multiple times. Because of course, if you're using your actual production one, you're only going to get one. The integration is super simple. You install the widget, you load it. You're just going to need two things the action ID and the signal.
00:10:26.722 - 00:11:31.382, Speaker A: The action ID you obtain from our developer portal, very easy to generate. It's what lets us scope down so that users cannot be tracked across applications. And then the signal is a very neat property of the zero knowledge proofs that it basically adds an arbitrary message that can become part of the signature for the proof. What does this mean is, for instance, imagine you're doing an AirDrop and the user generates you a zero knowledge proof that hey, I'm a unique human, please send my tokens to this address. If I were to intercept that proof, I could change the address and then use another person's zero knowledge proof to claim the token for myself. Fortunately, if you include the address as part of the signal and someone tampers with that, that will make the proof invalid. So depending on your use case, you're going to want to use the signal for protection.
00:11:31.382 - 00:12:12.994, Speaker A: And then very important to remember the proof that you get from the Widget, you have to verify it. The front end is not a trusted environment so you have to verify the proof in a trusted environment. That means either on a smart contract or on your back end. If you're doing on the back end, it's a very simple API request and you'll get thumbs up, thumbs down. If you're doing on the front on a smart contract, it's also quite simple. You call our smart contract with these parameters and the smart contract will revert if it's invalid or will continue if it's valid. But very important to verify the proof.
00:12:12.994 - 00:13:09.530, Speaker A: If you just rely on the Widget, you're not adding any protection because anyone can tamper with the front end. We're on Discord if you need any help, not only during the hackathon but afterwards. And we're super open to feedback and ideas and anything that you want to come up with. We do want to give a pretty big shout out to these open source projects that enable the protocol. So Semaphore is what enables the entire zero knowledge proofs ecosystem. The set of verified identities I talked about is actually a Semaphore group hubble we initially use in the WorldCoin app and Wallet Connect. We use to interact between the WorldCoin app and your front end applications.
00:13:09.530 - 00:13:55.670, Speaker A: We have $20,000 up for graphs in prices. We have a price pool, honorable mentions and different categories. So we encourage you to build the requirements to qualify for a price is Integrate both on the front end and the back end. The back end can be smart contract or an actual back end and a meaningful proof of personhood use case. You can find more information on this on our notion, which I'll share in a second. But to sum up World ID, we're solving civil resistance at scale. It's a privacy preserving, self custody open source protocol, very easy to use and implement.
00:13:55.670 - 00:14:30.740, Speaker A: Of course we have a bunch of open positions and we're always looking to work with amazing people. So if you're interested worldcoin.org, unfortunately we don't have time for Q A, but I'll be in the back and you can also come find me at the booth or you can find me on Discord. This is the main page that you can look at for any resources, any information about itIndia. Everything I talked about is going to be there and that's it. Thank you so much.
00:14:31.270 - 00:14:50.598, Speaker B: So my question was that for example during the voting, right? So how does the World coin verify if the person has voted just once? Basically, how is WorldCoin verifying the zero knowledge proofs?
00:14:50.694 - 00:15:52.858, Speaker A: Yes. So when a person actually verifies you will get from the WorldCoin widget you will get three things one is the zero knowledge proof that lets you verify that everything checks out and that the user is actually registered and generate a valid ID. The other one is called a nullifier hash. So this nullifier hash is a unique user Identifier but that's unique to your app. So that lets you as an app make sure that that is a unique person. You can use that single ID to identify the person uniquely but the user gets their privacy preserved because that nullifier will be different for every app they verify in. So to your specific use case from a voting standpoint you would get a nullifier for that person for that boat and then you would store that nullifier in your smart contract and if you see that nullifier again, you'll reject the boat.
00:15:53.034 - 00:15:58.000, Speaker B: Okay, so all the back end is being done in the smart contract itself?
00:15:58.930 - 00:16:12.526, Speaker A: Yes, you can also do it in a centralized normal back end server but if you're doing the boat on chain then definitely do it on the smart contract.
00:16:12.718 - 00:16:14.706, Speaker B: So you said three things one is.
00:16:14.728 - 00:16:36.822, Speaker A: Nullifier whatever the other two nullifier the serial knowledge proof that you actually need to verify and the third one is the root of the merkel tree that was used to check the user's identity. So it's just another parameter that needs to be verified. That one you don't have to do anything with. It's just necessary for the proof.
00:16:36.966 - 00:16:37.930, Speaker B: Okay, thank you.
00:16:38.000 - 00:16:38.860, Speaker A: No problem.
00:16:44.180 - 00:16:49.410, Speaker C: Like five examples of the applications you would be most excited to see people try out building here.
00:16:50.580 - 00:17:30.652, Speaker A: Sure. Let me give you random examples that come to mind right now. Something around reputation scores would be really cool where you get the value of a person only having one reputation. So that for instance becomes insanely valuable for negative reputation. Right? Because if you can accrue negative reputation you cannot just go in and create another account anything around governance. So applied versions of voting would be really cool. What else comes to mind?
00:17:30.786 - 00:17:32.510, Speaker C: How about like social network stuff?
00:17:33.460 - 00:18:26.704, Speaker A: I mean definitely there's a lot of value in social networks so for instance, we already integrated with Lens and it starts with you can get a verified batch in your profile and it'll get more value. But what's interesting is if you start to think about something like Web of Trust, where users who verify and then follow other people, their humanity can flow to the other people. And then you start to create a network of actual humans because you're going to be able to identify bots a lot faster, even if not everyone's verified with WorldCoin. So something around, that would be really cool. Of course, anything that you can compute some sort of human score with to rank content and things like that, that would be really cool as well. Very cool.
00:18:26.742 - 00:18:27.330, Speaker C: Thanks.
00:18:34.000 - 00:18:43.090, Speaker D: So I have this question, like, isn't WorldCoin relying too much on this hardware of this orb? I mean, what if someone tempers with it?
00:18:44.980 - 00:19:35.744, Speaker A: Yes. So two part answer to that. So one is we are also exploring other options to not rely on the hardware, not because we think it can be tampered with, but more because we want to scale as quickly as possible and not prevent anyone who wants to sign up to be able to sign up. So the way to do that is today you have to come physically to an orb. That's the constraint. So if we enable other mechanisms that don't require you to physically go, then we'll be able to scale faster and be more inclusive in the short run. The second part of that is the hardware has a bunch of different security mechanisms to prevent tampering with.
00:19:35.744 - 00:20:03.064, Speaker A: So, for instance, all identities are inserted with a secret key that lives in a secure enclave. If you try to tamper in any way, the private key gets destroyed. I cannot go into much detail on all the security mechanisms, but yeah, I think of it like as a hardware wallet. Very hard to extract the key without destroying it.
00:20:03.262 - 00:20:14.972, Speaker D: Yeah. And one last question that. Is there any idea of migrating to Web of Trust? If there are, of course.
00:20:15.026 - 00:20:43.300, Speaker A: Yeah. That is something that we have definitely considered and it's still very much in the radar. I think the problem that we run into with Web of Trust is it's a very hard thing to bootstrap. Like, you need a seed of trusted entities, and that's what we're doing with the ORV. But we could definitely see a scenario where the ORV is enough to bootstrap this and then Web of trust becomes more valuable.
00:20:44.120 - 00:20:45.412, Speaker D: Okay, thank you.
00:20:45.546 - 00:21:13.520, Speaker A: No problem. Final call for questions. Any other questions? It all right. Awesome. Thanks everyone, and see you around. Good luck. Bye.
