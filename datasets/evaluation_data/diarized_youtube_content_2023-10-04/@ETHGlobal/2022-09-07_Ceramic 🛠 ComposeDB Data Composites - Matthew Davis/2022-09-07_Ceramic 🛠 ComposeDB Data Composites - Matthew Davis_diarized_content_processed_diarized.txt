00:00:08.250 - 00:00:15.994, Speaker A: Hey, ethanline hackers. I hope the hackathon's going well for you so far. My name's Matthew, I'm a developer advocate over at the Ceramic Network.
00:00:15.994 - 00:00:34.680, Speaker A: We work on like composable decentralized Web Three data. You've probably heard of us. If you've used popular projects like Orbis or you've done stuff with like Gitcoin passport or you've attended hackathons in the past, you've probably heard of us and or implemented us into a project at some point in time.
00:00:34.680 - 00:00:55.542, Speaker A: I'm really excited to bring this workshop to you for this hackathon. Specifically, we are on the verge of rolling out a developer preview for a bunch of major changes to how ceramic works inside of your Web Three projects. One of the changes that we're getting is the often sought after indexing capabilities of our database.
00:00:55.542 - 00:01:12.814, Speaker A: So what I want to do is spend some time with you jumping through this new tooling and hopefully help prime you for the bounty that we have at the end. Stay tuned, we'll talk more about the bounty later. But the reality is we have $5,000 worth of prizes up for grabs.
00:01:12.814 - 00:01:58.626, Speaker A: And not only are we offering that cash reward for best submission of this bounty submissions that seem like viable proof of concept projects, we're going to do all we can to incubate those projects with you and for you to help you bring them to maturity. So we're going to pick probably the top three to four projects that submit a submission to the bounty and we're going to fold you in to our ecosystem and do what we can to try to get your project brought up to a more complete phase. So there's a lot at stake and because of that, I think it's really important to spend a little bit of time with you to show you how to get up and running with the new tooling and maybe throw an example or two your way.
00:01:58.626 - 00:02:17.846, Speaker A: So meet me over in a text editor, we'll get started. Wait a minute, this isn't a terminal or a text editor or whatever tool I said we were going to meet in. You're right? And that's because a couple of prerequisites, right? If you're new, this is useful to you.
00:02:17.846 - 00:02:34.854, Speaker A: If you've been using ceramic, you probably already have all this set up. But first and foremost, hey, we're going to be using Node JS, right? So make sure you have version 16 installed. It can be 16, whatever, but major version 16 of Node JS needs to be installed.
00:02:34.854 - 00:02:52.238, Speaker A: You're going to have the best experience if you do. So if you're running a different version of Node, you're probably going to run into problems. Second thing you're going to need right, even though Node comes with NPM as a package manager, we really suggest you guys go and get set up with Pnpm.
00:02:52.238 - 00:03:14.458, Speaker A: This is what we use internally to manage all of our packages for the composed DB code base. So you're going to have the easiest time and the most comparable time to hours if you're using PMPM as your package manager. So that's like the biggest amount of prerequisite setup that we have going on.
00:03:14.458 - 00:03:39.752, Speaker A: So now I'll meet you over in my text editor. One of the absolute major changes taking place is a switch to GraphQL. So in order to create a new model or basically a piece of a composite, we need to use GraphQL.
00:03:39.752 - 00:03:54.400, Speaker A: So we're going to create a file called Source Schema GraphQL. You could name this whatever you want as long as it's GraphQL. And in that file we're going to paste some text and I'm going to walk you through it really briefly.
00:03:54.400 - 00:04:12.468, Speaker A: It's not really a crash course on GraphQL, but here's a comment tells us exactly what's going to go on. And it is a type. The type is post and it's going to use this create model and it's going to basically create a new schema for us with text.
00:04:12.468 - 00:04:31.870, Speaker A: Text is the only field that this model has so we can put text in and that value is a string and it's capped at length. So if we say, hey, get me a post, there should be post text somewhere as a value. Okay, so we're going to save this and come back into our command line.
00:04:31.870 - 00:05:10.728, Speaker A: And now we are going to create a model or a composite rather out of this GraphQL. To do that, we're going to come in here, we're going to type composedb composite, create source Schema GraphQL like that's the file that we just created. And then we're going to tell it to output that to mycomposite JSON because what we want to do is we want to convert this GraphQL into the same JSON schema that we have up here for the one that we retrieved with the model ID that we already knew.
00:05:10.728 - 00:05:20.808, Speaker A: So we're going to do the same. And then by default, it's going to look at our local ceramic node and we're going to go ahead and do that. And this is where things could get tricky.
00:05:20.808 - 00:05:32.880, Speaker A: I have already generated that private key. Remember, it's right here. I have already saved that as an environment variable in this terminal session, but it might still break.
00:05:32.880 - 00:05:39.036, Speaker A: So let's see. You'll see here it says no controller specified. It did break that's.
00:05:39.036 - 00:06:02.596, Speaker A: Okay, we can run the same command and this time we're going to say did private key is equal to our private key, which is up here. Okay, we hit enter and there we go. It used our did and it created the composite and it saved it into mycomposite JSON.
00:06:02.596 - 00:06:18.380, Speaker A: So if we come up here and we look, we have that. And if we look right here after this models key, this is the model ID that exists for that. So earlier when we fetched it from the network, we used a known model ID.
00:06:18.380 - 00:06:33.148, Speaker A: Well, now we have another known model ID. So if you wanted to pass this to a friend or another project, they could then fetch this model ID and be able to create composites from it. That's where that came from initially.
00:06:33.148 - 00:06:43.936, Speaker A: Okay, so we're going to go ahead and close all that out. We don't really need to see it anymore. The next step is where we're going to actually create our first composite.
00:06:43.936 - 00:07:09.464, Speaker A: And this is one of the major leaps that we're making with ceramic is we've talked about composable data along the way and we've had data models and you could query this data model and that data model and put them together to create a unified model for your application to use. But you needed to go grab a bunch of different ones. And in this case, you do kind of need to grab a bunch of different ones initially.
00:07:09.464 - 00:07:39.444, Speaker A: But what we're going to do is we're going to merge them into one giant data composite that then we hand to our application and it knows everything it needs to know in order to make your application do the things you want it to do. To do this, we are going to do composedb composite merge, right? Pretty simple. We're going to merge the mycomposite JSON and the my first composite JSON.
00:07:39.444 - 00:07:54.024, Speaker A: And we're going to set an output and that's going to be merged JSON. So we're just giving it a name. We hit enter and now we have our third and final model, which is Merge JSON.
00:07:54.024 - 00:08:10.064, Speaker A: And it represents both of the individual models that we had. So now we have finally what we're calling a composite, right? And here's a model ID here. And up here is another model ID.
00:08:10.064 - 00:08:32.292, Speaker A: Okay, so these are all different and they define how our data now looks, feels, and works. All right, the last thing is like before, is to deploy that out so we could say compose DB, composite, deploy. And then we think we called it Merge JSON.
00:08:32.292 - 00:08:59.410, Speaker A: And if we do that, bam. We see now that each model here is stored into the list that we need to add to our ceramic nodes configuration, right? And then it will be able to index these models. That's our new way to combine different pieces of composable data into one large data composite that you can then pass to your application.
00:08:59.410 - 00:09:29.692, Speaker A: All right, so now that we've talked about composeddb and how to get up and running with new data composites, I want to take a few seconds here to just kind of discuss the bounty or the prizes that we have available for ETH online during this hackathon. As I mentioned earlier, we have 5000 USDC up for grabs in prize money for this month long hackathon we have going on. I just want to make sure that I take some time to be clear with you guys about what we're looking for.
00:09:29.692 - 00:09:50.396, Speaker A: So the first place prize, right, for 3000 USDC is for the most innovative application that enhances the discoverability of a data composite. Earlier, I showed you how to use the new Composed DB CLI to do discovery. But that's not always the most search friendly or user friendly.
00:09:50.396 - 00:10:12.712, Speaker A: So we would love to see whatever type of application or tooling you guys come up with that makes Discoverability a lot more user friendly and developer friendly. The second thing we have is best integration using Composeddb as a database layer. Now, keep in mind with this one, we don't recommend using Composedb as in production at the moment.
00:10:12.712 - 00:10:35.260, Speaker A: Right. There's a lot of iterations that need to happen on Composedb before we're comfortable saying that this should be a production ready part of your tool stack. But if you want to build a proof of concept or you want to work on a hackathon project, then this could be a good opportunity to include the Composeddb as your database layer.
00:10:35.260 - 00:10:49.412, Speaker A: The last piece is best use of Composed DB with another sponsor. Just like many ETH global events, ETH Online has a ton of sponsors from major projects in Web three space. Right.
00:10:49.412 - 00:11:07.128, Speaker A: And there's a lot of opportunity for you to find a way to integrate the Composed DB from ceramic as, like the database side of things, while using something like Lib protocol for encryption or some other verified Credential system. Maybe gitcoin passport. I don't know who's sponsoring exactly.
00:11:07.128 - 00:11:27.136, Speaker A: I didn't look all that into it. However, there are tons of sponsors out there, and if you can find a way to integrate with those sponsors, then we are offering 500 USDC for any project that successfully does that. The last piece that I think is super important is to talk about the submission requirements here.
00:11:27.136 - 00:11:43.892, Speaker A: So first and foremost, we're going to require a working demo and a video submission. In the past, we've had submissions where it's just like a figma mock or something like that, and we want to see a working demo. This is a month long hackathon, so working prototypes are really what we're after.
00:11:43.892 - 00:11:50.392, Speaker A: Here all your code. It should be publicly available. Even though it's going to live in your repo, it's going to be your code.
00:11:50.392 - 00:12:17.360, Speaker A: We're not interested in taking your code in any way, shape, or form, but we are going to need to be able to view your code so that we can look through it. You'll notice that judging criteria includes code quality, so being able to have access to the code is helpful for us when it comes to doing proper judging on your project and your submission. The last piece of submission is one of the things that we're most concerned with that along with the working demo.
00:12:17.360 - 00:12:27.984, Speaker A: Right. This third piece is a small write up providing developer feedback of the new Cosmos DB package ecosystem. That means tooling.
00:12:27.984 - 00:12:49.412, Speaker A: That means the other dev packages that we didn't cover that are shipping as a part of Cosmos DB. That means were the docs sufficient? So everything from your experience, we would love feedback on and it is a requirement for your project to be considered for the prize payout. Now, that being said, we're not looking for praise.
00:12:49.412 - 00:13:06.336, Speaker A: We don't want you to sit there and just tell us how great everything is. We're rather looking for the pain points that you experience as you go through using Composed DB. So what did you struggle with? What wasn't written well, what needs more guidance? These are the types of things that we're interested in.
00:13:06.336 - 00:13:15.248, Speaker A: Did you run into any bugs? That's the type of stuff we're looking for in your feedback write up. You don't have to write a book. We're not expecting you to write a 20 page document.
00:13:15.248 - 00:13:34.068, Speaker A: But supplying some feedback along with your submission is mission critical for prizes. The last thing here is we have some new links, some new documentation for Composed DB kind of exists right here. And almost all things should be directed to the forum.
00:13:34.068 - 00:13:55.472, Speaker A: I know you guys have a Discord channel here for ETH Online that is going to give you direct access to me. I'm more than happy to talk to you about what's going on with Ceramic, but for your technical questions, how do I implement this? I'm running into this bug, I can't get started, things like that. The forum is the best place to go ask that question.
00:13:55.472 - 00:14:13.012, Speaker A: One, it helps the entire community if you contribute your question to that forum. And two, you get access to our entire team rather than just me. I'm the one hanging out in Discord, but our whole team is on the forum, ready, excited and willing to answer as many of the questions as you have.
00:14:13.012 - 00:14:22.264, Speaker A: So please try to direct those over to the forum. I think that's the best place for your questions. Lastly, have fun.
00:14:22.264 - 00:14:31.420, Speaker A: This is a month long hackathon and we are so stoked to see what you build. Don't hesitate to reach out to us, ask us questions. We'd love to work with you.
00:14:31.420 - 00:15:00.864, Speaker A: And honestly, even though there are only 5000 USDC up for grabs is prize money. What we are going to do is if there's a project that comes in that maybe doesn't win the prize money, but shows promise, has hope, we're going to do all we can to work with you. To take that from a hackathon project into a proof of concept and maybe even become a flagship project on Composeddb depends on your team, what you build and how we get there.
00:15:00.864 - 00:15:13.464, Speaker A: Right? So the goal here, I don't want it to just be about prize money. Let's think about how we build a better ecosystem together in web three. So have fun and we hope to talk to you soon.
00:15:13.464 - 00:15:14.020, Speaker A: Bye.
