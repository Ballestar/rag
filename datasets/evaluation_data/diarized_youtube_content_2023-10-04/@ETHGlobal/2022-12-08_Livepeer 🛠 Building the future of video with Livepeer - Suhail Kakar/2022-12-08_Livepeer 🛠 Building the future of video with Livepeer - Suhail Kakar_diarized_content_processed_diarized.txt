00:00:06.570 - 00:00:32.902, Speaker A: Yeah, so hi everyone, I'm Sahal and I work as a developer advocate at Livepeer and today I'll be leading a workshop on building the future of video with Livepeer. In this workshop we will be covering on what is Livepeer, who can use Livepeer, what problem does it solve and how to integrate Livepeer into your application. So before that, we know that approximately 80% of the internet traffic is accounted by the video.
00:00:32.902 - 00:01:01.600, Speaker A: This means that the large majority of the content over the internet is in the form of video such as streaming video, on demand video sharing, on social media and also online video calls. This is the reason why our brain loves video because it is programmed to retain the visual content better than the page loaded with the words. Usually an average viewer remembers 95% of a message when it is watched whereas only 10% when it is read.
00:01:01.600 - 00:01:24.774, Speaker A: However, there's a one catch to the video sharing it is very expensive. Video streaming and also transcoding can be very expensive to the applications who are building for the users. And one of the main factor is the amount of data and the bandwidth that is required to transmit, receive, high quality and transcode the videos.
00:01:24.774 - 00:02:03.598, Speaker A: In addition to this, the video streaming and transcoding requires a specialized technology and infrastructure such as a powerful servers and high speed networking equipment. And furthermore, the video streaming transcoding can be a resource intensive meaning it could increase the cost of hosting and delivering the video content and yeah, so it is very expensive and the solution to this problem would be Lifebeer. Lifepear Protocol is a decentralized video streaming and video on demand platform that uses blockchain technology to enable anyone to easily and affordably stream live videos to the global audience.
00:02:03.598 - 00:02:30.422, Speaker A: It is built for developers and it aims to increase the reality of the live and on demand streaming while reducing the infrastructure cost by up to 50 times. Who uses live peer. Like who is live peer for? Well, the Live Peer is for developers who want to build application on top of Live Peer and uses its broadcasting or live streaming feature or maybe on demand feature to serve the video on a decentralized network.
00:02:30.422 - 00:03:10.482, Speaker A: Or it is for users who want to stream the video of maybe gaming, coding or any entertainment into their mobile phones using the Livebeer at Last. It's also for broadcasters such as Twitch or YouTube who have a very large audience and also very large creators that would significantly decrease their bills and infrastructure cost. And how does lifebeer work? Well, when you broadcast a video, the broadcaster sends the video to the Livepeer network and Lifepeer network transcodes the video using the nodes that is powered by the Lifepeer and it is deployed on Arbitram Blockchain.
00:03:10.482 - 00:03:39.550, Speaker A: After that the video gets distributed on a global CDN and after that the users would be able to play the transcoded version of the video. So for those who don't know transcoding is basically a process in which the video gets transcoded into different formats. For example if it's in a video would be transcoded into 240 p, 360 p, then 1080p just to ensure that the video gets placed properly on different devices, internet connection and also browser.
00:03:39.550 - 00:04:00.550, Speaker A: Last year growth has been very tremendous. This year we had over 2.7 million transcoding minutes per week and yeah so this was about Life Peer and we have both Live Pure APIs which you can use and one of the best ways which you could interact with the Lifepier Network would be Lifepure Stadium.
00:04:00.550 - 00:04:20.074, Speaker A: Lifepier Studio is an open source dashboard for interacting with the Lifepeer network. It is used to create and also manage developer API, keys, assets and streams. Esco is completely open source on GitHub and basically most of the many webtree video applications are currently powered by Live Peer.
00:04:20.074 - 00:04:42.440, Speaker A: For example herald one beam, lens, tube, bonfire, stream, eight TV and many other application. And yeah so this was just overview of Live Peer on how does it works and how you can use it. Now I'll basically go through a demo app on how we can basically integrate Live Peer into a sample application.
00:04:42.440 - 00:05:04.790, Speaker A: Let me just come back yeah so I just go through a tutorial on how to use Live Peer into your react application and for this we would be using Livepeer JS. Yeah. So Livepier JS is an SDK built on top of life CDU API.
00:05:04.790 - 00:05:31.374, Speaker A: Basically it provides the ready made hooks and also components to easily build applications with react or maybe next JS and Livebeer. So the first thing which we're going to do is open up the terminal and go to the directory where we want to create the application. In our case we want to create a folder name it for example Eat India and then inside of the folder we want to create a react application.
00:05:31.374 - 00:05:52.338, Speaker A: So I'll just say NPX create a react app and then dot which would create it inside of this folder. So this will create us a sample react application and until it's completed we can go to the Livepeer CDU which I mentioned earlier. And here you have to go ahead and create an account.
00:05:52.338 - 00:06:15.866, Speaker A: It's pretty easy and you would basically have a transcoding minutes of 1000. Basically I think it is enough for many of their projects but if you go over it, you can basically pay which is like very negotiable amount like 0.1 /minute but yeah once you are here in the Live Pure studio you can go to the developers and click on create an API key.
00:06:15.866 - 00:06:42.994, Speaker A: You want to name anything for your API key and then also allow cars and here I want to allow from everywhere and also give a full API access to the API. And then we want to create it and then copy the token ID here for now let's see if our so now the React application is completed, we can open it in the Vs code. Yep.
00:06:42.994 - 00:06:59.386, Speaker A: So this is our React application. Let's run it on a local dev network. So now the application is running.
00:06:59.386 - 00:07:16.718, Speaker A: What we want to do is we want to install the Live Peer JS which you can do by running NPMI Live Peer React. And this would basically install Live Peer JS into our application until it's completed. We want to do a little cleanup into our application.
00:07:16.718 - 00:07:36.002, Speaker A: So I would delete the app JS, app CSS, the test files, the logo here and also here and index JS. I would just remove the last port here and yeah, that's it. Coming back to the app JS, I would remove logo and app CSS.
00:07:36.002 - 00:08:02.378, Speaker A: So we won't create a very simple React application. Now we have updated the code to this one. It's a very simple message basically for now, but yeah, so once the Live Peer JS is installed in our application we can come to the index JS and basically create a client.
00:08:02.378 - 00:08:21.380, Speaker A: To do that, we want to import create a React client and import it from Livepier React and also Studio Provider. Studio Provider. And at last we want to also import the Live Pure Config.
00:08:21.380 - 00:08:25.140, Speaker A: Live pure. Config. So we have imported these three packages.
00:08:25.140 - 00:08:39.804, Speaker A: Now in here we want to run Const Client is equals to create a React client. And here we would put a Provider, studio Provider. And here we want to put our API key which we created here.
00:08:39.804 - 00:08:57.040, Speaker A: So I just copy it and then basically put the API key here. API key, yeah. So once we have put the API key here, let's close the bracket and yeah, perfect.
00:08:57.040 - 00:09:18.716, Speaker A: Now at last we have to basically remove the strict mode and also wrap application with Live Peer Config. Live Peer Config and then the client would be client. And here we can import app.
00:09:18.716 - 00:09:47.572, Speaker A: So, yeah, conf client is equal. Just come to here, get started and this is it. Copy back the API key and then paste it here and yeah, so now we have Livepeer JS integrated into our application and we can use the hooks, components and everything just to test if everything is working fine.
00:09:47.572 - 00:10:03.240, Speaker A: Like if we have integrated successfully, we have a hook name, it Lifepeer Provider. So we can import that, use Lifepier Provider. And here we can say Const Provider is equals to use Lifepier Provider.
00:10:03.240 - 00:10:20.764, Speaker A: And here we want to put our provider name. So we say Provider basically get comFake name. And yeah, once we save it here we should have Lifeview.
00:10:20.764 - 00:10:46.490, Speaker A: Yeah, which means the integration now works fine and our application is integrated with Lifeview. In this demo application we want to basically create a very simple upload and transcode video. So what we can do is we want to use first maybe let's create the input or let's first create the state const video is equals to set video.
00:10:46.490 - 00:11:15.552, Speaker A: Yep, yep. So and here we want to keep an input and this input would have a type file which on change it would be basically set on the estate which we have the set video one and yeah, that's it, let's save it. And now we have this file picker and for now we can keep it like that.
00:11:15.552 - 00:11:38.074, Speaker A: And then here we would have also a button like Create Asset. And then on click for now we just for now we can keep it like this. So we have file input and also a button.
00:11:38.074 - 00:11:59.218, Speaker A: So here what you want to do is we want to basically import the youth create Asset, which is the asset to create a video on the live peer network. So we say const is equals to youth create Asset. And here we want to put our video.
00:11:59.218 - 00:12:19.626, Speaker A: So in my case it's going to be for example, sources and in the sources we want to keep it like it's an array. So since we have only one video so I'll just put it this way and here we at last you'll have a name. For example, maybe we can keep this one video name.
00:12:19.626 - 00:12:34.070, Speaker A: And also at last you want to also put the file. So we say file is equals to video name. Yeah.
00:12:34.070 - 00:12:57.654, Speaker A: So this would create an asset for us, this hook and just to make sure that we get the correct responses, you would also add a few add a much weight and we put it like on Create Asset. And then we would also add a data that you'd get in response. We would have assets this one and maybe progress if in case we need it.
00:12:57.654 - 00:13:21.236, Speaker A: And yeah, so pretty much this is the hook which we want to use. And here on the button click, we can say if the video is not there, you can disable it. Oops, now it's working.
00:13:21.236 - 00:13:40.744, Speaker A: Maybe I can just come here, use, create assets. So this is documentation which you can use like you can have all the assets and hooks which you can take a look and yeah, so this is the code which we would be basically using. It like there missing colon.
00:13:40.744 - 00:14:13.640, Speaker A: Okay, let me remove the TypeScript. One, save it and yeah, so we have the button, disable it and yeah, so now it should work just to see if the progress and everything. We want to also add this one and the error message and let's put this here and save the file.
00:14:13.640 - 00:14:25.160, Speaker A: Cool. So now if we have to app so let's come here, click on choose file. This would open up a video for us.
00:14:25.160 - 00:15:20.364, Speaker A: Maybe I can find the video. It okay, we don't have a demo video. I don't have a demo video to upload it.
00:15:20.364 - 00:15:34.644, Speaker A: But basically once you choose a video okay, yeah, got it. So we have a video. Now once you have the video you can click on Create Asset and this would basically upload the video to the live peer network and transcode it.
00:15:34.644 - 00:15:44.180, Speaker A: And once we have the video back, it would basically show us here. So currently it's been an uploading process. We can come back here, close this and go to assets.
00:15:44.180 - 00:16:10.344, Speaker A: Yeah, so this is how you'll be able to create an asset using live peer JS. And one more thing which I want to add to this workshop and that would be completed is basically the player component. The player component is like easy to use HLS player which you can use to play the videos on the livebeer JS.
00:16:10.344 - 00:16:26.748, Speaker A: So for that we have a guide on how you can basically play back the IPFS and RV video. As we know that both IPFS and RVs are not CDNS, they are a storage. So in order to play the video properly without any buffering, basically you would want to use live pure.
00:16:26.748 - 00:16:40.836, Speaker A: It would play back the transcoded version for us. So we have already set this up and I think yeah, so you don't want to go through that one. But this is how you'd be able to also transcode the videos from IPFS and Rweef.
00:16:40.836 - 00:17:04.188, Speaker A: Just to show you an example, we have a few I put some examples here like Rweef and if I basically put the Rweave link here, it would take a minute for the video to get transcoded and then save it into the live peers network. And once it is done, you would be able to basically play it just in the case. I can also live peer and then destroy.
00:17:04.188 - 00:17:14.764, Speaker A: This is an example application. So for example, if I want to play this video, the video would be played actually. So this is how the live pair transcoded.
00:17:14.764 - 00:17:28.772, Speaker A: It would play any type of video on either on IPFS and Rweave. So this is an example with the Rweave that any size it would be transcoded and then play back the most optimal version. Similarly like this one or this one.
00:17:28.772 - 00:17:41.870, Speaker A: I think due to bad turn it they don't play it but yeah, it should work actually. And yeah, so this is regarding the live pair. I hope you understand on how to use them and yeah, let me know if you have any questions.
00:17:41.870 - 00:17:46.280, Speaker A: Bye.
