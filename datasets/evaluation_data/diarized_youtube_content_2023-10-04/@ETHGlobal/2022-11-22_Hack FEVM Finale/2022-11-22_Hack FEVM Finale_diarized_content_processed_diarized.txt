00:00:06.890 - 00:00:18.170, Speaker A: Good morning, good afternoon and good evening everybody. My name is Kartik, one of the co founders of ETH Global, and I am super excited to welcome all of you to the Hack Fathom finale. Thank you so much for your patience.
00:00:18.170 - 00:00:27.778, Speaker A: This one took a long time. We had people from 70 different countries that we're coordinating a lot of things with, but here we are. And thank you for joining us on ETHGlobal TV.
00:00:27.778 - 00:00:48.742, Speaker A: Everybody who is going to be on this chat, you get to ask questions, comment on things, and we'll be able to look at it. And then we'll also be giving out Poaps for everybody that participated on this live stream. So this hackathon is brought to you by ETH Global and our goal is to onboard thousands of developers into the Web Three ecosystem.
00:00:48.742 - 00:01:05.778, Speaker A: And we do this primarily by running hackathons and summits. And this weekend was no different. This was our last online event for this year and we started this off by running an amazing summit that had so many technical talks on how the Fem is set up and what's coming.
00:01:05.778 - 00:01:33.510, Speaker A: And then immediately after that, we followed with the hackathon. And this was one of our most interesting hackathons yet and also the biggest and the first ever Fev hackathon. So just to recap how the last 48 hours went, we had 400 hackers from 70 different countries participating, spending 19 time zones, and they all spent the last 48 hours working on really interesting projects that leverage the Falcon Virtual Machine.
00:01:33.510 - 00:01:59.202, Speaker A: And we're going to see some of those demos here today. And kind of just to give some more visual context, people came from so many different parts of the world and it's just still impressively amazing to me that we get participants from six different continents at these events. So thank you so much for staying at OD hours and working on cool things that you were excited about and hopefully also being some of the prize recipients today.
00:01:59.202 - 00:02:12.550, Speaker A: And we had 22 amazing mentors who were there helping everybody get unblocked for all these projects. So today is the conclusion. In the next hour we're going to cover a lot of interesting things, including who won all these prizes.
00:02:12.550 - 00:02:32.154, Speaker A: And we had 117 projects that got submitted. This is absolutely crazy because this was the first time people got to use Fem at scale and also just to be the guinea pigs to understand how the platform actually would work. And the entire Protocol Labs team was absolutely blown away by this.
00:02:32.154 - 00:03:01.138, Speaker A: And we spent the last few hours looking at all these projects, talking to these teams, giving feedback, and choosing some of the teams that we're going to bring on for a demo. I want to give a big shout out to the IPFS and filecoin teams for really being the MVP for this entire weekend. They were there answering all the amazing questions, making sure that everybody understood what they can and can't do, and more importantly, just giving the right feedback and helping people actually on board and get more help even after this hackathon.
00:03:01.138 - 00:03:17.798, Speaker A: So let's get back to these 117 submissions. We got to these projects about 5 hours ago, and then the last 4 hours were spent talking to all these teams in parallel. And through all those chats, our judges came up with nine finalists.
00:03:17.798 - 00:03:26.266, Speaker A: We're going to bring these teams on. They're going to talk about what they built. They're going to show you a demo of what they built, and then we're going to go into all the prizes.
00:03:26.266 - 00:03:40.958, Speaker A: So without further ado, here are our nine finalists. Soulmates coyos data market zksig NFTs catalog dao soulshare wallet SPN dao credlancer and fil Peggy. Congratulations to these nine teams.
00:03:40.958 - 00:03:57.046, Speaker A: They are the first and some of the really amazing use cases of fevim and just being on FBM. And we're going to bring these teams on one by one, and they're going to show you what they built so all of you can see and check it out. A lot of them are also usable for all of you immediately after this.
00:03:57.046 - 00:04:11.006, Speaker A: So we'll kind of go into that too. And before we kind of bring this on, I want to take a second to kind of really thank the 108 teams listed here. Just because you were not one of those nine teams does not mean you were not good enough or there was something wrong with what you built.
00:04:11.006 - 00:04:32.286, Speaker A: We were able to just only showcase a handful of these projects. And our goal is to really kind of highlight and bubble up some interesting ideas. And we really encourage all of you to continue working on this project beyond just this weekend, there is a whole program available for you to kind of continue this as part of a boot camp and next steps.
00:04:32.286 - 00:04:53.660, Speaker A: There is funding and grants available. You can ping any of us on the Youth Global team for any help or connections that you need to talk to anybody in the space. I want to make sure that you're there to kind of continue building on this thing and want to make sure that we can help you get please, please continue building these things because what you're excited about is what the world will be excited about in six months from now.
00:04:53.660 - 00:05:12.670, Speaker A: All right, and of course, for all of you who want to find out about specifics each of these projects, you can see all of these things now on newglobal.com showcase. You can browse all 117 of these teams, see some videos to demos, to screenshots, to live websites, and play with everything that came out of this weekend.
00:05:12.670 - 00:05:22.050, Speaker A: All right, enough of me talking. Let's start with our first demo. Without further ado, I'd like to welcome our first team, soulmates.
00:05:23.590 - 00:05:24.340, Speaker B: Hello.
00:05:26.570 - 00:05:27.800, Speaker A: Let's get started.
00:05:28.650 - 00:05:35.750, Speaker B: Awesome. All right, so our project is Soulmates, and we became a little bit closer to Soulmates ourselves. Throughout the course of this weekend.
00:05:35.750 - 00:06:02.510, Speaker B: And the project Soulmates is a Soulbound Token issuance engine that's built on Fevum. We decided to build this project because we know that Soulbound Tokens are an extremely important onchain primitive for many critical use cases, especially as the narrative around decentralized identity and reputation has become increasingly important in the web three space over the last year. We also wanted to build something that we knew would be an important primitive and would be useful on Febam and Fem day one.
00:06:02.510 - 00:06:24.630, Speaker B: And that could support a number of the really amazing use cases that people are more excited to build in this hackathon and beyond. To briefly touch on what we built, we built a set of smart contracts. There were 17 files in total that touch on a number of different constructs, which Carson is going to show a little demo of and also talk about in a bit.
00:06:24.630 - 00:06:44.762, Speaker B: We also built a front end application for our contracts to interact with them. And also some additional figma demos for how you might think about interacting with Solbound tokens at the application layer down the road. We wanted to make sure that we were focused in this hackathon and building something that was a really flexible and usable substrate, really focusing on the primitive layer.
00:06:44.762 - 00:06:56.478, Speaker B: And we aligned on kind of a core flow that all of the Soulbound tokens, which are sort of issued through the Soulmates protocol, sort of fall into. And there are these three steps. First, creating tokens.
00:06:56.478 - 00:07:12.242, Speaker B: Second, assigning tokens to other addresses and that's kind of the first sort of assignment or transfer moment. And then after that, those tokens are no longer transferable. And then claiming the tokens that have been issued to you if relevant, according to the rules that were set in place when those tokens were originally created.
00:07:12.242 - 00:07:15.720, Speaker B: And now Carson's going to give us a demo of how this all works.
00:07:17.290 - 00:07:27.898, Speaker C: All right, thank you for that. So this is our website. So we have this web app that was made with Next JS Wagme, along with other technologies we'll touch upon later.
00:07:27.898 - 00:07:42.942, Speaker C: So, first step, you have to connect your wallet and make sure that you are on the wallaby testnet and you have some funds from the faucet. So we go to create, if we want to create our first collection. And here we have a number of factories to choose from.
00:07:42.942 - 00:07:50.446, Speaker C: Each one of these factories will have slightly different rules. For this demo, we're going to talk about the deal factory. So we set up the metadata.
00:07:50.446 - 00:08:01.682, Speaker C: We want like a picture of this laptop case. This is the cool laptop token, for example. And then we create because this is a deal factory.
00:08:01.682 - 00:08:27.070, Speaker C: What makes that unique is that the only people who can use this factory to create collections have to be the client of an active deal within the filecoin on chain API. So first step, we have to store the files to IPFS. And then for the sake of the testnet here, we're going to be prompted to create a deal with Filecoin basically injecting into the mock API.
00:08:27.070 - 00:08:45.590, Speaker C: After that, we can now deploy our collection. And this will take a little bit of time, so we're going to skip past that and go to the next tab, Assign. So once a collection is on chain and finalized, you'll be able to see the ones you've deployed over here.
00:08:45.590 - 00:09:06.138, Speaker C: So if you want to assign a token to somebody, for example, this one, you click on the card and then you can assign it to any valid Ethereum address. And we assign just like that. Different factories might have different rules about this, but we'll get into those later.
00:09:06.138 - 00:09:18.618, Speaker C: So now I'm assigning in the pending tab, you can see all the assignments you've made. If it says Assigned, you know that the token is in their wallet. Whereas if it says pending, it hasn't yet been claimed.
00:09:18.618 - 00:09:29.790, Speaker C: And I've sent this to myself. So you can see that there. If we go to the Claim tab, you can see the previous tokens I've claimed and these are the ones available to claim, see, that matches the pending.
00:09:29.790 - 00:09:44.086, Speaker C: And now I can click on this card and click Claim. And that is the full flow. And now if we go back to Assign, you can see a card has been created for the cool laptop data and the IPFS hash came in.
00:09:44.086 - 00:09:50.186, Speaker C: So that was our first transaction. It's all the way through. So that concludes our demo.
00:09:50.186 - 00:10:05.418, Speaker C: Now back to the presentation. So the underlying contract architecture looks like the above. We're just going to focus on these three highlighted ones really quickly because these are the ones that actually integrate with the Filecoin market API.
00:10:05.418 - 00:10:21.666, Speaker C: Deal factory was what we talked about in the demo. And then in the demerit factory, we have this expired deal. This is a type of soulbound token that you can issue to people and rather than them claim it, it's automatically claimed by the system if they violate a demerit policy.
00:10:21.666 - 00:10:35.718, Speaker C: So the example we had here is if the person has an expired deal, bam. They'll be punished with this demerit for it. So this is an example of what a demerit factory would look like.
00:10:35.718 - 00:10:59.310, Speaker C: All of our factories have a Create Collection function that everybody can call. What makes the demerit factory unique is that we really tried to modularize it to make it reusable for multiple types of demerits. So you can just register a demerit through the register and then when you call Create Collection, there's a demerit variable that you pass in to choose which demerit you want associated with that token.
00:10:59.310 - 00:11:15.330, Speaker C: And this is briefly our front end architecture. We built it using Next JS for the front end, Wagme for the wallet integration and reading from the contracts, NFT Storage for the IPFS storage and Ethers for the Contracts interactions.
00:11:17.370 - 00:11:35.190, Speaker B: Awesome. And briefly to just touch on how the solution is different than know standard SBT protocols. One of the things that Fevham and Fem really enabled for us was the ability to leverage filecoin deal data in how we thought about issuing Spts programmatically.
00:11:35.190 - 00:11:55.454, Speaker B: And also the example that Carson mentioned as well, being able to issue tokens against the deal factory required this verification step that you actually were the owner or the client on the storage deal. So there's some nuances there to working with filecoin. These are some examples of applications we had thought of, of how you might be able to use these in practice.
00:11:55.454 - 00:12:10.582, Speaker B: So this one is storage provider Reputation. The next is support for under collateralized lending protocols that might be built on Filecoin in the future. We also thought about education credentials and how these might look as well.
00:12:10.582 - 00:12:22.780, Speaker B: We won't have time to play this I think. And then also thought about a number of different ways we could extend this in the future. And this is kudos to our amazing team.
00:12:22.780 - 00:12:24.220, Speaker B: Thank you.
00:12:24.590 - 00:12:32.682, Speaker A: Amazing. That's a lot that you did in two days. I hope this becomes more than just a hackathon demo.
00:12:32.682 - 00:12:34.490, Speaker A: This is really cool. Congratulations.
00:12:35.390 - 00:12:36.940, Speaker D: Thank you. Right.
00:12:37.410 - 00:12:43.310, Speaker A: And with that, we are ready for our second demo. So without further ado, I'd like to welcome Koyos.
00:12:43.750 - 00:12:49.780, Speaker D: Hi everyone. I am coyos solo hacker here. I'll share my screen.
00:12:49.780 - 00:13:07.734, Speaker D: What I created was sort of three part demo. One is what I really thought about was data dows. And data dows are one thing that Fathom is making extremely interesting because you can put data sets on chain but also interact with them through algorithms or download them.
00:13:07.734 - 00:13:38.626, Speaker D: But one thing I'm interested in is always on the consumer side. So it's great to have all of these dows, but what other types of dows can we have to have really consumer adoption? So the first step is creating a so investment dows obviously is what a lot of people think about but also research DAOs are another thing. Imagine if you can have a professor in Chicago coordinating with professors all around the world in South Africa and China sort of working together from that same data set, creating algorithms, things like that.
00:13:38.626 - 00:13:48.002, Speaker D: And maybe working on the commercial side with people who create algorithms. Also thought about gaming and sports styles. I'll show one a little bit later from Clash of Clans.
00:13:48.002 - 00:14:11.094, Speaker D: But there's a ton of information that's needed in gaming and for professional sports that people use to sort of win championships. So how will this improve gaming in the future? I think that'll be an interesting set of dials. Another one that very few people think about when we think about blockchain, but will be hugely important in the next five to ten years is in real life retail.
00:14:11.094 - 00:14:35.986, Speaker D: Imagine if a retailer in New York could get data and use data from Shanghai without actually having to go through a large organization. It's very decentralized all they have to do is join a Dao and lastly, philanthropic. So this isn't the only things that you can do, but these were sort of the four or five categories that I thought of at this moment, of some great dows that you can create through this app.
00:14:35.986 - 00:14:57.766, Speaker D: And so next we'll look at our marketplace. So the idea here is there's no dows currently wallaby testnet, but by February, I've told, actually, we might be the first, and I think there's a few others, so they'll be seen here, but we also want to showcase some of the verify data dows. So if you just happen to be coming to here, you don't know what dow to join.
00:14:57.766 - 00:15:09.962, Speaker D: Maybe you're interested in this one, then. This is live, so I won't push a lot of things here, but let's look at this dow here. So this is sort of traditional, where you'll be able to make proposals.
00:15:09.962 - 00:15:22.034, Speaker D: You'll be able to look at the vault, see how much money is in the vault, who their members are. XYZ change some of the settings. I think one of the interesting things and this is sort of .2
00:15:22.034 - 00:15:43.706, Speaker D: in this presentation that we're really going to improve upon, hopefully, with all 117 hackers. A part of this is that for each Dow, we want to create sort of an App Store where if you have an interesting project or an app that might be usable by a Dow, we want to create an interface. And this will be interesting if someone creates this Next, where we can sort of place this here.
00:15:43.706 - 00:15:59.230, Speaker D: If you're doing discord modification notifications or something like that, that we could add here. So then the Dow managers and owners don't have to think and have to build their own tech. They could sort of use tech that's being built through these hackathons and install it in their Dow.
00:15:59.230 - 00:16:13.054, Speaker D: And then the second part of the Dow, this is sort of the traditional part of the Dow, both Dow and the App Store. The second large part of the Dow is what happens with the public data. What happens with data because you are a data Dow.
00:16:13.054 - 00:16:51.054, Speaker D: And so what we like, and the reason why I switched over to this is that we want each data section of every data dow to be its sort of own website for obviously the purposes of privacy. GDPR XYZ currently, I'm going to create this, the Coils Public Data dow, where I'll take public data from different governments around the world and sort of put them together and see what interesting things we can find out. It doesn't exist here, but once I start uploading some data sets to that Dow on Fevum in February, it'll start showing up here with which data sets I actually created, which ones I saved that I'm looking at, and which ones I own.
00:16:51.054 - 00:17:05.006, Speaker D: But before then, let's look at some of the dows that already exist. Oh, I'll click on this classic clans, one that already have some funding. It should give me an error because I'm on wallaby testnet and not polygon.
00:17:05.006 - 00:17:14.774, Speaker D: Should happen at some point soon. But yeah, there we go. And then, so what you see here is tons of the data about the dow, what type of dow it is, what labels they have.
00:17:14.774 - 00:17:30.570, Speaker D: You get to see some of the pictures, some of the conflicting data. So before you buy it, and this is on the public side, you'll be able to look at a lot of the different use cases. XYZ so let's now go to the last part, which is within your dow.
00:17:30.570 - 00:18:17.340, Speaker D: How do you create data? And so what we thought about at we isn't me thought about for coyos, but I'm thinking ahead of time is what we'll do is each data piece will become its own NFT, and then that NFT will create tokens that people could buy to access the data. So let's say if I was creating one here, I could go through call it like US Fortune 500 data, the coolest info about the largest companies. And then I can put me and then I'll tag it as finance and we have a few things there, terms and conditions, then I can keep going and so on and so on.
00:18:17.340 - 00:18:32.106, Speaker D: This is the most interesting part I wanted to get to here, because what happens is at the last piece part page, I created the metadata here. I actually create the token. I say if it can be downloaded or computed, I actually put in a file.
00:18:32.106 - 00:18:42.018, Speaker D: I'm going to go back for a second because this is live. Not only can you do a data set, but you can also create an algorithm. And I think this is actually a huge part of datados coming on.
00:18:42.018 - 00:19:05.402, Speaker D: The Fevum network is not only can you just see data sets, but maybe you have a data set, but you don't have an algorithm or you don't have a computation or some formula you can purchase someone else's to use. And lastly, sort of pricing and things like that. The last thing I'll show before I get off, because I think it's already mid five minutes, is in the beginning when we're looking at these data sets up here, this is all live.
00:19:05.402 - 00:19:14.558, Speaker D: These are all the networks. I happen to be on wallaby. As I sort of take these away, you'll start to see everything change.
00:19:14.558 - 00:19:34.082, Speaker D: So this really shows how this can be sort of cross network, cross chain, but able to have all of these dows sort of working together. So we're both a dow marketplace, an app store for data dows, and then like the actual data set and algorithm marketplace. So thank you.
00:19:34.082 - 00:19:35.330, Speaker D: That's kayos.
00:19:38.650 - 00:19:45.960, Speaker A: Amazing. That was a lot of stuff. I'm still two for two super impressed with how much people can do in 48 hours.
00:19:45.960 - 00:19:57.306, Speaker A: This was really cool. I think we have a pretty active theme here for the rest of the demos on just leveraging data dow. So seeing this massive aggregation in factory makes it a lot more easier to work with.
00:19:57.306 - 00:20:01.658, Speaker A: All right, time for our third demo for today. So please welcome Chris from Data Market.
00:20:01.744 - 00:20:14.570, Speaker D: Hey, everybody. My name is Chris, and for the hackathon, I put together an app called Data Market. Now, some of you might be familiar with existing data marketplaces data exchanges where you can share and purchase data with other parties.
00:20:14.570 - 00:21:07.442, Speaker D: Now, the problem I have with this is that this platform is very centralized and you more or less have to either agree to a long term agreement where you're paying pretty much regardless of your usage amount, or you're sharing your data with this party who you may not necessarily know what they're doing with it. And I figured there was potentially a lighter weight way that didn't require the overhead of having an entire staff of engineers, mediate and control a marketplace to use the Fevm to create a self governing exchange to enable anyone. Not with an email or username, but anyone with a filecoin wallaby wallet to create their own sales pages for data and share it with other people out there in the world and enable people almost like a shopify of sorts to sell and purchase data in a community managed way.
00:21:07.442 - 00:21:17.666, Speaker D: And let me show you how that works. So the first step is actually to connect the wallet. So I have a simple connection here with Wallet Connect, already set up with Wallaby.
00:21:17.666 - 00:21:26.470, Speaker D: Hopefully that works. All set. And once you're connected, you're more or less able to authorize the transaction to create your first data listing.
00:21:26.470 - 00:21:41.306, Speaker D: And I have some example values here, but this could be just about anything that you want to sell related to data on the filecoin network. So let's just say I had a Boston phone number data set with 500 rows of names and phones that someone might want to sell in the marketing world. I hate this.
00:21:41.306 - 00:21:58.014, Speaker D: I don't know if other people hate when people sell your cell phone numbers, but there is a market for being able to commercialize data, not just for this, but for training sets and AI as well. So let me show that example. So in this case, I have just a simple phone number, CSV.
00:21:58.014 - 00:22:14.498, Speaker D: But this could be any data, any labeled data that I want to sell. The way that works is you create the Data Market request, and there's two steps that happen behind the scenes. First, the data set gets uploaded and registered with IPFS filecoin.
00:22:14.498 - 00:22:45.814, Speaker D: And then the second action here, which admittedly might take a little bit of time because it is on the testnet, is actually deploying a contract to represent the actual hosted page that you could share with other users out there in the world. So it uploads the data, creates a CID for that. It deploys a smart contract which contains logic for both accepting payments and doing escrow for people that purchase your contract.
00:22:45.814 - 00:23:07.800, Speaker D: And actually, there's a mechanism as well. If people go to your page and start flagging it as being an illegitimate data set, the contract won't release funds to the owner of that page unless they get three successful sales. And then once the third sale goes through and there's no additional flags, you'll continue to get paid for the data set that you uploaded when people come to that page.
00:23:07.800 - 00:23:16.058, Speaker D: So I have an example. One already here, but let's see if that one confirms. So when that confirms, you'll get taken to a success screen just like this.
00:23:16.058 - 00:23:29.482, Speaker D: View files, view created contract and view listing page. We have a simple contract that gets deployed to wallaby, and we have a data set available for purchase. Yes, so that gets refreshed with the contract.
00:23:29.482 - 00:23:50.454, Speaker D: So every contract creates its own listing page, and this data gets pulled from the contract and hydrates a view here. So as a user, I can actually do two things. I can either flag the listing so I can say this data sucks, and then submit a transaction to more or less that smart contract, and it'll increase the flag count.
00:23:50.454 - 00:24:08.234, Speaker D: The other action I can do is if I want to buy it, go ahead and agree to those terms and pay the 0.1 T fill and buy that data set. So when I buy, that purchase gets registered, I can access the data set contents, or I can view the transaction on the Explorer as it's happening.
00:24:08.234 - 00:24:19.470, Speaker D: So this is still pending, but now I have access to the data. And so, in essence, this data set is open. So folks right now could in theory, guess this CID.
00:24:19.470 - 00:24:29.886, Speaker D: So this is something that would need to be resolved about how do you secure data sets, but I don't know if people are out there just guessing GUIDs all day. Maybe they are. Maybe they're in programs.
00:24:29.886 - 00:25:02.880, Speaker D: But this is more or less you would not find this URL unless it was shared with you, and then you could see that phone CSV file and be able to access it on your machine. Lastly, for every contract that gets deployed, you can actually come back to the app and look up history against that contract. So I just bought it, and you can see here, I did just a large number of I think this is ten to 18 of the Tfill purchase from this translated address to the other address.
00:25:02.880 - 00:25:14.580, Speaker D: And yeah, once you get three purchases, you're all set. As for the code, saw my GitHub encourage you to check it out, but that's pretty much the data market project. And thanks for your time.
00:25:14.580 - 00:25:17.122, Speaker D: Awesome.
00:25:17.256 - 00:25:22.882, Speaker A: Thanks for that. That's really cool. And looks like another primitive that we got to work on is access control list.
00:25:22.882 - 00:25:32.742, Speaker A: So that just kind of unlocks a lot more things. Maybe there's a solidity contract here waiting to be written, and then also FM to be proved with a lot of these built ins. Cool.
00:25:32.742 - 00:25:39.850, Speaker A: Thank you so much. And with that, we are ready for our fourth demo. And for that, I want to welcome Ryan to talk about Zksig.
00:25:41.710 - 00:26:00.430, Speaker E: All right, so we built a platform to create NFTs out of digitally signed, legally binding agreements. All the information for these agreements are stored either on chain or on IPFS and filecoin. I can walk you through how you go about creating an agreement.
00:26:00.430 - 00:26:35.942, Speaker E: You fill out a quick form, give the agreement a name, like a Services agreement. We decided to create an NFT out of this agreement as well, upload a PDF, and then from here, you can add signers. People who will sign the agreement have a provider and client, and then you can drag these signatures to where the person would sign the PDF and then create the agreement.
00:26:35.942 - 00:26:55.470, Speaker E: When this agreement is created, the PDF itself is encrypted and stored, pinned to IPFS, and also stored on filecoin. And some audit trail logs are added to Fevam as well. From there, we can see I already created an agreement a little bit earlier.
00:26:55.470 - 00:27:01.060, Speaker E: This is what an agreement looks like. This has two signers. We're waiting for both of them to sign.
00:27:01.060 - 00:27:27.430, Speaker E: Since the agreement is encrypted, you have to press this button and interact with your wallet a little bit to decrypt the agreement PDF, which shows up here, and you can copy a link. This link is something that you can send to the person that you want to sign the agreement. The link has this kind of long password looking thing in the URL.
00:27:27.430 - 00:27:50.930, Speaker E: That's what allows it to decrypt the agreement over here. When this person chooses to sign the agreement, it's going to re encrypt this agreement for this signer so they won't have access to the original agreement. It re encrypts the agreement and stores it so they can decrypt it in the future and continues to add to that audit trail of the digital signature.
00:27:50.930 - 00:28:13.078, Speaker E: Once you sign an agreement, your signature appears under signatures. You can go back and see it again, decrypt the agreement to see it at the same time, behind the scenes, an NFT was created. So an NFT collection was created for each agreement that's created, and each signer gets one of those NFTs.
00:28:13.078 - 00:28:44.210, Speaker E: If we look at one of these agreements, we can see an address here. This is the address of the NFT for this particular agreement. On the other side, we also created a few delegated authorization contracts that allow you to block deal proposals or change access controls for deal proposals on the storage market based on NFT ownership.
00:28:44.210 - 00:29:01.046, Speaker E: So we made a little site and a factory so you can create these things. We have four of these delegated authorization contracts. A provider NFT contract, which makes it so a provider has to own an NFT in order to create a deal proposal.
00:29:01.046 - 00:29:25.730, Speaker E: A client NFT contract. Which makes it so a client has to own an NFT in order to be part of a deal proposal. A common NFT contract, which means both the provider and client have to be part of the same NFT and an agreement NFT contract, which means that the client and provider have to agree on a digitally signed, legally binding agreement.
00:29:25.730 - 00:29:51.930, Speaker E: So any of these you can select. If you drop in that NFT address here and press Create contract, it'll deploy that contract, and this address can be used along with the marketplace to ensure the provider in this case is the owner of an NFT, a particular NFT. That's pretty much it.
00:29:51.930 - 00:30:13.338, Speaker E: That's our whole flow. So, NFTs and NFTs that are digitally signed legally binding agreements, and these delegated authorization contracts, we think there's a bunch of use cases for this sort of thing. For example, membership to a data dow based on NFT.
00:30:13.338 - 00:30:36.390, Speaker E: So you have an NFT, which gives you membership to a data dow, and then you can only make deal proposals if you're part of this data dow. Things like requiring KYC to be part of some marketplace in order to store data and requiring service agreements. So if you're a provider, you might require your client to sign a service agreement before taking on storage.
00:30:36.390 - 00:30:39.580, Speaker E: That's it. Thank you very much.
00:30:41.390 - 00:30:43.722, Speaker A: Awesome. Thanks, Ryan. That was really cool.
00:30:43.722 - 00:30:56.906, Speaker A: And, yeah, it looks like it just works really nicely with all the other demos we just saw. This is great. All right, next up is our fifth demo for today, and that is Catalog Dao.
00:30:56.906 - 00:30:59.040, Speaker A: So Daniel and Wilman. Welcome.
00:31:00.210 - 00:31:04.574, Speaker C: Sweet. So we can get started. So we are team catalog.
00:31:04.574 - 00:31:14.062, Speaker C: Dao, Wilman and Daniel. So let's start with the problem. We're trying to solve nature based carbon projects.
00:31:14.062 - 00:31:35.414, Speaker C: And by this, you can imagine a reforestation project hoping to verify how much carbon it stores and issue. Carbon credits lack efficiency, transparency, and integrity. That's why they rely on centralized verification standards like Vera Vmvr platforms.
00:31:35.414 - 00:31:52.778, Speaker C: And that means digital measurement reporting and verification platforms can help. However, these are also centralized entities. And perhaps more importantly, DMVR platforms demand lots of resources, particularly data and computing.
00:31:52.778 - 00:32:02.174, Speaker C: So you can go to the next slide. So, what's our hypothesis? We want to create a Dmrv data dow. We call it catalog.
00:32:02.174 - 00:32:28.970, Speaker C: Dao. We visualize a Dao that enables project developers and their communities to procure store, analyze, and self govern their data in an incentivized MRV platform. So how would it work? So, for this version, we think that members or potential members pledge their funds in exchange for a fractionalized NFT.
00:32:28.970 - 00:32:57.750, Speaker C: The NFT is actually a georeference NFT with coordinates and an ecological state variable, and it represents a reforestation project. Once the project has been verified and issued carbon credits, we assume that those credits can be streamed back to Edao using a project like Superfluid. The CO2 equivalent tokens are basically the revenue, and it's what we use to incentivize all the dow activities and work.
00:32:57.750 - 00:33:17.366, Speaker C: Anyone can provide data which is voted in and curated by the members of the Dao. This data gets stored using Apvm. For this hackathon we create a simple Dao contract that lets the Dao decide on what data gets stored complete with storage deals and storage deals.
00:33:17.366 - 00:33:41.454, Speaker C: Verification data from off chain sources like satellite data, LiDAR and other types of sensors will be ported using chain link, a chain link Oracle and stored in NFD storage. CO2 equivalent tokens can be used to phone storage and data inputs. Then they can incentivize scientists and researchers to leverage the data and submit computing jobs.
00:33:41.454 - 00:34:05.980, Speaker C: We use project back allow for this computing jobs and data produced by those jobs can also be stored and funded by the Dao. Finally, we think that a solution like this can reduce the cost of verification monitoring for carbon projects and truly create a platform that empowers and supports local development projects. So with that I will pass it to Will for a.
00:34:09.550 - 00:34:35.170, Speaker D: For this weekend we focus on building the data going to we're going to go through the steps of the data dow. So first we're going to submit a transaction to the Dao and this is the CID that I as a member of the Dao want to submit and this is the site of the CID that I'm going to need. So we're going to go through all the process of the voting mechanisms of the Dao.
00:34:35.170 - 00:35:02.430, Speaker D: Then we're going to simulate being the storage provider when the deal is out there and storage provider will take the deal and accept it. And then we will verify that the ECID is indeed stored by a certain provider. So I have deployed the contracts, that is basically the catalog contract and the market API just to do some demos here.
00:35:02.430 - 00:35:40.970, Speaker D: I deployed it into a local network in order for it to be faster. So the first thing that we're going to do this dow right now just has two members and only requires one, one transaction, one one operation in order to submit the transaction. So the first thing that we're going to do is submit the transaction and we're going to pass the CID that we want to store and the size of the CID.
00:35:40.970 - 00:36:20.130, Speaker D: Now we have the transaction here, we can get some info about the transaction passing here need to be transaction number zero here's. The CID that we want to store size it is executed, it's not executed yet and the number confirmation. So right now if I try to execute transaction numbers here, I won't be able to do it because the dow first need to confirm that once you store the CAD.
00:36:20.130 - 00:36:53.030, Speaker D: So a member of the dow comes here and say okay, I vote for this transaction zero to be story. So with that we have now one confirmation and we are good to execute this transaction. So right now, once the transaction is executed.
00:36:53.030 - 00:37:23.660, Speaker D: This deal is out there waiting for storage provider to accept it. So now we're going to simulate the storage provider with marketapi soil and we're going to call the published storage deal. So the market API is going to need a data structure called Siber that basically is kind of a compressed deal that has all the information of the deal, the provider how long is going to store it.
00:37:23.660 - 00:37:58.232, Speaker D: So we're going to copy this one and the Kali is going to be the client that in this case is going to be the Dow. So let's copy the address of the Dow. Okay, so right now there's going to be a storage provider storing the CID that the Dow wanted.
00:37:58.232 - 00:38:24.552, Speaker D: We can verify it here in the CID providers of the Dao. We have to pass the CID that we wanted originally to store and the provider that is going to storing it right now and that we get a value of. True.
00:38:24.552 - 00:38:47.856, Speaker D: And that means that our CID is storing it for the time that this data structure, the Silver data structure, was encoded here. So with that, that's all for the demo of the data Dow that we built in this weekend. So hope you like it.
00:38:47.856 - 00:38:49.792, Speaker D: That's all for me? Yeah.
00:38:49.846 - 00:38:50.930, Speaker C: Thank you so much.
00:38:54.690 - 00:39:04.180, Speaker A: Awesome. Well, Daniel, thank you so much for doing that amazing demo and getting so far. Let's hope you get to kind of continue building this and we get to all use it in the future.
00:39:04.180 - 00:39:11.000, Speaker A: All right, next up we have Soulshare wallet federica. Whenever you're ready.
00:39:14.330 - 00:39:28.662, Speaker D: Hello. I made a video for the presentation because my English is not very good. Hello everyone.
00:39:28.662 - 00:39:49.300, Speaker D: We are the Sols Share team. My name is Federico Latartein, I'm a full stack developer and this is Gloria, my community dogfriend. Are your tokens safe? Now this solution will provide you with two factor authentication on the blockchain and security to share your wallet with your hackathon team, work or friends.
00:39:49.300 - 00:40:16.502, Speaker D: What we build, we are the number one wallet that allowed you to configure two factor authentication with two different wallets, increasing the security of your transaction and protecting your asset for possible attack. How it works we create a MultiSync wallet that increase the security of your asset. This connect with two different wallets.
00:40:16.502 - 00:40:59.910, Speaker D: For example, one on the cell phone and one on the computer working as a double authentication factor since for any transaction I will need the approval of bot device. In other words, in the event that our cell phone is stoned and they want to access or reward it, they will not be able to steal the funds. Another real use case is for example in a hackathon where an OS is recycled each member history their wallet and when withdrawing the funds, they will need the approvals of the team to carry out the transaction.
00:40:59.910 - 00:41:29.058, Speaker D: The main features we develop are two factor authentication connect two wallet for great security, wallet for hackathons everyone on the team must approach their price transaction manage those companies delegate can handle asset as long they get the signatures. Okay, people, let's go to the live demo. We are already in the app.
00:41:29.058 - 00:41:53.990, Speaker D: The first thing we are going to do is send some money to the address of the contract. You can already see that the fund have entered. Then I'm going to connect to the wallet of owner one and I'm going to create a transaction to send money to another address.
00:41:53.990 - 00:42:15.700, Speaker D: You can see that the status of wallet two is pending. Now I'm going to connect to wallet two and I'm going to upgrade the transaction. Finally you can see that the phone already in the wallet that we send.
00:42:15.700 - 00:42:48.616, Speaker D: In the future we will working on the first functional beta version that will allow adding more dots using Naturate, the option to create multiple wallets from the app and also apply to the FBM bootcamp to continue learning and be ready to launch our app into production. Thanks you're very much to all. You can now scan the QR code to try the app or enter to the link on the screen.
00:42:48.616 - 00:42:54.956, Speaker D: Have a great day. Awesome.
00:42:55.058 - 00:43:04.030, Speaker A: That was really cool. And yeah, this is such a really cool utility to understand what's going on. And there's also a lot of testnet file coin, so that's amazing.
00:43:04.030 - 00:43:17.044, Speaker A: Well, thank you so much and I guess you get to try it out. For those of you who missed the QR code, you can just rewind that video on YouTube and on this live stream and scan that and pause it again. All right, three more demos to go.
00:43:17.044 - 00:43:19.780, Speaker A: So our third last demo is Dao.
00:43:21.080 - 00:43:22.230, Speaker D: Take it away.
00:43:26.820 - 00:43:37.300, Speaker B: Hi everyone. Excited to be here. So we are a team of five across three time zones and we would love to welcome you to Spend Dao.
00:43:37.300 - 00:43:41.670, Speaker B: John, could you switch to the deck please?
00:43:50.750 - 00:43:51.114, Speaker D: Yeah.
00:43:51.152 - 00:43:55.040, Speaker B: So what's spendow going back to the first page?
00:43:55.410 - 00:43:55.918, Speaker D: Yeah.
00:43:56.004 - 00:44:18.482, Speaker B: So spend stands for spending. We have created a data dow that empowers consumers to turn their credit card transaction data into assets and have true ownership over their data. Next, our spending data review a lot about our behaviors.
00:44:18.482 - 00:44:54.580, Speaker B: Combined together, they actually tell even more powerful stories about the economy. For instance, is there a spike in Netflix subscriptions or is there a dip in spending at hardware stores? So, among all the categories of alternative data, credit card transaction data has so far generated the largest amount of revenue. And globally, the market size for alternative data is anticipated to reach $143,000,000,000 by 2030.
00:44:54.580 - 00:45:42.902, Speaker B: So this is a huge market and evidenced by news we have seen in the media, for instance, we have known that well, it's almost open secret that hedge fund managers have spent billions of dollars in acquiring this kind of consumer data with the hope of getting better a more accurate forecast of stock returns. And years ago, Google spent millions of dollars acquiring this kind of consumers aggregated transaction data from Mastercard, trying to link online advertising to store purchases. Now let's pause for a second and think about what about data ownership.
00:45:42.902 - 00:46:12.406, Speaker B: Next, John? So we as consumers have little control over how our data, in particular credit card transaction data, could be used. Our credit card transaction data alone fuels a multibillion dollar industry. But on the other hand, we as consumers have received almost no tangible financial rewards.
00:46:12.406 - 00:46:35.170, Speaker B: In practice, though, the value of data from a single person is of little value, and there is no marketplace or platforms where consumers could coordinate and pull their data together. Next. And this is exactly why we have created spendao for this hackathon.
00:46:35.170 - 00:46:51.080, Speaker B: The first product we have released is a DAP that's built on the Fev chain that facilitates the creation and operation of a datadao. I'm going to hand over to John for a quick product demo.
00:46:52.330 - 00:47:04.038, Speaker D: Sure. Hello. So this will be pretty quick, but someone mentioned earlier, actually, about the SIDS and how we needed to keep them hidden.
00:47:04.038 - 00:47:12.458, Speaker D: So we originally wanted to use Lens Protocol. That didn't work out, so we went ahead and used Pinata. So this is going to be a really quick demo.
00:47:12.458 - 00:47:21.694, Speaker D: So there's two sides to our portal. You can either be a user or an admin. The users are the people selling the data, and the admins are the people paying you for the data.
00:47:21.694 - 00:47:29.922, Speaker D: So let's go ahead and let's go ahead and sign in. All right. And so this is where you would upload your data.
00:47:29.922 - 00:47:50.214, Speaker D: For now, we just have a standard test CSV, and then once that data is gone, it's uploaded to a private cloud in IPFS, and then we get that Sid back. We can go ahead and mint the token. And for the sake of time, I have one in my wallet already.
00:47:50.214 - 00:47:56.522, Speaker D: It should take a second to load. There it is. So what's cool about this is it's almost like you're leasing your data.
00:47:56.522 - 00:48:03.914, Speaker D: So let's say I don't want to give my data out anymore. I can just go ahead and burn it and it'll be gone. So let's say I'm an admin.
00:48:03.914 - 00:48:16.882, Speaker D: I want to purchase data. What's cool about this is you have to have a special admin NFT to actually access this portal. So when I go ahead and sign in, it'll check my wallet to make sure that I actually have it.
00:48:16.882 - 00:48:22.914, Speaker D: Then it'll go through and it'll pull all the data. It's really messy right now. Ignore that.
00:48:22.914 - 00:48:36.040, Speaker D: This is what it would look like if it was nice and clean. So you could go through, select the data you want, and you could decrypt it, and then you could take a look at it, and then when you're done with it, you just give it back. Yeah, that's about it.
00:48:36.570 - 00:48:47.430, Speaker B: All right, back to the Google slide, please. Thank you, John. So to conclude the product demo, here are two mockups of screenshots.
00:48:47.430 - 00:49:06.740, Speaker B: So the first one is a dashboard for end users, Dao members. So any existing Dow member could reconnect to the DAP and they will see the balance of file coins that they receive from the Dow territory as rewards for contributing to this data economy. And there is this red button here.
00:49:06.740 - 00:49:37.146, Speaker B: This is a burning mechanism that allows Dao members to burn their sobong token and exit from the Dao. So this is to comply with data privacy regulations such as GDPR, allowing users, giving users the rights to be forgotten. And the second screenshot is just a mock up of shows what kind of analytics we could create from the aggregated data.
00:49:37.146 - 00:49:46.670, Speaker B: For instance, for this one, we have realizations of monthly spending by category. And then we could easily see some trends here. Next slide.
00:49:46.670 - 00:50:02.846, Speaker B: So we're really proud of what we have built over 48 hours and beyond the hackathon. This is what we have in mind for product roadmap. So the first will be CK proof of personhood to mitigate the risk of civil attacks.
00:50:02.846 - 00:50:42.246, Speaker B: And in terms of encryption, we considered lead protocol or Medusa. So those two solutions are not available on Fem yet, but once they're available, we plan to implement them and to replace the Pinata submarine mechanism with those SDKs and to have better governance on chain governance for the Dao. We plan to first deploy Genosis safe on Fem so that we can store the Aluminium NFT security in a multi SIG and to enforce majority signatures for decryption.
00:50:42.246 - 00:51:00.850, Speaker B: And we're also going to fork and build out voting contracts on Fem. And also to make this data economy that all the Dow members share. We want to make sure that the metadata tied to the sobound token is upgradable.
00:51:00.850 - 00:51:13.930, Speaker B: Dow members could come back and upgrade or refresh the data that they want to contribute to the organization. And also, for sure, confidential computing. It can be very valuable.
00:51:13.930 - 00:51:33.994, Speaker B: Next. So we also consider multiple revenue streams and business models. The ultimate goal is to grow the Dow trail rate so that we can continue redistribute the revenue among data contributors.
00:51:33.994 - 00:51:52.920, Speaker B: For instance, Dow members could come together form subdoubs as investment clubs. So just imagine all the Djens on the Wall Street Bets forum on Reddit coming together and joining Spendao. Imagine what's going to happen with that.
00:51:52.920 - 00:52:14.122, Speaker B: And also core contributors of the Dao could work together in creating analysis reports and services that they could monetize from. And also we can create time based NFTs and subscriptions that generate recurring revenue for the Dao. So this is the end of our presentation.
00:52:14.122 - 00:52:26.980, Speaker B: We're really excited about our vision and our product, and we invite you to join this movement and this ecosystem that unlocks the value of your data. Thank you.
00:52:30.690 - 00:52:31.246, Speaker D: Amazing.
00:52:31.348 - 00:52:40.402, Speaker A: Thank you so much. That was a really cool demo. And yeah, such a well thought out sort of plan on just making that even more integrated with existing ways that data works.
00:52:40.402 - 00:52:46.302, Speaker A: This is great. All right, two more demos to go. Next up is Cred Lancer.
00:52:46.302 - 00:52:50.280, Speaker A: We're going to get the team up just in a second and.
00:52:52.170 - 00:52:54.066, Speaker D: Whenever they're.
00:52:54.098 - 00:52:55.720, Speaker A: Ready, feel free to get started.
00:52:56.810 - 00:52:57.880, Speaker D: Here we go.
00:52:58.330 - 00:53:08.778, Speaker B: Yes. Let me share my screen. Okay.
00:53:08.778 - 00:53:48.130, Speaker B: Hello everyone. We are a Credential freelancer protocol trustless onboarding Credentialing and Payout for scaling organizations of course, for example Dows and we can help to create privacy forward for the freelancers. And for example for the freelancers we can have to the on chain verified credentials maintaining identify privacy and obtain in what Credential and budgets are displaying profile and of course access to work and with smart contract payout.
00:53:48.130 - 00:54:05.020, Speaker B: And if you're an organization you can get an Onchain verified Credential and trusted verification of partners budget or organization members and StreamLink onboarding and training. Of course access to Lancers and smart contracts. It's our platform.
00:54:05.020 - 00:54:26.370, Speaker B: You can connect of your course with MetaMask, create your protocol and you can check your different prices and your score. Please continue julio. Hello.
00:54:26.520 - 00:54:31.000, Speaker F: Yes, actually Alexander going to play in the main.
00:54:31.530 - 00:54:45.570, Speaker D: Alexander, please. Okay, let me do that. I hope you guys can see my screen.
00:54:51.800 - 00:54:56.870, Speaker A: I don't think the screen share is happening. So we want to give that a shot one more time.
00:54:57.240 - 00:55:25.128, Speaker D: Okay, just a so I'll just explain the contract because my remix is fucking up right now. So we have three contracts. Basically one owes the SBT token which each Dow member owes, that will be the organization itself and the freelancers.
00:55:25.128 - 00:55:52.104, Speaker D: And then we have another contract for the Geeks marketplace where the organization can list the jobs or the geeks that is available. And then the next contract is for the freelancers to apply for geeks themselves. So basically the SBT token is basically a so bound token which each Dow member owes and then that serves as a badge for the freelancers themselves.
00:55:52.104 - 00:56:13.772, Speaker D: So each time they complete a task, the organization gives them a badge they can effectively burn. And then we have the second contract which is the Gigs Marketplace contract. Basically this contract just gives you the opportunity to set the price of the geeks and then users can then apply.
00:56:13.772 - 00:56:29.248, Speaker D: I mean the freelancers can then apply for the gigs using basic Greek proposal which is to just evolve and apply. So basically that's all for me. I'm sorry I couldn't show you out copy it for my remix because it's fucking up.
00:56:29.248 - 00:56:33.396, Speaker D: But that's basically it. Julie, I think you can take it from here.
00:56:33.498 - 00:56:44.264, Speaker F: Thank you so much. Alexandria yes, explained the idea of the contract. I got to explain more about the architecture and in these two days we're learning a lot about the tool.
00:56:44.264 - 00:56:56.572, Speaker F: What we're learning, we see on the chat. The first thing what we do we were working what is the FBN rehab kit. You can see we use compile, use tester here.
00:56:56.572 - 00:57:29.584, Speaker F: We can see this tool. Help us a lot because with using this tool we can have the AB the most important part for the front end part no, we need that one the contract number and the deployment and information in order to create the contract part. The front end you can see in our solution we have in the contract we follow the hard hat what you guys provide and after that we jump into the do the UI.
00:57:29.584 - 00:57:49.660, Speaker F: In the UI we're using the library. What we hear in the chat too used yesterday about the rainbow kit no very nice chat and where we try to implement that one in the way to use wallaby no. Here we can see the configuration for the Library.
00:57:49.660 - 00:58:20.552, Speaker F: Usually in that one you can see here we used to run the application there, that was the remix because we compiling on this one on this today's. Quick compiling, remix and user the hard hat because was a leader challenge trying to figure out how war the system. But from the chat we figured out we're reading every communication with everybody and here we have an application.
00:58:20.552 - 00:58:32.200, Speaker F: This is the implemented of the connection using Gualabic network. If you can see we can disconnect her, we can change the network.
00:58:35.120 - 00:58:35.484, Speaker D: And.
00:58:35.522 - 00:58:50.690, Speaker F: The system going to detect that one and we can go back. No, this is a work in progress and too much things happen. Too much in two days.
00:58:50.690 - 00:58:58.710, Speaker F: We hoping we can keep going with this project. Thank you so much, that's everything for me.
00:59:01.960 - 00:59:10.552, Speaker A: Thank you. No worries. I know live demos are always a little bit tricky and it wouldn't be a live demo without Murphy's Law kicking in at some point.
00:59:10.552 - 00:59:25.904, Speaker A: So thanks for still kind of explaining what you did and hopefully we get to try this out soon directly on an actual kind of full website with the demo. So thank you so much. And with that, we are ready for our last finalized demo for the day.
00:59:25.904 - 00:59:35.010, Speaker A: Without further ado, let's welcome KK for Demoing Phil. Peggy. Feel free to get started.
00:59:37.540 - 00:59:45.830, Speaker D: Here'S. Phil Peggy. And firstly, I'm a minor and fabigi want to solve a problem.
00:59:45.830 - 01:00:00.010, Speaker D: When you want to be a FICO miner firstly you need a count and you use the account to create a minor. Then you hold the account private key. But that's a problem.
01:00:00.010 - 01:00:21.810, Speaker D: How will you do? When you lost your own private key then the collateral in the minor and your reward in the minor will be lost. And if somebody stolen your owner key then your minor can be destroyed. You can do nothing.
01:00:21.810 - 01:00:49.556, Speaker D: And the second problem is that sometimes you will run a minor with some of your friend, but you are friend, but you are not the best friend. And you may not trust each other. So at that time maybe you can use some more sick account to manage the minor.
01:00:49.556 - 01:01:24.660, Speaker D: But there's still a problem when someone in your group, some of a partner, has a better relationship and they may be union to do evil. And actually you can't trust each other. Okay? And the third problem is that when you run a minor and you need more fail for collateral but you can't, the only way you can get the fail is to buy from the exchange.
01:01:24.660 - 01:01:47.740, Speaker D: But somebody hold the field but they don't have the technical to run a minor and they want to find somebody to run mine for them. But these two people cannot trust each other too. So they can't cooperate.
01:01:47.740 - 01:02:15.392, Speaker D: So what's the solution with FWM? FWM provides user defined program with Fair Queen. So when we run a miner, we can use the smart contract address smart contract. As the owner of the miner, we can implement all of the ability to manage minor with the smart contract.
01:02:15.392 - 01:02:40.984, Speaker D: With the smart contract, okay? At that time you won't worry about loss your private key. And if you want to cooperate with some of your friends, you don't need to trust each other, you just need to trust the code in the smart contract. Both of you, all of you can review the process in the smart contract.
01:02:40.984 - 01:03:06.080, Speaker D: In the smart contract, okay? After that you can cooperate each other very well, okay? And in this process we have some different role. One is minor node operator, one is token holder and minor node. And we develop native smart contract which can manage your minor node web rail.
01:03:06.080 - 01:03:46.130, Speaker D: And in the native smart contract which develops with FWN, you will implement all of the workflow, all of the workflow inside the smart contract. For example, when you use the smart contract to manage your minor, the user can deposit to the smart contract, then the smart contract transfer the funds to the miner for collateral. When the miner get a reward, the reward just go to the smart contract and the smart contract just distribute the reward to the deposit account.
01:03:46.130 - 01:04:09.880, Speaker D: Then nobody can stalling the others money here. Okay? So that's what we want to do in Farpeggy. Farpeggi will provide a series of tools to manage the miner and let the people who want to invest in miner through the smart contract directly.
01:04:09.880 - 01:04:21.816, Speaker D: But actually what we do at this weekend, we do not finish everything. We just do some beginning. Do some beginning.
01:04:21.816 - 01:04:37.600, Speaker D: Okay, so we just to do some demo here's. The ferpegi fapagi actually is a playground. Fepeggy will provide a host playground and a smart contract.
01:04:37.600 - 01:05:30.880, Speaker D: Actually, when we want to manage a miner, we have so many functionality to implement. We cannot implement such functionality with the smart contract. If we implement like that, we will need more gas because we will implement so complicated functionality inside the smart contract, okay? So we just make a post playground in which we will do the complicated work and we also implement the unchained functionality inside the smart contract.
01:05:30.880 - 01:05:50.730, Speaker D: And we combine these two and we just release a series of tour to the user. User can just clone our Peggy and to deploy create their actor then to manage their minor. Okay, so let's do something.
01:05:50.730 - 01:06:11.356, Speaker D: So the demo is very beginning part of the fabagi playground. Because actually what I finished at this weekend, it's just the signature part to create wallet and try to create a minor. But actually I still not finished.
01:06:11.356 - 01:06:26.832, Speaker D: To create a minor, schedule is a bit tight. Okay? So here we have three action. The action you can create wallet, you can create a minor.
01:06:26.832 - 01:06:39.432, Speaker D: And you also can do something to your actor. Actor here means smart contract. So actually for the actor, we can compile, we can deploy, we can create.
01:06:39.432 - 01:06:57.410, Speaker D: And after that we can take owner to the smart contract. Okay? So firstly we just need to create a wallet. One, two POS and it means different signature of the account.
01:06:57.410 - 01:07:08.520, Speaker D: Then we get wallet get an account. Then we need to create a minor. Okay, create a minor.
01:07:08.520 - 01:07:25.030, Speaker D: Here we will need the owner account. Also we need a key for actually this is a private key of the owner. Okay, need to set a work address too.
01:07:25.030 - 01:07:46.290, Speaker D: And after that we need to select reduce PRSP proof type for your minor. I will deploy this part code to my local testnet. So I just need to select two key.
01:07:46.290 - 01:08:05.746, Speaker D: Okay? FZ you can say we select the two key as reduced positive type. Then we need RPC Endpoint. Okay.
01:08:05.746 - 01:08:32.338, Speaker D: We need a better talking. Okay, actually we feel but schedule is tight and I don't finish everything. But with Phil Peggy playground actually you can manage your miner with smart contract.
01:08:32.338 - 01:09:08.900, Speaker D: Of course, the smart contract is based on FVM and use the ability provided by the FVM like storage power actor, account actor, minor actor to create a minor and manage them. And when user want to minor just invoke the smart contract method which exposed to publicly. And when you don't want to invest the miner just want deposit to the smart contract, then just wait for the reward to his deposit account.
01:09:08.900 - 01:09:34.310, Speaker D: Even the creator of the miner cannot modify the beneficiary or distribution of the reward in the minor. Okay? And after that, the amount of the user take powering in the smart contract could be minted to be an FTE. And Ft could be transferred to another user.
01:09:34.310 - 01:09:43.814, Speaker D: Then another user can take the beneficiary from the minus reward. Okay, thank you. That's my demo.
01:09:43.814 - 01:09:47.982, Speaker D: Thank you. Amazing.
01:09:48.116 - 01:09:56.734, Speaker A: Thank you so much. I know there was a lot of things that I know you were still trying to make work and given the short time but the last two projects.
01:09:56.782 - 01:10:03.250, Speaker D: Are with my poor English speaker.
01:10:03.670 - 01:10:11.310, Speaker A: You did great. And this is an early sneak peek on DeFi on Fem. This is just really exciting.
01:10:11.470 - 01:10:26.310, Speaker D: Congratulations. It's really a new lending mode to connect token holder and FICO in miner and to let the token holder to get a reward from FICO miner with. Minus future reward.
01:10:26.310 - 01:10:28.458, Speaker D: Yeah. Awesome.
01:10:28.624 - 01:10:33.740, Speaker A: Well, congrats and thank you so much for being our last demo of the day.
01:10:34.110 - 01:10:35.100, Speaker D: Thank you.
01:10:37.390 - 01:10:55.810, Speaker A: All right, with that, we are ready to move on to the stuff that I know all of you have been waiting for. So those are our nine demos when I give a big round of applause to Soulmates Coyotes, data Market, Zksick Catalog, Dow, SOLshare Wallets, Pendow Credlancer and Phil Peggy. Congratulations to all these teams.
01:10:55.810 - 01:11:06.626, Speaker A: And for those of you who are joining us now, you can just catch up with all these projects. Those were just nine demos that we saw, but there's 117 in total, all available now on Ethglobal.com Showcase.
01:11:06.626 - 01:11:19.450, Speaker A: You can filter by this event and see everything that came out of it. All right, so I know the last final five minutes of everybody that is preventing you from falling asleep. Let's go into prizes.
01:11:19.450 - 01:11:30.986, Speaker A: Over $35,000 of prizes are being given away here from the IPFS Ten filecoin team. So let's go right into this. Without further ado, here are our amazing winners.
01:11:30.986 - 01:11:56.870, Speaker A: Soulmates wins the grand prize for the best use of Favm deployment, and then we have two runner ups spend out and Coyos that are going to be receiving $3,000 each for the grand prize of the best Fem deployment. I know there's ten more prizes for the pool category. There's ten teams winning $500 each, but it was not that easy to review 117 projects in two and a half hours.
01:11:56.870 - 01:12:09.866, Speaker A: So the Protocol Labs team will be reviewing all of that later today and early tomorrow. And we'll be announcing those ten runner up winners on Discord and on our Twitter in the next 24 hours. So stay patient on that.
01:12:09.866 - 01:12:21.550, Speaker A: But we have all the other grand prize and category prize winners on top of that. The best use of Fev to enable lending in DFI goes to Pollateral and Minor Dealer. Congratulations to both of these teams.
01:12:21.550 - 01:12:36.050, Speaker A: And then data dows are super exciting. So we have PODP, Catalog, Dow and Ancestry, all as our three recipients for the best Data Dow project, receiving $3,000 each. Congratulations.
01:12:36.050 - 01:12:53.062, Speaker A: And the best use of FM to build building blocks such as DEXes, AMMS or More goes to FNS, which is the filecoin naming system. This is early signs of being able to now get your username finally on this network. So congratulations to all those winners.
01:12:53.062 - 01:13:04.986, Speaker A: Ten more products are going to be announced soon, so please stay patient. They'll all be on the Discord. And if you refresh now your own project page, you will see which prizes you've won.
01:13:04.986 - 01:13:35.426, Speaker A: And the ten prizes will also be reflected on your own dashboard in the project page on E Global Showcase immediately as soon as we get them in. And then a quick note on prize delivery is that all these things are tentative and not final, which means that we will be verifying that everything was done during the course of the hackathon and not before, and making sure that nobody cheated. And these prizes are distributed by the Protocol Labs team, so you will get a separate email from them and not eat Global about the next steps on receiving those prizes.
01:13:35.426 - 01:13:57.678, Speaker A: And there may be an element for KYC and compliance that will be needed here. So make sure that you read that email carefully and you'll get all of those prizes delivered to you in the next couple of weeks. So before we wrap this off, I want to say a few thank yous and really kind of make sure that we put a big thank to everybody that made this event possible.
01:13:57.678 - 01:14:11.642, Speaker A: I want to start off by all 400 of you that stayed up for the last 48 hours making really amazing projects. It's just incredible to see the energy. I know the discord was lit up entirely the entire time, no matter when you joined in.
01:14:11.642 - 01:14:35.786, Speaker A: So thank you so much to all of you for giving us this weekend and building something that you were excited about. So I want to thank all of our judges, mentors, volunteers, speakers and partners that stayed with us with the hackers, making sure everything was great to the judges, talking to everybody for the last 5 hours, getting feedback, giving feedback, and making recommendations on how to improve the projects. This will be not possible without you.
01:14:35.786 - 01:14:48.542, Speaker A: And these are amazing things that are being developed at the early stages. So thank you so much to all of our judges, so many mentors and volunteers that ran so much of this event behind the scenes and helped everybody out. So thank you to all of people here.
01:14:48.542 - 01:15:09.710, Speaker A: Without you, this would absolutely not be a successful event and people would be not doing all these amazing polished demos. And to our amazing speakers for being part of talks, workshops and the summit and sharing all of your amazing knowledge. And now we all get to watch that on demand and catch up on anything that we missed and we're excited about.
01:15:09.710 - 01:15:46.270, Speaker A: And all of our amazing partners from the Protocol Labs team, thank you so much for working with Eve Global to really make this event an incredible success and being the first Feb hackathon out there and giving people early access to all these things. And last but not the least, I want to give a special shout out to Chloe, Kevin, Ivan, Kevin, Kay, Kree, Huichi, Minnie, Anna, Moaz, Luke, Emily, Andrew and Jacob from the ETH Global team who made sure that everything that you are seeing and experiencing went according to, and if not exceeded expectations. And without their help and a lot of sleep deprivation, this event would not be possible.
01:15:46.270 - 01:16:01.234, Speaker A: So thank you. Thank you so much. So, last thing is our finalists, we saw the prize winners, we went through two separate sets of judging with the partners and the main judging, and we called them finalists because if you've never been to a neat global event before.
01:16:01.234 - 01:16:08.102, Speaker A: We really want these events to be about experimentation and learning. And we call them finalists because we don't have a notion of first. 2nd, 3rd.
01:16:08.102 - 01:16:23.898, Speaker A: Anybody who presented here today officially is a first place winner. And as part of that, all nine teams are our winners for this hackathon. And for being that finalist and a winner, eve Global will be giving 700 USDC per member on each of these teams.
01:16:23.898 - 01:16:45.234, Speaker A: So congratulations to everybody here who demoed in addition to all the amazing prizes that all the teams won. But wait, there's more. Not only the amounts in prizes and tokens that you're getting, anybody who submitted a project will be able to redeem this amazing t shirt and you'll all get an email and you'll be able to just put in your email address.
01:16:45.234 - 01:17:07.734, Speaker A: And if you submitted a project, and only if you submitted a project, or if you're a speaker or a judge, you will be able to automatically claim this and we will be able to deliver this anywhere in the world. So watch out for that email on Friday and hopefully we get to see some of you wearing these shirts in real life. And speaking of that, I want to congratulate everybody here and close off this amazing hackathon.
01:17:07.734 - 01:17:29.642, Speaker A: This is officially our last online hackathon for this year. And to wrap things up, this would not be an equal event if we don't talk about what's next. So join us for one last time next week in India as our final and last hackathon of this year happens in Bangalore for ETH, India.
01:17:29.642 - 01:17:39.406, Speaker A: If you're going to be there and if you're here now, I'd love to say hi and meet all of you. And this will be the last event that we do this year. And stay tuned for the 2023 calendar.
01:17:39.406 - 01:18:00.710, Speaker A: We're working behind the scenes to announce all the events that we want to do in 2023 and they'll all be available very soon on Ethglobal.com. So I want to sign off and thank all of you here and I hope all of you get some rest and we'll follow up with all those prizes and the next steps on discord and email soon. Take care everybody, and enjoy some lo fi beats.
