00:00:06.090 - 00:00:11.322, Speaker A: So first of all, thank you for being here. My name is julianistu. I'm the CEO and founder at unlock protocol.
00:00:11.322 - 00:00:40.330, Speaker A: And basically I'm going to show you how to easily integrate memberships into your projects with Unlock Protocol. First of all, what is unlock protocol? So Unlock Protocol is a protocol, it's a system that creates memberships and sell access NFTs membership cards if you want in minutes and you can do that from your website directly. It's useful for membership, subscriptions, media subscriptions, ticketing to events, token, gating, SaaS and more.
00:00:40.330 - 00:00:56.014, Speaker A: It is obviously open source committee governed by a committee of people that have built and are using unlock. There's a bunch of applications, libraries and developer tools that we've built or that the committee has built and uses these days. It was funded in 2018 by me.
00:00:56.014 - 00:01:12.260, Speaker A: I mean, it's kind of a bit weird things to say, but I previously was a founder of a company that was sold to Medium, the publishing platform. And the whole team has a lot of different experience from companies. Like Google, Facebook, GoDaddy and a bunch of others as well as, more importantly than anything else, a global community of people that are using it.
00:01:12.260 - 00:01:25.986, Speaker A: What others have built with unlock already. Event Ticketing. So for example, a bunch of hackathons have used unlock for the ticketing to the hackathon ETH varsha in varsa in Varsha, sorry used it subscriptions to media sites.
00:01:25.986 - 00:01:58.446, Speaker A: There's a couple funny site that you can access by having an NFT in your wallet and it's automatically recurring to access video, software, podcast and many others time based membership for clubs or Dows. There's people that use this where every month, every quarter people have to pay to keep being member of the club, which is pretty cool certification. So it's kind of the idea of an NFT that Expires is useful for certifying that somebody has gone through validation of what they've learned.
00:01:58.446 - 00:02:24.698, Speaker A: Your driving license, if you're from the US expires every five years, it is something that is an NFT that expires and could be used in that example. And we've also seen people build digital collectible NFT PFP using unlock because the time aspect of the NFT is actually very useful to do, for example, dynamic NFTs. There is a pretty large ecosystem of people that are using or that are integrating unlock in many different ways.
00:02:24.698 - 00:02:50.142, Speaker A: I'm not going to name all of the logos here, but just so you know, we're also deployed on eight different EVM networks from Mainnet obviously to Polygon, optimism, Celo, Avalanche, Arbitrum, et cetera, et cetera. There's also a lot of developer tools that make it easy to use on lock. So for example, today we announced an integration with third web, which you probably know of, it's an SDK for building web, three applications.
00:02:50.142 - 00:03:07.750, Speaker A: We also integrated with the graph as you've seen in the previous presentation, et cetera, et cetera. There's also plugins for WordPress for different CMS so you can easily add memberships to these kind of websites. So that's, again, I'm not going to name everything here, but there's a pretty large set of integration.
00:03:07.750 - 00:03:15.958, Speaker A: So let's talk about NFT holders as the new membership model. We've seen NFTs as PFP as collectibles. Obviously that has emerged.
00:03:15.958 - 00:03:34.778, Speaker A: Just so you know, Unlock has been doing NFDS way before NFDS were cool. Since 2018, we've been actually building stuff with NFTs because I do think that NFT as a primitive is a lot more than just a digital image of a monkey or something else. It's actually a new primitive for the Internet.
00:03:34.778 - 00:03:46.990, Speaker A: In the same way that the domain name or a website are primitives for the internet, website can be anything. I do think NFTs can be anything in the same way. So the question is like, well, any NFT could be a membership.
00:03:46.990 - 00:04:03.894, Speaker A: In theory, yes, but in practice, not really. And the reason for this is because most NFTs, for example, are not expiring, they're forever. So if you have an NFT that gives you access to a website, then it means that that website has sold that NFT once and then they need to provide services or content forever.
00:04:03.894 - 00:04:17.666, Speaker A: They're actually not making any more revenue even though they sold the NFT just once. And that is not an ideal model. There's a ton of other reason why base NFTs, ERC, 720 ones are not good enough, but it's actually pretty easy to add stuff to the base, ERC, 721.
00:04:17.666 - 00:04:31.934, Speaker A: And this is actually what we've done at Unlock, so why not any NFT? So, first of all, you go from something that is perpetual like a board ape is something that you have in your wallet forever. It doesn't change to something that is time bound. And as a creator, you want to actually have the idea of recurring revenue.
00:04:31.934 - 00:04:50.018, Speaker A: Being able to charge your users once a quarter, once a month, once a minute, doesn't make a lot of sense. But that's something that you might want to build. When you do this, you go from a one time payment, again at the mint, to a recurring payment, something that allows your business to kind of thrive for the longer term rather than just by doing one thing.
00:04:50.018 - 00:05:03.414, Speaker A: It moves away from the idea of royalties. Royalty, revenue are actually very inconsistent. They're hard to predict, obviously, and they're also, philosophically speaking, not really good, because it means that the only way you can make money is if your fans churn.
00:05:03.414 - 00:05:22.786, Speaker A: If they keep selling your NFTs, that's how you make money, which doesn't make a lot of sense. You actually want very loyal fans that are sticking around, not people that are just hopping to the next project every time so you can make money. We've also built what we call Web 2.5,
00:05:22.786 - 00:05:35.734, Speaker A: the way for people that don't have crypto wallets to actually use membership NFTs. So we have a credit card gateway that actually supports Apple Pay, Google Pay, and credit cards right out of the box for non crypto users. You create an account email password and it just works.
00:05:35.734 - 00:06:00.190, Speaker A: They also get an NFT, which is really interesting in that scenario. We also move from an off chain access verification, which is know these other NFT might have where there's like, okay, we'll just have new seasons every year and we'll change how the application work to an on chain verification. Where on chain, the NFT is marked as expired, which means that your application doesn't have to change every year to support a new NFT or something else.
00:06:00.190 - 00:06:12.962, Speaker A: Obviously you moved from a model where they're all transferable to something where the transfer itself is programmable. You can decide that yes, the NFTs can be transferred, or no, they cannot be transferred, but everything in the middle is also possible. They can be transferred if X, Y, and Z.
00:06:12.962 - 00:06:25.058, Speaker A: And that's actually very useful for a lot of memberships. You may say, oh, the NFT is transferable if that user has had it for a year or for six months, something like this. You also have the concept of, for example, cancellations.
00:06:25.058 - 00:06:42.550, Speaker A: A lot of memberships are cancellable my Netflix account, I can cancel it. And so that's something that the contract supports natively as well. And we move also away from the idea that the contract is as it is forever to something that is upgradable, that can be changed and evolved over time to actually support the membership use case of an organization.
00:06:42.550 - 00:07:10.638, Speaker A: At some point Netflix is getting more expensive, or at some point it moves from a week long to a month long, or that kind of change can happen for every creator as they grow. So basically if you're thinking about adding any kind of membership or monetization to your application, to your projects here during the hackathon, well, unlock is a solution for this. Here's a couple of ideas of how you could use unlock.
00:07:10.638 - 00:07:16.966, Speaker A: You don't have to do any of these, and there's actually a lot more. I was actually just thinking about another idea in the previous conversation. I'll tell you about this.
00:07:16.966 - 00:07:36.842, Speaker A: So as a creator you can use the unlock dashboard. We've built a web UI, a pretty simple dashboard to deploy your membership contract and then configure a WordPress site with a plugin to just token gate content so that only people that have the NFT in their wallet can actually access the content inside of a WordPress site. No code required.
00:07:36.842 - 00:07:46.278, Speaker A: It's just no code tools UI. You copy paste a bunch of things here and there and it just works. You can also create, sell and verify tickets as NFTs.
00:07:46.278 - 00:08:12.250, Speaker A: We've also built a system that you can use to scan QR code with a phone that verify that an NFT is actually indeed a valid ticket for an event. You can enable credit card to get more revenue for non crypto users as well as and this is a new feature that we introduced last week, build what we call checkout URL. So basically URL that you can build and then share with your friends so that they buy your NFT that don't have to go to OpenSea or a specific platform.
00:08:12.250 - 00:08:28.266, Speaker A: You can literally send them a link, say hey, click here and that's how you're going to buy one of my NFT memberships. So far so good as a developer, and I hope that's probably going to be more applicable to most people here. You can directly token gate another smart contract.
00:08:28.266 - 00:08:45.698, Speaker A: You can say, okay, let's say I have this lending protocol and I want to allow only people that have a specific membership to provide capital or to borrow capital from this. And that membership might be a certification of hey, you've gone through a DeFi class, you know how DeFi behaves or works. Now you can borrow money.
00:08:45.698 - 00:08:58.326, Speaker A: You can tokenate features into your application themselves, either on the backend or the front end as a way to monetize this. You pretty all use mobile phones on which there is inapp purchases. That's a way to do inapp purchase in a decentralized way.
00:08:58.326 - 00:09:19.502, Speaker A: Your application can just limit access to some features and then users can buy access to these features directly into your application. Actually, we're going to go quickly in a couple of minutes, build an application that does this. You can also help creators, users of your application monetize their content so that monetization doesn't have to be for your application.
00:09:19.502 - 00:09:31.700, Speaker A: But let's say you build a blogging platform. You might say, okay, cool, I want to allow the people that are blogging on my platform to monetize their content by deploying their own membership contract directly from your platform. Makes sense.
00:09:31.700 - 00:09:43.074, Speaker A: Here are a couple of inspiration. So Lifeyear, another sponsor here, is doing a video streaming protocol. You can for example, do token gated video streaming.
00:09:43.074 - 00:09:58.182, Speaker A: So maybe this here somebody might be recording and say, hey, only the people that have a ticket to the hackathon can watch the stream. And you can do that very easily with unlock and Lifeyear. Similarly, you can integrate Unlock with Lens to create paid subscription on social networks.
00:09:58.182 - 00:10:04.954, Speaker A: There's been a bunch of debates over the last few days. I'm sure you've seen around Twitter charging a dollar for their thing. You can build something like that.
00:10:04.954 - 00:10:25.982, Speaker A: It doesn't have to be a dollar, it could be $1 for a month or something like this using unlock and Lens very easily. You can also integrate with Xmtp, which is a messaging protocol to have a way for a creator to send messages just to their fans using Xmtp. In that example, you can use unlock and midpoint to do paid subscription to access an endpoint in an API.
00:10:25.982 - 00:11:01.994, Speaker A: We just had the graph presentation. I don't know if most of you were here, but you can also, for example, build a graph endpoint that instead of users paying per request, they would have a subscription that allows them to do kind of unlimited access to the endpoint for a day, a week, a month using that kind of system. So building kind of SaaS business models with NFTs and memberships other kind of inspiration, you can create an NFT lending platform where you would leverage two of the features that our smart contract offer, which is the idea of lending and unlending NFTs.
00:11:01.994 - 00:11:13.794, Speaker A: We've actually decoupled ownership from transfer rights in the contract. So you can own an NFT for which you don't have the transfer rights. And so that's a good way to lend some things like I'll transfer it to you, I keep the transfer right now you own it.
00:11:13.794 - 00:11:30.300, Speaker A: But then if I want it back, I can because I have the transfer, right? So I lend it and then I can take it back. You can create a subscription membership management tool for a subscriber that could easily upgrade or cancel their memberships or even sell to someone else on the secondary market. So imagine a secondary market of Netflix accounts or Spotify accounts for example.
00:11:30.300 - 00:11:45.438, Speaker A: You can create wrappers around our contract. So for example, you can enable voting on a Dao based on Wu has a membership, for example, using Tally, which is a pretty cool tool for these kind of things. Of course, a lot more ideas are possible.
00:11:45.438 - 00:12:00.814, Speaker A: Feel free to join us on Discord or our booth to discuss any idea that you have. We're more than happy to guide you in the right direction when it comes to looking at these things. Let's actually go ahead and do a bit of live coding here and obviously that's a bit risky.
00:12:00.814 - 00:12:17.350, Speaker A: If you want to scan this, you'll end up on the code repo, but let me know when you've all scanned the thing. But basically I built and you'll see this in a second, a very basic weather application. So you put a zip code and it gives you the weather in that location.
00:12:17.350 - 00:12:26.250, Speaker A: You'll see the repo here, feel free to check it out and then I'm actually going to go ahead and load the application. So the application is already created. It's a pretty simple react application.
00:12:26.250 - 00:12:50.658, Speaker A: You're pretty familiar with that idea. But there is an index page through which we load a weather component and the weather component itself has a little call to retrieve the weather using an API that's public and basically we'll show the weather in here. There's a button to save my location in the app and that is the feature that we want.
00:12:50.658 - 00:13:00.102, Speaker A: Token gate. Let's actually use the app a couple of seconds so you understand exactly how this works. But it's again a very basic application and you've seen these all over the place here.
00:13:00.102 - 00:13:08.774, Speaker A: So I'm just going to load this in my web browser. And so again, very basic application. I put a zip code.
00:13:08.774 - 00:13:20.426, Speaker A: I'm going to put the one in New York because I know that one I live there currently. Apparently it's night, it's the moon, it's a good weather. Let me actually do I'm on the wrong branch here.
00:13:20.426 - 00:13:26.254, Speaker A: So I'm going to just move to the master branch first. No, it's the main branch. Sorry.
00:13:26.254 - 00:13:34.618, Speaker A: And then I'm going to do this again. So refresh. So putting the zip code call loading the weather.
00:13:34.618 - 00:13:51.542, Speaker A: Now, as you can see, there's a button to remember my location. That button will save my preference so that when I refresh the page, if I refresh here, there's nothing, but when I refresh the page, if I save the location, then it will show the weather in my location. And we want to make this feature a premium feature, a feature that's only accessible for our paying members.
00:13:51.542 - 00:14:04.182, Speaker A: Does that make sense? So I'll do it again. I mean, somebody who knows another zip code. Okay, Mexico, it's night and a bit cloudy right now.
00:14:04.182 - 00:14:13.006, Speaker A: Let's remember that location. Now it's saved. That feature is not token gated, so if I refresh it is there? What we want to do is tokengate the feature so that only people that are paying members can actually do this.
00:14:13.006 - 00:14:20.830, Speaker A: So building kind of an inapp purchase experience. So let's actually go back to the code here. You see we have the save button and that's where most of the logic is going to happen here.
00:14:20.830 - 00:14:33.842, Speaker A: I'm going to switch to the other branch so I can comment the code rather than actually write it down. Write it as I speak because I'm going to mess it up otherwise. So I've got an unlock branch and you'll see in the repo that this branch is available for everyone.
00:14:33.842 - 00:14:47.014, Speaker A: And in that we still have the save button. But the save button has a little bit more information. So first of all, it includes a hook, a react hook, and I assume some of you know about react, but it's a way to kind of trigger events on the page.
00:14:47.014 - 00:15:16.014, Speaker A: And that react hook will basically just implement the unlock protocol calls to the blockchain to ensure that the user has a vetted membership. The first step is like, we configure this hook and we just basically sorry, when we configure the hook, we pass a couple things. So we pass a title, we'll see how it's used on the checkout UI, and then we pass what we call locks, which are the smart contracts that provide the membership as options here.
00:15:16.014 - 00:15:23.806, Speaker A: And I passed this one because it's one that I created earlier. I'll show you how you can deploy your own contract, obviously, afterwards. And it's on the network number five, which is gurley in the testnet.
00:15:23.806 - 00:15:35.346, Speaker A: As I said, we're on Mainet polygon optimism, gnosis chain, Arbitrum sello avalanche binance chain. I didn't forget anyone. So basically, we're just configuring the hook.
00:15:35.346 - 00:15:48.006, Speaker A: And the hook now yields a lot of different functions. So first it yields a loading status that we can use to check whether the application is active loading or this. Then it yields two functions.
00:15:48.006 - 00:15:58.800, Speaker A: One of them is checkout. It's a function that we can call to prompt the user to go purchase a membership. NFT another one is called Authenticate, which is the one that users will click on to connect their wallet to the application.
00:15:58.800 - 00:16:12.814, Speaker A: Then is Authorized, which is a boolean to know if the user actually has access or should have access. And then User, which is the address of the user. Does that make sense? So that really is the bulk of what we're looking for here.
00:16:12.814 - 00:16:25.522, Speaker A: And then basically we have a couple of conditions. The first one is like, if we don't have the user, well, what are we going to do? We're going to ask the user to authenticate, to save their zip code. So if they're not authenticated, we can't really check whether they actually have a valid membership.
00:16:25.522 - 00:16:33.706, Speaker A: So the first step is to ask them to authenticate. So first are good. Once they're authenticated, we'll actually get a boolean that tells us whether they're authorized or not.
00:16:33.706 - 00:16:54.562, Speaker A: If they're not authorized, well, we'll tell them you need to buy premium to actually be able to save sorry, to save your location as part of that application. And then hopefully at that point, if they're both authenticated and authorized, well, in that scenario we'll actually show them the option to save the zip code. Makes sense? Cool.
00:16:54.562 - 00:17:07.562, Speaker A: And that's pretty much it. So I'm just going to start the app and I'm going to refresh here. And at this point, I cannot authenticate to save.
00:17:07.562 - 00:17:18.986, Speaker A: I cannot save because I'm not authenticated. So if I go in New York City, 11217, sorry, I can't save because I'm not authenticated. So what I'm going to click on is this button to authenticate.
00:17:18.986 - 00:17:22.654, Speaker A: Here we're doing something that is very you're familiar with. It's called signing ethereum. You've done this.
00:17:22.654 - 00:17:44.726, Speaker A: It's basically connecting your wallet to an application here. Obviously, I'm using MetaMask as my wallet, but we support on that UI lot of different options including Wallet Connect or Coinbase Wallet, and even something that is unlock accounts. Not going to go into details here, but it's the idea that if you're a non crypto user, you can set up an account with unlock it's an email and password, and at that point you'll be able to pay for the membership of a credit card.
00:17:44.726 - 00:17:49.766, Speaker A: Let's actually go back to MetaMask. It's the easiest thing here. And I'm going to click this button to sign in with yum.
00:17:49.766 - 00:18:00.246, Speaker A: At that point you're pretty familiar with that flow. I'm going to sign a message saying, hey, I authorized this website to know my address. And so I'm just going to sign this message and now the website knows my address.
00:18:00.246 - 00:18:17.298, Speaker A: You can see here that the website knows my address because it was called back with this long query string and the application actually is able to handle this. We're still in the old Cabo San Luca, but if I 11217. I can now click on Remember Location because I have the membership already.
00:18:17.298 - 00:18:24.854, Speaker A: And so now I have access to this. Let's actually go look at the unlock dashboard so I can show you here. Oh, sorry.
00:18:24.854 - 00:18:39.014, Speaker A: It was there. I just refreshed for nothing. Yes, the Myweather inapp purchase membership is a new contract that I deployed and I'm just going to copy that address and put that into the configuration of that contract.
00:18:39.014 - 00:19:02.652, Speaker A: Interesting. I have a bug here because I had this here and I should be able to save because I don't have the membership or I shouldn't have the membership. Let's actually check this is authorized is false.
00:19:02.652 - 00:19:15.908, Speaker A: Which is interesting because if I put something else, it lets me save it. Remember Location. Yeah.
00:19:15.908 - 00:19:37.140, Speaker A: Even though it's not authorized. So I clearly have a bug in my application here. If not is authorized purchase premium? Why isn't it just did someone see the bug? I'm sure there's a stupid thing here.
00:19:37.140 - 00:19:44.180, Speaker A: Oh, that's exactly right. I'm missing the return statement. Thank you.
00:19:44.180 - 00:19:49.640, Speaker A: Yes, thank you very much. So let's actually go back. Okay.
00:19:49.640 - 00:19:58.722, Speaker A: Now I can't save I need to actually purchase the membership. Thank you for your vigilance here. So I'm going to click this button and now we're going to show this checkout UI.
00:19:58.722 - 00:20:07.882, Speaker A: This checkout UI has been pre configured with the smart contract address that I put in. I could have added multiple contracts, multiple addresses. As you see, I've configured to show my weather app.
00:20:07.882 - 00:20:14.686, Speaker A: The icon is customizable. I haven't done this here for the sake of the demo, but I'm actually going to go ahead and now purchase the NFT. So I'm going to click on next.
00:20:14.686 - 00:20:24.958, Speaker A: I can pick the recipient here. I'm purchasing from me, but I could purchase that NFT for somebody else to give them access if they wanted to the application. Click on next again.
00:20:24.958 - 00:20:30.386, Speaker A: Payment method. I'm going to pay with crypto in that example. Obviously, if credit card had been enabled, that would have been an option here.
00:20:30.386 - 00:20:39.862, Speaker A: I'm going to select Pay with crypto. At that point, I see a final confirmation screen that says, hey, it's going to be 0.1 ETH, which is roughly $2.
00:20:39.862 - 00:20:50.042, Speaker A: And I'm just going to pay with crypto at this point. MetaMask is going to pop up. There is a bug here again, it worked an hour ago.
00:20:50.042 - 00:20:59.082, Speaker A: It's pretty annoying. But anyway, so I should be able to buy this membership. Let's actually try I'm confused here about why this didn't work.
00:20:59.082 - 00:21:13.518, Speaker A: Let's actually try this one. I'm going to switch contract here and then just go back to the application and obviously don't have the membership for that one. So I'm going to purchase this one.
00:21:13.518 - 00:21:28.570, Speaker A: I guess I messed up in my contract setup. Next. No, we have a little bug here, so I'm going to have to fix this and see what's going on in my application.
00:21:28.570 - 00:21:45.890, Speaker A: But basically you get the idea. I would be able to purchase the membership NFT, then a membership NFT would be in my wallet and at that point I would be able to access the application because the ease authorized boolean this time would be set to true. Does that make sense? Even though there's a couple of bugs.
00:21:45.890 - 00:21:59.798, Speaker A: Any questions? Yes, you can make the price dynamic. So you can either change it so actually, I should show you this. Let's actually go here.
00:21:59.798 - 00:22:10.106, Speaker A: So this page that I'm showing here is what we call the dashboard. It's a place where as a creator, I can see all of the membership contract that I've created and update them. So yes, I can first change it to be anything I want.
00:22:10.106 - 00:22:17.390, Speaker A: I need to authenticate here. So I'm going to authenticate, so I can change the price to be anything that I want here. So I can click on this button.
00:22:17.390 - 00:22:36.322, Speaker A: And by the way, what's interesting is I can pick the currency here. I'm picking ETH on Gurdy, but I could have chosen USDC or any ERC 20 GRT tokens or any kind of currency that I would want. So for example, if I got a social coin in my committee, I can use that social coin as the base currency for my purchases here.
00:22:36.322 - 00:22:50.146, Speaker A: I'm going to keep to ETH and I can change the price every time. I can also make the price dynamic using what we call hooks. So the smart contract itself has the concept of hooks that can be used to change how the contract behaves in specific context.
00:22:50.146 - 00:22:54.186, Speaker A: So you can say, okay, if it's 02:00 P.m., the price is this much. If it's 05:00 P.m.,
00:22:54.186 - 00:22:57.580, Speaker A: the price is that much. So that's the kind of thing that you can do easily. Yes.
00:22:57.580 - 00:23:09.066, Speaker A: Is there any way to change owner of the contract? Yes. So the contract itself doesn't have an owner. It has what we call managers.
00:23:09.066 - 00:23:30.770, Speaker A: And it can have an unlimited number of managers as well as they can renounce themselves. So I can deploy a contract and then transfer it to you by just making you a manager and then revoking that role for myself. Is there more questions? All right, let's go back to the presentation.
00:23:30.770 - 00:23:39.778, Speaker A: So we're obviously sponsoring the hackathon. There are a couple of prizes for the most inventive use of unlock protocol. So be creative and wild.
00:23:39.778 - 00:23:50.182, Speaker A: First prize is $2,000 in unlock governance token. Second price is 1500 and the third prize is $500. So again, be creative.
00:23:50.182 - 00:23:56.218, Speaker A: I'm going to be one of the judges tomorrow. We also have a team that's here to help. So I'm here.
00:23:56.218 - 00:24:01.086, Speaker A: Angela is on our booth right over there. Chris is in the back here. Patrick in the back as well.
00:24:01.086 - 00:24:04.302, Speaker A: We also have Kelly. Dew and Shelly were in the back. Yes, over there.
00:24:04.302 - 00:24:18.882, Speaker A: So everybody's here, feel free to come ask us any question you have. We're all easily identifiable with unlock hoodies or T shirts. Finally, you can go check a bunch of walkthroughs and tutorials that we have on the website.
00:24:18.882 - 00:24:34.710, Speaker A: We have a pretty active YouTube channel where you can find a lot of different tutorials and guides. So feel free to scan this one. We also have obviously a pretty extensive documentation the text version of the YouTube content.
00:24:34.710 - 00:24:51.310, Speaker A: Feel free to scan that one as well. As I said, we're integrating with a lot of different developer tools. If you use Ethers for managing your contract with JavaScript, we have obviously a little tutorial on how to do this easily and how to deploy, contract or purchase memberships from Ethers.
00:24:51.310 - 00:25:03.682, Speaker A: Finally, we have guides for creators that show them how to do a lot of different things and use integration in no code way. Again, you can scan that one. So for example, you can token gate a calendar with Cal.com.
00:25:03.682 - 00:25:12.646, Speaker A: You can tokengate a video meeting with Huddle Zero. You can use WordPress, as I said earlier, you can integrate this with Guild XYZ. There's actually a native integration there.
00:25:12.646 - 00:25:26.776, Speaker A: You can customize how the membership look on Openc, et cetera, et cetera, et cetera. We're also available on Discord for help. We have actually a couple more team members that are away from San Francisco that can help you.
00:25:26.776 - 00:25:33.272, Speaker A: At 05:00 A.m., when everybody else is asleep, feel free to join Discord. Discord unlockprotocol.com.
00:25:33.272 - 00:25:47.270, Speaker A: When you go there, you will actually get the chance to purchase, I mean purchase the free one, but get your first unlock membership to unlock access to the Discord channel. That gives you another idea of what kind of integrations you can do here. And that's it.
