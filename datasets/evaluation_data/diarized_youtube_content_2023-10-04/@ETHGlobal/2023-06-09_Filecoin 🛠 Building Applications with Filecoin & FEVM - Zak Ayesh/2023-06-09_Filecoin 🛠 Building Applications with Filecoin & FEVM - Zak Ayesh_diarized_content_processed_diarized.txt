00:00:07.370 - 00:00:18.800, Speaker A: Hello, everyone, and welcome to the Hackfs Workshop building applications with Filecoin and Fevm. Joining us today is Zach Ayesh, who will be taking us through the session. And with that, I'll pass it over to Zach to get the session started.
00:00:19.250 - 00:00:21.582, Speaker B: Awesome. Thank you. Hey, everyone.
00:00:21.582 - 00:00:34.514, Speaker B: If you don't know me, my name is Zach Ayesh. I'm a developer advocate with the FBM team and the Protocol Labs. And today I'm going to be talking about building applications on the Filecoin virtual machine.
00:00:34.514 - 00:00:48.280, Speaker B: Specifically, we're going to go over Data dows and back allow our compute over data. And we'll talk about what that means in a bit. So we'll go over like a quick intro.
00:00:48.280 - 00:01:13.086, Speaker B: And while we're doing all this and quick intro to Fem, if you missed some of the other talks, I'll keep it brief. We'll go over the Fem Data Dow kit and we'll introduce back allow and compute over data and maybe show some demo of Backalau working. So what is the Filecoin vision? Right, it's here.
00:01:13.086 - 00:01:48.850, Speaker B: As part of the greater Web three vision. Decentralized Internet. Specifically, Filecoin was created to decentralize data storage, right? So to store the web's data, here's a pretty inspirational quote from CEO of Protocol Labs the properties of the Internet and its technologies define us and our human rights, which is why everyone in Web Three is really enthusiastic about how this technology can really move us forward.
00:01:48.850 - 00:02:07.300, Speaker B: Right? So we're going to be talking a lot about data. You're going to hear this term computer over data, filecoin stores data, information. These are some of the most important things and assets in our era.
00:02:07.300 - 00:02:36.112, Speaker B: Before Web Three, you might have heard of the rise of big data, right? And how data was like the oil of the future. And it's really coming to be true. We're seeing how data could be used for many positive things and developing our understanding of the human genome and health, but can be used for negative things, as in using our data against us to manipulate people and all kinds of other things.
00:02:36.166 - 00:02:36.384, Speaker C: Right?
00:02:36.422 - 00:03:21.988, Speaker B: So I think it's very important that we have a decentralized infrastructure for data in this new paradigm of the world. So Filecoin is trying to bring the foundations for the decentralized Internet with four key areas, right? So the first main one is verifiable storage. So Filecoin launched to mainnet in October 2020, and its original purpose was to create a provable storage market for storage providers to prove that they had data stored in their hard drives, right? So essentially, storage providers would take up deals, storage deals.
00:03:21.988 - 00:03:31.900, Speaker B: They would take the data, they would convert it, and we'll talk a little bit about this process in a bit and provide proofs on the Filecoin blockchain that they are storing this data.
00:03:32.050 - 00:03:32.700, Speaker C: Right?
00:03:32.850 - 00:04:03.520, Speaker B: And this was an important piece of infrastructure that hadn't been created in Web Three yet. We had Bitcoin, which really kicked off this whole Web Three blockchain technology and it was decentralizing value transfer. Then Ethereum came through and said, hey, what if we take this property and generalize it and allow arbitrary code to be written on top of this blockchain? And decentralized logic, like generalized programming logic.
00:04:03.520 - 00:04:42.900, Speaker B: And Fileco came around and said, what if we could take that and also decentralize the storage of large data sets, right? Regular blockchains can't store large data sets efficiently. It costs a lot of money because you're replicating it across all these nodes, right? So we needed a new kind of infrastructure to handle that problem. And coming up next is retrievals, right? Which has still been a work in progress but currently 1 billion weekly retrieval requests are passing through IPFS gateways.
00:04:42.900 - 00:05:08.476, Speaker B: And the next phase of all of this is CDN quality retrieval. There's a project called Filecoin Saturn you may have heard of and that's kind of enabling that and also allowing retrievals on the Filecoin network on top of IPFS. And we have the Filecoin virtual machine now, right? So this is kind of where I come in and what I've been focused on.
00:05:08.476 - 00:05:24.530, Speaker B: But this allows smart contracts on top of Filecoin. So what I mentioned earlier, with smart contracts on top of Ethereum, we can do that on top of Filecoin. And this allows us to do what we call computation over a state and we'll talk about that in a second.
00:05:24.530 - 00:05:41.396, Speaker B: And finally we have computation over data or back allow and we'll talk about that in a SEC as well. So you heard me say computation over state. Computation over data.
00:05:41.396 - 00:06:50.968, Speaker B: What is computation over state? So, as you know, the Filecoin virtual machine delivers on chain programmability to the Filecoin network, much like Ethereum. But the way it was built is actually quite different, right? So the Filecoin virtual machine was built using WASM WebAssembly and the Ethereum virtual machine is actually virtualized on top of that. Kind of like a hypervisor on your computer, right? So if you're running a Windows machine and you want to run Mac OS or Linux on top of Windows, you'll probably download a hypervisor, a virtual machine and run that on top, right? And so the Filecoin virtual machine is kind of built in that way, right? So theoretically, any kind of virtual machine could be virtualized on top of the FBM, right? And so the first thing that was built on top of it was the Fevm.
00:06:50.968 - 00:07:14.230, Speaker B: And the reason for the EVM is because it is the most widely used blockchain and web three virtual machine environment. And so Filecoin could take advantage of Solidity foundry hard hat all the tools and ecosystem that has developed around the EVM. And Solidity, that's pretty robust today.
00:07:18.360 - 00:07:18.772, Speaker C: Right?
00:07:18.826 - 00:07:41.064, Speaker B: So you can think of it as kind of stack of layers, right? So at its base, Filecoin was and is still designed around storage, right? So storing large data sets. And on top of that, we have the FVM, which allows us to compute over the state of this filecoin blockchain.
00:07:41.112 - 00:07:41.612, Speaker C: Right.
00:07:41.746 - 00:07:53.144, Speaker B: And what is that state? Well, we'll go on that a bit, but essentially deals and on top of that we have what we call computation over data, which is bacalau.
00:07:53.272 - 00:07:53.720, Speaker C: Right.
00:07:53.810 - 00:08:28.936, Speaker B: So you can think of computation over state as like, okay, this is the computation over the blockchain state or the storage deals, what are the information? We can retrieve that and we can compute over that. While computation over data is like computation over large data sets are what data the storage providers might be holding actually is. So yeah, again, computation over state, computation around the metadata of the data stored on filecoin.
00:08:28.968 - 00:08:29.212, Speaker C: Right.
00:08:29.266 - 00:08:58.420, Speaker B: So you have the storage providers, they've got their data, but the deals themselves, the ones that bind the storage providers, what they have to provide proofs for or else they get slashed, is the state that we're talking about. So essentially the storage deals and these storage deals can't be found on any other blockchain, which is what makes Fevm very unique compared to other EVM chains. I see a question here.
00:08:58.420 - 00:09:06.730, Speaker B: Was wondering if we'll get some info over data dials and how we can do storage deals. Yes, just about to talk about that, actually. So great question.
00:09:06.730 - 00:09:30.376, Speaker B: What are deals? Right, that's the next slide. So storage deals are the state on the filecoin blockchain that determine how your data is going to be stored with these storage providers, right. How long that's going to be stored, how long this will cost, how much will be paid in yelf, right.
00:09:30.376 - 00:09:42.470, Speaker B: Collateral, all kinds of information. Well, let's just dive into it and we can look in and see what that looks like. Right, so we're going to go to Phil Fox here.
00:09:42.470 - 00:10:19.490, Speaker B: This is actually pointing to hyperspace, which is now deprecated. So we are going to go to Phil Fox the manual way, right, and currently we are on main net, which we could go to, but we're going to go to Calibrationnet as Calibrationnet is the main supported testnet of the filecorn blockchain. Right now we just switched from hyperspace, so you may see some things still being switched in documentation and some of the kits, but most everything should be switched over by this point.
00:10:19.490 - 00:10:27.600, Speaker B: And if we go here and just tab blockchain, you'll see an area called deal list.
00:10:27.670 - 00:10:28.290, Speaker C: Right.
00:10:30.100 - 00:10:34.192, Speaker B: And these are those active storage deals that I was talking about.
00:10:34.246 - 00:10:34.752, Speaker C: Right.
00:10:34.886 - 00:10:42.912, Speaker B: You can find this on mainnet as well. I'm just going to go over Calibration since that's what most developers in the socket are going to use before they go into mainnet.
00:10:43.056 - 00:10:43.460, Speaker C: Right.
00:10:43.530 - 00:10:52.264, Speaker B: So we can just click on any random deal ID right here and we'll get some of that metadata that we can compute over or do that computation over state over.
00:10:52.382 - 00:10:52.808, Speaker C: Right.
00:10:52.894 - 00:11:10.876, Speaker B: So you have the deal ID, just a basic ID to identify the deal, create time when the deal was created, at what block. You'll see these two important pieces of data. They might look like jargon, the message and PCID.
00:11:10.876 - 00:11:35.450, Speaker B: We'll go over those in a second if the deal is verified with Fill Plus. If you're not familiar with Fill Plus fill plus is a program that allows people to, if they have very important data that they want stored, give storage providers an incentive to store this very important data. I highly suggest checking it out and if we have some time at the end, I can go over it.
00:11:35.450 - 00:11:53.324, Speaker B: But yeah, we have the PCID here, which is kind of like the root hash of the data. We'll talk about how that's computed here in a minute and the client, the person requesting the data, the provider, and how much collateral each person has set up.
00:11:53.362 - 00:11:53.564, Speaker C: Right.
00:11:53.602 - 00:12:05.730, Speaker B: So each person needs to put up some collateral on testnet. This isn't necessary. The client, you'll see the client provider in this image has zero collateral stored at the bottom here.
00:12:05.730 - 00:12:21.904, Speaker B: But the client needs collateral in order to prove that they can pay continuously for that storage deal over time. And the provider needs to put up collateral because if they go offline or stop proving that they have the data stored, they get slashed for that collateral.
00:12:21.952 - 00:12:22.212, Speaker C: Right?
00:12:22.266 - 00:12:41.990, Speaker B: So this gives them an incentive to make sure they stay honest because you're not going to want to lose that money. So that's kind of what deals look like. We also have this idea of the comp P, our PCID that I mentioned earlier, right.
00:12:41.990 - 00:12:58.570, Speaker B: So I said you can think of it as like a root hash. It's a little bit more complex than that because it's not just like taking the data through a hashing algorithm. We first convert any data that we want stored on the file coin chain into what we call a car file.
00:12:58.570 - 00:13:29.538, Speaker B: The car file is then padded to make it the proper size and a Merkel dag is created, which is very similar to our merkel tree if you're familiar with Bitcoin or Ethereum. But instead it's a Dag, a directed acyclic graph. And essentially we create this tree and it hashes all the way up to this comp PCIB, right? So it's a little bit more involved and it has a little bit more data in it than just a hash.
00:13:29.538 - 00:13:49.180, Speaker B: But that's essentially what you can think of it as it's a representative of the data being stored. Right, and so into that deal making flow. Originally, deal making flow was a pretty manual process.
00:13:49.180 - 00:14:15.470, Speaker B: A client would have to find what storage providers are wanting, like what their minimum asks are for deals. Like maybe it might be a certain size deal, a certain amount of price or length and some messages would be sent on chain to the on chain APIs. Eventually, let's say a deal is made, a storage provider would take up that deal proposal.
00:14:15.470 - 00:14:29.158, Speaker B: What we call it would be signed by the client. The provider would download the data, make sure that everything matches, send a message on chain called Publish Storage Deal and that deal would be live.
00:14:29.244 - 00:14:29.746, Speaker C: Right.
00:14:29.868 - 00:15:01.778, Speaker B: And that was basically the deal making flow and that was all fun and nice, but it was kind of limited. We just had those basic APIs and now we have the Fem, which allows a compute over state and allows us to build all these kind of awesome crazy applications on top of it. And so that's really allowed us to take deal making to another level.
00:15:01.778 - 00:15:20.566, Speaker B: Right, so we'll go over it in a second. But there is a client contract that allows us to mint an event through a smart contract on the filecorn blockchain and that allows storage providers to take up deals that are coming directly from smart contracts on chain.
00:15:20.598 - 00:15:21.226, Speaker C: Right.
00:15:21.408 - 00:16:03.960, Speaker B: And with this you can create all kinds of interesting applications like decentralized verifiable computation with Baccalau, which we'll talk about, gated owls, which is coming up next, sector auctions, quality of service improvements, storage insurance, perpetual source contracts, all kinds of fun things on the platform blockchain that we are excited to see hackers build during this hackathon. So I'm going to go over this Data Dow kit real quick. I think we have a question.
00:16:03.960 - 00:16:22.566, Speaker B: So is the proving tree the same as the merkel tree? It's very similar. So I'll go back real quick, image right here. Essentially it's basically a merkel tree.
00:16:22.566 - 00:16:35.066, Speaker B: If you go into the file Coin spec, you can learn a little bit more about it. It's a little bit more complicated than that because they consider it a dag instead. So it can go both ways.
00:16:35.066 - 00:16:53.094, Speaker B: And this, I think, is part of IPLD in a planetary layered, linked data like format to make it a little bit more generalizable. But essentially, yeah, it's like you can think of it very similarly to that and in most cases there may even be that.
00:16:53.132 - 00:16:53.720, Speaker C: Right.
00:16:54.330 - 00:17:17.546, Speaker B: So I hope that answered your question. All right, so just going to give you a brief look at the Fevm Data Dow kit. So we're talking about data dows, right? I mentioned them as one of the possible use cases.
00:17:17.546 - 00:17:18.914, Speaker B: We've got a question on it.
00:17:18.952 - 00:17:19.540, Speaker C: Right?
00:17:20.150 - 00:17:22.046, Speaker B: So what do we mean by a Data Dow?
00:17:22.078 - 00:17:22.226, Speaker C: Right?
00:17:22.248 - 00:17:54.694, Speaker B: If you don't know what a Dow is, it's a decentralized autonomous organization, right? Essentially, we're taking voting structures and organization and putting them on chain and kind of organizing a decentralized group of people together that way. And kind of what we mean in the file coin network when we say data Dows and Data Dows are still kind of a term that's being defined industry wide. Is Dows based around data being stored in the storage provider?
00:17:54.742 - 00:17:55.290, Speaker C: Right?
00:17:55.440 - 00:18:17.940, Speaker B: And so on. The Data Dow kit, what we have is a couple of example contracts and these are based actually on an old colleague of mine, Patrick Collins, you may be familiar with him. He did a great Dao tutorial which I actually link to in the README here, that if you want to go more in depth on how Dows are built, I highly suggest you watch.
00:18:17.940 - 00:18:30.702, Speaker B: But we have a couple of contracts in this kit. I did a governance token, a governor contract, a timeline contract, and what I call the Dow deal client.
00:18:30.786 - 00:18:31.420, Speaker C: Right.
00:18:32.030 - 00:18:46.714, Speaker B: So remember how I said earlier we had the old method and still viable method of creating storage deals and a newer method which is creating storage deals for storage deals via smart contracts?
00:18:46.762 - 00:18:47.310, Speaker C: Right?
00:18:47.460 - 00:19:11.330, Speaker B: And so this deal client is kind of a standardized way to do that. It has the struct for the deal request that we can put in and essentially amidst an event deal proposal create that storage providers can listen to and pick up the deal from the smart contract.
00:19:11.410 - 00:19:12.038, Speaker C: Right?
00:19:12.204 - 00:19:30.214, Speaker B: So essentially what this Dow kit allows you to do is deploy this Dow deal client with these governor contracts wrapped around it so a Dow can vote on what data they want to request to be stored on the filecoin blockchain.
00:19:30.262 - 00:19:30.522, Speaker C: Right?
00:19:30.576 - 00:19:51.906, Speaker B: And this is basically a very bare minimum Dow template. And I'd really like to see people over the hackathon build on top of this, maybe build some more complex functionality on top, build some more tools. We're hoping to see things like storage renewal, like automation tools to be built on top of.
00:19:51.906 - 00:19:59.038, Speaker B: This would be great to see. Right, so that's kind of the data Dow kit. Quick overview.
00:19:59.038 - 00:20:20.090, Speaker B: If you want to learn more, I suggest check it out. Please feel free to make some PRS. We just had someone make a PR here on a fix, right, so, yeah, so we have a question on a specific contract.
00:20:20.090 - 00:20:44.134, Speaker B: Let's see line 70. Yeah, this is very specific to the Governor contract code on line 70 here. Line 75 writes, super proposed.
00:20:44.134 - 00:21:06.010, Speaker B: All right, so this is calling so Solidity allows inheritance in it, right? So we're actually inheriting and Governor contract to open Zeppelin contract standards. And this is calling that with some low level stuff. The call data is like the low level data that we're passing in the description is like the actual proposal.
00:21:06.010 - 00:21:30.822, Speaker B: Again, if you want to learn more, I don't really have time to go too in depth into this in this talk. But I was just going through and going through those tutorials that I linked to in this README in here. So if we go here, you'll see I have a video and the original repo made by Patrick Collins here that this is based off of, that we're building off of.
00:21:30.822 - 00:21:51.150, Speaker B: And I highly suggest that you check these out and you can learn a little bit more about the specifics of how these contracts work. Right, and here is a link tree to some other FBM resources. A link tree.
00:21:51.150 - 00:22:10.294, Speaker B: We have the starter kits, so the Fevm Hardhat kit and the Fevm Foundry kit. If you have a preference for either hard hat or foundry and solidity development, and a Cod starter kit, which we're about to talk about what cod is compute over data. But that's kind of a wrap around what we'll talk about here.
00:22:10.294 - 00:23:04.122, Speaker B: Lily Pad in a second, right, so we've talked about compute over state and we talked about FBM and we've gone a little bit over the data Dow kit, right? But I want to go over a little bit with some of the time we have left over to back Allow and compute over data. So basically back Allow is a network of open compute resources, open to solve any data processing workload, right. While blockchains are more resource constrained because of their architecture, backalau is more open while still trying to maintain a level of decentralization, right? And so together they kind of complement each other's weaknesses where Fem is maximally decentralized and allows computational overstate.
00:23:04.122 - 00:23:24.514, Speaker B: Back Allow maybe not quite as decentralized, but allows a lot more heavy compute on top of it. By the way, if you don't know what Baccalau means, it's a salted cod dish in Lisbon. And I think that's a callback to all of the Web Three work that's been done in Lisbon, Portugal.
00:23:24.562 - 00:23:25.160, Speaker C: Right.
00:23:25.770 - 00:23:45.626, Speaker B: So again, as a recap at the base layer, we have storage providers storing data in their hard drives. And then we have the deals that live on the file clone blockchain. And that's where we have the FDM and computation over state, which allows us write logic over those deals.
00:23:45.626 - 00:24:05.792, Speaker B: And now we have computation over data which allows us to take heavier data, which may be that data is stored with the storage providers or really anything and do computation over that. Right? So we've kind of already talked about what this is. We have computation over state, computation over data.
00:24:05.792 - 00:24:36.902, Speaker B: Not going to go over too much since we're short on time, but a cool baculau project is Project Lilypad, right, which is kind of like the bridge between FVM and baculau. And so we can check out their GitHub at Slash. Lilypad colleague Ali, she's mainly been working on this.
00:24:36.902 - 00:25:02.110, Speaker B: And I highly suggest you check out developer Ali on Twitter or as you see here on GitHub. And everything you need to know is in the README of these. But essentially what's going on in Lilypad is that you have a user contract that inherits another contract called Lilypad Events Contract, which is all in that repo.
00:25:02.110 - 00:25:51.680, Speaker B: And with that inheritance you can call a function that will emit an event, right? And Bakulao over here on the right is always listening to this event via the Lily Pad bridge daemon, right? And once it hears that know, the event will hey, like in the example of Lilypad, one of the main examples is you can the event that says, hey, call stable diffusion with this prompt. Here's the payment for the event and please do this computation and return the result CID like store this data on IPFS and return the result CID on chain in this contract. Right.
00:25:51.680 - 00:26:07.262, Speaker B: So this is a demo of it working. Ali going through the contract. We don't have time to go through that, but essentially a simple call, an event is emitted.
00:26:07.262 - 00:26:21.880, Speaker B: You can find this demo on their README. So back here, the Backalau project, Lilypad, it's all here. So I highly suggest checking out the README and going through this as well.
00:26:25.630 - 00:26:25.994, Speaker C: Right.
00:26:26.032 - 00:26:51.150, Speaker B: And there's also Waterlily, which is live on FBM, Mainet, which is trying to solve the kind of ethical concerns around AI generated art, which this kind of does it while attributing the original artists and down the line can be used to actually pay them for the work they use to train the AI.
00:26:54.140 - 00:26:54.600, Speaker C: Right.
00:26:54.670 - 00:27:29.610, Speaker B: And there's all kinds of uses that you can find for Lilypad, including basically a generalized Oracle use case where Lilypad can be used to retrieve and do computational data that we need then to put on chain VRF via Drand. There's all kinds of EI. The default use case they have is, again, stable diffusion, running on Baccalau and returning the CID of that generated image on chain and much, much more.
00:27:29.610 - 00:27:55.306, Speaker B: A couple of questions here. Can you please send me your discord name? Yeah, you'll be able to find me after this. I'll try to head to the hack FS discord for filecoin, and maybe I can answer your specific question here.
00:27:55.306 - 00:28:04.800, Speaker B: Matt, have can we have the data stored in filecoin and use that data to try some AI models through?
00:28:05.810 - 00:28:06.560, Speaker C: Yes.
00:28:11.720 - 00:28:23.480, Speaker B: If yes, what is the use of backalau in it? As data would only be stored. So backalau is actually generalizable compute. It doesn't actually have to be data stored on filecoin only.
00:28:23.480 - 00:28:37.372, Speaker B: But that is one use case you can do with it is connected through to this filecoin storage providers. So I meant to train some AI models. Yeah, if you'd like.
00:28:37.372 - 00:28:55.520, Speaker B: I think the Back allow, it's very generalizable. If you check out the general backalau docs, I think they show more how to run it. I'm not with the Backalau team, so I haven't actually run Back allow, but I've called it from Smart Contracts.
00:28:55.520 - 00:29:02.900, Speaker B: But yeah, they have like a stable diffusion running in it. So I assume you could do that. Yep.
00:29:02.900 - 00:29:44.636, Speaker B: Is there any YouTube video guide on how we can create customized data dow on top of Fevm data dow kit and store the data on the storage? So, again, for that, for the data dow kit, I highly recommend you check out Patrick Collins video, which I link here. And in this video, he kind of goes over DAOs in general because most of the data dow problem is around the dow itself and how you're going to organize it and how you choose you want to do it. And DAOs can be very intricate.
00:29:44.668 - 00:29:44.864, Speaker C: Right.
00:29:44.902 - 00:30:12.924, Speaker B: Which is why I linked to this. I think it's a very good overview video but there's also the client contract, which has its own kind of kit, which is the core unique thing that's on filecoin. So if you want to learn more about how deal making works on filecoin, you can check this out and I'll provide the link.
00:30:12.924 - 00:30:28.990, Speaker B: It should be in that link tree that I provided earlier, but I'll provide the link here, and this is kind of how deal making works. And I think I'm on time. Yes.
00:30:28.990 - 00:30:35.676, Speaker B: Thanks for the presentation. That's my Twitter handle. And that's ali.
00:30:35.676 - 00:30:53.670, Speaker B: If you want to get in contact with more of the Bacalau side of things. I hope you all found this presentation helpful and it motivates you to build some cool applications using Datadao as our Bacalau on the Fevm. So thank you.
00:30:54.520 - 00:30:55.040, Speaker C: Cheers.
00:30:55.120 - 00:30:58.950, Speaker A: Thank you, Zach. Thank you for the great presentation. And thank you, everybody, for joining today.
00:30:58.950 - 00:31:03.964, Speaker A: Yeah, that concludes this presentation. So, yeah, hope you have a great rest of the day.
00:31:04.162 - 00:31:05.000, Speaker B: You too. Bye.
