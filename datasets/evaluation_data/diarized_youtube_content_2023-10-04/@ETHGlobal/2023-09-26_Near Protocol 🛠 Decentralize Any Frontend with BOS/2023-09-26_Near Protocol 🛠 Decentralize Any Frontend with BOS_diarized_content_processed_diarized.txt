00:00:07.450 - 00:00:12.442, Speaker A: Hello everyone. My name is Boris Polania. I work for near Devop.
00:00:12.442 - 00:00:41.178, Speaker A: We're basically near the developer Dao and I will talk about today, about the boss. So let's talk a little about that. The blockchain operating system is basically a common layer for browsing and discovery web experiences, right? What this means is this is a decentralized front end platform.
00:00:41.178 - 00:01:04.386, Speaker A: It's like instead of deploying to Versaille or whatever, you just deploy here, it's 100% decentralized. So you cannot be censored, you cannot be taken down and is based on react components. And that's basically what the boss actually does.
00:01:04.386 - 00:01:20.614, Speaker A: So I will show a little the technology stack here. So the Boss is like the base layer and you can use any blockchain on the back end. It doesn't have to be near.
00:01:20.614 - 00:01:50.714, Speaker A: You can connect to Ethereum or any EVM compatible that can be called through either JS. And then you can have the data platform, the discovery platform, and your components that you develop, they sit on top. So what is a component? Basically, these are small applications and you develop and react like and once you develop, you just deploy it to Boss and the boss do the composing.
00:01:50.714 - 00:02:03.540, Speaker A: So you can basically put it available on the network. There are so many DevTools. We have the Ides, we have the open source, we have the documentation, and that's where I'm heading now.
00:02:03.540 - 00:02:19.818, Speaker A: So let me see, let's talk a little about the hackathon. We have a $10,000 Bounties, $10,000 in Bounties. We have one first place of one, two second places of two, and three second places, third places of one.
00:02:19.818 - 00:02:45.810, Speaker A: The only thing you need to do is to deploy a component in POS. The backend doesn't have to be near, just the component has to be deployed on Boss. I will show a couple of samples later of components deploy on Boss with the backend, on near, with the nearest smart contracts, or with components based on deploy in other blockchains in Ethereum.
00:02:46.230 - 00:02:46.738, Speaker B: Okay?
00:02:46.824 - 00:03:21.934, Speaker A: So first I will give you a general architecture of how a Boss application works. So the main component is the website. And then you will have multiple components, right? In this specific image, the text box is called the components widget, the time ago widget, the comment everything is a widget, right? So that's how you create your website on your front end, on Boss, I will go a little more with a little more.
00:03:21.934 - 00:03:35.040, Speaker A: So I will show you a little more the basic widgets. We have created some widgets so you can easily use for everyone. So the basic widget, this one is easy to see.
00:03:35.040 - 00:03:56.546, Speaker A: As you see, it's just declaring some variables. And this is running on Boss. What you're seeing here, this is running on Boss, right? So you just create some variables and then you call it the same way you will call Information or in React, right? So if we change the Anna for Boris, it would update automatically.
00:03:56.546 - 00:04:03.562, Speaker A: So this is the kind of widgets you can develop. This is very basic. I will show later.
00:04:03.562 - 00:04:15.146, Speaker A: There are many compile. Everything that is deployed in Boss is open source and can be forked. So these are just the basic we created when we developed the documentation.
00:04:15.146 - 00:04:25.722, Speaker A: So we have an image uploader. We have one that manages markdown overlays. Let me show you how the overlays.
00:04:25.722 - 00:04:31.074, Speaker A: So basically this standard overlays. So you will see more. But these are the basic ones.
00:04:31.074 - 00:04:38.626, Speaker A: But I don't have much time so I want to go to the basic how do you actually deploy component into Emboss, right?
00:04:38.728 - 00:04:41.926, Speaker B: So you will let me see in.
00:04:41.948 - 00:04:51.750, Speaker A: The documentation you will see if you want to get this, you want to get the links. You will get the links to the online Ides or the local IDAS. So we have online IDs.
00:04:52.170 - 00:04:53.810, Speaker B: Let me remove this way.
00:04:53.980 - 00:05:07.278, Speaker A: So this is basically you can code your component on the left side and then you can see the preview of what you're doing. It's very easy, very standard. So that's it.
00:05:07.278 - 00:05:15.594, Speaker A: And when you're ready, you just go ahead and publish. You click here and publish. It will show you the transaction.
00:05:15.594 - 00:05:23.058, Speaker A: You will save data. Since I didn't change data, it won't ask for gas. But if I were to change, I'll show you later.
00:05:23.058 - 00:05:27.540, Speaker A: It will ask for gas. For gas. As you know, near is a layer one.
00:05:27.540 - 00:05:36.150, Speaker A: It's very low gas, very fast. So it will cost way less than a cent to deploy. It depends on the size.
00:05:36.150 - 00:05:55.406, Speaker A: But many of the basic components you will do at the beginning will be very low gas. But you can also use your local IDE, right? You can use Visual Studio or you can for example use I don't know cursor. So let me show you how.
00:05:55.406 - 00:06:15.410, Speaker A: You just need to install the plugin. You just find it and it's there either in Course or in Vs. And you just create a new global New York JSX.
00:06:18.810 - 00:06:19.894, Speaker B: You put it there.
00:06:20.012 - 00:06:31.654, Speaker A: Let's take some basic Boss, some basic code here. So we start somewhere, put it here and then let's ask the Chat GPT to, I don't know, add a drop.
00:06:31.702 - 00:06:46.400, Speaker B: Down drop down, drop down menu. We wait for it and then you just wait for it.
00:06:49.410 - 00:06:54.720, Speaker A: Sorry about that. So you just copy paste it or whatever you want to do. Or you can cut it yourself, whatever.
00:06:54.720 - 00:07:10.002, Speaker A: So you put it here, you save it and you publish it. Or you can cancel. You can see the preview here in the same you will see it here and then you just go ahead and publish the component here.
00:07:10.002 - 00:07:16.322, Speaker A: It will ask it's a new component. It will ask for gas. So you will have to have a new wallet or my near wallet.
00:07:16.322 - 00:07:21.338, Speaker A: They are very easy to set up, standard wallets, nothing crazy there.
00:07:21.504 - 00:07:21.882, Speaker B: Sorry.
00:07:21.936 - 00:07:36.640, Speaker A: I'm assuming you know some basic crypto. So once it's approved, it will tell me here that it's ready and then I will just go ahead and find my.
00:07:39.570 - 00:07:40.510, Speaker B: Global.
00:07:42.290 - 00:07:43.310, Speaker A: Discipline.
00:07:43.810 - 00:07:44.800, Speaker B: New York.
00:07:48.370 - 00:07:55.040, Speaker A: What's the name? Eat global width? I cannot see it.
00:07:57.290 - 00:07:58.086, Speaker B: I lost it.
00:07:58.108 - 00:08:00.086, Speaker A: I don't know what's oh, it's in the other one.
00:08:00.108 - 00:08:07.586, Speaker B: So it's called Ape Global New York City. Anyway, see, so that's here city tag.
00:08:07.618 - 00:08:17.020, Speaker A: To find it, I cannot find probably it's a little slow, the internet, but it should be published and then you will be able to see it.
00:08:17.470 - 00:08:18.220, Speaker B: So.
00:08:21.790 - 00:08:22.780, Speaker A: Try to.
00:08:25.390 - 00:08:27.260, Speaker B: Try to see what?
00:08:27.870 - 00:08:34.276, Speaker A: In case the internet is a little.
00:08:34.298 - 00:08:39.770, Speaker B: Slow, let's try again. Okay.
00:08:42.140 - 00:08:43.752, Speaker A: So let's try if it's not.
00:08:43.806 - 00:08:46.010, Speaker B: Well, never mind.
00:08:49.040 - 00:09:11.090, Speaker A: It'S a little slow but then here you will find and you will see it. This is the one I use for the workshop. It's a little slow so it will show here and you will be able to see the source and you will see it live here.
00:09:11.090 - 00:09:38.344, Speaker A: So basically that's how you deploy a component into Boss. So basically you can do it on the online ID, you can do it on your BS based IDE and then you just publish it. That's basically what we are asking for the submission, right? You deploy a Boss component and oh, there's another part.
00:09:38.344 - 00:09:40.730, Speaker A: So then there's two ways you can do this.
00:09:44.720 - 00:09:46.620, Speaker B: If you are here.
00:09:46.770 - 00:10:06.130, Speaker A: So you can interact with near smart contracts here for example, or you can interact with other Ethereum smart contract, right. So for that you can basically use Ether. Yes.
00:10:06.130 - 00:10:14.452, Speaker A: And then you set up your network. It has to be EVM compatible. So you basically set up the Ether yes.
00:10:14.452 - 00:10:25.832, Speaker A: And you just call it the same way you will use their Ether yes, in react. So this is the one that connect to Lido. As you see, it's a standard.
00:10:25.832 - 00:10:40.076, Speaker A: Then you just call the Ethergs, you set the network, you get your approvers, it's the same thing. So just use as Ethergs was working there. So you just don't need to add anything else.
00:10:40.076 - 00:10:48.544, Speaker A: Just use either GS to connect the smart contracts. Or you can see this is a basic component. You will see it here.
00:10:48.544 - 00:11:09.380, Speaker A: If you just call Ethers, it's pre installed, you don't need to import it or anything else. And then you can set up the network. If you don't want to use Ethereum, you want to use other EVM compatible, you just change the network and ID and whatever you need and you just Concode smart contracts in another network.
00:11:09.380 - 00:11:36.610, Speaker A: Or you can use Nearer smart contracts, it will be better, simpler, faster, but you are not tied to use it on near smart contract. Talking with near smart contract and Rust is beyond the scope of this one. But this presentation but if you stop by and you're new to Ross, new to smart contracts in near, just come and we can help you with that.
00:11:36.610 - 00:11:54.020, Speaker A: And then if you have owner back end, you don't want to do the back end. I don't know. In any blockchain it's still valid, right? What we're asking for the hackathon is to have the front end working on Boss.
00:11:54.020 - 00:12:07.940, Speaker A: If you go to the application page, you will see many components. Every single component can be forked, so you can reuse the code. You can see the examples.
00:12:07.940 - 00:12:22.108, Speaker A: For example, one inch has a component running on Boss when you can do the swap. So this is a one inch component. You can easily get the fork it and use the code as you need it.
00:12:22.108 - 00:12:37.808, Speaker A: Or you can go through all the long list of components that we have. You see here, there are many components here. You can just check what other people are doing and reuse them as you wish.
00:12:37.808 - 00:12:45.012, Speaker A: So that's the basic idea. That's what we want for the hackathon. We are there.
00:12:45.012 - 00:13:09.736, Speaker A: If you need some support in deploying Boss, just let us know. If you need guest money, if you need some near to start deploying, just ping me on Twitter and we send you a code. We will give you more than enough because Boss is mostly Mainet, so you can use a fafset.
00:13:09.736 - 00:13:22.080, Speaker A: You need some actual near. So pick me and I will send you some near so you have enough to be able to code during the hackathon. And as I mentioned before, there are $10,000 in prices.
00:13:22.080 - 00:13:42.224, Speaker A: Yeah, stop by and beyond that. Having your front end deploy in a decentralized platform is what this is all about, right? Like real decentralization, not having to rely on centralized entities. I think you should give it a look.
00:13:42.224 - 00:14:01.772, Speaker A: This is working and people, so far you will see there are many, many components and a lot of projects and jumping into this because they have the benefits of not having to relay. And at the end, even cost wise, you will see it's more convenient than the centralized options. So, yeah, give it a try.
00:14:01.772 - 00:14:15.548, Speaker A: We are on the booth. We can do any technical support you need, help you with the first component, help you with the near you need to deploy, whatever you need. Yeah, that's it.
00:14:15.548 - 00:14:23.250, Speaker A: I leave this here and in case you need it and yeah, I hope to see you there. You can get some swack too, and yeah, see you there. Thank you.
