00:00:07.370 - 00:00:20.160, Speaker A: Hello, everyone, and welcome to the Hack FS Workshop universal connectivity with Lib PTP. Joining us today is David HughesBy and Prithi Shahi, who will be taking us through this session. And with that, I'll pass it over to them to get this session started.
00:00:22.050 - 00:00:31.030, Speaker B: Hello everybody. Welcome to the workshop for learning how to use Lib PDP. This is associated with the ETH global hack effects.
00:00:31.030 - 00:01:08.014, Speaker B: Hackathon? So before I dive into this, I wanted to say something about the purpose of this workshop and this presentation. I'm here really just to try to excite you about using Lib PDP in your projects for the hackathon and beyond. And so what you'll see here is actually just a brief walkthrough of the current state of things for Lib P to P and give you the tools to get started quickly in your hackathon projects and then beyond.
00:01:08.014 - 00:01:37.754, Speaker B: The hackathon have a great starting point for all of your future work in and around Libidp. And I also want to extend a very warm invitation to all of you to join the Lib PDP broader open source community after you're done with this hackathon. Because we're always looking for more people who have other perspectives and interests in furthering Lib PDP and making it better.
00:01:37.754 - 00:01:48.878, Speaker B: So with that, welcome and thank you for showing up and giving us your attention. So let's talk about what Lib PDP is. Right.
00:01:48.878 - 00:02:04.882, Speaker B: Lib P to P, as most of you already know, is a peer to peer networking library. It's based around a single specification and has multiple implementations in different languages. So why all the different languages? There are two main reasons for this.
00:02:04.882 - 00:02:32.302, Speaker B: One of them is that we want to have Lib P to P implementations in whichever language you are most comfortable working in. We want to be present in every working environment, including browsers, servers, workstations in applications written in Go and JavaScript, Rust, NIM, C plus plus. There's even a Java implementation, right? And I think as of like a month ago, there's even a Zig implementation now.
00:02:32.302 - 00:03:00.450, Speaker B: So the idea here is, regardless of your language, regardless of your execution environment, we want to have a presence there for doing all of your Lib PDP needs. The other reason is that with all of these different implementations, we avoid sort of the single source of failure problem. If there is a bug that arises in one implementation, it is likely not present in the other implementations.
00:03:00.450 - 00:03:33.354, Speaker B: And this allows easily building heterogeneous peer to peer networks that are more resilient in nature simply because a single bug can't take down the entire network. So also inside of Lib P to P, there are a lot of low level features like encryption authentication, pretty famous for having good hole punching, getting through Nats and things like that. All of this is in service of being able to build peer to peer networks that are largely immune to the chaos of the internet.
00:03:33.354 - 00:04:16.270, Speaker B: It doesn't matter where your peer node is or how it's connected to the Internet, it should be able to communicate effectively to all of the other peers in the network in your network. So in addition to all of that, we also add high level features like DHTs and gossiping, mostly for peer discovery and for doing global state synchronization. Basically, everything is in there in Lib PDP that you need, right? I threw this slide in here because this is how Lib PDP has always demonstrated what options we have for connecting and all that kind of stuff.
00:04:16.270 - 00:04:35.540, Speaker B: This is a very boring slide, so we're not going to use that anymore. What you're going to do instead is demo connecting everything everywhere, all at once. I think some of you get the reference to this movie, very popular last year, lib P to P We joke, allows you to connect everything everywhere, all at once.
00:04:35.540 - 00:04:50.282, Speaker B: So to demonstrate that, the team at Protocol Labs and in the greater Protocol Labs network, built this simple chat app. Because we all need another chat app. There's just not enough of them out there.
00:04:50.282 - 00:05:13.146, Speaker B: But this is a very good and easy way to demonstrate the basic functionality of Lib PDP and to demonstrate it working on multiple languages in multiple execution environments. As you'll see, this demo includes browsers and non browsers, public or private, and all using Lib PDP. My current situation right now, I'm actually behind a Nat.
00:05:13.146 - 00:05:23.426, Speaker B: So I'm presenting this from the Nat. And the clients I'm running locally here are all going to be Natted. We are going to be talking to a server that has a publicly routable IP address.
00:05:23.426 - 00:05:33.362, Speaker B: That's a bootstrap node. But you'll see that this all works regardless of that network connection status. We're going to start off with a rust peer.
00:05:33.362 - 00:05:46.300, Speaker B: It's currently running, and it has a really pronounceable name. I just call it lugum. This name here is actually derived from the keys that are used.
00:05:46.300 - 00:06:00.922, Speaker B: And so when you'll see it in the demo, it'll come up as that right, that's the name of that node. So to start off, we have this node running. This is our bootstrap node.
00:06:00.922 - 00:06:20.422, Speaker B: And I'm going to now run a Go Lib P to P CLE tool of the universal connectivity. So I'm going to bounce over to my console here, and you can see here that I'm telling it I'm going to run the Go peer, and I'm telling it to connect to Lugum right here's. Lugum's name right here at the end.
00:06:20.422 - 00:06:38.460, Speaker B: And what we're going to see hopefully failed to connect to peer. Excellent live demo. Please spare me.
00:06:38.460 - 00:06:44.622, Speaker B: Prispi, do you have any idea why I can't connect to Lugium? Is it running? Yes, I do.
00:06:44.676 - 00:06:50.748, Speaker C: Let me make sure it's running. So go ahead and try again.
00:06:50.914 - 00:06:55.392, Speaker B: Okay. There. Yes, we're up.
00:06:55.392 - 00:07:08.452, Speaker B: Okay, cool. So you can see over here in the peer list, we're talking to Mkwj Lugum, right? And my node is listening on several different transports. And you can see here that I'm actually Natted, right.
00:07:08.452 - 00:07:19.610, Speaker B: So this is my local IP on my home network. This really doesn't matter because we have ways of getting around it. Oh, and look, we're hacked already.
00:07:19.610 - 00:07:35.004, Speaker B: Hello. Okay, so this here is a Go CLE tool of the Universal Connectivity App. There's also a Rust version of this as well, and I think maybe even a Node JS, but I'm not entirely sure.
00:07:35.004 - 00:07:41.976, Speaker B: I know that we have a Rust one and a Go one. Okay, so this is all working. So let's get back to the slides.
00:07:41.976 - 00:08:01.712, Speaker B: And to further build this network, to show how versatile this is, we're going to load up a browser application version of the Universal Connectivity App, and it's written using Jslooptp. So I'm going to skip over to Chrome. And I'm using Chrome because we tested this earlier on Firefox.
00:08:01.712 - 00:08:18.596, Speaker B: I think there's still an outstanding bug in Firefox, but we did confirm that it works in Chrome. So let me load this up. This is actually running on a local Web server here on my system, and it's trying to connect behind the scenes.
00:08:18.596 - 00:08:28.248, Speaker B: And you can see here it did connect to Lugum. And let's see, what else does it have? Several others. So A-Y-J SFFR.
00:08:28.248 - 00:08:42.450, Speaker B: That is our Golib P to P client that I was just running. And it looks like we've got several others already jumping into the network. So if we go over to chat all right, everybody in the network, say hello.
00:08:42.450 - 00:08:52.390, Speaker B: Hello. If you're hacking our network, go ahead and say hello. Well, that's from the main Rust here.
00:08:52.390 - 00:08:58.560, Speaker B: Nobody else. There you go. By nine, N says hello.
00:08:58.560 - 00:09:08.264, Speaker B: That's cool. If we jump over to the Go client, see, we've got more hellos. Hacking the p to p more.
00:09:08.264 - 00:09:10.810, Speaker B: Hellos. Welcome, everybody. Welcome.
00:09:10.810 - 00:09:25.440, Speaker B: Okay, so this allows me to skip ahead a little bit on the slides. So I could have started up another browser, which we can do right now. Actually, we'll just do that, start up another browser instance.
00:09:25.440 - 00:09:51.130, Speaker B: And this should connect to Lugum, right, which it did. And then it should also establish connections to all of the other nodes that it can see in the network, including the browser one, the other browser. And if we go over to the other browser, we can see it's, this R five AC.
00:09:51.130 - 00:10:07.420, Speaker B: So if we get back to the second one, go back to the second one, there it is, R five AC. So now we have browser to browser connectivity using Lipdp. So if we go into chat here yay.
00:10:07.420 - 00:10:15.396, Speaker B: Browser. Browser. All right, back to the slides.
00:10:15.396 - 00:10:44.104, Speaker B: So what we've demonstrated so far is our Rust Lib PDB server, Lugem. Right? And then I started the Go client in the command line, and I've established two browser instances that are also connected, and they are all connected to each other. What we're doing now, as I'm seeing everybody jumping in, is I'm going to challenge you to go ahead and start playing with the browser one to see if we can get a bunch of them in there.
00:10:44.104 - 00:11:08.000, Speaker B: So how are we going to do that? Everybody jump onto this URL universalconnectivity Versaille app. Okay, I'm going to dump it in the chat here. Versaille app.
00:11:08.000 - 00:11:24.586, Speaker B: That should get you a version of the Universal Connectivity App in your browser. So let's see if we can do that over here. Yep.
00:11:24.586 - 00:11:34.370, Speaker B: And this one should also join as well. There it is, connected to Lugium. Great.
00:11:34.370 - 00:11:41.734, Speaker B: Now if everybody else is doing it, we should start seeing a whole bunch of peers jump in here. Then we are. Look at these.
00:11:41.734 - 00:11:54.490, Speaker B: All these p to p circuits over WebRTC direct. Now, if we go over to the Golit PP one, we can see our list appears here. Excellent.
00:11:54.490 - 00:12:04.010, Speaker B: It's growing. This is our stress test. Cool.
00:12:04.010 - 00:12:20.666, Speaker B: Okay, so the live demo gods have shined favorably upon us. Look at everybody. Cool.
00:12:20.666 - 00:12:27.326, Speaker B: Welcome, everybody. All right, that's basically it for the demo. I just wanted to demo that.
00:12:27.326 - 00:12:50.500, Speaker B: We can do this in all different environments, different languages. And here is the link to the Universal Connectivity App that you can get from GitHub. Now, if you don't know where to start and you're fairly new to Lib P to P in this hackathon, I highly recommend you clone this Repo and take a look at it.
00:12:50.500 - 00:12:57.990, Speaker B: It's just a basic getting it configured in whatever language. It's a mono repo. Sorry, let me start over.
00:12:57.990 - 00:13:15.826, Speaker B: It's a mono repo. So the implementations for Rust, Go and Jswp are all in there and shows you how to use it in the browser, shows you how to use it from Rustland and also from Go in the command line. So this is probably going to be your fastest way to get going on this hackathon.
00:13:15.826 - 00:13:28.430, Speaker B: And it's what we're all most familiar with, all the mentors and stuff. So if you don't know where to start, start here. If you already started, that doesn't matter.
00:13:28.430 - 00:13:34.222, Speaker B: You're okay. You might still learn something from this. So it's a good resource, the connectivity.
00:13:34.222 - 00:13:43.554, Speaker B: Libpdp IO is a great website. It talks about all the different transports and features and things like that. And in many cases, there's links to the specification.
00:13:43.554 - 00:13:56.314, Speaker B: If you have any questions. And then if you want to dive deep into the specs, there's a GitHub for specs. Let me get all the way back to the beginning here because I wanted to point out one last thing.
00:13:56.314 - 00:14:16.974, Speaker B: This was built by a huge team of people in the Lib PDP community. These are all GitHub handles, and some of these people are already mentors in the Discord Channel for the hackathon. So Prithvi is in there, chad is in there.
00:14:16.974 - 00:14:25.380, Speaker B: I know Marco's in there. I'm in there. I think the Discordian might be in there as well.
00:14:25.380 - 00:14:39.410, Speaker B: So feel free to reach out to us, any of us, with questions. We're kind of hovering in the discord. So if you get stuck on anything or have questions specifically about this to get going, yeah, let us know on the discord.
00:14:39.410 - 00:15:07.630, Speaker B: And now I'm going to open it up because let's see how much time do we have? Just a couple of minutes? Yeah, we got about 15 minutes. So I'm going to open it up to questions you can ask in the chat and I'll read them, or if you're brave enough, feel free to I think you can turn your audio on and ask the questions. If you're in Zoom, I know this is being streamed out on the YouTube and being recorded on Zoom, just so everybody knows.
00:15:07.630 - 00:15:33.318, Speaker B: Let's see here. Do we have any questions in Chat? None? Well, I mean, if we don't have any questions, Pritzie, I've got maybe a.
00:15:33.324 - 00:15:45.602, Speaker A: Question that some people might help or might want to know. Like, what are you all looking for in terms of project ideas or projects that you'd like to see built on top of Flip PTP?
00:15:45.766 - 00:16:05.090, Speaker B: That's a fantastic question. We had a couple ideation sessions last week to talk about ideas and team formation. I have my ideas, and I know that Prithvi may have some or Discordia may have some as well.
00:16:05.090 - 00:16:27.394, Speaker B: Anybody else have any ideas? Feel free to jump in. For me, personally, I think something that would be really good to work on is browser based tools that work with Web Three technologies. I mean, this is part of a broader filecoin and FVM hackathon.
00:16:27.394 - 00:16:54.030, Speaker B: So if you can make a browser based tool that interacts with that, that would be amazing. There's a lot of work that needs to be done there and be fun to play around with that. I know that there is one project that is by Doug Anderson that is toying around with implementing protocols in WASM and running a WASM VM on top of Lib PDP.
00:16:54.030 - 00:17:01.366, Speaker B: So that one might be really cool. You could talk to Doug. I think he's in the discord right now.
00:17:01.366 - 00:17:23.580, Speaker B: If he needs any help. Let me offer anybody else who has a team that's looking for help? Do they want to speak up and pitch their idea here? That's another thing we can spend the time doing, or put it in Chat if you don't want to say it out loud, because this is really about making this hackathon as successful as possible.
00:17:26.190 - 00:17:29.182, Speaker A: And there was a question in the chat as well.
00:17:29.316 - 00:17:43.220, Speaker B: Yeah, I had looked into Gun before this. Can you compare and contrast the project's sum so I can better grok? I'm honestly unfamiliar with Gun. Prithvi, do you know anything about Gun or anybody else in here?
00:17:47.590 - 00:18:21.120, Speaker C: I can't say I'm familiar with Gun. I would love to know what Gun DB. Okay, so is it some sort of distributed database for Lip PDP? What we like to refer to it as like, a toolkit that allows you to build the decentralized peer to peer networking layer of your so without knowing too much about know, I can't really contrast it that much.
00:18:21.120 - 00:18:23.786, Speaker C: So it looks like Dave is showing.
00:18:23.818 - 00:18:41.358, Speaker B: The yeah, it's okay. I know nothing about Gun, but I mean, if you read this here, it looks like it's a set of tools, community run encrypted applications like Open Source Firebase or Decentralized Dropbox. So it must have some P to P states.
00:18:41.358 - 00:18:46.578, Speaker B: Yeah. Okay. It sounds to me like you could implement this using Lip PDP and IPFS.
00:18:46.578 - 00:19:10.766, Speaker B: To be honest, I don't know exactly how much they have in way of hole punching or multiple language implementations or support for different execution environments. But yeah, I can't compare and contrast. I think what Prithvi was saying is very important though.
00:19:10.766 - 00:19:30.350, Speaker B: Like Lib PDP is a toolbox of lots of peer to peer capabilities. Looks like you could replicate anything that's in here with Lib PDP. This looks like it's all written in JavaScript and TypeScript.
00:19:30.350 - 00:19:40.850, Speaker B: So this may actually limit it to Node and or in the browser, which would be one of the notable differences between Lib PDP and Gun.
00:19:43.830 - 00:20:32.434, Speaker C: Cool, right? Lib is a language agnostic support in multiple implementation languages and basically helping you get the networking part of your application up and running. And so what the Universal Connectivity App that Dave just showed is trying to demonstrate is that across languages like Rust and Go and JavaScript, we have wide variety of support for different transport protocols, be they your bread and butter transport protocols like TCP and Quick. Or the browser based transport protocols that allow you to achieve connectivity from the browser to the server using webrpc or web transport, or even WebSocket that's been around for so long.
00:20:32.434 - 00:21:04.958, Speaker C: And so ultimately we want to enable you guys to build a class of applications that, whether they be browser based or running just on a server or a laptop or something, lip PDP can help bridge that networking part of the problem for you. So that's our ultimate goal. Our vision is that we want to be able to connect the browser world to the server world in a language agnostic way.
00:21:04.958 - 00:21:21.794, Speaker C: Something that's really a good foundation to build on. And so like, you know, highly recommend you guys to clone the Universal Connectivity Repo if that's something that you're looking to get a start on. I know, like, some folks on the Discord, like Dr.
00:21:21.794 - 00:21:30.280, Speaker C: Hongo and Jose KP have also started using the Connectivity app. So please jump in there. Happy to answer your questions.
00:21:33.450 - 00:22:07.518, Speaker B: Something has just occurred to me that I've said in previous meetings and before we had this presentation for some ideas, things to do with Lib PDP. I highly encourage that you try to do something around the filecoin virtual machine and filecoin network or even IPFS. But if you have interest elsewhere, one of the things I've wanted to do with Lid PDP is to take some existing popular tools like Secure Scuttlebutt or nostr, and rip out their networking library and replace it with Lid.
00:22:07.518 - 00:22:40.860, Speaker B: PDP so that something like nostr is much more instead of doing its normal relay store and forward kind of thing, it's much more of a real time peer to peer network. Or at least you can run a server that is easier to connect to for doing the relaying. Something like Secure Scuttlebutt could benefit from this as well, because imagine if you had a Secure Scuttlebutt client and you were sharing files on your feed, and those files were stored in IPFS, for instance, right? So you could combine Lib PDP and IPFS to recreate it and probably have a better user experience.
00:22:40.860 - 00:23:03.054, Speaker B: It would be kind of probably a harder project, maybe not something you could get done in three weeks. But some of the smaller tools have pretty straightforward networking and would be good candidates to put Lip PDP in. It'd be kind of cool to do, I don't know, like a version of Curl that uses Lip PP.
00:23:03.054 - 00:23:28.090, Speaker B: I don't know, something like that. So if you're short on ideas and you don't have a team here, you don't see a team here that's exciting and you want to join and you want to do something on your own, take an open source, browser based game, or take any one of these social media apps and try your hand at replacing the networking layer with Lip PDP. But like I said, focus.
00:23:28.090 - 00:24:00.566, Speaker B: I think your first bet would be to the one that will get you the most people available to help you would be anything related to filecoin the Filecoin virtual machine, anything with IPFS, that kind of stuff. So looks like we've got six more minutes. Any more questions? Any more suggestions? Anybody want to pitch their team and ask if anybody can help Scorion? I want someone to make it so I can use Lip P to P to play Diablo Two games with my friends.
00:24:00.566 - 00:24:14.300, Speaker B: I think it should be possible. Absolutely, I think it should be possible. Isn't there an open source implementation of Diablo Two now? And also you could probably do Doom as well.
00:24:14.300 - 00:24:24.494, Speaker B: It oh, maybe it's a Diablo One implementation. Yeah, sure. And doom would be fun.
00:24:24.494 - 00:24:39.474, Speaker B: Peer to peer doom over lib, p to P. That would be funny. Are you in the discord? Great.
00:24:39.474 - 00:24:43.780, Speaker B: So feel free to ask questions. We have a bunch of mentors hanging out in.
00:24:45.990 - 00:25:01.770, Speaker C: Yeah, well, I guess I'm concerned. You said you barely understand anything, so I'd love to get to the heart of that if things could be elaborated on a little bit more. Meek, do let us know, either right now or in discord.
00:25:03.150 - 00:25:20.634, Speaker B: Well, we have five minutes left. I'm going to take a poll. So how many of you are associated with a project? Are you doing something individually, or are you part of a group? Solo.
00:25:20.634 - 00:25:27.038, Speaker B: Meek. Great. What about you, Carl? Are you solo? Solo.
00:25:27.038 - 00:25:43.154, Speaker B: Solo. Okay, so a lot of solo people. Does everybody know what they're doing? It sounds like Stefan.
00:25:43.154 - 00:25:49.226, Speaker B: Or Stephanie, I guess. Like it says, you have no clue what to do. I'm not sure how you pronounce your name.
00:25:49.226 - 00:25:57.580, Speaker B: Is it Stephanie or Stefan? Stefan. My apologies. Thank you.
00:25:57.580 - 00:26:15.150, Speaker B: Like I said, if you don't have any ideas on what to do, start with the Universal Connectivity App. Maybe add in the ability to send a file or add features to Universal Connectivity.
00:26:20.390 - 00:26:25.810, Speaker C: I just jumped in the chat. Maybe we can have an ideation session like this. Hackers up.
00:26:25.810 - 00:26:34.854, Speaker C: This workshop doesn't have to be the end all, be all. Yeah. I'd love to stay connected with you folks, and it's okay if you don't have any ideas of what to do right now.
00:26:34.854 - 00:26:54.062, Speaker C: I think that's the good thing, is there's a lot of opportunities to do something, and maybe it just requires a little bit of poking and prodding. So I would say somebody asked about office hours. Definitely happy to meet up with people in office hours.
00:26:54.062 - 00:27:15.220, Speaker C: I can post my availability on Discord, but I would love to continue chatting with folks and help people get a better idea of what they can build. So, do you folks have a link to the Discord? I think that would be the best place to connect because this meeting is going to be coming to a close.
00:27:17.210 - 00:27:17.960, Speaker B: Yeah.
00:27:21.690 - 00:27:26.440, Speaker A: I just posted the main global Discord server link.
00:27:29.990 - 00:27:49.722, Speaker B: Excellent. Well, thank you, everybody, for coming to this session on Lib PP. I was hoping to excite you by showing you all the possibilities, and it seems to me like we have some interest, and let's get together on the Discord and figure this out.
00:27:49.722 - 00:27:51.740, Speaker B: Get everybody a project and get going.
00:27:55.990 - 00:28:09.800, Speaker A: That's the link to the channel. Sometimes I don't know if it's in Slack or whatever, but sometimes linking to specific channels in Discord doesn't exactly take you there. But that's the link to the partner Lib PTP channel.
00:28:09.800 - 00:28:26.954, Speaker A: And yeah, thanks, everybody, for joining. And thank you, Dave and Prithy, for organizing, leading everybody through the session, answering questions, and hope to see you all in the Discord again. Don't be afraid to ask questions.
00:28:26.954 - 00:28:32.060, Speaker A: That's what they're there for. That's what the mentors are there for, to help support you off for the next couple of weeks.
00:28:32.910 - 00:28:34.360, Speaker B: Yeah. Thank you, everybody.
