00:00:00.250 - 00:00:42.346, Speaker A: Hello, my name is Scott Bigelow and today I'd like to talk about the Interceptor, a browser extension that works in conjunction with MetaMask that improves the usability and security of interacting with Ethereum DApps. Adding the interceptor adds things such as transaction simulation, being able to see what transactions do if they are confirmed on Chain, provides built in scam protection, creates simulation stacks which effectively act to has forks of Ethereum that allow you to have lots of transactions that you are simulating at the same time. And also allows impersonation where you can take any Ethereum account out there, including Vitalik's or anyone you find and add it to the interceptor and browse Ethereum as if that was your private key that you were operating with.
00:00:42.346 - 00:01:16.130, Speaker A: Even though you can't create signatures and the way that it does, this is where a normal DAP might communicate with MetaMask and have transaction signatures that look something like this. For the confirmation dialog, the interceptor puts itself before MetaMask and intercepts the attempts to create transactions and provides simulation and other functionality before eventually a confirmation hands that transaction back off to MetaMask. To better understand the functionality that the interceptor provides, let's first look at an Ethereum DAP without the interceptor installed.
00:01:16.130 - 00:01:27.874, Speaker A: Here we have uniswap. We are on the Gorli testnet where we have a small amount of gorli testnet ETH and we'll go ahead and conduct a simple swap. So we'll go from ETH into some Gorely.
00:01:27.874 - 00:01:40.940, Speaker A: Uni tokens, we'll click swap. Here is the MetaMask confirmation dialog and we're told what the gas fee is for it. We see how much ETH total this thing is going to cost us.
00:01:40.940 - 00:02:05.374, Speaker A: But all we have here is that we're really going to call the execute function and going into this data and hex doesn't really provide much other usable information. We're left trusting that the DAP that we're on that created this transaction is going to do what it says. But as we've seen, in many cases, it's possible to end up on DApps, where you're on the wrong URL or the front end was compromised, or the DAP might have even made some sort of a mistake.
00:02:05.374 - 00:02:17.720, Speaker A: And maybe has way too much slippage set or doesn't have the right output that it said this interface doesn't provide any confirmation of what actually is occurring on Chain. We're left trusting whatever created the transaction. Let's cancel that.
00:02:17.720 - 00:02:30.330, Speaker A: Come over here and let's go ahead and download the interceptor for Firefox. This is a simple one button download and we're working on getting that functionality for Chrome as well. But we have instructions for installing Chrome that's just a few more steps.
00:02:30.330 - 00:02:40.206, Speaker A: Okay, now that we have the interceptor installed, we can see we have a new icon up here. We can click on it and see some of that interface. But before we even do that, let's just use it.
00:02:40.206 - 00:03:11.762, Speaker A: We're going to pop back over to Uniswap where we are still connected to gorli using the same account, and we're going to do the exact same purchase that we were doing before using ETH to get some gorli uni. But when we click swap here, instead of getting the MetaMask pop up, we're going to first get the interceptor pop up. And this has actually taken the transaction to a node and said, hey, if you were going to run this transaction, what would the full outcome of this be? It's not reading the data and seeing what it's attempting to do.
00:03:11.762 - 00:03:31.502, Speaker A: It is actually executing it on the EVM and detecting the results of it. If you look at the transaction outcome, this is what I think is probably the most interesting element, which is by running this, the net effect will be that this account loses 0.1 gorley testnet ETH and gains 0.1355
00:03:31.502 - 00:03:48.520, Speaker A: uniswap tokens. And so if we click sign with MetaMask, only then does it forward and you're left with all the same user interface elements we had before, but it's already gone through the intercept and we've already verified what it is that it was going to do. So we can reject this.
00:03:48.520 - 00:04:00.150, Speaker A: Okay, so testing on Gorely is one thing, but I think it's a little bit more exciting to test on mainnet. So let's do that. Let's change our MetaMask over to mainnet.
00:04:00.150 - 00:04:09.100, Speaker A: And we can see that this is already detected, that Mainet has got switched to this, detected it, so everything works out great. So let's do the same thing. Let's try to buy 0.1,
00:04:09.100 - 00:04:26.530, Speaker A: say, uni tokens. But we actually can't do this because this account, while it had some gorli ETH, has zero mainnet ETH. So what we can do is come over here and switch from signing mode to Simulating.
00:04:26.530 - 00:04:42.802, Speaker A: And what that means is that we're no longer going to pass transactions off to MetaMask, but we can start lying about the state of the network to do interesting things. One of the first interesting things we can do is make me rich. So here we have zero balance.
00:04:42.802 - 00:05:01.686, Speaker A: We're going to go ahead and click this button and we're effectively creating a fork of main net from the current block. And in this fork, we are giving ourselves 200,000 extra ETH. And we can see right now that Uniswap thinks that we have 200,000 ETH when on main net chain.
00:05:01.686 - 00:05:15.646, Speaker A: If you were to look on Ether scan, nothing has changed at all, but it gives us the ability to play around. So let's say we want to how about take 10,000 ETH? How much unique we buy for that? Okay, 2 million uni. Let's actually change this to a different token.
00:05:15.646 - 00:05:22.258, Speaker A: Let's do die. I think it's a little more exciting. Okay, for 10,000 ETH, we could buy 16.1
00:05:22.258 - 00:05:28.200, Speaker A: million die. And again, we're in simulation mode. We don't have this 200,000 ETH, but let's go ahead and do it anyway.
00:05:28.200 - 00:05:37.634, Speaker A: Click swap. It is doing the same sort of visualization that it was before. And if we go down to this transaction outcome.
00:05:37.634 - 00:05:49.674, Speaker A: We see that if you were to do this, you would lose 10,000 ETH, but you would gain 16.1 million die. And also we can look at that value of what 16.1
00:05:49.674 - 00:06:06.654, Speaker A: million die is worth and we can see what these slippage is. So we can see that we're paying about what you would expect to pay for that size of an order and that we're not buying a bad token or getting a bad exchange rate. If we come down here again, we can't sign with MetaMask like it was before, but we can simulate.
00:06:06.654 - 00:06:25.282, Speaker A: And what that means is that we are taking that transaction and we are pretending to run it on our fork of mainnet. If you come click on this icon, we can see that we're building up a stack of transactions where we have the first thing we're going to do is we're going to make you rich. The second thing is we're swapping ETH for Dai.
00:06:25.282 - 00:06:41.818, Speaker A: And this hasn't occurred yet, but we can see that this has actually taken place as far as Uniswap is concerned because Uniswap is asking the interceptor to serve up these ethereum requests. And so it is hitting our fork of mainnet. Now this isn't tied to a single tab either.
00:06:41.818 - 00:06:50.746, Speaker A: So I'm going to just go over to Curve here. I haven't changed anything. We still have the simulation stack and if we're on Curve and we're like, okay, well, let's take our die that we just acquired.
00:06:50.746 - 00:07:15.858, Speaker A: It thinks that we have 16 million die that we just bought on Uniswap and we can go ahead and move those over to, let's say we want to buy some WBTC. How about we do 10 million? So we're going to swap 10 million die that we don't have for 357 WBTC that aren't actually going to land in our account. But this is what would happen if we had these amounts.
00:07:15.858 - 00:07:33.222, Speaker A: Now, unfortunately, we've never interacted with Curve because we've never interacted with anything. So we're going to need to do an approval just like you do whenever you first come to any site where you've never approved the contracts before. And just like the swap transaction can be simulated, this approval can be simulated as well.
00:07:33.222 - 00:07:45.870, Speaker A: And we can see that the visualizer tells us if you run this, you are going to allow this contract to spend all of your die. Come down here to simulate. When we say simulate again, it has added it to the stack.
00:07:45.870 - 00:08:04.520, Speaker A: And now Curve thinks that we have approved this contract because it is also making all of its queries on this fork of mainnet that we have created. And so because of that, now we've approved Dai to Curve. We can go ahead and say swap, yes, I know we're getting a bad fee for assets that we're not actually interacting with.
00:08:04.520 - 00:08:10.898, Speaker A: And again, this gets added as well. We can see the net effects. We lose 10 million, we get 357 wrapped bitcoin.
00:08:10.898 - 00:08:20.954, Speaker A: Let's go ahead and do it. There we go. Now we have 357 wrapped bitcoin and if you come over here to our Ether scan you can see like nothing has actually happened.
00:08:20.954 - 00:08:54.646, Speaker A: This is all happening for pretent but it lets us see what these DAPs do in these scenarios and allows us to basically to investigate what would happen before committing to those transactions on chain in a way that we can't reverse. So let's go ahead and go back to Uniswap and I can just show you that Uniswap now believes that we have that 357 WBTC that we just got when we were on curve. Some examples of why this can be really really useful are the ability to check that you are buying a token that can actually be sold later.
00:08:54.646 - 00:09:08.634, Speaker A: We've seen a lot of scam tokens where you can buy them on Uniswap, but you can't sell them by going through this round trip before actually doing it. You can see that you can sell a token before you are required to buy it. You can also check that the token you're getting is the right one.
00:09:08.634 - 00:09:32.930, Speaker A: We've seen other issues where people have accidentally bought tokens with a similar symbol that have almost no market value. By checking that you can buy a token and that you can find another market to sell it, you are verifying that you are buying the right token. The other thing to note here is that because we are in simulation mode and not actually required to sign these transactions to do any of these things, the account that we're interacting with doesn't even need to be our own.
00:09:32.930 - 00:10:01.814, Speaker A: We can come here to change. One of the first things that we instrumented was Vitalik's account and actually we don't need to make him rich, but we can look at his real balances, right? So we can switch over to Vitalik and we can see what Vitalik has for ETH on his Vitalik ETH account and we can just like before, we can conduct trades pretending that we are Vitalik. And this works with any account that you find in the wild.
00:10:01.814 - 00:10:30.978, Speaker A: If you want to see what interacting with DApps looks like using other Ethereum accounts, all you need to do is come and put them into your simulator and interact with them and stack transactions and operate on forks of Ethereum. The last feature I'd like to show you is the scam protection that is built into the interceptor to show that I am going to switch back to our regular MetaMask connected account, although still in simulation mode, so that we can make me rich. Let's buy a little bit of dye.
00:10:30.978 - 00:10:47.766, Speaker A: It helps show the scam protection if we actually have some dye to operate on in our fork of Ethereum. We'll say swap, we'll go through the regular process, check the transaction outcome, it looks good. Simulate.
00:10:47.766 - 00:11:07.410, Speaker A: And now any DAP that interacts with the interceptor will think that we have 1600 die to interact with. So let's go over to Abi Ninja. This is a very simple website that is for developers that want to interact with contracts in a low level way.
00:11:07.410 - 00:11:28.230, Speaker A: So we'll go ahead and just say Dai and this lets us send very simple requests without a fancy DAP GUI to just a testing. So one of the things that commonly happens in Ethereum is that a user might accidentally send tokens for Dai to the Dai contract itself. This is a very common issue.
00:11:28.230 - 00:12:04.814, Speaker A: About $600,000 has been lost this way where a user has copied the address for the dyed stablecoin because they wanted to interact with it and didn't copy the exchange's address or their friend's address and accidentally sent Dai to die itself where it is not recoverable. So we'll go ahead and try to do the same thing but using the interceptor when we click send here saying that we want to do this again, we're just trying to add this to the stack. But even doing that it recognizes that you are doing something that is likely not what you want to do and is going to result in lost funds and gives you a little explanation here and also blocks the ability to simulate.
00:12:04.814 - 00:12:25.420, Speaker A: If this was in regular signing mode, this would also be blocked as well until you click this blocking checkbox that says that you understand and then you can move forward. So if it falsely recognized something as a problem, you can still move forward. But this should block you enough to realize that a mistake has been made and you probably don't want to do this.
00:12:25.420 - 00:12:47.758, Speaker A: Another common scam that we've seen is users that are tricked into approving their asset to a scammer. So normally when you call approve you are supposed to be approving a contract and that contract has special logic in it that can protect your tokens but you could also approve just a regular address. So some other Ethereum address that isn't even a contract.
00:12:47.758 - 00:13:02.694, Speaker A: And there's very, very little reason that anyone would do this. And normally when that's happened it's because a user is getting scammed or is approving the wrong thing. And so we have a protector in here built into the interceptor where I'm just going to grab this.
00:13:02.694 - 00:13:32.490, Speaker A: This is just some random address, I don't know anything about this. I just clicked on it on Etherscan where I'm going to grab this address and I say I want to approve this account here which is not a contract, this is just some random user's address and I want to approve them to spend some of my die. When you send this off to the interceptor, the interceptor says you are sending an approval to an externally owned account, which basically means that it's not a contract and there's almost no reason that users would be doing this unless they're getting scammed.
00:13:32.490 - 00:14:13.754, Speaker A: And again, it puts up a blocker that interferes with the ability to proceed in adding this to the simulation stack or signing it. So doing this, we can prevent users from getting scammed by performing inspection of what it is they're doing, using the common scams and mistakes that users make to prevent loss of funds. Okay? And with that, we have covered the main features that are provided by the interceptor transaction explanations, scam and mistake protection, the simulation stack, which effectively gives you a fork of the Ethereum mainnet and impersonation the ability to view DApps from the perspective of accounts that you don't have the private key to.
00:14:13.754 - 00:14:26.954, Speaker A: So if you're a user of Ethereum and you are using Firefox or Chrome, check out the interceptor. It's currently free, there's no paid, there's no monthly, there's no premium version, and visit us at dark florist. We're also available on Twitter.
00:14:26.954 - 00:14:46.822, Speaker A: Our handle is Dark Florist as well, and it'd be great if you could like the video and subscribe for future updates. We're going to be releasing new content about how to use this simulation stack to create bundles that are Flashbot style, that can all land on chain at the same time, and leave comments about any features you'd like to see or issues you run into. I'd love to hear from you.
00:14:46.822 - 00:14:48.580, Speaker A: So thanks a lot, talk to you later.
