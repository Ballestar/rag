00:00:00.890 - 00:00:01.038, Speaker A: All right.
00:00:01.044 - 00:00:19.002, Speaker B: So let's go ahead and get started. I'm going to begin by reminding you the story so far. Last lecture on Wednesday, we did some mechanism design basics, and possibly the crown jewel of that lecture is the introduction of the Vicary, or second price sealed bid auction for selling off a single item.
00:00:19.002 - 00:00:39.366, Speaker B: We explored the properties of the vicary auction and we concluded that the auction is awesome. What I mean by that is it satisfies three different properties that are kind of totally orthogonal to each other and that you all really want. So first of all, it has strong incentive guarantees.
00:00:39.366 - 00:00:53.370, Speaker B: So I introduced the term dominant strategy, incentive compatible or DSIC. That means that for each bidder it has a foolproof strategy. And the strategy is just to bid your true private valuation for the good being sold.
00:00:53.370 - 00:01:09.774, Speaker B: So truthful biding is a dominant strategy by definition in a DSIC mechanism. Why would we want such a property? First of all, from the bidder perspective, it's an auction which is very easy to play. It's clear what you should do if you believe that you should play an obvious dominant strategy.
00:01:09.774 - 00:01:34.598, Speaker B: It's in contrast to the first price auction, which we had an experiment with on Wednesday, which I'll give you the results of today. Secondly, from the designer perspective, assuming merely the behavior on the part of the bidders that they play obvious dominant strategies when they exist, assuming just that relatively weak behavioral assumption, you can predict the outcome of the auction. You just expect everybody to bid their true values.
00:01:34.598 - 00:01:51.994, Speaker B: If everybody does that, then the highest bidder will win. The highest valuation bidder will win. What that means is that the vicary auction, assuming truthful bids, a reasonable assumption in light of one, maximizes the social surplus in the sense that it gives the good to the bidder who values it the highest.
00:01:51.994 - 00:01:56.666, Speaker B: That's an optimization problem. You might well have wanted to solve a priori. A priori.
00:01:56.666 - 00:02:19.338, Speaker B: You couldn't do that because you didn't know the data valuations, which are the data to this optimization problem, were known only to the bidders in advance, not to you as the seller. Nonetheless, through this second price payment rule, the vicary auction solves this problem as well as if the data was known in advance. Finally, and this is obvious for the vicary auction, it runs in polynomial time, in fact, linear time.
00:02:19.338 - 00:02:39.482, Speaker B: There's no obstruction to really running this auction in real life. So this motivated the question, could we have equally awesome auctions for more complex allocation problems, problems that are very important. For example, sponsored search auctions really perhaps the main engine that has generated revenue in the internet economy.
00:02:39.482 - 00:02:54.190, Speaker B: So we concluded Wednesday by wondering whether or not such an awesome auction for sponsored search could exist. We'll answer that question in the affirmative today. I also ended with the following proposed methodology for designing auctions.
00:02:54.190 - 00:03:03.490, Speaker B: Remember, an auction involves two components, even just simple sealed bid auctions. You have to pick who wins, you have to pick what they pay. And those two decisions are coupled.
00:03:03.490 - 00:03:16.934, Speaker B: But I proposed factoring that two pronged design decision, solving them one at a time. Step one, you assume without justification that you get truthful bids. You take the bids at face value, you just assume they really are the valuations.
00:03:16.934 - 00:03:45.358, Speaker B: Under that unjustified assumption, you say, well, if I was so lucky, do I at least understand how to achieve problems two and three? That is, can we give a polynomial time algorithm for maximizing the surplus assuming truthful bids for Sponsored search, we noticed that there was a natural greedy algorithm. You give the jth best slot to the jth highest bidder. Step two, the subject of x lecture is given how you decide to solve given your allocation decisions.
00:03:45.358 - 00:04:20.654, Speaker B: So, for example, allocating slots in bidder order, can you come up with an analog of the second price rule? Can you come up with payments that give you the DSIC property, thereby justifying your assumption in step one that the bids really were equal to the valuations? So that's where we were. What I'm going to give you today is a solution to step two, not merely for Sponsored search, but actually a very powerful and general tool in mechanism design. It's essentially going to explain to us precisely what the space of all dominant strategy incentive compatible mechanisms look like.
00:04:20.654 - 00:04:29.378, Speaker B: We're going to get a very strong understanding of what these options are. And as a consequence, we will see that there is indeed one. There is indeed an awesome auction for Sponsored search.
00:04:29.378 - 00:04:33.620, Speaker B: And in coming lectures, we'll have further applications as well.
00:04:45.370 - 00:04:45.942, Speaker A: All right.
00:04:45.996 - 00:04:54.250, Speaker B: So again, coming up next, I'm going to give you a general understanding.
00:04:59.230 - 00:05:00.026, Speaker A: Of.
00:05:00.208 - 00:05:22.580, Speaker B: What dominance strategy incentive compatible options look like. So we're going to understand our design space and as just one special case, we'll figure out how to charge payments in a sponsored search auction. So again, I'm going to abstract out now more generally than Sponsored search.
00:05:22.580 - 00:05:49.580, Speaker B: So what I'm going to define first is a space of environments. So special cases will be things like single item auctions, sponsored search auctions, but it will encompass both as well as many other examples. So these are called single parameter environments, the ingredients of which you've really all seen before.
00:05:49.580 - 00:06:14.754, Speaker B: So an environment has some number of bidders. There's still going to be n of them, and each bidder is going to have a private valuation. As usual, v sub I should think about this valuation v sub I.
00:06:14.754 - 00:06:24.326, Speaker B: This is how much I values a good in the units of the amount of stuff that it gets. Think, for example, about sponsored search. Remember, the valuation was per click.
00:06:24.326 - 00:06:43.690, Speaker B: So if you gave something in expectation 00:25 of a click, then its value would be its basic value per click VI times 00:25. So that's the sense to think of this value per units of a good. Okay, the reason it's called single parameter is because while we as the designer do not know the valuation, it's private.
00:06:43.690 - 00:06:49.310, Speaker B: This is the only thing we don't know about the bidder. We just don't know this one number. That's the single parameter.
00:06:49.310 - 00:07:22.454, Speaker B: The other ingredient of environment is what are the feasible allocations that as a seller or as a designer, you can choose. So I'm going to use capital x to denote the set of all feasible allocations. So the elements of this set, capital x are n vectors.
00:07:22.454 - 00:07:46.740, Speaker B: So each element of capital x has the form x one through X-N-X-I is the amount of stuff that you give to bidder i. So for example, in sponsored search, if you give it a slot that has an expected 00:25 of a click, then that bidder's value of x, sub I is going to be 00:25. Okay, so this is the amount of stuff everybody gets.
00:07:46.740 - 00:08:19.754, Speaker B: So to make sure we're on the same page, some examples. So for a single item auction, what are the vectors in this set? Capital x. What do they look like? Yeah, so first of all, it's zero one.
00:08:19.754 - 00:08:30.270, Speaker B: A bidder either gets the good or it doesn't. And there's only one copy of the good, so they better be at most 10. Okay, so it's just the zero one n vectors with at most eleven.
00:08:30.270 - 00:09:06.534, Speaker B: If you were selling k identical copies of exactly the same good and you gave it most one per customer, the only difference would be it would be sum over the x size is at most k. Okay? So for sponsored search, I'm not going to be too pedantic about this. Hopefully.
00:09:06.534 - 00:09:30.558, Speaker B: It's already intuitively clear that you can encode the possibilities in a sponsored search auction within this formalism. So x is just the vectors that arise if you have k slots of assigning at most k bidders to these k slots, in fact, at most one of the bidders to each slot. And again, as discussed yesterday, we also assume that each bidder gets at most one slot.
00:09:30.558 - 00:10:12.640, Speaker B: Okay, so let me just, for short, say ways to allocate, um, slots, k slots to the bitters with the understanding of at most one bitter per slot and the most one slot per bitter. And as we discussed, a component x, sub I is going to be equal to a number alpha sub j. But remember, we're using the alpha j's to denote the click through rates of the slots if and only if bitter I is assigned to slot j.
00:10:17.670 - 00:10:18.420, Speaker A: Okay?
00:10:22.070 - 00:10:43.580, Speaker B: So these are going to be n vectors where the components are either going to be zero or they're going to be one of the alphas alpha one through alpha k. So those are single parameter environments, and that's what we're going to be working with for the next several lectures. I'll give you further interesting examples later on.
00:10:43.580 - 00:11:02.346, Speaker B: We already talked about sealed bid auctions. Let me talk about them again. Really? Just to introduce some terminology for concepts you already know, we're going to continue for the moment to talk only about sealed bid auctions.
00:11:02.346 - 00:11:13.854, Speaker B: We'll talk about whether that's a restriction of interest or not a little later. So as we discussed, there's three bids. First, you accept bids from the bidders.
00:11:13.854 - 00:11:26.418, Speaker B: They may be truthful, they may not be based on the bids that you get. You have to pick who wins, and you have to pick who pays what. So that decision in step two, who wins, that's called an allocation rule.
00:11:26.418 - 00:11:35.986, Speaker B: That's all it means is you're picking who wins as a function of the bids that you see. The third step, who pays what. That, naturally enough, is just called a payment rule.
00:11:35.986 - 00:11:40.360, Speaker B: But those are two phrases you should know you.
00:11:52.870 - 00:11:53.620, Speaker A: It.
00:11:55.750 - 00:12:04.050, Speaker B: So the allocation rule takes as input the entire vector of bids. It spits out who gets what. And that should be, of course, feasible.
00:12:04.050 - 00:12:14.326, Speaker B: Remember, x is all of the possibilities, all right? And these are n vectors. They're real numbers. Let me just write it this way.
00:12:14.326 - 00:12:24.300, Speaker B: They're part of real N space. In all of our applications, they'll be non negative. Additionally, again, so that's something you should know.
00:12:24.300 - 00:12:39.120, Speaker B: Who wins and then who pays what. Well, here you just choose again, the input is the entire vector of bids. The output is an N vector of who pays what.
00:12:39.120 - 00:12:41.920, Speaker B: And this is just these are real numbers.
00:12:45.170 - 00:12:45.920, Speaker A: Okay?
00:12:49.410 - 00:12:50.270, Speaker B: Yep.
00:12:53.410 - 00:12:54.640, Speaker C: Decide the price.
00:12:55.290 - 00:13:10.220, Speaker B: So remember, this is not just a single item auction we're talking about right now, right? So like in a sponsored search auction, you actually have K, different winners, one for each slot, and you expect to charge everybody something who wins a slot, maybe different things, but they're all going to pay something.
00:13:13.790 - 00:13:15.050, Speaker C: Towards preliminary.
00:13:18.990 - 00:13:40.418, Speaker B: Okay, so to remind you about our current utility model, the quasilinear model, so I's utility on the bid profile. B, when I say profile, I really just mean a vector. That's often what these kinds of vectors are called.
00:13:40.418 - 00:14:01.180, Speaker B: Okay, so the vector of bids or the profile of bids is by definition, well, we look at how much stuff I gets. VI is its value per unit of stuff. So it's VI times the amount of stuff it gets, and then we subtract out how much it's got to pay.
00:14:01.180 - 00:14:24.994, Speaker B: Okay, so that's bittereye's utility in a given bid profile with respect to a given allocation rule and a given payment rule. Now, over here, I allowed payments to be arbitrary. They could be negative, they could be huge, and sometimes you want to allow negative payments and things like that.
00:14:24.994 - 00:15:12.190, Speaker B: But for our purposes in this class, there's no harm to just focus on payment rules that are non negative and that are not too big in the following sense. In lecture will focus on payment rules such that the payment that I pays is at least zero. That is, we're not going to be thinking about situations in class where the seller actually pays off the buyers.
00:15:12.190 - 00:15:32.310, Speaker B: So seller won't pay the bidders. And the most we're ever going to charge somebody is what they said was their value per unit of good. Remember, we don't really know for sure.
00:15:32.310 - 00:15:36.694, Speaker B: Anybody's? Value per good VI. That's private. All we know is the proxy that they told us.
00:15:36.694 - 00:15:45.500, Speaker B: They told us their bid Bi. If we take that at face value, this is their value per unit of good. And then we can also look at how much stuff we gave them.
00:15:45.500 - 00:16:38.950, Speaker B: Does anyone see why it makes sense to cap the payment, given that we're trying to design DSIC auctions? Why we might never want to charge more than this? Suppose we did charge more than this, and this was a truthful bidder Bi, really equaled VI, what would be its consequent utility? It'd be negative. Okay, so this is sort of the upper bound that we can charge so that truthful bidders will never experience negative utility like in the Vicary auction. Okay, so this upper bound is to ensure non negative utility of truthful bidders.
00:16:39.890 - 00:16:48.240, Speaker A: It okay.
00:16:53.250 - 00:17:01.010, Speaker B: So that's the basic setup. Okay, so I've introduced single parameter environments. This encompasses the examples we've seen so far.
00:17:01.010 - 00:17:17.238, Speaker B: I'll give you further applications that fall into this domain. And the reason I've defined at this level of abstraction is the following mechanism design tools I'm going to give you will apply in every single, single parameter environment. So this is the right level of abstraction for the tools you're about to learn.
00:17:17.238 - 00:17:25.686, Speaker B: We revisited sealed bid auctions. You already knew what they were, but especially this allocation rule word. I'm going to use this 40 times in the rest of this lecture.
00:17:25.686 - 00:17:29.610, Speaker B: So it's important you know what it is. So any questions about the general setup?
00:17:34.850 - 00:17:35.760, Speaker A: All right.
00:17:37.570 - 00:18:14.246, Speaker B: So now we come to the first really important part of this lecture, which are two crucial definitions. Both definitions single out allocation rules that have particular properties. Rule that is a way of choosing who wins on every bid profile.
00:18:14.246 - 00:18:46.790, Speaker B: We call it implementable. If there exists a way of charging payments, there exists a payment rule P. So that when we couple this allocation rule X that we were given with this payment rule P that we constructed, we get DSIC auction.
00:18:46.790 - 00:19:25.374, Speaker B: That is, the implementable. Allocation rules are, by definition, exactly the allocation rules that can be extended to dominant strategy incentive compatible auctions. Or, if you prefer, if you think about the set of all DSIC auctions in the world and you project them all down just onto the decision of who wins, what, you get this set of implementable allocation rules.
00:19:25.374 - 00:19:33.054, Speaker B: In any case, these are the only possible candidates. This is really our design space. If we want to design awesome auctions.
00:19:33.054 - 00:19:48.630, Speaker B: Remember, property one of an awesome auction is it should be DSIC. So these are the only things we can use even if we only look at condition one. So let's, for example, suppose we're just selling off one item.
00:19:48.630 - 00:19:54.522, Speaker B: So let's look at an allocation rule. Remember, that just picks who wins. It doesn't say what they pay.
00:19:54.522 - 00:20:14.058, Speaker B: So what about the allocation rule where I always give the good to the highest bidder? Is that implementable or not? Why? The reason it's implementable is because there is a payment rule. We've already talked about it. It's the second price rule.
00:20:14.058 - 00:20:46.672, Speaker B: And if you couple that allocation rule with a second price payment rule, you get the vicary auction, which is DSIC. So I prove it's implementable, but just by exhibiting the suitable payments. What about still in a single item auction? What about the allocation rule where I give the good to the second highest bidder? Is that implementable or not? Clear.
00:20:46.726 - 00:20:47.330, Speaker A: Right.
00:20:48.420 - 00:21:08.840, Speaker B: We certainly haven't seen a payment rule that renders it DSIC, but to prove that it's not implementable, we'd have to argue that there is no conceivable payment rule that could work, which seems like a tall order as well. So not clear. All right, second crucial definition.
00:21:08.840 - 00:21:37.120, Speaker B: Oh, and I should also say, just to tie this in with where we were last time. So the sort of cliffhanger question at the end of last lecture was in the context of sponsored search, we had proposed an allocation rule, the one that awards the J slot to the Jace highest bidder. And really now, in this vocabulary, the question was, is that an implementable allocation rule or not? That's what we want to understand from the end of Wednesday.
00:21:41.940 - 00:21:42.604, Speaker A: U.
00:21:42.742 - 00:22:15.710, Speaker B: So here's the second really important definition. Rule is monotone. If for every bidder I, and for every fixed set of bids by the rest of the bidders, remember, B minus I is an N minus one vector, it's the bids of everybody except for that of I itself.
00:22:15.710 - 00:22:48.490, Speaker B: If for every bidder and bids by everyone else, the amount of stuff that I gets holding everyone else fixed can only go up as it bids higher. So it's nondecreasing and it's bid z. That is, with a monotone allocation rule, the higher the bid, the more stuff you get.
00:22:57.580 - 00:22:59.212, Speaker C: Also bid, right?
00:22:59.346 - 00:23:02.892, Speaker B: Yes. Non decreasing in his bid. Yes.
00:23:02.892 - 00:23:20.108, Speaker B: Can stay the same, just can't go down. So, single item auction, let's think about the first same two rules. So how about the allocation rule where the highest bidder wins? So, monotone or not, it's monotone.
00:23:20.108 - 00:23:33.844, Speaker B: Right? In a single item auction, you either get nothing or you get the item. If you keep everyone else fixed and you increase your bid, well, as long as you're less than the highest of the bidder, you get nothing. And as soon as you're bigger than all the other bids, you get one.
00:23:33.844 - 00:23:46.004, Speaker B: Okay? And in particular, if you're the highest bid and I raise your bid even more, you're still the highest bid, so you'll still win. So that's a monotone rule. How about the allocation rule where I give it to the second highest bidder.
00:23:46.004 - 00:24:14.980, Speaker B: Is that monotone or is that not monotone? Why is it not monotone? Right? So if you're currently the winner, that means you're the second highest bid. But then if I jack up your bid so you're the highest, all of a sudden you're the loser, so it's a violation of monotonicity. Okay? So as far as working with auction design, this monotonicity property is much more operational than talking about implementability.
00:24:14.980 - 00:24:28.410, Speaker B: Often not always, but often for a given allocation rule, it's either obvious or easy to check whether or not it's monotone. So this is a relatively verifiable condition. Here's another example.
00:24:28.410 - 00:24:59.116, Speaker B: So remember in sponsored Search, we already went through the exercise of, well, if we assume without justification truthful bids, what allocation should we choose? And we argued that you should give the Jth highest bidder to the Jth best slot for each J. So what about that allocation rule? Is that monotone or is that not monotone? That's monotone.
00:24:59.228 - 00:24:59.552, Speaker A: Right?
00:24:59.606 - 00:25:21.368, Speaker B: So remember, the click through rates of the slots are assumed to be going up as you get higher and higher slots. So if I keep everyone else fixed and I increase your bid, the only thing you will do is ascend through the hierarchy, you will only have a higher and higher ranked bid. So you'll only get a higher and higher slot, which by assumption only gives you a higher and higher CTR click through rate.
00:25:21.454 - 00:25:22.090, Speaker A: Okay?
00:25:23.820 - 00:25:49.200, Speaker B: So example, sponsored search allocation rule from last time. Now, of course, the reason we focused on this rule was not because we didn't know yet that we cared about monotonicity, we just wanted to maximize surplus. And we're now seeing our happy fortune that indeed that turns out to be monotone.
00:25:49.200 - 00:26:21.900, Speaker B: Any questions about these two important definitions? Allocation rule being implementable, allocation rule being monotone. Do you speak up?
00:26:21.970 - 00:26:25.580, Speaker C: Do you know of examples of things that are implementable and not monotone?
00:26:25.920 - 00:27:11.390, Speaker B: So that'll be clarified in the next theorem? Yeah, it's a good question. The question was, is it possible to be implementable without being monotone? Other questions? All right, so let me introduce you to the first major tool in your mechanism design toolbox. So I'm going to call this Myerson's Lemma because I'll be using a form that appears in a paper by Roger Myerson in 1981.
00:27:11.390 - 00:27:43.140, Speaker B: State it in three parts. The first part says that the two definitions I just gave you, coincide. They describe exactly the same set of allocation rules.
00:27:43.140 - 00:28:15.068, Speaker B: So usually what we really care about is we care about whether an allocation rule is implementable. We're in a situation like at the end of last lecture, where we know how we want to make the assignment, but we don't know how to make the payments. We don't even know if it's possible to make suitable payments to get the desired incentive properties.
00:28:15.068 - 00:28:59.768, Speaker B: So part one says checking whether or not something's implementable reduces to checking whether or not, it's monotone, which is an intuitively, much more operational condition. Further, in the case where you do have an allocation rule which is monotone and ergo it is implementable, the question then is, all right, we know these payments exist to extend this rule to an incentive compatible mechanism. What do they look like? What's our design space now for the payments? So, part two says that in this situation, actually, the design space is trivial.
00:28:59.768 - 00:29:43.004, Speaker B: There is a unique choice of how to assign payments so that you get the DSIC property. I'm lying a little bit. I'm going to assume a very natural normalization for part two.
00:29:43.004 - 00:29:56.876, Speaker B: I'm going to assume that if you bid zero, then your payment is zero. Certainly under our current assumption that payments lie between zero and your bid times your allocation. A bid of zero forces it to be zero.
00:29:56.978 - 00:29:57.244, Speaker A: Okay?
00:29:57.282 - 00:30:27.160, Speaker B: So I'm going to state that assumption in this Lemma as well. You it's modulo that normalization, unique payments for monotone rules. There's only one way to do it, and this is not merely existential.
00:30:27.160 - 00:30:44.800, Speaker B: In fact, these payments are given by an explicit formula, which I will show you in the course of proving Myerson's Lemma. So I'm not going to state it here. It'll arise naturally.
00:30:44.800 - 00:31:01.252, Speaker B: So each of these parts is interesting in its own right.
00:31:01.386 - 00:31:02.068, Speaker A: Okay?
00:31:02.234 - 00:31:11.168, Speaker B: So part one is completely fundamental. It tells us exactly what our design space is for DSIC mechanisms. It is precisely the set of monotone allocation rules.
00:31:11.168 - 00:31:19.080, Speaker B: If you can assign goods in the way that you want and it's monotone, you're done. If you can't, you got to pick. A different allocation rule can't be extended to be incentive compatible.
00:31:19.080 - 00:31:43.664, Speaker B: Part two is really interesting in particular. I'll leave this as an exercise, but you might have been wondering, does anything other than the vicary auction work? What do I mean by work? I mean well, suppose you always want to give the good to the highest bidder, and you want truthful biding to be strategy proof, to be a dominant strategy. Is there any way to do it other than the second price rule? Like, what about the third price rule? It studied that in your exercise set.
00:31:43.664 - 00:31:55.924, Speaker B: Well, a consequence of this is that actually the vicary auction is unique. That is the only way to award the good to the highest bidder and have no strategic behavior on the part of the participants. It's the only way to do it.
00:31:55.924 - 00:32:09.150, Speaker B: So that's also very interesting. As we'll see, it'll be great to have an explicit formula that'll tell us exactly how to charge payments in sponsored search auctions. We'll also use that formula when we talk about revenue maximizing auctions next week.
00:32:09.150 - 00:32:28.672, Speaker B: Finally, let me just note that again, I haven't proved this Lemma for you. So you shouldn't necessarily believe that it's true. But if you take for now you believe me that this Lemma is true, it actually implies the answer to the cliffhanger from last week.
00:32:28.672 - 00:32:50.710, Speaker B: Okay, so corollary there is an awesome auction for sponsored search. So why is that true?
00:32:56.920 - 00:33:06.590, Speaker C: It obviously we have monotonic allocation goals research.
00:33:09.870 - 00:33:10.474, Speaker B: Right?
00:33:10.592 - 00:33:15.850, Speaker C: I think we're also guaranteed maximum social payoff.
00:33:17.650 - 00:33:29.534, Speaker B: Excellent. So being awesome, I defined as having three properties. So first of all, you should be dominant strategy instead of compatible, but you should also maximize surplus and be polynomial time.
00:33:29.534 - 00:33:44.070, Speaker B: So at the end of last lecture, we handled two and three. Okay? If you just do the greedy algorithm and bids happen to be truthful, you get two and three. Now, we observed three minutes ago that happily, this surplus maximization rule is actually monotone.
00:33:44.070 - 00:34:04.480, Speaker B: Therefore Myerson's Lemma applies to it and guarantees us that there are payments, in fact, a unique choice of payments, so that we can extend it to a dominant strategy and send a compatible mechanism. So it's just using a greedy allocation rule combined with this lemma to generate suitable payments. And that gives us our sponsored search auction that satisfies one through three.
00:34:04.850 - 00:34:05.600, Speaker A: Okay?
00:34:06.130 - 00:34:12.446, Speaker C: Yes, if you have probability allocations, say the allocation property is proportional to my.
00:34:12.468 - 00:34:32.178, Speaker B: Bid, even then we can say that it's monetized good. So the question was about randomized auctions, which I'm not going to talk a lot about now, because I want to develop intuition for deterministic auctions. But looking ahead a little bit, you could equally well define these little x of I's as the expected amount of good that you get at a given bid profile.
00:34:32.178 - 00:34:48.140, Speaker B: And then this theorem extends with exactly the same proof. So this theory will accommodate randomization with essentially no extra work. That said, for today, for clarity, you can just think about deterministic auctions like the ones we've discussed so far.
00:34:48.140 - 00:35:02.480, Speaker B: Other questions. Okay, so next up is the proof. Let me sort of take a little break before that, a couple of things.
00:35:02.480 - 00:35:21.240, Speaker B: So, here are the results of the first price auction experiments that we ran on Wednesday. Pass those around the other direction. So, on one side, we've plotted how you bidded as a function of your value.
00:35:21.240 - 00:35:40.410, Speaker B: On the other side, there's a list of all of the participants and how much money they won. And again, remember, before you start feeling too smug, how much you won is probably a property more of your birthday than the cleverness in how you bid. So overall, the class, I thought bid very reasonably.
00:35:40.410 - 00:36:01.006, Speaker B: It was a bit more aggressive than how the equilibrium theory predicts, but that's completely normal. It's usual in experiments that the biding is a little more aggressive than what theory predicts. You might ask, okay, what is it that theory predicts? What is the equilibrium in this first price auction supposed to be? Well, it does depend on the number of bidders, as many of you correctly determined.
00:36:01.006 - 00:36:15.960, Speaker B: The more competition you have, the closer your bid should get to your value. The less you can get away shading your bid, the more competition you have if you're paired up with only one other bidder, that is, if you're in a two bidder first price auction at equilibrium, everybody should bid half of their value.
00:36:16.570 - 00:36:17.366, Speaker A: Okay.
00:36:17.548 - 00:36:27.146, Speaker B: And in class, it was more than that. What was the lease fit? Okay, 75%, probably more like something like that. Yeah.
00:36:27.146 - 00:36:53.202, Speaker B: So it should have been 50% of your value at equilibrium, but the experiments had more something like 75% of your value. And then if you're in a three bidder auction with uniform valuations, like we had, the equilibrium suggests you should bid two thirds of your value in the three bidder case. So everyone cooperated brilliantly by there being 42 participants, which divides equally by two and by three, despite the fact there's 51 enrolled students.
00:36:53.202 - 00:36:59.750, Speaker B: So thank you for that. Thank you also. Thank you also for overbidding, because then it means I have to pay you less.
00:36:59.750 - 00:37:11.530, Speaker B: Right? So that was great. I'd like to particularly thank the student who won both auctions in which they participated, but did so by bidding their value. That was fantastic.
00:37:11.530 - 00:37:30.990, Speaker B: It's really a model student from the instructor's perspective. So for those of you who have non zero winnings, you can pick up an envelope with your pocket change from one of the Tas afterwards. Don't spend it all in one place.
00:37:30.990 - 00:37:57.300, Speaker B: Okay? The other announcement is I don't think I brought quite enough of the release forms last time, so this is just saying you understand that this class is being videotaped with the videos posted on the web, so if you could just pass these around. If you signed one last time, I have it, so you don't need to do it again. If you didn't sign one last time, please sign it today and give it to one of the Tas after class.
00:37:59.550 - 00:38:00.300, Speaker A: It.
00:38:18.270 - 00:38:24.254, Speaker C: Allocation rule is wrapped up in the allocation rule, like the fact that there's a single good or there's many.
00:38:24.292 - 00:38:36.450, Speaker B: Good single parameter environment. That's exactly why I define single parameter environments exactly. Because those are the settings in which you can prove this theorem.
00:38:40.090 - 00:38:43.400, Speaker C: A single good option where we give the good.
00:38:45.290 - 00:38:57.930, Speaker B: Exactly. Remember? So in a single parameter environment, there's a notion of the feasible allocations. And so that is where the details of your environment, like how many goods there are, shows up.
00:38:57.930 - 00:39:09.498, Speaker B: If you only have one good, then you only have N plus one feasible allocations. If you have K copies of a good, then you have many more feasible allocations. So it's part of the description of the environment, what's feasible.
00:39:09.498 - 00:39:15.406, Speaker B: And of course, your allocation rule is responsible for picking something feasible for every bit vector. Yeah.
00:39:15.508 - 00:39:18.026, Speaker C: Could you explain why it is optimal.
00:39:18.058 - 00:39:25.934, Speaker B: To be at one app that's on Problems at One? Actually, yes. So Problems at One asks you to verify that it's not obvious, so it takes some calculations.
00:39:25.982 - 00:39:31.000, Speaker C: Let's say, for example, everybody else does that, and you're born on January 1.
00:39:32.890 - 00:39:36.280, Speaker B: I asked you to. Prove it on the problem set. So I promise it's true.
00:39:36.280 - 00:39:48.806, Speaker B: We can talk afterwards about it too, but again, it takes a computation. It's not obvious. It's called a bayes nash equilibrium.
00:39:48.806 - 00:40:01.710, Speaker B: Yeah. So again, the details are all spelled out on the homework. So let's get started on the proof.
00:40:01.710 - 00:40:17.890, Speaker B: We begin with an allocation rule X. At the moment, x might be monotone, it might not be monotone. I'm currently agnostic.
00:40:17.890 - 00:40:33.930, Speaker B: Here's the plan. Let's do a thought experiment. Suppose there did exist some payment rule P, so that coupling it with x gave you an incentive compatible mechanism.
00:40:33.930 - 00:41:02.100, Speaker B: Let's try to think about what P would necessarily have to look like for this fact to be true. So the plan is do you mind?
00:41:02.470 - 00:41:03.220, Speaker A: Thanks.
00:41:03.590 - 00:41:31.834, Speaker B: The plan is to invoke this DSIC constraint, which I've said on multiple occasions is very strong. So to invoke this constraint and use it to whittle down the space of candidates for this payment role, p until one sole candidate remains. Okay, so how are we going to do that? Well, let's fix a bidder I and bids by the others b minus I.
00:41:31.834 - 00:41:44.682, Speaker B: Remember, dominant strategy means no matter what the other bidders no matter what bidder you look at, no matter what the other bidders are doing, it has to be a dominant strategy for this point, for this person to report truthfully. So fix who we're talking about, fix what the other people are doing. Arbitrarily.
00:41:44.682 - 00:42:19.706, Speaker B: I don't want to carry all this notation around, so let me just as shorthand write x of z and P of z for what I gets, given what everyone else is doing. So the amount of stuff that I gets when it bid z with everyone else doing B minus I, and what it has to pay when it bids z with everyone else bidding according to B minus i. Now, it might help you to have a graphical representation of what one of these x's look like, what this allocation rule looks like.
00:42:19.808 - 00:42:20.460, Speaker A: Okay.
00:42:22.610 - 00:42:35.114, Speaker B: So the x axis here. So remember, B minus I is fixed. So we're looking at as a function of I's bid z, how much stuff does it get?
00:42:35.252 - 00:42:35.940, Speaker A: Okay.
00:42:39.990 - 00:42:55.794, Speaker B: So in a Vic re auction, in a single item auction. So, again, I'm just sort of looking at special cases to develop your intuition here. If we were working in a single item auction environment, and we were looking at the highest bidder wins rule, well, for low bids, you lose.
00:42:55.794 - 00:43:12.060, Speaker B: And then as soon as you're the highest bid of them all, you win. So this allocation rule is going to look like this. Your x value is zero for a while, and then at some point it jumps to one.
00:43:15.090 - 00:43:15.840, Speaker A: Okay.
00:43:17.730 - 00:43:41.510, Speaker B: So this is what your x function, your x curve, looks like in the highest bidder wins single item rule auction. Now, with sponsored search, it's a little more complicated, but it's the same flavor. The only difference is and so again, I'm thinking of the allocation rule, where the Jth highest bidder gets the Jth best slot.
00:43:41.510 - 00:43:53.142, Speaker B: So now the difference is it doesn't just jump in one shot from zero to one. So if you're even worse than the KTH highest bidder in the sponsor search auction, you don't get any slot at all. So you get no stuff.
00:43:53.142 - 00:44:05.062, Speaker B: Your x value zero. As soon as you become the KTH highest bidder, you get alpha sub K stuff. Once you're the K minus one th highest bidder, you get alpha sub K minus one bigger amount of stuff and so forth.
00:44:05.062 - 00:44:11.738, Speaker B: So there's not going to be just one jump for sponsored search. There's a jump each time you ascend the ranking in the slots.
00:44:11.834 - 00:44:12.480, Speaker A: Okay?
00:44:13.170 - 00:44:22.930, Speaker B: So this is going to look like that and then like that. So this is when you're in the K slot. This is when you're in slot K minus one.
00:44:22.930 - 00:44:27.800, Speaker B: And maybe there's only three slots and it looks like this. So this would be sponsored search.
00:44:30.810 - 00:44:31.414, Speaker A: Okay?
00:44:31.532 - 00:44:38.710, Speaker B: So when I say consider an allocation rule X. Here are two of the curves that we might be talking about. These happen to be monotone curves.
00:44:38.710 - 00:45:01.034, Speaker B: Now, I said the plan is to invoke this very stringent dominant strategy condition to whittle down what the payment roll p could possibly look like. So let me show you how we do that. It actually winds up being very slick.
00:45:01.034 - 00:45:26.520, Speaker B: It's based on a simple but clever swapping trick. Again, remember where we are, we were given X and we're as a thought experiment, thinking hypothesizing about a rule p so that XP is dominant strategy incentive compatible. So assume for the moment that's true.
00:45:29.630 - 00:45:30.474, Speaker A: Okay?
00:45:30.672 - 00:45:43.600, Speaker B: So suppose such a P exists and here's what we're going to do. And this is sneaky. We take two values, z and y.
00:45:43.600 - 00:46:02.754, Speaker B: These are just two numbers, five and six. And we say, well, for all the auction no's, z is the person's actual private valuation and it's scheming and thinking about biding y instead. Or symmetrically, maybe Y is its true valuation and it's scheming about bidding x instead.
00:46:02.754 - 00:46:13.350, Speaker B: It has to handle both of those cases. So let's just write down the DSIC constraints for those two cases, see what we get. Turns out to be quite powerful.
00:46:13.350 - 00:46:26.330, Speaker B: So case one is when the true value is Z and the false bid is Y.
00:46:26.480 - 00:46:27.180, Speaker A: Okay?
00:46:28.350 - 00:46:36.414, Speaker B: So dominant strategy incentive compatibility says playerized utility when it bids z, better be at least as high as when it bids Y.
00:46:36.532 - 00:46:36.862, Speaker A: Okay?
00:46:36.916 - 00:46:55.986, Speaker B: That's by definition of the incentive constraint. So what is its utility when it bids z? Well, we just look as usual, we look at how much stuff it gets when it bids z that's X of z. We look at its value per unit of stuff, right? By assumption, its true value is z.
00:46:55.986 - 00:47:15.500, Speaker B: So it gets z per unit of stuff and then it pays whatever it pays when it bids z. Okay, so this is I's utility when it bids Z. By definition and by DSIC, this better be at least as large as this utility when it bids y.
00:47:15.500 - 00:47:30.960, Speaker B: So what changes if it bids y instead of Z? How does this expression change? Let me give you a hint. There are three Z's on the left hand side. Two of them change to Y's, not all of them.
00:47:30.960 - 00:47:49.326, Speaker B: Can you speak up? Yes, exactly. So the two Z's that change to Y's are the one inside the argument, okay? So bidderI cannot control what its actual value is per unit of good. That's immutable.
00:47:49.326 - 00:47:52.898, Speaker B: That was in effect, given at birth. It can change what it bids.
00:47:52.994 - 00:47:53.254, Speaker A: Okay?
00:47:53.292 - 00:48:24.350, Speaker B: And its bid gets fed into the allocation rule and the payment rule. So the utility, if it bids Y, is the amount of stuff it bids when it bids y that it gets times its value per unit of good, which is still Z, can't change that minus how much it has to pay when it bids y. Everyone clear on that? Why does positive why is what?
00:48:24.420 - 00:48:26.560, Speaker C: Why is positive Y greater than.
00:48:28.550 - 00:48:28.926, Speaker A: That'S?
00:48:28.958 - 00:48:55.222, Speaker B: By definition? I set it up that way. I'm saying, consider it says that the utility of truth telling bidding Z is at least the utility of biding Y, which again just is by definition true under the hypothesis that XP is dominant strategy center compatible. This says for every bidder, for no matter what its value is, no matter what it bids, blah, blah, blah, blah.
00:48:55.222 - 00:49:03.674, Speaker B: In one particular case when it happens to have value Z and ponders the false bid y. Certainly in that case, this better be true. It has to be true in all cases.
00:49:03.674 - 00:49:26.500, Speaker B: So I'm just instantiating DSIC in a judiciously chosen case. So here's the swap. On the other hand, think about a situation totally possible where I's actual value is y and it contemplates underbidding submitting the false bid Z.
00:49:26.500 - 00:49:58.480, Speaker B: So again, because it's dominant strategy incentive compatible utility of biding truthfully meaning of biding, its actual value y better be at least as large as its utility if it instead bids falsely the bid z. Same reasoning. So what? Well, here's what I'm going to do, okay? Here's what's neat about this.
00:49:58.480 - 00:50:10.226, Speaker B: I can read off from these two inequalities upper and lower bounds on the difference between the payment at y and the payment at Z.
00:50:10.408 - 00:50:10.754, Speaker A: Okay?
00:50:10.792 - 00:50:27.080, Speaker B: So I'm going to do a sandwiching argument in the middle of the sandwich. So remember, y is some bid, z is some smaller bid. So I'm looking at how much bigger the payment is going to be at the bid Y than at the smaller bid Z.
00:50:27.080 - 00:51:08.130, Speaker B: And I'm going to derive a lower bound from one of these and an upper bound on this from the other. That's going to be the sandwich. So from condition one, if I bring P y over here and then ZX of z over here, I get a lower bound on P of Y minus P of Z, which is z times the amount of stuff you get at Y minus the amount of step you get z, that's just rearranging one's.
00:51:08.130 - 00:51:25.980, Speaker B: Rearranging two. So here bringing P of Y to this side. I get an upper bound on the payment difference, which is Y times the allocation difference.
00:51:25.980 - 00:51:46.740, Speaker B: Okay, so I get a sandwich on this payment difference in terms of two other quantities. I claim this sandwich is useful so much so I'm going to designate it Star.
00:51:49.750 - 00:51:52.100, Speaker C: The X, Y and Z.
00:51:54.870 - 00:51:55.794, Speaker B: Say it again.
00:51:55.912 - 00:51:57.140, Speaker C: The Y and Z.
00:51:59.430 - 00:52:06.566, Speaker B: I mean, maybe the semantics are different, but the number as numbers, they're the same, right? So think of Z is five and Y is six.
00:52:06.668 - 00:52:14.134, Speaker C: But the two equations are only true based on assumptions that one of them.
00:52:14.172 - 00:52:17.218, Speaker A: Is the true value and the other one is no.
00:52:17.244 - 00:52:49.414, Speaker B: So the auction is DSIC. So that means for a given bidder, whatever its actual value is, whether it's five or whether it's six, whatever it's thinking about bidding, whether it's five or whether it's six, its truthful utility has to be at least its false bidding utility. So I've instantiated that condition twice for one hypothetical bidder whose true value is five and is contemplating bidding six a second time for a hypothetical bidder whose true value is six and is contemplating bidding five.
00:52:49.414 - 00:52:59.190, Speaker B: From those two instantiations of this DSIC condition, I get those two inequalities. They have to be true if XP is DSIC and by manipulation, I get the sandwich.
00:53:00.990 - 00:53:22.686, Speaker C: Yeah, I was having a similar problem, I think. But the way that I worked out is that the equation that you've written up there actually as whatever times X. And so since both of the equations incorporate that idea of true value, they.
00:53:22.708 - 00:53:24.558, Speaker A: Can both be true at the same time.
00:53:24.724 - 00:53:43.362, Speaker B: No, I guess the reason these are both true at the same time is because the auction has to guard simultaneously against a bidder that has a value five, because that might well be the truth, that might well be reality. And it has to guard against a bidder whose true value is six. That might well be reality.
00:53:43.362 - 00:53:52.514, Speaker B: The auction doesn't know. So the auction has to handle protect against every single possible reality simultaneously. The value is unknown.
00:53:52.514 - 00:54:05.726, Speaker B: Okay, so it really has to guard against both of these two things at the same time. Of course, if the designer knew up front that this case was impossible, it would be a much easier auction design problem. The whole point is this might well be true.
00:54:05.726 - 00:54:20.590, Speaker B: This scenario. This might well be true. All right, so why is Star useful? It actually immediately implies one part of one promise from Meyerson's Lemma.
00:54:20.590 - 00:54:43.590, Speaker B: And I'm going to leave it as you, as an exercise on exercise set two to make sure that this proof is making sense. So the exercise is that from Star, you can read off the fact that if I give you a non monotone rule, like the second highest bidder wins rule. There is no way it is DSIC.
00:54:43.590 - 00:54:54.240, Speaker B: There is no way that there is a payment rule that extends that non monotone allocation rule to a DSIC mechanism. It cannot exist. That actually follows immediately from Star.
00:54:54.240 - 00:55:11.490, Speaker B: So if X is not monotone, then x is not implementable.
00:55:14.950 - 00:55:15.700, Speaker A: Okay?
00:55:16.870 - 00:55:28.642, Speaker B: So that is one direction of part one. Part one says implementable if and only if monotone. So we've shown that not monotone is not implementable.
00:55:28.642 - 00:55:47.950, Speaker B: So what I need to show you is that if you are monotone, then you are implementable. So we're going to assume that for the rest of the proof. So, rest of proof, assume X is monotone.
00:55:47.950 - 00:56:13.682, Speaker B: For simplicity. This is just to sort of reduce the amount of technical stuff you have to keep track of in real time during this lecture. Let's think just about piecewise constant allocation rules, like these two on the board, like the ones we've seen so far, okay? So for simplicity, we're going to assume x is monotone.
00:56:13.682 - 00:56:35.194, Speaker B: We know that's now necessary just for convenience. Assume x is piecewise constant. That is, it starts out at some number, then there's a jump, then it stays at that number, there's another jump, stays at that number, and so on.
00:56:35.194 - 00:56:38.620, Speaker B: Okay, so we're looking at allocation rules like these two.
00:56:44.350 - 00:56:45.780, Speaker A: You it.
00:56:56.550 - 00:57:29.840, Speaker B: So that's one immediate use of the payment of the payment difference sandwich. Let me actually use it again to prove the rest of the parts of Myerson's Lemma. So maybe I should write it again.
00:57:29.840 - 00:58:00.730, Speaker B: So we had in the middle P of Y minus P of z. In the bottom we have x. Sorry, payment sandwich.
00:58:00.730 - 00:58:20.094, Speaker B: So now what I want to do is I want to think about Y and Z, which so far have been arbitrary, y has been bigger than Z. That's all I've assumed. I want to now think about Y and Z as getting very, very close to each other, never the same.
00:58:20.094 - 00:58:49.702, Speaker B: But I want to think about fixing Z and letting Y approach Z from the right and getting super close. So in Star, fix Z and take the limit Y down to Z to derive. Well, let's see what's going on.
00:58:49.702 - 00:58:58.886, Speaker B: Okay, there's really two cases. So remember, for simplicity, we're working with piecewise constant allocation curves. That's just to help you understand the argument.
00:58:58.886 - 00:59:27.460, Speaker B: So case one is where Z is not at a breakpoint, okay? Z is like there, or it's like there. So what's happening to the difference between X and Y and X of Z? As I take Y super close to Z, it's zero, right? X is going to be constant. It's going to have the same value for Y and Z once Y gets sufficiently close to Z, right? So the only action, okay? So when that happens, the left hand side will read zero, the right hand side will also read zero.
00:59:27.460 - 00:59:32.998, Speaker B: So the payment sandwich says that there can't be a jump of the payment at Z either.
00:59:33.084 - 00:59:33.430, Speaker A: Okay?
00:59:33.500 - 00:59:56.538, Speaker B: It's got to be exactly zero. That difference. What about when Z is exactly one of these breakpoints and I let Y tend to Z in the limit? What is going to be this value? It's just going to be the height.
00:59:56.538 - 01:00:10.402, Speaker B: It's going to be the extent of that jump at Z. Now, as you take Y to Z, these two numbers are also becoming arbitrary close to each other. So we have that the difference.
01:00:10.402 - 01:00:20.374, Speaker B: The jump, if you will, of the payment at Z has to be exactly because it's sandwiched on both sides by the same number. Exactly. Z times the jump in x at z.
01:00:20.492 - 01:00:21.160, Speaker A: Okay?
01:00:26.730 - 01:00:40.140, Speaker B: So jump in P at Z has to be Z times the jump in x at Z.
01:00:41.470 - 01:00:42.220, Speaker A: Okay.
01:00:48.690 - 01:01:33.120, Speaker B: So this is now what I meant by saying that the dominant strategy condition is super strong and it's going to whittle down what the payment rule has to look like to just one candidate. So we've now learned is that if I give you x and you're trying to solve for P to make it DSIC at every single point Z, remember, Z is arbitrary here, at every single point Z x, the given allocation rule dictates with no uncertainty what has to happen. Either P stays exactly the same, it's also constant, where x is constant, or where there's a jump in x, there's also a jump in P, and it's whatever that jump in x is multiplied by the point at which that jump happens, Z.
01:01:33.120 - 01:01:39.600, Speaker B: So this dictates how P the payment is changing at every single point.
01:01:39.970 - 01:01:40.846, Speaker A: All right?
01:01:41.028 - 01:01:57.380, Speaker B: And from that, if you know the initial condition that the payment of a zero bit is zero, it uniquely determines what the payment has to be no matter what I's bid. Is it's just the sum of these jumps that you experience? So.
01:02:10.030 - 01:02:10.780, Speaker A: It.
01:02:12.750 - 01:03:10.582, Speaker B: If P of zero equals zero, which I am assuming in the version I'm proving, then we have the following payment formula that the payment of bidder I has to equal. Well, so what is it? So we look at the jumps in x and they get multiplied by the position of the jumps where what I mean by these YJS are just right. So if you think about the bid as being somewhere like in this last part here, I'm just summing over the one, two, three jumps that occur to the left of I's bid.
01:03:10.582 - 01:03:14.222, Speaker B: That's all I'm doing here. Okay, so we're Y one through Y.
01:03:14.276 - 01:03:14.880, Speaker C: L.
01:03:27.350 - 01:03:52.072, Speaker B: In the range zero to B. Sorry, shouldn't be an I there. So what have we done? We've said we were given an allocation rule x.
01:03:52.072 - 01:04:13.570, Speaker B: We are trying to solve for a payment rule P, subject to the constraint of dominant strategy and center compatibility by invoking this constraint instantiating. It cleverly. We have deduced that the only possible payment rule that has any chance of working is this one here.
01:04:13.570 - 01:04:36.680, Speaker B: This is the only candidate for a set of payments that would render the allocation x into an incentive compatible mechanism. So, are we done? Have we finished the proof? There's actually one more thing we have to do. See what's missing?
01:04:39.180 - 01:04:39.592, Speaker A: Good.
01:04:39.646 - 01:04:51.932, Speaker B: The proof that it works. It's exactly right. So to do verify, okay, I said this is the only thing that could work, but I haven't shown you it does work.
01:04:51.932 - 01:05:07.136, Speaker B: And actually, if x is not monotone, we know that even this doesn't work. So we have to verify that if x is monotone, then indeed this payment rule gives us an incentive compatible mechanism. If we can show that, then indeed we're done.
01:05:07.318 - 01:05:07.760, Speaker A: Okay?
01:05:07.830 - 01:05:28.564, Speaker B: I've already argued, or I've already given you as an exercise, one direction of one, and then the rest of this proof is a constructive proof of the reverse direction. Given a monotone allocation rule, I have constructed for you a payment rule p, we've argued this is the only one that could work. And then this is indeed the explicit formula.
01:05:28.692 - 01:05:29.032, Speaker A: Okay?
01:05:29.086 - 01:06:00.420, Speaker B: And we'll interpret this explicit formula to give you some more intuition for it once we finish this verification. So to do verify that t works when x is monotone. Actually, let me give you a little bit more intuition for this payment formula right now, okay? So let's just think about a single item auction, okay? Let's think about the allocation rule where x just gives it to the highest bidder.
01:06:01.000 - 01:06:01.750, Speaker A: Okay?
01:06:05.320 - 01:06:30.380, Speaker B: So then x always has the value zero or one, right? So if you're a bidder, low bids you don't win, high bids you do win. What is the transition point at which your allocation switches from zero to one? It's basically the lowest bid. That makes you the highest overall, also known as the second highest bid overall.
01:06:30.380 - 01:06:54.150, Speaker B: So what I'm saying is, in the highest bidder wins rule, the location of the jump on the x axis where you switch from zero to one, the location of the jump I e what we're calling z or y j, we're calling z here. That's the second highest bid overall. Okay, what is the magnitude of the jump? You jump from losing zero to winning one.
01:06:54.150 - 01:07:00.660, Speaker B: So as a special case, we recover the second price payment rule from this formula.
01:07:01.080 - 01:07:01.588, Speaker A: Okay?
01:07:01.674 - 01:07:15.720, Speaker B: So if you're the winner with this allocation rule, if you are the highest bidder, the jump occurred at the highest other bid, the second highest bid overall. And the formula tells you that's exactly what you should pay and that it's the unique way to render that rule incentive compatible.
01:07:15.880 - 01:07:16.590, Speaker A: Okay?
01:07:18.320 - 01:07:39.700, Speaker B: All right, so let me complete the verification. Let me give you a proof by picture. It's not hard to do algebraically, but for the sake of variety, let me show off my the poor drawing skills.
01:07:39.700 - 01:08:13.180, Speaker B: Remember, here's the payment rule here. So given a bid, you look to the left, you look at all of the jumps in the allocation rule, in the X curve between a bid of zero and the bid you actually submitted, you find the locations at which the allocation curve jumped. That's what I'm calling y one through YL.
01:08:13.180 - 01:08:20.924, Speaker B: And the payment you sum over those jumps, and it's the extent of the jump times the location of the jump.
01:08:21.052 - 01:08:21.730, Speaker A: Okay?
01:08:24.500 - 01:08:59.740, Speaker B: All right, so proof by picture. Let's draw the same picture three times. Three times, because I want to compare what happens when you bid truthfully with this payment rule, what happens when you overbid and what happens when you underbid.
01:08:59.740 - 01:09:26.980, Speaker B: Okay, so we're always talking about the same allocation rule. So maybe it's a sponsored search type of allocation rule, and we're talking about a fixed bidder. So its value is the same in all of the cases.
01:09:26.980 - 01:10:03.010, Speaker B: So there's its value. So now let's see what happens in the three cases bidding truthfully underbidding and overbidding. So what's its utility when it bids truthfully? When it submits a bid equal to its value? Don't forget what the utility formula is.
01:10:03.010 - 01:10:15.910, Speaker B: It's V times X of B minus P of B. So here, V is its true private value. B is the bid it submits to the auction, which may or may not be the same as V.
01:10:15.910 - 01:10:33.352, Speaker B: But for starters, let's assume it is the same. So how much stuff does it get? First of all, the amount of stuff it gets, which corresponds to the height. So x of B.
01:10:33.352 - 01:10:51.056, Speaker B: Remember that by definition, this curve is just how much stuff you get as a function of your bid. So that's how much stuff it gets when it bids truthfully. What's its value for that stuff? Well, that's given by the width, right? So we multiply it by its value per unit of stuff.
01:10:51.056 - 01:10:58.400, Speaker B: Okay, so it's that height times this width. So that gives us this rectangle.
01:10:59.800 - 01:11:00.550, Speaker A: Okay.
01:11:04.760 - 01:11:24.590, Speaker B: How much does it pay? And this is where I think your intuition will become a little sharper. So how do you compute the payment? Well, you look to the left and you say, what were all of the breakpoints and the total payment? Well, you sum over those breakpoints. You look at the height of the breakpoint, and you look at the location where it happened.
01:11:24.590 - 01:11:33.928, Speaker B: So there are two breakpoints, two jumps to the left of V. Here's the first jump. That's the magnitude of the jump.
01:11:33.928 - 01:11:45.890, Speaker B: That's how much it went up. And this is the location of the jump. Okay, so I'm looking at the location of the jump, which is so this is Y one, and this is Y two.
01:11:45.890 - 01:12:04.600, Speaker B: Okay, so the locations of the jump times the magnitude of the jump. So the first term of the payment is this rectangle amount of the jump times the location. The second term of the payment is the amount of the jump times the location.
01:12:04.600 - 01:12:29.440, Speaker B: Okay, so it's the area above that curve. So to be clear, this is the seller revenue, and what remains this stuff. This is I's Utility.
01:12:32.660 - 01:12:33.410, Speaker A: Okay.
01:12:35.140 - 01:13:05.964, Speaker B: So I computed the pink rectangle and then subtracted the area above the curve, leaving the area below the curve. So what happens if I overbids? Remember, we're trying to argue its utility can only go down with the payment rule that we've chosen. So if it overbids, well, how much stuff does it get? Well, now it gets more stuff, right? So remember the allocation rule tells you how much stuff you get.
01:13:05.964 - 01:13:30.228, Speaker B: So the amount is all the way up to here, okay? But its value for stuff is still V, so the width remains V, right? So value per stuff times the stuff you get. So the rectangle changes to this one. The width is the same as before.
01:13:30.228 - 01:13:32.470, Speaker B: The height is bigger because it got more stuff.
01:13:32.840 - 01:13:33.590, Speaker A: Okay.
01:13:38.600 - 01:13:45.064, Speaker B: The payment. So now there's three breakpoints, but the concept is the same. We have Y one, y two, and Y three.
01:13:45.064 - 01:13:51.748, Speaker B: But what you pay is the area above the curve up to the point that you were allocated.
01:13:51.924 - 01:13:52.708, Speaker A: Okay?
01:13:52.894 - 01:13:58.990, Speaker B: So the payment is all of this stuff.
01:14:02.480 - 01:14:03.230, Speaker A: Okay?
01:14:04.720 - 01:14:24.112, Speaker B: So the utility in this picture, remember the utility here was this thing. The utility in the middle picture is the same minus this extra payment it's making up here. Okay? So here, this stuff cancels.
01:14:24.112 - 01:14:33.556, Speaker B: This is all signed with a positive for the utility in this picture. This stuff cancels, this is a positive and this is a negative. So that's less overall.
01:14:33.556 - 01:14:41.480, Speaker B: Okay, so this was the same as before and that's an extra penalty for overbidding. Last case underbidding.
01:14:45.180 - 01:14:45.930, Speaker A: Okay.
01:14:47.440 - 01:15:00.048, Speaker B: All right, so what's the new rectangle? Well, so again, the bidder can't control the width. The width is always its value and that stays the same in all cases. So what it accomplished by underbidding was decreasing the amount of stuff it got.
01:15:00.048 - 01:15:05.504, Speaker B: Okay? New amount of stuff is only down here. So the pink rectangle is now this.
01:15:05.542 - 01:15:06.130, Speaker A: Thing.
01:15:10.680 - 01:15:39.736, Speaker B: And the payment is the area under the curve. Okay, which is this leaving the bidder with this rectangle utility, which you'll notice using here the fact that the allocation curve is monotone, that it had a bigger amount of area here. So this square is exactly this part of this region.
01:15:39.928 - 01:15:40.670, Speaker A: Okay?
01:15:42.080 - 01:16:14.120, Speaker B: And so the general principle here is that for a truth telling bidder, utility is the area under the curve. And I hope this makes the payment formula a little less mysterious. And the revenue is the area above the curve.
01:16:14.120 - 01:16:30.728, Speaker B: And in tandem these two constitute the surplus. Okay, so there's some surplus to the surplus objective function of this bidder getting this amount of stuff. The bidder itself keeps some of that surplus, its utility or consumer surplus.
01:16:30.728 - 01:16:48.672, Speaker B: The remainder, the revenue goes to the seller. That's how it gets split. So it turns out this now hopefully more natural sounding way of charging payments actually by this argument, or if you prefer a simple algebraic argument, does show that when the as monotone.
01:16:48.672 - 01:16:56.576, Speaker B: Indeed. Myerson's payment formula here gives you dominant strategy, incentive compatibility. So that wraps up the proof.
01:16:56.576 - 01:17:06.112, Speaker B: I'll finish the lecture here at the beginning of Wednesday. I'll show you exactly the payment formula that you get for sponsored search. It'll be just an immediate application of Myerson's payment formula.
01:17:06.112 - 01:17:06.530, Speaker B: See you then.
