00:00:02.170 - 00:00:04.762, Speaker A: Now we're going to have Tim Roughgarden.
00:00:04.826 - 00:00:18.990, Speaker B: Who'S talking about axiomatic approach to block rewards. Okay, thank you. Bram, can you hear me in the back? Yeah.
00:00:18.990 - 00:00:30.402, Speaker B: Okay, great. So good morning everyone. I wanted to tell you about some work with a couple of my Columbia colleagues, xi Chen and Christos Papadomitrio an Axiomatic Approach to Block Rewards.
00:00:30.402 - 00:00:44.758, Speaker B: So this is a paper about incentive issues in blockchain protocols. So I'm interested in thinking about whether protocols have been designed in a way that motivates their users to behave in the way that the designer intended. And so this talk is very much in that spirit.
00:00:44.758 - 00:01:07.874, Speaker B: But before I get to the specific contributions of this paper, let me give you a couple of slides about sort of my big dream, which is to build a bridge between a well studied part of economics known as mechanism design and incentive compatibility in blockchain protocol design. So what is mechanism design? It's often referred to as inverse game theory. So what's game theory? Well, you write down a description of a strategic situation.
00:01:07.874 - 00:01:18.994, Speaker B: So you have your players, those might be, for example, miners. In a blockchain protocol, each of the players has actions. So for example, honest mining and various deviations from honest mining and players have payoffs.
00:01:18.994 - 00:01:33.894, Speaker B: So perhaps the expected reward that a miner might receive. And the usual approach in game theory is descriptive. So you just write down your game, you sort of passively look at its equilibria and you try to reason about the strategic setting through properties of that equilibrium.
00:01:33.894 - 00:02:13.894, Speaker B: All right? So mechanism design as inverse game theory, you don't start with a game, rather you start with an intended outcome. And then you put on your engineer's hat and you ask yourself, can I somehow design the rules of a game so that this intended outcome arises as an equilibrium? And so I hope this idea designing the rules of a game so that sort of participants behave in the way you intend, I hope that sounds potentially relevant to incentive issues in blockchain protocol design. And so indeed, what I'm really interested in is opportunities for technology transfer from mechanism design to blockchain protocol design, both in the sense of sort of specific technical tools, but also mechanism design.
00:02:13.894 - 00:02:30.506, Speaker B: It's a very well developed, very successful theory. And so I think it can offer a sort of blueprint for what a theory of incentive compatible blockchains might look like, say, ten years from now. All right, so why am I, and so many other people sort of a big fan of mechanism design? What has it done for anybody? Well, let's start simple.
00:02:30.506 - 00:02:53.010, Speaker B: In mechanism design you have a formal articulation of the design space. So if you walk up to a random mechanism designer on the street and you use the phrase the space of all mechanisms, that mechanism designer will actually know what you're talking about in a precise and mathematical sense. And wouldn't it be nice if we had some mathematical proposals for what the space of all blockchain protocols look like.
00:02:53.010 - 00:03:05.314, Speaker B: Now, once you have a formally articulated design space, all kinds of doors open up. For example, you can pick your favorite objective function and optimize over the design space. Look for a protocol that is in some sense optimal.
00:03:05.314 - 00:03:21.126, Speaker B: And once you have that optimization mindset, you generally wind up exploring parts of the design space you hadn't considered before. So I think this whole exercise also holds the promise of guiding us to new and interesting blockchain protocols. So that's the big dream.
00:03:21.126 - 00:03:33.866, Speaker B: Let me now sort of pass on sort of specifically to what this paper is about. This paper is very much in the spirit, but we're also going to be focusing very narrowly. So we're going to be analyzing in detail a very small piece of the overall puzzle.
00:03:33.866 - 00:03:52.962, Speaker B: In exchange for that specificity, we will be rewarded with sort of very crisp mathematical results, as you'll see. Okay, so you can think about incentive issues on blockchain protocols at various timescales. And in this paper we look at kind of the shortest imaginable timescale of interest, that of a single epic of the creation of a single block.
00:03:52.962 - 00:04:17.550, Speaker B: Now, mind you, the most famous incentive attacks on blockchain protocols, selfish mining and other forking attacks, for example, they take place at a longer timescale thinking about minor behavior over multiple blocks. So I'm not talking about that. I'm talking about incentive issues purely at a single epic for a single block creation, specifically incentives for civil attacks and for collusion at the timescale of a single block.
00:04:17.550 - 00:04:35.410, Speaker B: So what is the design question I want to look at? I want to look at how block rewards get distributed. So go ahead and think of Bitcoin for a concrete example. But in general I'm thinking about some blockchain where each block creation is associated with some reward, maybe a block reward or transaction fees or both, it doesn't matter.
00:04:35.410 - 00:04:54.378, Speaker B: And then somehow the protocol has to decide how the reward associated with this block gets distributed back to the miners. So for example, in a proof of work context, you would want to distribute rewards to the miners or expected rewards to the miners. That is a function of the computational power they bring to the table as a function of their hash rate.
00:04:54.378 - 00:05:20.674, Speaker B: So that's the design question. Given the computational power people bring to the table, how should you distribute the block reward? So what's the dominant paradigm? How is this done in something like Bitcoin? Well, it corresponds to what I'm going to call a proportional allocation, meaning the expected reward of a miner is just equal to the fraction of the overall hash rate that belongs to it. So if you bring 20% of the overall hash rates, your expected reward is 0.2
00:05:20.674 - 00:05:54.030, Speaker B: times the block reward. So the goal of this paper is to really investigate this and ask, is there any reason to do anything different? Could there be some deviation from this proportional allocation rule which was better in some sense of the word? Or equally interesting, can we prove in a formal sense that the dominant paradigm, that the proportional rule is optimal? In some sense? Both of those are things I would be interested in. Okay, so can we do better than the proportional rule? So to start investigating that, I need to tell you what are the other options? So what's the design space?
00:05:54.100 - 00:05:54.718, Speaker C: Okay.
00:05:54.884 - 00:06:14.530, Speaker B: And the abstract formalism we're going to be using is that of an allocation rule. And that's just a function from a vector of hash rates indexed by public key to a vector of expected rewards, again indexed by public key. So it just maps contributed hash rates back to expected rewards.
00:06:14.530 - 00:06:26.502, Speaker B: So that's a function. In our context, it's natural to think specifically about budget balanced allocation rules. That just means that the rule always distributes the entire block reward, nothing more, nothing less.
00:06:26.502 - 00:06:40.358, Speaker B: You can think about relaxations, like allowing the protocol to keep some of the reward for itself. But for the most part in this talk, I'm going to just focus on the natural budget balanced case. All right? I'm saying other options might be other budget balanced allocation rules.
00:06:40.358 - 00:06:52.826, Speaker B: So next you might say, well, that's all fine. I mean, anyone can sort of write down a definition on a slide. But you might be wondering, does this mean anything? Especially if you're thinking about sort of proof of work type blockchains.
00:06:52.826 - 00:06:59.166, Speaker B: You might be wondering, doesn't this whole proof of work paradigm sort of force us into the proportional allocation rule?
00:06:59.278 - 00:06:59.506, Speaker C: Right?
00:06:59.528 - 00:07:23.020, Speaker B: So, I mean, it's just a fact that if you have 20% of the mining power under the random oracle assumption, you're 20% likely to be the first one to solve a hard crypto puzzle and get the corresponding block reward. So the next point I want to make is that at least in principle, if we really, really wanted to, we could implement kind of any alternative to the proportional allocation rule that we wanted. I'm not saying we should, but I'm saying if we really wanted to, we could.
00:07:23.020 - 00:07:42.538, Speaker B: How might you do that? The reason is basically the law of large numbers. So I want you to think about the way Bitcoin does leader election as taking a single sample from a probability distribution, the probability distribution that is proportional to miners hash rates. You take one sample, the selected miner is then the one who authorizes the block and gets the entire reward.
00:07:42.538 - 00:08:05.430, Speaker B: So an idea is to take not one sample from the hash rate distribution, but 1000 samples or even 10,000 samples over the course of an epic. With that many samples, you're going to have almost an exact estimation of the hash rate that everyone contributed over the course of that epic. And once you know basically what everybody's hash rates were, the protocol is then free to distribute rewards however it wants.
00:08:05.580 - 00:08:06.182, Speaker C: Okay?
00:08:06.316 - 00:08:40.254, Speaker B: Now, you might ask how would you actually implement these thousands or tens of thousands of samples? And one way you could do it again, at least in principle, is you could do it the way that mining pools do it. So in addition to having a hard crypto puzzle, the solutions of which sort of define when epics end, you can in parallel have a much easier, 1000 times easier, 10,000 times easier version of the crypto puzzle and collect so called partial solutions to the easier puzzle along the way. So between each two solutions to the hard puzzle, you are expecting to see 1000 or 10,000 samples of the easier one, which gives you those samples from the hash rate distribution.
00:08:40.382 - 00:08:40.866, Speaker C: Okay?
00:08:40.968 - 00:09:00.806, Speaker B: So again, I'm not saying we should deviate from proportional, but I'm saying if we really wanted to, we could. All right, so we're going to investigate this question using sort of a tried and true methodology from economics, namely the axiomatic approach, right? It shows up in the title. So this is basically a two step recipe to reasoning about design decisions.
00:09:00.806 - 00:09:23.758, Speaker B: And step one, you kind of get up your courage and you actually write down a formal mathematical specification of what you want. So, constraints on the design, okay, once you've written down these axioms or these constraints, now you explore the ramifications. So you ask what part of the design space, if any, satisfies all of the axioms that you've written down.
00:09:23.758 - 00:09:54.726, Speaker B: So famous kind of role models that we had in mind when we sort of started. We were thinking about sort of classical expected utility theory like von Neumann and Morgenstern, which characterizes utility theory in terms of consistency, axioms over preferences over lotteries arrows, and possibility theorem from social choice, which says that when you have three or more candidates, there's no voting rule that satisfies a natural list of three axioms. Or Shapley's characterization of his Shapley value as the unique cooperative game value, satisfying a list of four particular axioms.
00:09:54.726 - 00:10:13.582, Speaker B: So this is sort of the steps we want to follow in. And to be clear, so you wind up often proving impossibility results, saying that nothing satisfies all the axioms, or maybe uniqueness results, saying that only one thing does. That doesn't literally mean the problem is impossible or that there's only one way you could solve it.
00:10:13.582 - 00:10:21.874, Speaker B: Take arrows and possibility theorem. Right? It's not that we cannot run an election with three or more candidates. We do it all the time.
00:10:21.874 - 00:10:46.666, Speaker B: Rather, arrows and possibility theorem clarifies exactly what compromises we have to be prepared to make. So if you run an election with three or more candidates, you will violate one of arrow's axioms and it's up to you to figure out which violation is the most palatable and design your voting scheme accordingly. So I really view the benefit of the axiomatic approach as clarifying what you have to give up from the list of what you want.
00:10:46.768 - 00:10:47.420, Speaker C: Okay?
00:10:48.510 - 00:11:05.390, Speaker B: All right, so axiomatic approach. The step one is I owe you some axioms, okay? So there's going to be three. And the way we'll arrive at these axioms is, I'm going to throw out some straw man crazy allocation rules to you, and you're going to look at them and you're going to be like, I hate this rule.
00:11:05.390 - 00:11:16.334, Speaker B: And then we're going to take the reason why you hate that rule and turn it into a constraint. Those will be our axioms. So the first straw man allocation rule, let me just call it the uniform allocation rule.
00:11:16.334 - 00:11:29.930, Speaker B: So here's what you do. You take all the public keys you've ever heard of, you pick one of them uniformly at random, and that's who gets to authorize the next block and get the whole block reward. Terrible idea.
00:11:29.930 - 00:11:57.502, Speaker B: As you all see immediately, this proposal is totally missing the point of a permissionless blockchain where civil attacks, where identities are cheap. If you implemented the uniform allocation rule, certainly everybody would be doing tons of civil attacks because the more public keys you make available to the protocol, the higher your probability of collecting that reward. So we would like to reject any other protocol which suffers from this same flaw, which is vulnerable to civil attacks.
00:11:57.502 - 00:12:18.790, Speaker B: So that leads us to axiom number one, sybil proofness. I think it states what you would think it would state. So if you start from any given hash rate, and if you think of one of the miners shattering themselves into a bunch of sybils, where, of course, the combined hash rate of the sibyls should be no more than the miner had originally, the miner can't just fabricate hash rate from thin air.
00:12:18.790 - 00:12:26.570, Speaker B: So whenever a miner shatters itself into sibyls with most of the combined hash rate, the total reward earned by all the sybils can only go down.
00:12:26.720 - 00:12:27.178, Speaker C: Okay?
00:12:27.264 - 00:12:41.422, Speaker B: So this minor was at least as well off before it tried to mount the civil attack as it was after. You can do a civil attack, but this asserts that the total reward that you earn is either the same as it was before, or if it changes, it's going to go down.
00:12:41.556 - 00:12:42.240, Speaker C: Okay?
00:12:42.610 - 00:12:56.658, Speaker B: The proportional allocation rule, by design, is certainly sybil proof. If you're a 20% minor and you shatter yourself into 210 percent miners, the collected reward of your two sybils is the same as what it was before, 0.2 times the block reward.
00:12:56.754 - 00:12:57.158, Speaker C: Okay?
00:12:57.244 - 00:13:09.714, Speaker B: The uniform rule, as we've seen, does not satisfy this axiom. So that's axiom number one. So let me throw out a second super crazy allocation rule to you, the winner take all rule.
00:13:09.714 - 00:13:30.110, Speaker B: So suppose, suppose we're in that regime where we're taking thousands of samples, or tens of thousands of samples during an epic. So we have a super accurate estimation of everybody's contributed hash rates, then one thing we could do is deterministically allocate the entire block reward to the biggest miner. The miner that contributed the largest hash rates during that epic.
00:13:30.110 - 00:13:41.010, Speaker B: This again, probably immediately you're bothered by it. Notice the issue is not civil proofness. This is a civil proof rule.
00:13:41.010 - 00:14:12.522, Speaker B: If you only reward the biggest minor, there's certainly no incentive to shatter yourself into smaller miners. The problem in some sense is the opposite and the unstoppable force towards centralization that it introduces the incentive to collude. If you're only going to reward the biggest miner nothing to anybody else, what would you possibly expect miners to do other than basically form a 51% pool to guarantee getting that reward? Okay, so our second axiom is that we want to reject any other allocation rule which suffers from this same flaw, which is vulnerable to collusion.
00:14:12.522 - 00:14:28.070, Speaker B: So that brings us to collusion proof. Again, I think it says what you'd think it would say. So given a vector of hash rates, if a bunch of miners get together and combine forces, right? So their combined hash rate is going to be the sum of their original hash rates.
00:14:28.070 - 00:14:40.834, Speaker B: If they combine forces, then the total reward that they earn does not go up. Either it stays the same or it only gets worse because they colluded. Okay, the proportional rule again, by design, is collusion proof.
00:14:40.834 - 00:14:50.246, Speaker B: 210 percent miners, if they want, can join forces and become a 20% minor, but their expected reward zero two will be the same as the sum of their expected rewards was before they colluded.
00:14:50.358 - 00:14:50.874, Speaker C: Okay?
00:14:50.992 - 00:15:00.682, Speaker B: Those are axioms one and two. Robustness to civil attacks, robustness to collusion. We are going to need a third axiom just to kind of get rid of some other annoying rules.
00:15:00.682 - 00:15:12.450, Speaker B: The axiom is anonymity. So this basically says that the way rewards are distributed should not depend on what your public ID public key actually is. It should just depend on the hash rates that you see.
00:15:12.450 - 00:15:29.318, Speaker B: Or equivalently, if you permute everybody's hash rates, the rewards should get permuted in exactly the same way. So what does this rule out? This rules out some ridiculous allocation rules, like a dictator rule, which always allocates it to the lexigraphically first public key that you've ever heard of.
00:15:29.404 - 00:15:29.702, Speaker C: Okay?
00:15:29.756 - 00:15:34.342, Speaker B: Technically that's an allocation rule. Technically it's civil proof and collusion proof. But it's obviously ridiculous.
00:15:34.342 - 00:15:41.846, Speaker B: And it's ridiculous because it violates this anonymity axiom. Proportional allocation, of course, is anonymous in this sense.
00:15:41.968 - 00:15:42.686, Speaker C: Okay?
00:15:42.868 - 00:15:55.714, Speaker B: All right, so we have three axioms. We have at least one rule which satisfies all three, the proportional rule. So the question then is, is there anything else? And so the first man result of the paper gives a negative answer to that.
00:15:55.714 - 00:16:12.200, Speaker B: No, there is nothing else. So the unique budget balanced allocation rule that satisfies civil proofness, collusion proofness and anonymity is the proportional allocation rule. If you insist on strong on exact budget balance in those three axioms, there is nothing else you can do.
00:16:12.200 - 00:16:37.258, Speaker B: So again, as far as interpretation, so one interpretation would be to just kind of throw up our hands and declare victory and say, cool, this is the way we're doing it anyways, and this is a justification for that. Don't have to second guess anymore. The interpretation I like even more is that it says, well, maybe, or maybe you don't want to deviate from proportionality, but if you do, then you have to relax or give up on one of these three axioms.
00:16:37.258 - 00:17:01.334, Speaker B: So they really sort of just clarify what you have to give up if you want to deviate from proportional allocations in any way, I should say. I found out recently that basically the same result was proved in parallel by a couple of economists in unpublished work, jacob Leshno at Chicago Booth and also Philip Strack in the Yale Econ Department. So, proof's not long.
00:17:01.334 - 00:17:05.640, Speaker B: So let me just tell you the proof. It's gonna take place over a couple slides. Let's see why this is true.
00:17:05.640 - 00:17:17.580, Speaker B: For the proof, just to keep it simple, let me assume everybody's, all the miners'hash rates are positive integers. So one, two, three, or more. Okay, there's a boring argument that extends it to rational hash rates that I'll spare you from.
00:17:17.580 - 00:17:35.998, Speaker B: No surprise, the proof is going to proceed by induction. So induction on what? Well, the first thought might be induction on the number of miners or on the number of public keys that you know about. But then you realize you're going to have to be dealing with these civil attacks and collusion attacks, which actually change the number of public keys that are out there, which sort of messes up the induction.
00:17:35.998 - 00:17:49.350, Speaker B: So instead, we're going to induct on the number of miners who contribute a hash rate bigger than the minimum, who contribute a hash rate of two or more. That's what the induction will be on. With this induction parameter, the rest of the proof will write itself.
00:17:49.350 - 00:18:08.278, Speaker B: We'll basically just sit back with satisfaction as the three axioms do all our work for us. Okay, so the base case that's when there are no miners with more than the minimum hash rate, so we just have some number of miners, capital H, each with hash rate exactly one. So here's where anonymity plays an important role.
00:18:08.278 - 00:18:20.590, Speaker B: If everybody's contributing the same hash rate, they all have to get the same expected reward by anonymity. By strong budget balance, the sum of the rewards has to be equal to one. So we even know what everybody's expected reward is.
00:18:20.590 - 00:18:48.870, Speaker B: It's one over the total hash rate or one over capital H. Okay, so anonymity and budget balance do the work for us in the base case, what about the inductive step? So think about a hash rate vector that has at least one minor with a hash rate bigger than one hash rate two or more, and fix one such minor I. Okay, basically what we're going to see is that civil proofness gives lower bounds on what you can pay I and collusion proofness gives upper bounds and the proportional rule will be the only one which sort of threads the needle.
00:18:48.950 - 00:18:49.578, Speaker C: Okay?
00:18:49.744 - 00:18:58.506, Speaker B: So first, let's imagine a deviation from the proportional allocation which underpays this minor i, this minor I which has a hash rate of one or more.
00:18:58.608 - 00:18:59.260, Speaker C: Okay.
00:19:00.990 - 00:19:20.450, Speaker B: This is going to witness a failure of civil proofness. Why? Well, this minor with hash rate H sub i, which is being underpaid, it can shatter itself into H to buy civils each with hash rate exactly one. Notice that increases the number of public keys, but it decreases the number of miners with hash rate bigger than one.
00:19:20.520 - 00:19:20.754, Speaker C: Okay?
00:19:20.792 - 00:19:35.910, Speaker B: Because H sub I has sort of gotten rid of itself. So the inductive hypothesis applies. We know those sybils will be paid proportionally one over H each, which means the little H sub I sibyls collectively get more than this minor was getting originally, the sibyls get H sub I over capital H.
00:19:35.910 - 00:19:47.894, Speaker B: The minor originally was getting strictly less than that. So that's a successful sibyl attack because minor I was underpaid. Case two sort of works in reverse using the collusion proofness axiom.
00:19:47.894 - 00:20:03.978, Speaker B: So now suppose that a rule tries to deviate by overpaying this minor I and the hash rate vector H. Okay? Now we have a collusion attack, okay, if the real world is actually H prime. So imagine before H prime had these sybils.
00:20:03.978 - 00:20:26.646, Speaker B: Imagine now they're not sybils. They're actually legitimate miners, each of which just happens to have a really low hash rate, a hash rate of one. Well, if the rule overpays minor I in that first hash rate vector, then those H sub I hash rate one miners have an incentive to collude, fuse, join forces and get that bigger than proportional rule in the hash rate vector, capital H.
00:20:26.646 - 00:20:34.534, Speaker B: Okay? So that's how the proof goes. And that's how the axioms kind of team up to give us the uniqueness result. The paper has various extensions.
00:20:34.534 - 00:20:47.214, Speaker B: Let me just mention one. So you can poke the setup in a lot of ways. For example, you could relax budget balance, make it weak budget balance, give the protocol the option to keep some of the reward for itself if it wants.
00:20:47.332 - 00:20:47.902, Speaker C: Okay?
00:20:48.036 - 00:21:08.306, Speaker B: This is now a bigger design space. So you could ask, can we escape the uniqueness theorem by relaxing budget balance to weak budget balance? And in some sense, yeah, I mean, the design space goes up at least a little bit trivially, right? If nothing else, you could sort of keep half the block reward for yourself and split the rest proportionally among everybody. That would satisfy the three axioms.
00:21:08.306 - 00:21:21.830, Speaker B: More generally, this takes a proof, but it's true. You can scale the proportional allocation rule by any number between zero and one. That's a function only of the sum of the hash rates and moreover, is a nondecreasing function of the sum of the hash rates.
00:21:21.830 - 00:21:35.326, Speaker B: So we call these generalized proportional allocation rules. It's proportional scaled by a total hash rate dependent function, which is nondecreasing. Turns out all of those satisfy all three axioms and then theorem, there's nothing else.
00:21:35.326 - 00:21:54.878, Speaker B: So if your weekly budget balanced and you satisfy the three axioms, your allocation rule must have this form. There must be a choice of the function, little F, non decreasing, so that this is exactly how you're distributing expected rewards. Okay, last technical thing I want to say just a little bit about risk aversion.
00:21:54.878 - 00:22:16.522, Speaker B: So one thing I've been sweeping under the rug this whole time is I've been assuming that miners are risk neutral. So, for example, indifferent between having a 20% chance of getting the entire block reward or having a 100% chance of getting deterministically, getting 0.2 fraction of the block reward, okay? So that's the risk and neutrality assumption which has been implicit in the discussion so far.
00:22:16.522 - 00:22:32.974, Speaker B: You look out there, in reality, there's plenty of evidence that miners are not in general risk neutral, that they're risk averse. There's multiple reasons you might want to join a mining pool, but certainly one of the biggest, if not the biggest, is to smooth out your rewards. Okay? Like having an insurance policy.
00:22:32.974 - 00:22:49.590, Speaker B: All right, so there's a standard economic model to talk about risk aversion in our context. It basically says don't think about miners acting to maximize their reward, but rather think of them acting to maximize their utility of their reward. For some strictly concave utility function.
00:22:49.590 - 00:23:01.158, Speaker B: U. Think of it as like the square root function or the logarithm function. Again, intuitively, this model of risk aversion just says that all else being equal, miners are going to prefer certainty over uncertainty.
00:23:01.254 - 00:23:01.514, Speaker C: Okay?
00:23:01.552 - 00:23:33.662, Speaker B: So variance is a bad thing if you hold the expectation fixed. So observation is that if we actually relax our assumption of risk neutral and allow miners to be risk averse, our uniqueness theorem kind of turns into an impossibility theorem a little bit, in the sense that the proportional rule which was always satisfying. Everything we wanted to no longer satisfies one of the axioms, no longer satisfies collusion proofness, or at least the sort of standard randomized implementation of the proportional rule where you take a single sample from the hash rate distribution.
00:23:33.662 - 00:23:51.670, Speaker B: That does not satisfy collusion proofness with risk averse miners. Why? Because there's an incentive to form mining pools to keep their expected rewards the same while lowering the variance that's going to raise their expected utility so they will be incentivized to form those pools. Interestingly.
00:23:51.670 - 00:23:59.754, Speaker B: We could also think about implementing one more minute. Yeah. We could also think about implementing it in a deterministic way.
00:23:59.754 - 00:24:18.446, Speaker B: So remember we had this regime with 1000 samples or 10,000 samples. One way you could use those samples is to actually split the block reward, essentially deterministically, so that if you bring 30% of the hash rate, it's not that you have a 30% chance of getting everything, it's that you'll basically deterministically get a 0.3 fraction of the block reward.
00:24:18.446 - 00:24:32.406, Speaker B: Once the rewards are deterministic, it doesn't matter if you're risk averse or risk neutral, the incentives are exactly the same. So for this implementation of the proportional rule, we recover the positive result, the positive part of the uniqueness result. And the proportional rule again works.
00:24:32.508 - 00:24:33.014, Speaker C: Okay.
00:24:33.132 - 00:24:46.570, Speaker B: And I should say a reviewer pointed out to us that you can sort of interpret fruit chain if you pick the parameters properly as a kind of implementation of this idea. So I'm out of time. I'll leave the summary slide up there and then I'm happy to take your questions.
00:24:46.570 - 00:24:47.500, Speaker B: Thanks a lot.
00:24:55.470 - 00:25:05.814, Speaker C: Any questions? You it.
00:25:05.932 - 00:25:12.486, Speaker D: So in some sense you are arguing for us to have a more sampled solution in this space, right?
00:25:12.588 - 00:25:35.082, Speaker B: I'm saying there would be benefits, right? So I mean, it's certainly a more onerous implementation. So I'm not going to opine on if the trade off is worth it, but if you did in principle implement it. So basically what this implementation does is it takes the functionality of a mining pool and it brings it basically into the protocol itself, which is sort of analogous to something known as the Revelation principle for mechanism design.
00:25:35.082 - 00:25:46.850, Speaker B: Because once the protocol is doing the mining pool work, all of a sudden there's no reason for me to join a mining pool. So one would have to decide whether that was worth. The extra implementation hassle to get rid of the mining pools.
00:25:46.850 - 00:25:57.134, Speaker B: This is really cool. So what would it take to generalize.
00:25:57.182 - 00:26:01.874, Speaker D: This to also encompass civil selfish mining and those types of attacks?
00:26:01.922 - 00:26:08.870, Speaker B: Yeah, good question. I think there's various directions you could go. I mean, I think sort of the easiest next step if you think about it.
00:26:08.870 - 00:26:16.218, Speaker B: What was I really assuming about how the blockchain rewards work? I was assuming that the reward is associated with a single block. Okay. And it doesn't matter.
00:26:16.218 - 00:26:35.066, Speaker B: So like the Ghost protocol or something would be outside of the scope of this. Or if you had a proof of Stake world and you kind of had history dependence like Staking or slashing, again, that would be sort of outside the model. So to me the natural next step is to try to capture the more complex way that rewards are distributed, but still try to get this kind of axiomatic characterization.
00:26:35.066 - 00:27:02.042, Speaker B: Now, as far as the longer timescale, this is a fundamentally more complicated problem because basically you're now thinking about sort of an iterated game, a sequential game that's just much more challenging. So we've had a couple sort of nice Epsilon Nash equilibrium analyses of some specific protocols like Oroboros and snow whites. I figure those have got to just be special cases of some more general theory, but we certainly are quite far from that theory at the moment.
00:27:02.042 - 00:27:06.540, Speaker B: But again, five years from now or maybe ten years from now, I really hope we have it.
00:27:08.430 - 00:27:16.410, Speaker D: One thing we are seeing now is all. The miners go to where mining costs are cheap. So in Bitcoin, we now have 60% of the mining power in China.
00:27:16.490 - 00:27:16.782, Speaker B: Right.
00:27:16.836 - 00:27:28.238, Speaker D: Have you thought about relaxing the Anonymity rule that it would allow to give more money to people that are, in this case in not China or generally have other nice distribution properties?
00:27:28.334 - 00:27:43.862, Speaker B: Yeah, that's a good question. I have not. So the proposal know, could non Anonymity actually be a positive thing? Could you use it to correct certain things you don't like about the hash rate distribution? I mean, you certainly could.
00:27:43.862 - 00:28:05.760, Speaker B: And so you'd at least say, could I at least get the civil proofness and collusion proofness? And there are examples, so there are rules which would satisfy the first two axioms, but not the third. And one way you could do it is by sort of differentially penalizing people. If you thought it was worth it doing this work, we kind of figured that was off limits, that seemed out of scope, but you could think about that.
00:28:06.530 - 00:28:07.840, Speaker C: One last question.
00:28:09.490 - 00:28:41.450, Speaker A: Thanks. So I'm wondering if it's actually going to make things somewhat simpler, maybe not simpler, but achieving the expected reward to be exactly proportional to the hash rate that you bring in is actually not that easy. So maybe looking into a long term, not just looking at one block, but over many, many blocks, making a big number average out may be easier because I think this is actually something that the mining pools distribution of the rewards.
00:28:41.450 - 00:29:13.074, Speaker A: In some sense, this actually is like a lesson for the mining pool runners, like how they should distribute their mining rewards. And I'm sure you're familiar with the impossibility of the decentralization work in Proof of Stake System by Kwan and Yongda Kim and Don Song and how they showed that the civil price, the amount of price that you have to pay when you civil your identity, has to be positive to compensate depreciable proofness. I think that actually applies here as well.
00:29:13.074 - 00:29:41.414, Speaker A: So another direction that I think you can also go is to look at the price curve, like how much money you have to spend to get how much hash rate. And the curve is not linear, obviously. So if you consider that into that equation as well, then I think what this is actually saying is that maybe it is actually more beneficial for you to have multiple mining identities spending that much money versus having one identity with way better equipment.
00:29:41.414 - 00:29:50.030, Speaker A: So that if you can actually guarantee proportional rewards to the hash rate they bring in. So I think that's actually another extension that will be awesome to see.
00:29:50.100 - 00:29:50.286, Speaker C: Right.
00:29:50.308 - 00:30:02.330, Speaker B: So just to recap the last point, so there's no modeling of investment in this model. Miners just show up with their hash rate however they got it. So that's another very natural next step of how to make this sort of more elaborate.
00:30:02.330 - 00:30:09.780, Speaker B: And then it would be very interesting if there was any feedback behind your investment model and these results? I'm not sure there would be, but that would be interesting to explore. Yeah.
