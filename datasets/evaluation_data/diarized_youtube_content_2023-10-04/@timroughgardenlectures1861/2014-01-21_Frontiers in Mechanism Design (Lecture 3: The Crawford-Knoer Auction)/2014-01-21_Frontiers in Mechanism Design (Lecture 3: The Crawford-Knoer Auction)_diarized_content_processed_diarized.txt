00:00:00.570 - 00:00:01.120, Speaker A: Cool.
00:00:02.130 - 00:00:29.634, Speaker B: So I guess just maybe I mentioned this last time, but I'm going to keep exercise sets for at least a few weeks and then at some point so the main deliverable for the course is a project, at least for those of you taking it for a letter grade. So I'll probably post, start posting topics probably in week four of the class will be my guess. But I just want to mention it now because I'm definitely happy to have people propose their own projects.
00:00:29.634 - 00:00:57.600, Speaker B: So if there's either something from other research you're doing you think would work well with this class, and you could kind of have it be a win win, get a project, get credit for this class, but also have it be good for your own research group, that's cool. Or if there's already something that's triggered intrigued you that's happened so far this quarter or happened sometime last quarter, maybe just start thinking about that in the back of your mind. But I mean, I'll give out enough concrete project topics for everybody in a couple weeks anyways, okay.
00:00:57.600 - 00:01:13.218, Speaker B: Oh yeah, right. So I should have done this last week, but I forgot because we're putting the videos up on YouTube, I'm required to get a release from all of you. So pass these around.
00:01:13.218 - 00:01:29.260, Speaker B: So this know you agree to either one, have your likeness appear on a publicly available video. Or if you don't agree to do that, then you agree to sit somewhere in the classroom off camera. And that's fine.
00:01:29.260 - 00:01:38.442, Speaker B: Most of the class is off camera, you may have noticed. I think you do, actually. Right.
00:01:38.442 - 00:01:52.320, Speaker B: I'd feel better if you did. Yeah, good. Okay, so it's been a week, so let me just sort of remind you where we left off last week.
00:01:52.320 - 00:02:14.066, Speaker B: So this first segment of the course, I'm thinking probably the first three weeks, is all about the theory of ascending auctions. And so what I'm doing so what we're doing is we're designing ascending auctions for increasingly complex scenarios. So each of the scenarios I'm choosing to unveil a new layer of complexity in the design of ascending auction.
00:02:14.066 - 00:02:19.526, Speaker B: So in the middle of what I've been calling scenario three. So scenario one was unit demand, bidders and identical items. That was easy.
00:02:19.526 - 00:02:26.042, Speaker B: You just use a single ascending auction. Scenario number two was nonidentical goods but additive valuations. That was also simple.
00:02:26.042 - 00:02:35.166, Speaker B: You just use parallel ascending auctions. Although we saw already we needed to introduce x post instead of dominant strategy implementations. Now we're in scenario three.
00:02:35.166 - 00:02:41.214, Speaker B: And the good news about scenario three is we can get very striking positive results. We can get pretty much everything we want. They're great.
00:02:41.214 - 00:02:51.390, Speaker B: Ascending auctions. The bad news, or maybe it's a feature, if you want to call it that, is it's actually quite intricate. Even though the solutions are simple, understanding why these simple solutions work so well is pretty intricate.
00:02:51.390 - 00:03:03.954, Speaker B: So we already saw some nontrivial theory of this scenario last lecture and we'll finish that up, this lecture. So again, what is it? So we have non identical items and we talked about motivations last week. And we're going to assume bidders are unit demand.
00:03:03.954 - 00:03:13.222, Speaker B: So if you give them a bunch of items, they throw out all of the ones except their favorite. So there's a private value vij for each bidder I and good J. And if you get a bunch of them, you just take the max.
00:03:13.222 - 00:03:28.314, Speaker B: So that means without loss, we can think only about allocations where each bidder gets at most one good I e. We can think of allocations as matchings in scenario number three. And again, what are we shooting for in all of these scenarios? We want an auction that's the analogous of dominant strategy incentive compatible.
00:03:28.314 - 00:03:45.422, Speaker B: But as we saw in this context, it should be X post incentive compatible. That means sincere biddings in X post Nash equilibrium, which means you don't have to know what other people's private information are, you just have to know that they're bidding sincerely with respect to some valuations. As long as you know that sincere bidding for yourself is the best response, whatever your valuation.
00:03:45.422 - 00:03:50.834, Speaker B: So that's what this means expos incentive compatible. We want maximum surplus. Actually, we want something even stronger.
00:03:50.834 - 00:04:13.526, Speaker B: We want basically to simulate the direct revelation outcome of the BCG mechanism, which in particular is maximum surplus. And then we also have this criteria of being simple at the very least polynomial time. And so last lecture at a high level, the reason this seemed like a challenge for scenario number three is that in particular to simulate the VCG payments.
00:04:13.526 - 00:04:27.166, Speaker B: The VCG payments didn't seem like that simple a thing. It was this difference of two different matchings. And we were restricting ourselves to these very simple ascending auctions and we needed some reason to believe why ascending auctions might suffice to compute these VCG payments.
00:04:27.166 - 00:04:40.230, Speaker B: So the culmination of last lecture was characterizing the VCG payments in a much simpler way than they first appeared in terms of Walrazi and equilibria. So let me just remind you about them. So recall.
00:04:40.230 - 00:04:52.540, Speaker B: So here Q is a vector of prices on the items. Here M is a matching between the bidders and the goods is a Walrazian equilibrium. Or we if and only if.
00:04:52.540 - 00:05:18.100, Speaker B: So first of all, each bidder should get a favorite good, by which I mean the item to which bidder I is matched in m should maximize its utility. So its value for the good minus the price it has to pay. If all of these are negative, then we just think of this as being the empty set.
00:05:18.100 - 00:05:42.006, Speaker B: And I'll also use on occasion the notation for this set the demand di of bidder I at a given vector of prices Q. So this is the demand of a bidder at a set of prices in a unit demand context. And then again, this would be trivial without any other conditions because we could just set the Q's to be infinite and the matching to be empty.
00:05:42.006 - 00:06:08.382, Speaker B: So it's also important that unsold goods have to have price zero. So j unsold only if Q of J equals zero. And then the key result from last time, which took some work, but having done that work, we'll now just use it, which is that in fact, the VCG payments can be characterized in terms of wall rising equilibrium.
00:06:08.382 - 00:06:21.782, Speaker B: So first of all, the VCG outcome is a Walrazian equilibrium, it's point number 1. Second of all among all of the prices that arise in wazi and equilibrium and we know there can be many. So first of all there is a smallest one, which is obvious.
00:06:21.782 - 00:06:49.518, Speaker B: And second, actually the VCG payments are that smallest while Rossian equilibrium. So if p of G is the VCG payment of the winner of item J, or if item J goes unsold, just define p of J to be zero then. So p of M, let's see where M here is.
00:06:49.518 - 00:07:00.770, Speaker B: The VCG allocation is a wall raze uni equilibrium, and two p is component wise, at least as small as any other waze in equilibrium price vector.
00:07:05.030 - 00:07:05.780, Speaker A: Okay.
00:07:06.550 - 00:07:27.798, Speaker B: And again, what was the point? The point is now rather than conceptually shooting for the VCG payments, we're going to conceptually shoot for the smallest OAS in equilibrium. Why does that seem like progress? Because if you look at the definition of AWS in equilibrium, it feels like the kind of things that are true by the stopping condition of an ascending auction. I guess this seems like progress, something we could plausibly compute with an ascending auction.
00:07:27.798 - 00:07:40.602, Speaker B: So the point of today's lecture is to actually show you the auction, which does indeed compute the smallest OS in equilibrium or equivalently compute the VCG prices. And let me give you a warning. My guess is that there's going to be two lectures with a break as usual.
00:07:40.602 - 00:07:58.358, Speaker B: I suspect the first lecture will go a little bit longer, but then the second lecture will make shorter. So we'll finish at the same time overall, but might be a little bit front loaded today. So any questions before we start? The next step is I'm actually going to show you the auction and then the rest of the lecture will be analyzing it, improving that it does what we want.
00:07:58.358 - 00:08:21.690, Speaker B: Any questions? All right, so the good news is that the auction itself, very simple, very attractive, it's really kind of the simplest thing you might possibly hope could work, which is great. All right, so here's the auction. We'll call it the CK auction after Crawford and Noah.
00:08:21.690 - 00:08:37.822, Speaker B: And again a lot of this class will be very recent stuff, but last week and this week are not lectures of that form. This is old stuff. All right, so the intuition we're just going to start with the prices being zero.
00:08:37.822 - 00:08:59.026, Speaker B: There's going to be over demanded goods and we're just going to raise prices on over demanded goods, and we're going to hope that supply and demand equalize at some point. And that's when we'll stop. So initially it's all prices are zero, and there's going to be a notion of bidders being assigned or unassigned.
00:08:59.026 - 00:09:12.720, Speaker B: So assigned means there's some item that you're tentatively the winner of. And I should say for those of you that remember the Gail Shapley stable matching algorithm, you might enjoy looking for parallels between this auction and stable matching. There's actually a number of them.
00:09:12.720 - 00:09:29.086, Speaker B: So all bidders initially are unassigned, naturally enough. And so here's the main loop. Remember, this is an Iterative auction.
00:09:29.086 - 00:09:37.566, Speaker B: It's not direct revelations. We're never going to directly ask people for their valuations. We're just going to ask people, well, given our current prices, what do you want? Meaning which is your favorite good at the current prices?
00:09:37.598 - 00:09:37.746, Speaker A: Okay.
00:09:37.768 - 00:10:04.046, Speaker B: So those are going to be the queries. So for any bidder which is currently unassigned does not have some item, we say, well, which item would you want given the current prices? Can we collect that information from all the unassigned bidders? So ask each unassigned I And again, I'm going to use this notation, di of Q.
00:10:04.228 - 00:10:05.006, Speaker A: Okay?
00:10:05.188 - 00:10:18.138, Speaker B: So here di of Q is actually so if there's ties in this definition, this is actually asking for all of the things that maximize utility. Sort of. Remarkably, in this auction, we actually only need one from each bidder.
00:10:18.138 - 00:10:33.766, Speaker B: So each bidder can just choose an arbitrary favorite good and tell us. And again, if it doesn't want any of them, it should tell us, because if the prices are too high, okay, so if none so either if there's no unassigned bidders or if every unassigned bidder says, no, I don't want anything, the prices are too high, then we stop.
00:10:33.868 - 00:10:34.182, Speaker A: Okay.
00:10:34.236 - 00:10:59.470, Speaker B: And the tentative winners become the actual winners and the current prices become the selling prices. So if none halts and again the current allocation and prices become the final ones. Otherwise, pick some such bidder I and the good that it wants at the current prices.
00:10:59.470 - 00:11:12.498, Speaker B: And we're just going to give J to I. So if you like, you can also think of this as bidder I is sort of outbidding the current holder of the good J.
00:11:12.584 - 00:11:13.220, Speaker A: Okay?
00:11:17.690 - 00:11:34.490, Speaker B: So assign J to I. Now, if I is the first person to ever bid on this good J in the history of the auction, then it's not kicking out at anybody else.
00:11:34.560 - 00:11:34.794, Speaker A: Okay?
00:11:34.832 - 00:11:57.330, Speaker B: And we also just leave the price at zero. But in the general case, it's going to be that there was some I prime who was the previous bidder on J who had been the tentative winner. So if I outbid I prime for J, then we make I prime unassigned.
00:11:57.330 - 00:12:24.490, Speaker B: And also we bump up the price of this good so increment Q of J by Epsilon, where Epsilon, as usual, is just some small increment that we choose in advance of the auction. Okay, so the first bidder on a good gets it at zero. Every subsequent good changes who the winner is and bumps up the price by an epsilon.
00:12:24.490 - 00:12:56.534, Speaker B: Okay, actually, I just realized I had a typo. So when you ask people for their favorite good, actually, this doesn't make a big difference, but for lecture, I'm actually going to ask them for their favorite good at the prices Q with an epsilon added everywhere. Okay, now that's almost exactly the same thing, right? So if I add epsilon to every single price of the good, it doesn't change your favorite, except it might cause you to drop out when you weren't going to drop out before.
00:12:56.534 - 00:13:02.230, Speaker B: That's the only difference. Right, but let's just do it this way and that's it. That's the whole auction.
00:13:02.230 - 00:13:12.262, Speaker B: Upon termination, you pay the prices Q. Let's see. No, we're actually going to have you pay yeah.
00:13:12.262 - 00:13:14.790, Speaker B: So the Q. Right. So it didn't get incremented.
00:13:14.790 - 00:13:34.480, Speaker B: Exactly. So let me just write this here. At current allocation and prices Q, okay, that's right.
00:13:34.480 - 00:13:51.106, Speaker B: So conceptually, when we ask a bidder for its favorite, we're envisioning incrementing every single good, but really it's only the one that it actually picks that's going to get incremented. Okay, but this is going to introduce a discretization here of epsilon and a bunch of stuff, but that's all it does, so it's not a big deal. Yeah, but this is the formal description.
00:13:51.106 - 00:14:05.430, Speaker B: Exactly. And this was the comment. Because the bidder was agreed to pick a good J at this price with the increment, then we know that it's happy to have that good, or at least it has non negative utility for that good, even after the increment.
00:14:05.590 - 00:14:06.300, Speaker A: Okay.
00:14:07.230 - 00:14:15.120, Speaker B: All right, so that's the whole auction. So this is it. So the rest of the lecture is just going to be proving that this does everything we want.
00:14:15.120 - 00:14:26.814, Speaker B: Any questions about that? Say it again. No. So you mean here? Yeah.
00:14:26.814 - 00:14:53.174, Speaker B: So in fact, this can be implemented many ways. So one thing you can do is you can just pull the unassigned ones, and as soon as anybody says they want to outbid somebody else, you stop and you go with that person. So I singled this out because I always want to focus on what are the queries, what is the communication between the seller and the bidders? And at least in the maximal implementation, every single round, the subset of unassigned bidders are given a so called demand query at the prices Q plus epsilon.
00:14:53.174 - 00:15:04.990, Speaker B: But again, if you wanted to optimize it, that'd be easy. So for everything to work, you just need to pick an arbitrary bidder I and an arbitrary who's unassigned and an arbitrary good J in their demand set and proceed. That's all that's necessary.
00:15:04.990 - 00:15:16.786, Speaker B: With this description, it seems like you could implement it one way and I could implement it a different way, and we might come up with different allocations. Up to the discretization error. Yeah.
00:15:16.786 - 00:15:25.794, Speaker B: So up to the discretization error. I agree. So there's a question whenever this in, sometimes it's underdefined in a bunch of ways.
00:15:25.794 - 00:15:34.834, Speaker B: So it's sort of amazing. It works, actually. So you could pick any number of unassigned bidders and then they could offer any number of their favorite goods.
00:15:34.834 - 00:15:59.850, Speaker B: And in principle, each of those decisions can have a lot of influence over the trajectory. But in the same spirit of the Gail Shapley stable matching result, that actually the outcome is independent of those choices, the same sort of thing's going on here. And actually, if you go back what I promised you, so what am I promising you that this is going to do? I'm promising you this is going to simulate the VCG outcome, which basically means I'm promising you that the final prices will be the VCG payments.
00:15:59.850 - 00:16:17.430, Speaker B: So the VCG payments are obviously defined independent of any ordering here. So if I say that this always equals this one fixed thing, that's a proof that the output of this is independent. So the sequence of iterations will certainly depend on how you make these decisions, but the final output will not, which is a totally nontrivial feature of this algorithm.
00:16:17.430 - 00:16:39.958, Speaker B: So again, all the complexity here is in the analysis, none in the auction, which arguably is exactly how you want it if you have to have complexity somewhere. All right, so let's start developing a feel for this option. So first, just a couple of trivial observations.
00:16:39.958 - 00:16:56.830, Speaker B: So notice that if you're a bidder I and you bid on some good J, you're the tenant of winner, and you will continue to be the tentative winner on that good until someone outbids you. Once you're assigned, I will not ask you for further input.
00:16:56.990 - 00:16:57.554, Speaker A: Okay?
00:16:57.672 - 00:17:11.654, Speaker B: So the only way that you relinquish a good is by someone else taking it away from you. So then in particular, if you think about it, once a good has been bid on by a bidder, it will forevermore be tentatively to assign to somebody.
00:17:11.852 - 00:17:12.358, Speaker A: Okay?
00:17:12.444 - 00:17:49.150, Speaker B: So once you're tentatively assigned to someone, you always will be for the rest of the auction. Okay? So I bids on J retains it till outbid, and then once so if J is ever bid on will be assigned at the end. It may change hands many times, but it's never going to be put back in a pool of unassigned goods.
00:17:49.150 - 00:18:04.866, Speaker B: All right? And assuming sincere bidding termination should be obvious, this is always a feature of ascending auctions. It's clear you're making progress. The prices only go up if I'm a bidder.
00:18:04.866 - 00:18:20.326, Speaker B: I have some maximum willingness to pay for any item. If the prices get higher than that, well, obviously I'm going to drop out. So terminates in, let's say, the maximum valuation of any bidder over Epsilon.
00:18:20.326 - 00:18:35.294, Speaker B: The amount of progress we're making, this is as high as the price would ever get on a single good and then times the number of goods m. Okay, so it's pseudopolynomial. So if you were taking an algorithms class, this wouldn't be ideal, but for such a simple ascending auction, this is just fine.
00:18:35.294 - 00:18:45.060, Speaker B: And you can imagine ways of accelerating it. Like as the prices rise, you increase epsilon accordingly. We're not going to discuss optimizations, so for the basic version, termination is clear.
00:18:48.170 - 00:18:48.920, Speaker A: Okay.
00:18:54.570 - 00:19:24.920, Speaker B: So the first dilemma is an easy one, and it's just going to confirm the intuition we've had so far that it seems like merely the Walrazian equilibrium property could probably fall out pretty easily of the first ascending auctions. You'd think about that equalize supply and demand, so let's make that precise. So sincere bidding results in an epsilon or Ozian equilibrium.
00:19:24.920 - 00:19:40.984, Speaker B: And on the exercise set that's due today, I asked you to prove that if you have an almost, well, rising equilibrium, you necessarily have an almost surplus maximizing allocation.
00:19:41.112 - 00:19:41.790, Speaker A: Okay?
00:19:43.600 - 00:19:47.980, Speaker B: So hence close to max surplus.
00:19:49.760 - 00:19:50.028, Speaker A: In.
00:19:50.034 - 00:19:58.464, Speaker B: Case you're going to be off by at most m times epsilon from the surplus. So as epsilon goes to zero, you have no surplus loss. So let's prove this is true.
00:19:58.464 - 00:20:17.044, Speaker B: Let's prove that epsilon R is in equilibrium condition. Remember, that what that condition is, it's the same as the normal we condition, except you're allowed to be assigned to a good where you're off by epsilon here. Okay, so it's still going to be true that you never have negative utility, but it may be that your utility is epsilon less than if you'd gotten some other good at the current prices.
00:20:17.044 - 00:20:29.724, Speaker B: That's the definition. So proof. All right, so how about this condition? Unsold goods have price zero.
00:20:29.724 - 00:20:46.068, Speaker B: Why is that true? That's from here, right? So the only way you go unsold is if you were never bid on. If you were never bid on, your price is zero.
00:20:46.234 - 00:20:46.950, Speaker A: Okay.
00:20:51.960 - 00:21:05.320, Speaker B: So that's good. So now let's try to understand why a bidder is matched to its almost favorite good. I mean, in English, very quickly.
00:21:05.320 - 00:21:26.050, Speaker B: It's just because at the time you bid for a good, it was essentially your favorite up to an epsilon. And then things only started looking better as the rest of the auction proceeded so formally. Suppose I, at the end of the algorithm, is matched to J, and here I'm allowing J to be nothing.
00:21:26.050 - 00:21:53.880, Speaker B: Well, consider the last time that I was asked, the last time that I was unassigned, and it said, I want J. So I'll say when I bid for J, with the understanding that J is the empty set, this was bidding for nothing at that point. J, this is some intermediate iteration of the auction, not at the end, in general.
00:21:53.880 - 00:22:10.880, Speaker B: Okay, so it's not the final price vector q, it's some other price vector. But of course, since it's an ascending auction, it's at some point with only lower prices. So when I bid for J, j was I's favorite at the current prices.
00:22:10.880 - 00:22:22.604, Speaker B: Okay, I'm lying a little bit. Why am I lying a little bit? Yeah, up to epsilon. So I asked for its favorite at Q plus epsilon everywhere.
00:22:22.604 - 00:22:37.444, Speaker B: But then in fact, after the assignment, I only bumped up J's price by epsilon. Everything else stayed the same. Okay, so if it was basically tied between two goods, all of a sudden at the current price is after, I sort of broke that symmetry and made the one that it got a little bit more expensive, but up to an epsilon, that was its favorite.
00:22:37.444 - 00:23:13.340, Speaker B: And now here's sort of a really important property of the unit demand setting, which is that as the auction proceeds, this is only more true. Okay, so since then, so this was some iteration number 124 out of a total of 180 iterations. So what could have happened in the final 56 iterations? Okay, well, first of all, what's going on with the price of good J in those last 56 iterations? Nothing, right? The price doesn't change unless you're outbid.
00:23:13.340 - 00:23:26.388, Speaker B: And I was the final winner of J, and I'm sort of rewinding to the point that it was the last bid on that good. Bid on that good. And of course, it's an ascending auction, so the other goods are only getting more expensive.
00:23:26.388 - 00:23:44.510, Speaker B: Okay, so there's only more true at the outset. Since then, let me just write only more true. So Jay's price unchanged, others going up.
00:23:48.400 - 00:23:48.908, Speaker A: Good.
00:23:48.994 - 00:23:59.264, Speaker B: So that's it. Okay, lemo one. So looking ahead a little bit.
00:23:59.264 - 00:24:21.556, Speaker B: So for the second lecture for today, we're going to look at scenario four, which is not that complicated. It'll have some different complexities in scenario three. But then next week, we're going to culminate this whole ascending auction stuff by talking about, in some sense, the most general situation provably for which you can have these awesome ascending auctions.
00:24:21.556 - 00:24:39.560, Speaker B: And so that's a setting called so called substitutes valuations. And so just looking ahead, this is kind of the key property that defines substitutes valuations. So this is an important property that basically at a snapshot of an ascending auction, you do your best thing, and then that remains the best thing as the auction proceeds.
00:24:39.560 - 00:24:53.644, Speaker B: So that'll be the motivation for the generalization next week. Okay, so what do we know? So we have the simple auction. And the hard thing that we're trying to prove is that the outcome, assuming sincere biding is actually the VCG outcome, we've made some progress.
00:24:53.644 - 00:25:01.220, Speaker B: We at least get the VCG allocation. We at least get a surplus maximizing allocation. We get some while we're also in equilibrium.
00:25:01.220 - 00:25:05.360, Speaker B: But we really want one in particular, the smallest of them all.
00:25:05.450 - 00:25:05.800, Speaker A: Okay?
00:25:05.870 - 00:25:40.770, Speaker B: And that's going to be harder to prove. That's what we're going to do next. All right, so lemma two, lemma two, here's what it says.
00:25:40.770 - 00:25:58.170, Speaker B: So consider the outcome of the CK auction. So final price is Q, final allocation, M. And let p, m star.
00:25:58.170 - 00:26:22.480, Speaker B: Assuming sincere bidding and PM star be the VCG outcome, assuming truthful revelation. Okay, so this is what we want to be very close to. So the claim in limit two is that we're almost as low as the VCG prices.
00:26:22.480 - 00:26:47.830, Speaker B: So P, we know is the smallest exact wall RAW's in equilibrium. We're going to terminate with something Q, which you know is an epsilon walls in equilibrium, which is barely bigger than the smallest possible exact orwise in equilibrium. Okay, that's limit two.
00:26:47.830 - 00:27:21.040, Speaker B: And this is a little tricky. This is probably as hard as we're going to have an inductive it's going to be an inductive argument. So give me a second just to sort of set up the appropriate induction.
00:27:21.040 - 00:27:50.990, Speaker B: So consider the first time so intuitively what we're going to say is in this CK auction, a red flag kind of goes off. So imagine we're just running this and imagine we knew what P was, the BCG prices were. And imagine we're sort of tracking the prices of all the goods and the current price of some good J starts drifting upward further and further, and it starts being a little bit above the VCG price P, and then it starts being more and more above this VCG price P.
00:27:50.990 - 00:28:11.424, Speaker B: So I'm going to parameterize that. So let's consider the first time that we have a good whose price is significantly above P, and it's about to get bumped up even further. So some bidders about to bid on this seemingly quite expensive good.
00:28:11.424 - 00:28:34.296, Speaker B: So consider the first time a bidder, call it I one is about to bid on a good J, one with the current price. And again, this is not at the end of the auction, this is somewhere in the middle. So I'm going to use a different letter, r.
00:28:34.296 - 00:28:48.236, Speaker B: Q is the price is a termination, r is in the middle. So a price RJ, and so that the current price is already sort of significantly bigger than P of J, the VCG price. Okay, so let's just say epsilon times L.
00:28:48.236 - 00:28:51.712, Speaker B: L. Here is a parameter. So think of it as like ten or something.
00:28:51.712 - 00:29:01.760, Speaker B: So it's already drifted above the VCG price. It's about to go even further. Okay, so here's the key claim.
00:29:01.760 - 00:29:28.788, Speaker B: So basically what I'm going to do is I'm going to give an inductive construction parameterized by l. The induction will have l steps, and it'll be evident that it'll be patently obvious that the maximum number of steps I could run this induction without a contradiction is with l being up to the number of goods that could possibly be traded. Of course, you should think of Min of Nm.
00:29:28.788 - 00:29:42.930, Speaker B: This is the number of bidders as the number of goods that's just the edges in a maximum match. All right, so claim so suppose this is true. Suppose this is about to happen for some L.
00:29:42.930 - 00:30:06.520, Speaker B: Then I claim for all positive integers k between one and L inclusive. I can show you a nested set of bidders getting bigger and bigger, a nested set of goods getting bigger and bigger, satisfying a few properties. So set UK of k goods.
00:30:06.520 - 00:30:32.690, Speaker B: I said BK of k plus one bidders. There's always going to be one more bidder than goods that satisfies the following properties. Because these properties were the slickest proof I could figure out.
00:30:32.690 - 00:30:56.516, Speaker B: Don't really have a better explanation for you. So, okay, so for all bidders in this set UK, sorry, for all goods in the set UK, all of the prices of these goods are high. Okay, so we're starting from the assumption that there's one good with a high price.
00:30:56.516 - 00:31:07.860, Speaker B: Sorry, this should be j one. So there's one good j one with a high price that's going to be the base case, and I'm going to show you bigger and bigger sets of goods, all of whom are overpriced.
00:31:08.020 - 00:31:08.632, Speaker A: Okay?
00:31:08.766 - 00:31:32.764, Speaker B: So I'm going to lose an epsilon each time I add a good, but still, I'm going to give you these big sets of goods, all of whose prices are too high. So r of j is greater than always. Remember, p are the VCG prices the smallest, well, RAW's in equilibrium, PJ plus epsilon.
00:31:32.764 - 00:31:46.250, Speaker B: And then again, I'm going to lose a little bit in every step of the induction. So k equal one is going to be the base case, and that's just sort of the same thing I was assuming. Every time I bump up k, I'm going to lose a little bit in how overpriced these all these goods are.
00:31:46.250 - 00:32:14.204, Speaker B: So two for all bidders in the KTH set. The most recent bid by I is for a good in UK. Okay, so I'm going to show you k plus one bidders, all of whom most recently bid for some good in these k goods of UK.
00:32:14.204 - 00:32:32.884, Speaker B: And I should be a little bit clear here, so I'm including yeah, so there's a little bit of time incoherence. So the price r. So remember, we're basically freezing the algorithm at auction when this bidder I one is about to bid on this good j one.
00:32:32.884 - 00:32:48.680, Speaker B: Okay, so r, again, these all only matter for the epsilon, so it's not a big deal. But just to be precise, r are the prices before we increment j one by epsilon. And when I say most recent bids, I'm including I one's bid on j one.
00:32:48.680 - 00:33:24.324, Speaker B: Okay, so this bid set is sort of after I one has bid on j one, and the price r is before that's happened. All right, so three, all of the bidders in BK are matched in the VCG outcome in the VCG allocation m star. Okay, so these are three properties, and I think once I show you the base case, it'll be more clear.
00:33:24.324 - 00:33:33.272, Speaker B: There's one thing I want to observe right now. So suppose I can do this. Okay, so suppose I prove to you this claim then.
00:33:33.272 - 00:33:49.644, Speaker B: In particular, remember, BK has k plus one bidders. And property three says all of these K plus one bidders are matched in the VCG outcome m star. Okay, well, K plus one can't be bigger than the minimum of M and N.
00:33:49.644 - 00:33:59.730, Speaker B: Only the minimum of M and N goods can be traded. Okay, so this says I'm only going to be able to do this construction for L at most min of M n minus one.
00:34:00.100 - 00:34:00.850, Speaker A: Okay.
00:34:03.080 - 00:34:27.770, Speaker B: So if proved implies that L is strictly less than the minimum of M and N, then we'll be done. Okay, so the one thing I want you observed is I've reduced the proof of lemma two to this inductive construction. Okay, assuming this, then I can exhibit these nested families of sets for you.
00:34:27.770 - 00:34:29.180, Speaker B: Agreed.
00:34:30.800 - 00:34:31.308, Speaker A: Okay.
00:34:31.394 - 00:34:38.140, Speaker B: And from here it's pretty straightforward. There's some nice cute ideas, but it's pretty straightforward once you have the inductive setup.
00:34:38.800 - 00:34:39.550, Speaker A: Okay.
00:34:40.100 - 00:34:56.070, Speaker B: All right, so then here's the construction. So the base case, you can guess what it is, but there's actually one thing we do have to prove. All right? Yeah.
00:34:56.070 - 00:35:01.350, Speaker B: So for the base case, we need one. Good. So cake was one.
00:35:01.350 - 00:35:02.964, Speaker B: We need one.
00:35:03.002 - 00:35:03.156, Speaker A: Good.
00:35:03.178 - 00:35:04.544, Speaker B: And we need two bidders.
00:35:04.672 - 00:35:05.350, Speaker A: Okay.
00:35:06.300 - 00:35:27.896, Speaker B: All right, so let I two be the current bidder on J one. Okay, so remember where we are. This bidder I one is about to bid on J one, even though J one is already expensive.
00:35:27.896 - 00:35:34.672, Speaker B: So I claim that actually it must be displacing a bidder I two. That there must be someone who would previously bid on that some tentative winner. I two.
00:35:34.672 - 00:35:43.090, Speaker B: I two exists. Why does I two exist? Exactly. I heard it from a bunch of people in particular.
00:35:43.090 - 00:35:52.448, Speaker B: This assumption implies that the current price of the good J one is positive. So someone bid on it at some point. So someone's its tentative winner right now.
00:35:52.448 - 00:35:58.470, Speaker B: Okay, so I two exists. So all right, good. It.
