00:00:00.170 - 00:00:07.198, Speaker A: Right, cool. So, announcements. So exercise set two is due today.
00:00:07.198 - 00:00:17.486, Speaker A: There will be an exercise set three posted hopefully completely tonight, certainly at least partially tonight. If you want to start early on it starting with exercise set three. I'm going to start tailing off the exercises some.
00:00:17.486 - 00:00:34.594, Speaker A: So I'm thinking there'll probably be about only five or six on this third one. And then as the projects kind of start coming out, those will will become either nonexistent or very short the exercise sets. So, speaking of projects, so I've compiled a big list of ideas.
00:00:34.594 - 00:00:53.290, Speaker A: They're not on the web yet, I still have to put them on a web page, but lots of ideas. One thing that's always a little weird about project courses like this is you wind up sort of settling on a project when you've only seen kind of a really small subset of the course's material. So I thought maybe I'd give you just sort of an outline of what we're going to be covering this quarter.
00:00:53.290 - 00:01:08.050, Speaker A: This is also for those of you who maybe thought I was making it up as I was going along. Actually, to be honest, I sort of am making it up as I'm going along, but this is what I have in mind. Okay, so this will be the last lecture on the first topic.
00:01:08.050 - 00:01:32.266, Speaker A: So for most of the course we're going to be studying this paradigmatic problem of just you have goods and you want to allocate them to people to maximize welfare. We could talk about other problems, but the reason I'm focusing on this is really you can kind of COVID all of the trends that have been happening in this mechanism design world pretty much through the lens of this problem. So it's a really good one just to focus on, to study all the different trade offs in recent work in mechanism design.
00:01:32.266 - 00:01:44.586, Speaker A: So we're starting with tractable special cases where there's lots of positive results. In all these cases, the VCG mechanism is sort of the obvious solution, direct revelation solution. We're focusing on ascending auctions.
00:01:44.586 - 00:02:00.990, Speaker A: So sort of more ambitious goal. So starting next week, we're going to pass to cases where you cannot implement even the VCG mechanism in polynomial time, where just the underlying welfare maximization problem is NP hard. And so this is for somewhat more general preferences.
00:02:00.990 - 00:02:21.910, Speaker A: So we'll talk about positive and negative results for these NP hard classes of problems here, there's going to be some pretty striking negative results. So there's actually with DSIC auctions, there's not a lot you can do on this problem once you get past the tractable special cases that we'll talk about today. So these negative results then motivate going beyond DSIC implementation.
00:02:21.910 - 00:02:30.634, Speaker A: So relaxing the dominant strategy requirement. And so we'll have a week or two. So for each of these last four topics, we'll do roughly two weeks each.
00:02:30.634 - 00:02:51.650, Speaker A: I know that adds up to too many weeks, but something like two weeks each. So after we realize we can't get what we want with dominant strategy implementations, we'll look at weaker equilibrium concepts, one called undominated strategies, where there's a lot of open questions. And then we'll also start talking about Bayes Nash implementations, which are kind of very important in mechanism design and we haven't seen at all either last quarter or this quarter.
00:02:51.650 - 00:03:05.426, Speaker A: So we'll get some really nice positive results for Bayes Nash implementations. This is where you have a common prior and you look at Bayesnash equilibrium. So bidders are doing best response sort of in expectation over the uncertainty about other players'valuations.
00:03:05.426 - 00:03:14.410, Speaker A: We'll talk more about that, obviously. So the positive results here are going to be achieved with pretty kind of heavy duty mechanisms. They'll be polynomial time, but they won't be especially simple.
00:03:14.410 - 00:03:35.850, Speaker A: So then we'll move on and say, okay, well, let's sort of go back to the idea that we want simple auctions that at least somewhat resemble auctions used in practice the way we're doing in this topic. And we'll ask to what extent can we get near optimal welfare? And so here we're actually going to be doing nontrivial equilibrium analysis. It'll be very much in the spirit of the Price of Anarchy section of the course in the middle of last quarter.
00:03:35.850 - 00:03:50.770, Speaker A: There's been a lot of work on this over the past few years and then with whatever remaining time. So all of this is about just the welfare maximization problem that we've been studying thus far. And then finally I'll start talking about with whatever time remains about revenue maximization.
00:03:50.770 - 00:04:06.358, Speaker A: So remember, what's hard about revenue maximization is we don't even have an analog of the VCG mechanism. So in welfare, if you want to optimize welfare and you don't care about computation or anything like that, at least there's this in principle solution of the VCG mechanism. And for revenue maximization there's no analog.
00:04:06.358 - 00:04:23.540, Speaker A: So this is, we talked about Meyerson's theory last quarter, for example. So we're going to study what happens when you have multi parameter settings like we're talking about now, bidders who might have different values for different goods and so on. So this is extremely hard, but there's been some sort of exciting new directions that have opened up in the last couple of years.
00:04:23.540 - 00:04:43.974, Speaker A: And again, just as far as this first topic is kind of the only one which is classical. So this first topic, we've seen some stuff from the past ten years, but it's mostly been from the 80s. All of these four topics will be nothing but 21st century stuff and in many cases just the last three years or so.
00:04:43.974 - 00:04:55.530, Speaker A: Okay, so that's sort of the outline of where we're going. There'll be projects for all of these things up on the list. So if one of those sounds especially exciting, I'll categorize the projects according to these topics.
00:04:55.530 - 00:05:18.274, Speaker A: And the other thing I'd say is r1 benefit about the class being so relatively small is it's actually realistic for me to be helpful with the projects more than, say, last quarter when there was 50 people. So definitely feel free to get in touch with me and say, I was thinking about this paper. Do you think it's a good idea or not or whatever? So both.
00:05:18.274 - 00:05:31.734, Speaker A: When you're picking the projects and then throughout the quarter, definitely feel free to get in touch and ask for my advice. It's sort of small enough that I can actually actually do that. Probably I'll schedule check in meetings with people in week seven or eight or something like that.
00:05:31.734 - 00:05:39.398, Speaker A: But even well before then, just picking a topic. If you want to talk about it, just let me know. Okay, so those are the announcements.
00:05:39.398 - 00:05:42.460, Speaker A: Any questions? Sound good?
00:05:44.190 - 00:05:44.940, Speaker B: Okay.
00:05:46.590 - 00:05:54.794, Speaker A: All right. So so far what we've done is we've looked at four tractable special cases. The first two were sort of really trivial.
00:05:54.794 - 00:06:10.446, Speaker A: The identical goods unit demand case, which you just saw with an English auction, and then the additive case, which you saw with parallel English auctions. We've done two not so trivial special cases, although with very satisfying positive results. So we had the non identical goods and unit demand bidders.
00:06:10.446 - 00:06:37.834, Speaker A: That's where we used the Crawford Nowhere auction to give an epic auction surplus maximizing. And then we also saw for identical goods and downward sloping valuations, we had Osbo's clinching auction, which also gave us everything that we want. And those last two if you think about it, those last two positive solutions that were non trivial, they didn't really look that much like each other, I don't think the unit demand nonidentical case and then the identical downward sloping case.
00:06:37.834 - 00:06:59.522, Speaker A: I mean, clearly at a high level, we approach it in the same way. But if you look at the actual solutions, they don't feel like sort of minor variations on the same thing. But it turns out there is a common generalization of those two scenarios, and it turns out there's actually sort of one instantiation of the problem we're studying, which represents the frontier of tractability in many senses of the word.
00:06:59.522 - 00:07:15.042, Speaker A: So that's the plan for today, both lectures today. So frontier of tractability. So they're going to be something called gross substitutes valuations.
00:07:15.042 - 00:07:39.520, Speaker A: And it's sort of amazing how many different properties basically hold all the way out to gross substitutes and then fail beyond it. And we'll see two or three of those topics today. There's many more that I won't have time to discuss, so so here's the plan for the next 30 minutes or so.
00:07:39.520 - 00:07:54.980, Speaker A: So what I want to do is I want to start with the Crawford Noer auction. So this was the unit demand nonidentical goods auction that we talked about last week. And I want to look at a natural generalization of that auction to where bidders might want more than one good at once.
00:07:54.980 - 00:08:17.690, Speaker A: And then we're going to know when might that auction have a chance of working well. And that question will naturally motivate the definition of these gross substitutes valuations. Okay, so we're going to talk about a concrete auction that'll motivate this definition, and then we'll see that actually this definition, rather than just being relevant for this one auction, is actually a fundamental concept and we'll start talking about its other properties.
00:08:17.690 - 00:08:51.640, Speaker A: All right, so the general setup, which again will certainly be encompasses all the cases we've seen thus far. So the good should be in general, non identical. So as usual, M of them and Bitter I has a private valuation or willingness to pay in principle for every possible subset of items that it might get, every bundle it's called.
00:08:51.640 - 00:09:05.580, Speaker A: Okay, so that's a lot of private evaluations, right? If there's M items, there's two to the M of these. But we're not going to worry about complexity and representation issues until we need to. So for now, it's just a model.
00:09:05.580 - 00:09:26.820, Speaker A: And unless otherwise noted, I will always assume that your value for the empty set is zero and more stuff can only be better. Okay, so that it's monotone. So this is also called free disposal, meaning you always have the option of just throwing things out if you don't like them.
00:09:26.820 - 00:09:49.958, Speaker A: So s union. T-V-I of S-V-I of t. Okay? So so far this is super general, okay? So it not only doesn't code all four of the things we've seen so far, as we'll see starting next week, this encodes some really, really hard versions of the problem.
00:09:49.958 - 00:10:14.426, Speaker A: So to get positive results, we need to impose more than just these conditions so far. So it like I said, so what I want to do next is look at a generalization of the Crawford Noer auction. And you might remember that in the main iteration of that auction, what we would do is we'd take some bidder that was not assigned to any good and we would ask it for its favored good at the current prices.
00:10:14.426 - 00:10:24.542, Speaker A: So there's the notion of a bidder having a demand, its favorite good at the current prices. So this next auction. So now in this setup, bidders might want more than one item.
00:10:24.542 - 00:10:48.474, Speaker A: So when we ask them what they want, they might give us a whole set. So formally, we've seen this concept many times. So I's demand at prices Q, which I'll denote by di of Q q.
00:10:48.474 - 00:11:06.290, Speaker A: Here's a vector indexed by the items. So this is just the set of favorite bundles at the prices Q. Okay, where by favorite I just mean you look at your value for that set minus what you have to pay.
00:11:06.360 - 00:11:06.546, Speaker B: Okay?
00:11:06.568 - 00:11:13.970, Speaker A: And obviously you just sum up the prices on all of the items in the bundle. So sum for JNS of PJ.
00:11:19.290 - 00:11:19.654, Speaker B: And.
00:11:19.692 - 00:11:26.280, Speaker A: You'Re allowed to demand nothing. So the empty set is allowed, in which case we interpret this as zero.
00:11:27.610 - 00:11:28.360, Speaker B: Okay.
00:11:40.370 - 00:11:53.982, Speaker A: So here's the generalization of the auction. So the Kelso Crawford auction. Kelso and Crawford were also the first to define gross substitutes.
00:11:53.982 - 00:12:39.594, Speaker A: The way we'll be using them today's, prices are going to start at zero, and they'll only go up. And then we're also going to keep track of the items currently assigned to a given bidder that's initially nothing's. So in the main loop, we're going to ask bidders what they want at the current prices.
00:12:39.594 - 00:12:57.454, Speaker A: Although there is one thing we're going to enforce. So you may recall that a key property in our analysis of the Crawford Noer auction was that as soon as you bid on an item, you get that item, and then you still have that item until someone outbids you. So you can't just at some point drop it and withdraw your bid and relinquish the item.
00:12:57.454 - 00:13:12.682, Speaker A: So that was a property in the Crawford Noer auction. But differently from an item's perspective, as soon as you're bid on and you have somebody that you're matched to forevermore, you're going to be matched to somebody, just the sequence of bidders who outbid each other on this item. So that's going to be an important property.
00:13:12.682 - 00:13:47.654, Speaker A: We're going to retain it. So when I say I ask bidders for what they want, I more say, given the items you already have at the prices you're already paying for them, what would you like to also bid on in addition? Okay, so that's what we ask every bidder in the main loop. So ask each bidder I for a set in.
00:13:47.654 - 00:14:27.160, Speaker A: So it's going to be like this definition, except it's given that you already have S sub I and you're not allowed to drop them. So in argmax of all the goods that you don't already own of this same thing. So I want to explain this notation.
00:14:27.160 - 00:14:53.992, Speaker A: Q epsilon si union t what I mean here. So you might recall that in the Crawford Noer auction, whenever this happened, it was always the case that the bidder currently had nothing, had the empty set, and they're only going to be biding on one extra item because of their unit demand. And we asked them to think about even though the current prices were Q, we said, well, when you tell us what you want, think of the prices as being a Q plus epsilon.
00:14:53.992 - 00:15:03.500, Speaker A: So we're going to do the same thing here. Now, for the items that it already has, the prices are not going to change. But for the items it's newly bidding on, we're going to say, think of those prices as being Q plus epsilon.
00:15:03.500 - 00:15:22.330, Speaker A: Because once you take them away from the other people, we're going to increment those prices and they really will be Q plus epsilon. So again, you already have S sub I. You can supplement it with more goods if you want, if you're looking at the value minus the price and what are the prices? So this is just for everything you've already got.
00:15:22.330 - 00:15:36.460, Speaker A: You just pay the current price q of J. But then anything that you're going to newly acquire, think of the price as Q of J plus epsilon.
00:15:39.140 - 00:15:39.890, Speaker B: Okay?
00:15:44.740 - 00:16:07.800, Speaker A: It and that makes sense once I tell you the rest of what we do. So first of all, if nobody wants any more stuff, then we just halt with the current allocation. That is, everybody gets their set s subi of items and prices, meaning everybody place Q of J for each of the items J in their bundles.
00:16:07.800 - 00:16:26.510, Speaker A: Otherwise, again, it's a nondeterministic auction. So basically the bidder can report any if there's multiple qualifying bundles, capital T, the bidder can report any one, it doesn't matter which. And then the auction, if there's many bidders who want more goods, we just pick an arbitrary one, it doesn't matter which.
00:16:26.510 - 00:16:56.436, Speaker A: So else pick I that wants some more stuff, let them have it. So that means of course, we're taking it away from other people. So if you were a previous owner of these items in Ti, then you're going to lose them and then these are all being outbid.
00:16:56.436 - 00:17:38.740, Speaker A: So we increment the price on everything that was taken away, with the one exception here being that if you're actually the first bidder ever on a given good J, then the price can stay at zero. But if you're outbidding somebody else, then the price should be incremented by epsilon, okay? And so that's the entire auction. If the bidders are unit demand this instantiates to exactly their Crawford Nord auction.
00:17:38.740 - 00:17:47.210, Speaker A: So this is its sort of natural generalization to arbitrary valuation functions. Does that make sense?
00:17:48.940 - 00:17:49.690, Speaker B: Okay.
00:17:51.980 - 00:18:13.650, Speaker A: All right, so quick example. And the point of this example is that if bidders bid sincerely. So if the only thing we know about bidders is that their valuation satisfies these properties and nothing else, and they bid sincerely, this can be a total disaster, okay? That's the point of this example.
00:18:13.650 - 00:18:35.720, Speaker A: So suppose there's two goods and the first bidder is going to be of a type we haven't really talked about, although it's very simple. So the first bidder is all or nothing, also called single minded. So either it wants both goods or none.
00:18:35.720 - 00:18:44.810, Speaker A: So its value, let's say, is three if it gets both goods and otherwise it's zero.
00:18:45.420 - 00:18:46.170, Speaker B: Okay?
00:18:49.920 - 00:19:04.450, Speaker A: Bidder two is unit demand. So its value is two for any non empty set, okay? It just wants one item, it doesn't care which one. So it's unit demand and also with the same value for both.
00:19:08.900 - 00:19:09.650, Speaker B: Okay?
00:19:10.900 - 00:19:21.620, Speaker A: That's it. Two bidders, two goods. So think about these bidders and stare at that auction and think for a second about what's going to happen if they bid sincerely.
00:19:21.620 - 00:19:47.180, Speaker A: It's actually kind of interesting what happens. Okay, so let's go through it. Let's say we alternate players.
00:19:47.180 - 00:20:05.100, Speaker A: So notice the auction has to pick a bidder if multiple people want more goods. So let's say we start with bidder one. So bidder one says, well, at price zero, I'll take both so then it's 1011 assigned to both items.
00:20:05.100 - 00:20:32.820, Speaker A: Then we ask bidder two, would you want to outbid this on anybody? And bidder two says yeah, at price zero or price epsilon for sure. So let's say that it doesn't matter which, but maybe the second bidder picks the first good to outbid the first bidder on bumping up that price to epsilon and grabbing good one. So now we go back to bidder one and we say, do you want to add bidder one still has the second good? And we say, do you want to augment that by anything? And they say, yeah, the second good by itself is not worth anything to me.
00:20:32.820 - 00:20:46.104, Speaker A: But both goods has value three and the prices currently are epsilon and zero. So the first bidder then grabs that first good back from the second bidder, which bumps up its price to two epsilon. So then we go back to the second bidder.
00:20:46.104 - 00:21:00.484, Speaker A: So now it's going to grab the second good, bumping up the price to epsilon. The first bidder will grab that second good back from the second bidder, bumping up the price to two epsilon, and so this will continue for a while. Okay, so the second bidder will keep grabbing one good.
00:21:00.484 - 00:21:04.470, Speaker A: That's all it wants. The first bidder really wants both. It's going to keep grabbing it back.
00:21:04.470 - 00:21:20.940, Speaker A: So the prices of the two goods will just increment two epsilon, two epsilon, four epsilon, four epsilon, six epsilon, six epsilon. Now something interesting happens once both of those goods start having price three halves.
00:21:21.920 - 00:21:22.670, Speaker B: Okay?
00:21:23.120 - 00:21:38.290, Speaker A: So once both goods hit a price of three halves, now all of a sudden, bidder one would prefer to have nothing. But importantly, in this auction, you cannot relinquish items. You only lose an item when you're outbid by someone else.
00:21:38.290 - 00:21:57.460, Speaker A: Okay, so let's say that at price three halves, the first bidder has both and has utility zero. Well, the second bidder, remember, its value is two for a good, so it is not deterred from a price of three halves. So the second bidder is going to go ahead and grab, say, the first good, bumping up its price to three halves plus epsilon.
00:21:57.460 - 00:22:07.848, Speaker A: And now the first bidder is pretty bummed out. The first bidder says, well, look, I'm stuck holding item number two at a price of three halves. I have value zero for it.
00:22:07.848 - 00:22:25.064, Speaker A: I could get good one back, but then I'm paying three plus two epsilon for something I value at three. But actually, if you just literally run this auction, I mean, that is the better option for bidder one. It would rather have utility minus two epsilon than utility minus three halves.
00:22:25.064 - 00:22:40.230, Speaker A: So it's going to go ahead and grab it back even though it's negative utility. So eventually both the prices will go up to two, and at that point bidder two will say, I give up. So bidder one will end up with both goods, but it'll pay four for a utility of negative one.
00:23:04.140 - 00:23:04.890, Speaker B: Okay.
00:23:05.980 - 00:23:16.450, Speaker A: All right. So what conclusions can we draw? So obviously then sincere bidding is not going to be any kind of equilibrium if it winds up giving you negative utility. Okay.
00:23:16.450 - 00:23:32.324, Speaker A: What's worse is even forgetting about kind of being in mean a sort of weaker condition is just thinking about Walrazi in equilibrium. Is it at least the case that you get sort of prices at the end where everybody gets their favorite good? And again, the answer is obviously no. Right.
00:23:32.324 - 00:23:37.728, Speaker A: So in this case, actually bidder number one is not getting its favorite good at the declared prices. It would prefer to have nothing.
00:23:37.914 - 00:23:38.650, Speaker B: Okay.
00:23:40.140 - 00:24:02.120, Speaker A: But like I said, our general setup is super general and for positive results we're going to have to have extra conditions. And this example suggests what maybe is a sensible condition, at least for this particular auction to function well in some sense.
00:24:02.290 - 00:24:03.010, Speaker B: Okay.
00:24:05.620 - 00:24:43.330, Speaker A: So we noticed that there was a point how's the blue on the screen is it reasonable? So one red flag was when this Kelso Crawford auction got to a point that a bidder actually would prefer to relinquish a good. So the auction doesn't let you do that. So if a bidder wants to do that and the auction doesn't let it, it kind of just feels like know, a deal breaker for any kind of incentive guarantees.
00:24:43.330 - 00:25:04.494, Speaker A: So we can first ask the know, okay, when is it going to be the case at least that in this Kelfo Crawford auction, bidders are perfectly happy to not relinquish the good that they've, you know, for motivation. Remember in the unit demand case in the Crawford Nowhere auction, that was in fact the case. That was part of our proof that it terminates a lawsuit equilibrium, right.
00:25:04.494 - 00:25:19.890, Speaker A: So if you only want one thing and you grab it and you still have it later, well, that price has stayed the same and the other prices have only gone up. So you're still very happy to have it. So it's not like you're going to fast forward in time and all of a sudden the unit demand bidder wants to relinquish its good.
00:25:19.890 - 00:25:42.970, Speaker A: That never happens. So that seems to be sort of an important distinction between the unit demand case and the general case. So let's try to think, are there conditions more general than unit demand where it's still going to be true that at no point in this auction will someone want to relinquish a good that they won previously? So the formal definition of a gross substitute valuation is just exactly that.
00:25:42.970 - 00:26:31.146, Speaker A: It literally just says in an ascending auction, and really in the Kelso Crawford ascending auction, if you find yourself holding some goods at the price that you originally bid for them, it's the case that you still want them. That the gross substitutes conditionally. We talk about two price vectors where Q is component wise at least p.
00:26:31.146 - 00:26:47.780, Speaker A: Okay, so what you should be thinking of is you're thinking about the auction, this auction, the Kelsey Crawford auction at some time with some price vector P, and then you fast forward. Prices only go up, so you have some only bigger price vector Q. So there'll be some components where these are the same and some components where they're different.
00:26:47.780 - 00:27:32.154, Speaker A: And it should be the case that if some bundle of goods, S was I's favorite at the price vector P, so in other words, this is perhaps a set of items that it bid on at that iteration of the auction. And then we fast forward so that it's Q, then there should be a set T, so that the stuff you had at the price vector P A is going to be the goods whose prices have gone up. So maybe you don't want these anymore.
00:27:32.154 - 00:28:15.020, Speaker A: S minus A are the prices, are the goods that you used to have whose prices have not changed, and it should be the case you still want these. What do I mean by you still want them? There should be a set of goods that you could augment them by so that this is one of your favorite goods with respect to the bigger price vector Q. Once again, think about earlier time and a later time with the prices of the earlier time being P, and then at a later time, the prices have ascended and they become Q.
00:28:15.020 - 00:28:24.400, Speaker A: On some goods, the prices have gone up strictly. That's what I'm calling capital A. So anything not in A, the price is exactly the same as it was before.
00:28:24.400 - 00:28:51.960, Speaker A: So what this says is that if you wanted all of the goods of S at the first period of time with prices p, and only the prices on the goods of A have gone up, so the ones in s minus a have not gone up. You still want these goods in the sense that you have a favorite bundle, which includes all of those items that you held previously. So that's what it means to say you still want the goods that you bought earlier, given that the prices are the same.
00:28:52.650 - 00:28:53.400, Speaker B: Okay.
00:28:56.490 - 00:29:17.940, Speaker A: All right, what we're going to do next is talk about non examples and examples of this definition, but any help required. Just sort of parsing this. And again, in my opinion, the right way to sort of think of this the first time you see it is it's really just sort of exactly the condition under which it seems like Kelso Crawford might work.
00:29:18.390 - 00:29:19.186, Speaker B: Okay.
00:29:19.368 - 00:29:29.346, Speaker A: Because again, what happens in Kelfo Crawford so in unit demand, it was simpler, right? You've got a good, then you don't have a good, then you have a good again, then you don't have a good, and so on. So that's pretty simple. It's binary.
00:29:29.346 - 00:29:35.818, Speaker A: Kelso crawford. Right. In general, you might get ten goods, and then at some iteration, three of them get taken away from you.
00:29:35.818 - 00:29:50.794, Speaker A: Next iteration, two more get taken away for you and so on. So your set keeps eroding. And so this is just saying, whatever you have left, whatever your partial bundle from before is, you're quite happy to just extend it, and you don't want to relinquish any of those goods.
00:29:50.922 - 00:29:51.600, Speaker B: Okay.
00:29:52.850 - 00:30:05.460, Speaker A: All right. So I think it's easiest to see a nonexample. So this bidder here is a non example.
00:30:05.460 - 00:30:34.358, Speaker A: That was the bidder that got into trouble in the Kelso Crawford auction bidding sincerely. So why is this a non example? Well, suppose let's take the smaller price vector P, to just be one in one. Okay, so then what does this bidder want? What's its preferred bundle? Well, it's happy to take both goods.
00:30:34.358 - 00:30:37.466, Speaker A: If the price is one each, it pays two. Its value is three. Its utility is one.
00:30:37.466 - 00:30:43.182, Speaker A: That's the best it can do. Now, imagine I increase just one of those two prices. So it used to be they were both one.
00:30:43.182 - 00:30:52.786, Speaker A: Imagine I increase the first good to three. So now the price of the combined bundle is four. So this person doesn't want either.
00:30:52.786 - 00:31:10.246, Speaker A: Okay, so its only preferred bundle at prices three and one is the empty set. And that's a violation of gross substitutes because we increased only one price, only the price of only the price of good A. And so we did not increase the price of good B.
00:31:10.246 - 00:31:18.170, Speaker A: And yet this bidder does want to relinquish good B as well. It wants to jettison both of them. So that's a violation of gross substitutes.
00:31:18.170 - 00:31:39.674, Speaker A: Agree? Okay, so examples. So everything we've seen so far has been gross substitutes. So, for example, nonidentical goods additive, it's gross substitutes.
00:31:39.674 - 00:31:48.210, Speaker A: In this case, the items have nothing to do with each other. So the demand sets are just defined independently on each good. There's no interaction.
00:31:48.210 - 00:32:14.394, Speaker A: So unit demand, as I said, we basically proved the gross substitute's property when we argued that Crawford noer converges to a warwazman equilibrium. We basically said, consider the moment at which you bid for a good fast forward. If the other prices have only gone up, you still want the same item.
00:32:14.394 - 00:32:38.206, Speaker A: You don't want to get rid of it's. So the multi unit auction with downward sloping valuations in this language corresponds to a symmetric set function meaning the value of the meaning. Your valuation depends only on the number of goods that you get, not on their identities.
00:32:38.206 - 00:33:00.326, Speaker A: That means the goods look identical to you, and the downward sloping just means that your marginal value for each extra good is only going down as you get more and more goods. That, again, is gross substitutes. Intuitively, if I take goods away from you, it sort of makes the goods that you still have only more valuable.
00:33:00.326 - 00:33:08.266, Speaker A: So you sort of only still want them. I'll leave it for you to think that through. But so in any case, gross substitutes does unify the last two scenarios.
00:33:08.266 - 00:33:09.966, Speaker A: We talked about scenarios three and four.
00:33:09.988 - 00:33:10.138, Speaker B: It's.
00:33:10.154 - 00:33:23.086, Speaker A: A common generalization. And there's other stuff that we won't talk about explicitly, but that it covers. So, for example, k unit demand is a generalization of unit demand.
00:33:23.086 - 00:33:46.620, Speaker A: So Unit Demand basically says, if you give me a bunch of items, I'm going to throw away all of them except my favorite. So K Unit demand says, give me a bunch, I'll throw away all but my K favorite. So formally, you would say, for a general bundle S, you would just take the best subset of size of most K and let's say you would sum them.
00:33:46.620 - 00:34:07.440, Speaker A: Okay? So the input is the same as in the unit demand case. A vij for each J. And then you just assemble the smartest subset of k goods amongst what you're given, which obviously is just the top K.
00:34:07.440 - 00:34:25.426, Speaker A: You can also, say, apply a concave function to this and it remains gross substitutes. So the exercises will ask you to think about a couple of these concrete examples. So the picture you might want to have in mind for gross substitutes.
00:34:25.426 - 00:34:42.010, Speaker A: And this is a picture we'll expand on more next week. But for now, you should think of gross substitutes as really being again the frontier of Tractability. So it contains unit demand with non identical goods.
00:34:42.010 - 00:34:55.540, Speaker A: It contains, say, additive again with non identical goods and multi unit as well. Multi unit downward sloping.
00:35:03.880 - 00:35:04.388, Speaker B: Okay.
00:35:04.474 - 00:35:19.550, Speaker A: Another stuff is in there as well. So next week, we'll look at things that contain GS as well. Okay questions about that.
00:35:19.550 - 00:35:44.976, Speaker A: All right, so what I want to prove next is I want to make good on this promise that it seemed like the gross substitutes condition is what is sort of needed for the Kelso Crawford auction to function properly. So we're going to take the functioning property as meaning converges to a walrazian equilibrium. And that's what we're going to prove.
00:35:44.976 - 00:35:58.120, Speaker A: Gross substitutes is sufficient for this to converge to a Rossian equilibrium. So the proof is pretty straightforward, but I think it's good to see it. Just to help really internalize this definition.
00:35:58.120 - 00:36:29.664, Speaker A: So theorem, assume that all valuations are gross substitutes and assume sincere bidding. Then the Kelfo Crawford auction converges to a walrazian equilibrium. As usual.
00:36:29.664 - 00:36:50.170, Speaker A: It'll be an approximate version an m epsilon wawa's in equilibrium, where epsilon is the price increment. Okay, so let me remind you just what's an approximate wazan equilibrium? It's a price vector and an allocation. So, first of all, all unsold goods should have price zero.
00:36:50.170 - 00:37:01.960, Speaker A: And secondly, everybody should get their favorite bundle at the given prices. In this case, their favorite bundle up to an additive loss of M epsilon, where favorite bundle is just the usual notion of the demand.
00:37:02.120 - 00:37:02.830, Speaker B: Okay?
00:37:08.340 - 00:37:34.020, Speaker A: All right, so proof. So we really designed the rules of the auction explicitly so that the only way that a good will be unsold is for the price to be zero. And this Is Exactly What Disallowing People To Withdraw Bids gets US so the only way an item can have no winner is if it never had a bidder.
00:37:34.020 - 00:37:43.690, Speaker A: And then, of course, its price was never incremented. Okay, so that's fine. So that doesn't actually use the gross substitutes property.
00:37:43.690 - 00:37:59.260, Speaker A: All right, so here's the role of gross substitutes in this context. So let's argue the following invariant. This will be true at every bidder, at every moment in time in the auction.
00:37:59.260 - 00:38:16.004, Speaker A: And again, remember what's a little bit tricky is from a bidder's perspective. When it's your opportunity to go to bid, you grab some set of goods that you want, and you're happy after that iteration. But then everyone else takes their turn, and they rip parts of your bundle away from you.
00:38:16.004 - 00:38:50.720, Speaker A: So this invariant has to speak about whatever sort of piece of the bundle that you last bid on remains. So for all I so for every bidder, the claim is that the items you have right now s sub i, are contained in some bundle that you want at the current prices. So in a set of di q epsilon.
00:38:50.720 - 00:39:19.720, Speaker A: And so here the definition of q epsilon is as before, if you already own it, then it's just the current price. And for anything you don't own, we think of it as being bumped up by epsilon. So this is the clamp.
00:39:19.720 - 00:39:41.090, Speaker A: Okay, so the base case is trivial, right? Initially, you have the empty set, so that's a subset of anything you want. So so consider an iteration of this auction. Well, if it was just your turn.
00:39:41.090 - 00:40:14.536, Speaker A: Okay, so if you just went in this previous iteration by the inductive hypothesis, there existed a favorite bundle of yours, a preferred bundle of yours that contains the items you already had. And that's a good thing, because the Kelso Crawford auction only allows you to bid on items you don't already have. So the inductive hypothesis ensures that there exists a choice of t that augments your current items si into a bundle in your demand set.
00:40:14.536 - 00:40:54.520, Speaker A: Put differently, under the gross, under this invariant, it says even if I dropped the constraint that you had to retain the current items, and I let you bid much more freely for any bundle that you wanted at the current prices, you would go ahead and recollect the same items you already hold now. So the answer to your optimization problem is the same either way, whether I constrain you to retain the current items or whether I don't. All right, so inductive step, if I just bid, follows from the inductive hypothesis.
00:40:54.520 - 00:41:14.030, Speaker A: So in this case, your current si not just is contained in some set of your demand set, it actually is a set in your demand set. So si is in di q epsilon because you just chose it. So, and then on the other hand, if some other bidder just took.
00:41:15.940 - 00:41:16.690, Speaker B: It.
00:41:22.340 - 00:41:25.600, Speaker A: Then this follows by gross substitutes.
00:41:30.100 - 00:41:30.850, Speaker B: Okay.
00:41:33.380 - 00:41:45.680, Speaker A: So why does it follow from gross substitutes? Well, you just consider the last time you bid on something. The last time you bid on something, it was in your demand. It was a preferred bundle at that prices.
00:41:45.680 - 00:42:08.700, Speaker A: At those prices, what has happened since people have taken some items away from you? Every time an item is taken away from you, the price has gone up. Okay, so for the current price vector, anything you've lost has a higher price than before. Gross substitutes insists on nothing on items whose prices have increased, and gross substitutes says the stuff that hasn't increased, you still want.
00:42:08.700 - 00:42:19.990, Speaker A: And if you're still the holder of these things you bid on, that means you're the most recent bidder and the price hasn't changed. Price only goes up when you're outbid. Okay, so that's that.
00:42:19.990 - 00:42:45.784, Speaker A: So for all bidders at all moments in time in the kelso Crawford auction, whatever you've got is a subset of what you really want. And from this, we're done. Okay, so why? So at termination, at termination, nobody wants to add anything.
00:42:45.784 - 00:43:04.524, Speaker A: Okay, so that means not merely are you a subset of something you really want, you have exactly what you want at the current prices. Well, at least current prices modulo these epsilons. So the invariant says if you think of goods you don't have as being epsilon more expensive than they really are, then in fact, you have your favorite bundle.
00:43:04.524 - 00:43:26.408, Speaker A: Now, in fact, those other goods aren't epsilon more expensive, so the real prices are epsilon less. There's a most m goods, so you're off by a most m epsilon with respect to the final prices q with any other competing bundle. So at termination, si is the preferred bundle at prices q epsilon for all i.
00:43:26.408 - 00:43:32.520, Speaker A: So this implies that you're an m epsilon while rising in equilibrium.
00:43:33.980 - 00:43:34.730, Speaker B: Okay.
00:43:38.880 - 00:43:59.280, Speaker A: So this is one of those proofs which really is just sort of meant to verify that you got the definition correct. I mean, we came up with the definition exactly so that this proof could work the way that it did. So any questions about that's?
00:44:00.120 - 00:44:01.030, Speaker B: All right.
00:44:03.800 - 00:44:23.532, Speaker A: So here's a cool consequence. In epsilon, we can take epsilon as small as we want.
00:44:23.626 - 00:44:24.076, Speaker B: Zero.
00:44:24.178 - 00:44:25.850, Speaker A: Okay, so letting epsilon go to zero.
