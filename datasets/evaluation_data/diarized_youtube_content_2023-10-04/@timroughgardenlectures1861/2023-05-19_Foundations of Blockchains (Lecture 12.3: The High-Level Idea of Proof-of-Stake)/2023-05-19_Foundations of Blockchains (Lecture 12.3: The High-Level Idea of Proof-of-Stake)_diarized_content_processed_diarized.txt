00:00:00.170 - 00:00:21.710, Speaker A: Alright, so this video is for everybody. Everybody who wants to have any understanding at all of what proof of stake means should watch this video where we talk about how it's defined at a high level and what are its key properties. So even if you never learn about sort of how it works under the hood, you should remember the properties that it has, which is what we'll talk about on this slot.
00:00:21.710 - 00:00:46.778, Speaker A: The goal, remember, from last video, is to have some way of doing sybil resistant random sampling. So we'd like to randomly sample a node running the protocol in a way that no node can manipulate the probability with which it's selected, or at least no node can costlessly manipulate the probability with which it's selected. We saw one example of a civil resistant random sampling procedure back in lecture number nine when we talked about proof of work.
00:00:46.778 - 00:01:10.610, Speaker A: So basically, there nodes commit computational resources to running the protocol. And here we're talking about a different approach where nodes instead will commit directly economic resources. So in proof of stake, the high level idea is that any node that wants to contribute, maybe by proposing blocks or voting on blocks, any node that wants to contribute has to lock up some stake.
00:01:10.610 - 00:01:35.574, Speaker A: So in blockchain protocols that use proof of stake silver resistance, the nodes that do this, the nodes that actually do lock up stake in order to propose or vote on blocks, they're generally called validators. And you can think of them as an analog to the miners that we had that were creating blocks back in Nakamoto Consensus in lecture number nine. All right, so let me just now add a little detail around the words that I've put in quotes.
00:01:35.574 - 00:01:58.210, Speaker A: So here stake generally, that's going to be coins in the blockchain protocol's native currency. So the cryptocurrency which is sort of managed by that blockchain protocol. Now, it's not impossible to implement proof of stake civil resistance using some external cryptocurrency, using a cryptocurrency managed by, for example, some other blockchain.
00:01:58.210 - 00:02:28.854, Speaker A: But it sure is convenient to implement staking with a protocol's native currency, and that's how it's typically done. Furthermore, some blockchain protocols that use proof of stake symbol resistance, including for example, modern day Ethereum, use a technique known as slashing, which is basically taking funds away from misbehaving validators. And for slashing to really have its full force, you really kind of then need validators to be staking in the blockchain's native currency.
00:02:28.854 - 00:02:56.968, Speaker A: The protocol has to actually have direct control over the currency in which the stakes are denominated. So what do I mean by lockup? Well, proof of stake civil resistance, it's used almost exclusively by blockchain protocols that support general purpose smart contracts. So that actual kind of computer in the sky that we talked about all the way back in lecture one.
00:02:56.968 - 00:03:12.936, Speaker A: So Ethereum is the most canonical example of a blockchain protocol with general purpose smart contracts. Most of the other proof of stake blockchains you probably have heard of also are in that category. Bitcoin would be an example of a protocol that by design does not have general purpose smart contracts.
00:03:12.936 - 00:03:49.298, Speaker A: By design it has more limited functionality. So given that generally when you're trying to implement proof of stake sybil resistance, you have available general purpose smart contracts, it's really not that hard to write a computer program that manages deposits and withdraws from nodes that would like to enter or exit the set of current validators. And of course, with a general smart contract, it's no problem to enforce various rules around what's allowed as far as deposits and withdraws.
00:03:49.298 - 00:04:04.380, Speaker A: So for example, this is where the lockup terminology comes in. It's trivial to just say, okay, after you deposit, you have to wait at least two weeks before you can withdraw. And so that would just mean that actually the funds really are in escrow for some meaningful amount of time.
00:04:04.380 - 00:04:38.210, Speaker A: So that's the basic idea of proof of stake and the basic property that we want of our random sampling procedure is that a node should be selective probability proportional to the amount of stake it has locked up. So the amount, for example, of native cryptocurrency, it has an escrow in this designated smart contract. Okay? So a random sampling procedure is such that for each node running the protocol, a node is selected with probability equal to the fraction of the state coins that it owns.
00:04:38.210 - 00:04:56.854, Speaker A: And if you go back to lecture number nine, you will see this is literally exactly the defining property of proof of work except with hash rate replaced by staked coins. So this is the key defining property of proof of stake random sampling. Let's give this abbreviation.
00:04:56.854 - 00:05:14.114, Speaker A: Let's call this property star. All right, so that's the property that I claim that we want. One question is sort of how do we get it? We'll talk a lot about that, especially in part two of this lecture, but let's talk a little bit more about why this is the property that we want.
00:05:14.114 - 00:05:38.554, Speaker A: And so first of all, let's observe this is the analog of corollary one from lecture number nine. Let's observe that if you have a random sampling procedure that meets this property star, that is in fact a civil resistant random sampling procedure. And so this property is immediate, right? If we just look at that Magenta equation, you will notice that the right hand side of that equation is independent of the number of IDs that node I is using.
00:05:38.554 - 00:05:49.030, Speaker A: It doesn't matter how the node spreads its stake over various accounts. All that matters is the total amount of stake that it controls. Okay? So the right hand side is independent of the number of IDs.
00:05:49.030 - 00:06:02.850, Speaker A: Therefore the left hand side is as well. And that's exactly what civil resistance means. So it is true that a node can manipulate the probability that with which it's selected, but only by acquiring and locking up additional stake.
00:06:02.850 - 00:06:27.456, Speaker A: So that's the analog of corollary number one from lecture number nine. Next is going to be the analog of corollary number two from that lecture. So always when we're designing consensus protocols, we need to impose some kind of bound on the power of the adversary, like the power of the Byzantine nodes.
00:06:27.456 - 00:07:01.410, Speaker A: And given this property, given if we're going to be selecting nodes as probability proportional to stake, it's clear what that assumption on the adversary has to be about. It has to be an upper bound on the fraction of the stake controlled by Byzantine nodes. In particular, if we assume that at most an alpha fraction of the stake is controlled by Byzantine nodes, then the property that any given output of this random selection procedure, the probability of it being a Byzantine node, is at most that same upper bound alpha.
00:07:01.410 - 00:07:23.158, Speaker A: And as we know from previous lectures, with longest chain consensus, you generally start getting your guarantees once alpha is less than a half. Once you have a strict majority of honest participation and with BFT type protocols, usually you require the stronger condition that alpha is going to be less than a third. So throughout this lecture, when we're talking about proof of stake consensus protocols, we'll talk about both BFT style protocols.
00:07:23.158 - 00:07:35.230, Speaker A: So there you should expect an assumption that less than a third of the stake is controlled by Byzantine nodes. We'll also discuss longest chain protocols. There you should expect the assumption to be that less than half of the stake is controlled by Byzantine nodes.
00:07:35.230 - 00:07:56.294, Speaker A: Now, at this point, sort of all of you should be kind of saying, look, Tim, pretty easy to just write down a desired property on a slide. The way I've done here. The real question is can you actually implement this? And if so, how? How is a protocol going to somehow select leaders so that this property star really is true? So we'll have a lot to say about that.
00:07:56.294 - 00:08:15.542, Speaker A: Basically all of part two of lecture twelve is going to be about exactly that. How do you implement random sampling procedures with this property? But before we get to that, I do want to talk a little bit more about just sort of the motivation for proof of stake. After all, we already have a permissionless civil resistant random sampling subroutine in proof of work.
00:08:15.542 - 00:08:23.370, Speaker A: Why is that good enough? Why might we want an alternative? So we'll talk about a few of the reasons in the next video. I'll see you there. Bye.
