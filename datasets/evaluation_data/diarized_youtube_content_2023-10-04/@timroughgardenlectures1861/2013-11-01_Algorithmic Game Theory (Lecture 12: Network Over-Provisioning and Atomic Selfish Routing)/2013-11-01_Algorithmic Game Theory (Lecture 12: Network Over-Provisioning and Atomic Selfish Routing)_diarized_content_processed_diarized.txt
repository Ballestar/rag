00:00:00.490 - 00:00:50.300, Speaker A: What I want to do today is continue talking about routing games, talking about their equilibrium, when and in what senses are they close to an optimal solution. The first two results I want to discuss today, I kind of want to interpret in the context of a case study. The case study is in the strategy when you're managing a communication network of what's called over provisioning. So the routing model we've been talking about is sort of general enough to cut across a few different domains. It originates from transportation networks back in the 50s or even sort of implicitly before that. But one big advantage in communication networks, which is not so true in transportation networks, is it's relatively easy and cheap to add capacity to communication networks. If you tell your urban planners to go add four more lanes to highway 101, it's not so simple.
00:00:50.300 - 00:01:37.786, Speaker A: So a popular strategy for people who actually do manage communication networks is to install extra capacity, so more capacity than is needed. And all I mean by this is that if you look at the network at any typical moment in time, it's going to be not fully utilized. In fact, possibly quite far from fully utilized. So a lot of the capacity will just be sitting there unused. And if you look at communication networks out there today, that is in fact a property of them. They're not even close to fully utilized, generally speaking. So I don't know of a definitive reference on the over provisioning strategy to give you.
00:01:37.786 - 00:02:28.220, Speaker A: But if you google it, you get lots of research papers, you get discussion forums where network managers are discussing whether or not to do this, and if so, by how much, and so on. So it's really, like I said, something that's used quite commonly. So why would you want more capacity than you really need? So one reason is you want to make sure if demand suddenly grows for your network, you have sort of enough capacity there to absorb it. But I want to focus on performance reasons that you might want to install extra capacity. And these have been observed empirically. And so I'm going to mention two things and we'll have theorems that correspond directly to these two empirical observations. So empirically the network just functions better for whatever performance measure you want, packet drops, delay of traffic, whatever.
00:02:28.220 - 00:03:33.870, Speaker A: The more capacity you have, the better the performance of the network. And two, when people think about sort of a related point, when people are sort of asking the question what should we do with our network to make sure the performance is reasonable? For example, to guarantee certain latency for our end users. When you download a web page or what have you, it's often thought that it's cheaper to just add extra capacity, make the network bigger and therefore function better, as opposed to having some kind of smart control, possibly in software. So doing something like guiding the performance of the network with the current capacity toward optimality. So it's not to be cheaper than somehow being smart and enforcing what networking they call QoS or quality of service. So this would be just guaranteeing some kind of end to end delay, for example. And one way you might do that would be some kind of emission control procedure whereby you actually are able to refuse entrance of some traffic to the network in order to keep the congestion down.
00:03:33.870 - 00:04:31.582, Speaker A: So there's not consensus on this topic, but there's a sizable camp that believes rather than be smart about managing the traffic in your network, just make sure there's more than enough capacity to hold it. Again, so these are just empirical phenomena and I want to show you two mathematical results which corroborate this real world experience. All right? So the first result is actually just going to be an instantiation of what I already told you on Monday. We went over a very general theorem on Monday. So I'm just going to instantiate in a particular way that'll correspond to point number one, that the more you're over provisioned, the better the network functions. So we'll have a sense in which the more over provisioned, the price of energy will get closer to one and then we'll prove a new theorem making this precise. All right, so on Monday we worked with arbitrary sets of cost functions.
00:04:31.582 - 00:05:28.434, Speaker A: And so to illustrate this point, I want to now instantiate cost functions to look like this. So every edge is going to have a capacity. It's called U sub and the cost or delay function, there'll be some basic propagation delay with zero traffic. And then as it gets more and more congested, of course the delay goes up and it goes up very sharply as you get to the asymptote. Okay? So qualitatively, that's what the cost functions are going to look like. So we're going to consider a selfish routing network just like we were talking about on Monday, where every edge cost function has the form. Well, if you're over capacity, then it's infinity.
00:05:28.434 - 00:06:14.500, Speaker A: So basically you can't go over capacity. And if you're under capacity, then it grows as the reciprocal of the capacity remaining. So one over the capacity minus the amount of traffic on it's. A few of you I hope, have encountered functions like this previously. This is the standard delay function for what's called an Mm, one queue, a queue with Poisson arrivals and exponentially distributed service rates. If you take a textbook on networking and you just start reading from page one, this will be the first delay function that you find in a networking textbook. All right, so we want to have a mathematical statement that says the more the network is over provisioned, the better it will function.
00:06:14.500 - 00:07:19.458, Speaker A: So here's what over provision is going to mean for us, and I'm going to parameterize it. So alpha over provisioned, and by this I mean that the maximum link utilization in the network at equilibrium is one minus alpha. So meaning if I look at the amount of traffic using any given edge, of course it's got to be less than the capacity because otherwise we'd have infinite cost. But actually it's even at most one minus alpha times the capacity. Okay? So for all edges at equilibrium, okay, so one of the most basic network measurement tools is just look at link utilization. So what I'm saying here is just inspect, zoom in on each of the links in your network. Look at the link utilization.
00:07:19.458 - 00:08:04.178, Speaker A: If all of the links utilization is a most one minus alpha, so maybe alpha is zero one, so that'll be 90% link utilization. Then we call it alpha over provisioned. The more the alpha, the more it's over provisioned, the less it's utilized. Okay? All right, so I'm going to skip a calculation. But it turns out what we did on Monday was we basically gave an algorithm for computing the price of anarchy, the worst case price of anarchy for any set of cost functions. So what do we prove? We said, well, it doesn't matter what your network is, how big and complicated it is, whatever the price of anarchy is, it's no worse than one of these two node, two link networks. You always realize worst case price of anarchy on two node, two link networks.
00:08:04.178 - 00:09:00.058, Speaker A: So we could take that abstract set C of cost functions to be these Mm one delay functions with the additional restriction that flow never uses them more than one minus alpha times the capacity. Then there's going to be some trivial network with cost functions like that that realizes the worst case price of energy and we can just compute it in that small trivial example. So I'm going to skip the details of that and just give you the bottom line of what you get when you do the calculation. So it follows from what we said yesterday, that in any alpha over provisioned network, again, no matter what the topology is, just as long as the equilibrium obeys this condition. So you get an exact formula which is also tight. So this can be realized, as we know, even in very simple networks, that the price of anarchy is bounded above by the average of one and the square root of one over alpha. So let's just sort of get a feel for this.
00:09:00.058 - 00:09:48.806, Speaker A: Okay? So what you'd expect intuitively is as you make a network massively over provisioned, then in some sense these cost functions are like essentially constant, right? So, I mean, if you have so much capacity that basically you're never going to fill up a link at all, it's almost like you have constant cost functions and you'd expect traffic to be on shortest paths, everybody would be happy. It would basically be optimal. So you would expect that as alpha approaches one, as the link utilization approaches 0%, you'd expect a price of anarchy of one. And you see that plug in alpha equals one and you get one. If you let alpha go to zero and you make no guarantee on how far away you are for capacity, well, then you're going to be near this asymptote. And it's like a crazy steep cost function. And we know from Monday that even in simple networks with crazy steep cost functions, the price of energy can be arbitrarily large.
00:09:48.806 - 00:10:32.200, Speaker A: So we're not also surprised to see that as we take alpha going down to zero, as the max link utilization approaches 100%, this blows up to infinity. So what's cool is we have this exact expression that we can evaluate with interesting values of alpha that might correspond to something in practice. So for example, alpha equal zero one. So if you plug in alpha equal zero one, this is like ten under the square roots, there's a little bit more than three. So the average here is going to be a little bit more than two. So a special case says max link utilization at most 90%. And again, in reality, many link utilizations are far less than 90%, but as long as everything's at most 90%, this says the price of anarchy is bounded by something just a little bit bigger than two.
00:10:32.200 - 00:11:35.882, Speaker A: So that's a sense in which, from what we already learned on Monday, we see how the selfish routing theory corroborates this real world experience that networks perform better the more they're over provisioned. So that's the first sort of vignette about network over provisioning. Let's move on to this. Let's see if we can have something which allows us to compare the benefits of adding capacity versus the benefits of being smart about the traffic management. All right, so I just mentioned this, but let me mention again, which is we know that if you make no assumptions about cost functions at all, you can't say anything about the price of anarchy, it could be arbitrarily large. And we know that just from the nonlinear version of pigu's example. Okay? So on Monday we argued that as D goes to infinity, the optimal solution can split one minus epsilon epsilon with epsilon going to zero.
00:11:35.882 - 00:12:35.694, Speaker A: So the opt goes to zero, whereas the equilibrium is one no matter what D is. So that ratio blows up to infinity as D goes to infinity. So the point being that even in very simple selfish routing networks, the price of anarchy is unbounded in general. So the main thing we did on Monday is we made assumptions about and that we just did in the last application is we made assumptions about the cost functions and we said as long as they're not too steep, then in fact the price of anarchy is bounded, it's near one. But what if we actually want to say something about networks with arbitrary cost functions? So cost functions of the form x to the D, what could we do? Well, one thing you could do is you could make extra assumptions not on the cost functions, but about maybe, say, the traffic matrix and about the network topology. And there's been some work in the systems community. There's a Sidcom paper from about ten years ago that does exactly that, that says if you look at, quote unquote internet like topologies, even for arbitrary cost functions, the price of anarchy is pretty small.
00:12:35.694 - 00:13:37.380, Speaker A: So that's a totally legitimate way to proceed. We're going to do something different here with an eye toward this comparison of adding capacity versus smart traffic management. So what we're going to do is we're going to take an arbitrary network, including, say, the nonlinear piggy's example, and we're going to compare the equilibrium to a weaker benchmark, a weaker version of opt. And the trick is, in our comparison, we're going to force the optimal flow to send additional traffic. Okay? And we can already see how this might work in the nonlinear piggoos example. So if the equilibrium flow has to route one unit of traffic, as usual, it will all go on top. So the equilibrium costs one.
00:13:37.380 - 00:15:07.338, Speaker A: But what if now I let you route optimally, but I force you to route two units of traffic in that top network? What are you going to do with it? If you only have one unit of traffic, you can split it one minus epsilon and epsilon. But now if you have to route a second unit of traffic through, you're sort of stuck. Okay? Either you can route it on the bottom link, which is always expensive, or you can route it on the top link, but then it's going to get congested and you lose all your benefits. So if you have to route two units of traffic, there's nothing better you can do than putting one minus epsilon on top and one plus epsilon on the bottom. And your cost then in routing two units of traffic is going to be more than one, which is what the equilibrium pays, routing only one unit of traffic. So we're going to seek some kind of generalization of that observation. And to further connect this to the previous point, I'm going to ask you on this exercise set to prove that comparing to an optimal solution that routes additional traffic is mathematically exactly the same thing as comparing to an optimal solution with the same amount of traffic with both the equilibrium and the optimal.
00:15:07.338 - 00:15:49.290, Speaker A: But these different networks, a slower one and a faster one. What this says, what we're going to prove, will imply that an equilibrium in a faster network is even better than an optimal solution in the original network. And in fact, if you have these mm, one delay functions, it has a particularly nice interpretation. It says if you double the capacity and use equilibrium routing, that's at least as good as if you used optimal routing in the original network. So this is a precise way of saying the performance will be better if you don't try to manage traffic and you just add capacity, you double capacity versus not adding capacity and routing optimally, doing the best you can in the original network. So that's what this theorem is going to imply. So here's the formal statement.
00:15:49.290 - 00:17:16.022, Speaker A: This is an old result with my PhD advisor Eva Tardosh. And so the real benefit here is that now we're going to make no assumptions on the cost functions at all other than the baseline assumptions, non negative, non decreasing, continuous. So in particular theorem will apply to networks like this. So the cost of an equilibrium flow with R units of traffic is going to be bounded above by the cost of an optimal flow with two R units of traffic. So the generalization of what we observed in the nonlinear piggoos example where forcing opt to route two units forces its cost to be above one the equilibrium cost. Okay, so this is the formal mathematical statement and I've tried to sort of give you a narrative in the sense in which it formalizes this philosophy, this philosophy that adding capacity, meaning using a faster network does better, has smaller cost than not adding capacity and being smart about routing traffic. So up next is the proof of this.
00:17:16.022 - 00:18:15.420, Speaker A: Any questions? Like what you're kind of traffic? So no, that's more what's going on in this equivalent version. So it can be rephrased as such. And that's exactly what the exercise asked you to go through. But in the theorem that I'm about to prove, there really is fundamentally twice as much traffic in the optimal network. Okay, but again, I mean, your interpretation is correct, but it takes an additional change of variable, basically, which is what this exercise asks you to do. Other questions? Okay. Seems kind of obvious.
00:18:15.420 - 00:19:11.120, Speaker A: Yeah, but it's optimal, right? So if it's just equilibrium flow yeah. So there's two different moving parts here, right? So I basically give you full control over the network, but I make you write route twice as much. Obviously, the first thing makes your life easier, the second makes your life harder. And it's totally unclear who's going to win the tug of war. Yeah, no, we want to make opt weaker, right? So Op should get the slower network, or if you prefer, we get the faster network. But we're just going to be very dumb about our routing. Okay, so proof is not too hard.
00:19:11.120 - 00:19:50.810, Speaker A: So we've got our equilibrium flow. It routes only our units. Like last time it's going to be F, and like last time, F star will be the opt flow and that routes twice as much traffic to our units. I'm again going to assume that everybody starts from the same source and is going to the same destination. And it's again true. See exercise set six that this extends to multiple sources and multiple destinations with essentially the same proof. But it's simple to see what's going on with One Source and one destination.
00:19:50.810 - 00:20:41.494, Speaker A: So recall the definition of an equilibrium flow. Any flow in use is shorter than any other sorry. Any path in use by an equilibrium flow has to be as short as any other path with respect to the current traffic. So in particular, all paths in use have exactly the same travel time. Okay? And, like, on Monday, I'm going to call that capital. Lying to do here is really kind of conceptually exactly the same as part one of the proof that I gave you last time. So what were we doing there? So the hard part about trying to get a grip on the Optimals cost is that not only is the traffic pattern different than the equilibrium, but once you mix up the traffic pattern, the costs themselves are different.
00:20:41.494 - 00:21:30.410, Speaker A: So how do I compare these two different flows, which are measured with respect to totally different cost functions? But we had this nice idea On Monday, which was that well, if only we froze the costs at The Equilibrium amounts then because The Equilibrium Sort of routes everything on shortest paths with those fictitious Frozen costs, any Other flow Is only going to be worse. And here we're routing twice as much traffic, so it's actually going to be twice as bad. So we're going to just do that exact same trick here. So we're going to freeze the costs at the equilibrium values to give us a grip, to give us some kind of handle on a version of the Optimals cost. So the Equilibrium flow total travel time or Cost. So let me just write It in the path version. So the amount of flow in a path times the cost of that path.
00:21:30.410 - 00:22:00.020, Speaker A: And the path cost is L for any path that it actually uses. And then, of course, it's a flow that routes r units of traffic. So these values sum to r. So just like last time, we get an r times l amount of traffic times the common cost of all traffic. That's the equilibrium cost. And if we use the fictitious equilibrium cost to lower bound the optimal flow value, we can do that as well. Just like last time.
00:22:00.020 - 00:22:53.406, Speaker A: So if I look at the optimal flow routing to our units and I don't measure its cost with respect to the proper costs, meaning the cost with respect to f star, but rather I freeze them at the equilibrium values, well, we know that these are all at least L, because the equilibrium routes stuff on shortest paths. And for this flow f star, we've forced it to route two R units of traffic. So we know this sums to two R for F Star. Okay, so that's what we get. We get that if we use the wrong costs. So we're going to have to pay the piper later. But for now, we use the wrong cost, we actually get a fantastic lower bound on the optimal flow.
00:22:53.406 - 00:23:21.850, Speaker A: Remember that's what we want to do. We want to say the optimal flow is at least as expensive as the equilibrium flow. Right now we're saying it's twice as expensive. But of course we're cheating. We're not using the cost with respect to f star, we're using the other ones. But it does reduce the proof to showing that the overestimate potentially introduced by using the wrong costs is at most r times l. So remember, this is the equilibrium cost.
00:23:21.850 - 00:23:50.918, Speaker A: We want to say that the optimal flow is at least this, this erroneous version of the optimal cost is at least two RL. So if we're off by only RL, then we're done. Then in fact the real optimal cost is at least RL, and that's what we're trying to prove. So in other words, to finish, it's enough to show. Now remember last time we had two ways of writing costs. We could either sum up over the path or sum up over the edges. So I'm going to now write these exact same quantities but as the sum over edges instead.
00:23:50.918 - 00:24:39.000, Speaker A: So don't get confused by that. So we want to prove that's the cost of f, this is what we want to lower bound. So I've written it in the edge form. Let me do it this way. This is exactly the same as this, just written the edge form instead of in the path form. So this we just argued is at least two times RL. So this is our fictitious lower bound on the optimal cost.
00:24:39.000 - 00:25:29.046, Speaker A: And then it, this is just the cost of the equilibrium flow written in the edge form. And as we observed, this is exactly r times l. So we have not proved this inequality. This is the inequality we're about to prove. So what you're supposed to observe right now is that if we successfully prove this inequality, then we're done. Okay, what are we trying to prove? We're trying to prove that the optimal flow f is at least as expensive as the equilibrium sorry, optimal flow f star is at least as expensive as the equilibrium flow f. So here we have cost of f star.
00:25:29.046 - 00:25:50.140, Speaker A: If we successfully prove this, then we get it's at least two times r l minus r times L-I-E-R times l, which is indeed the equilibrium cost. Okay, so if we prove this inequality, then we've proved the theorem. Agreed. So it.
