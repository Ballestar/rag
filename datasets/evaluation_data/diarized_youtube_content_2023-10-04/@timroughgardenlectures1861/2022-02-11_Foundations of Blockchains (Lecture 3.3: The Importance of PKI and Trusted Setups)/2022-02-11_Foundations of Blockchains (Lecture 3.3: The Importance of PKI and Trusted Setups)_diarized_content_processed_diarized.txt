00:00:00.730 - 00:00:21.978, Speaker A: All right, to wrap up lecture three, it's very important that we discuss this apparent contradiction, right? So on the one hand, in lecture two, the main result was a possibility result. We gave the Dole of Strong protocol, which was a solution to Byzantine broadcast satisfying validity and agreement. And if you remember, at the very end of lecture two, we emphasized that dole of strong satisfies validity and agreement.
00:00:21.978 - 00:01:01.230, Speaker A: No matter what little F is, no matter how many byzantine nodes there are, even if there's only two honest nodes and the other N minus two nodes are byzantine, those byzantine nodes still cannot get the two honest nodes to disagree with each other. On the other hand, what have we just proved? We just proved that actually, if F is sufficiently big, namely more than N over three, then in fact there is no protocol for Byzantine broadcast satisfying both validity and agreement. So what gives? Okay, so the two results do not contradict each other.
00:01:01.230 - 00:01:26.546, Speaker A: And probably it's the reason you might expect, which is that they operate under slightly different sets of assumptions which make them not directly comparable. And the really big assumption here, and no prizes for guessing because it's part of the lecture title, is the PKI assumption. So this public key infrastructure assumption, it was one of the four assumptions we made when we did the validity and agreement arguments approves for the dual of Strong protocol.
00:01:26.546 - 00:01:58.670, Speaker A: And so, remember, we're not just assuming that cryptography exists, right, and there's sort of secure digital signature schemes and that every node is capable of generating a public private key pair for itself with the PKI assumption. You're also assuming that somehow in a trusted setup phase that occurred before the protocol ever started, somehow every node learned the public key of every other node. So at Dole of Strong as a node, you're born not just with sort of the addresses, IP addresses of the N minus one other nodes in the protocol, you're also born knowing all of their public keys.
00:01:58.670 - 00:02:41.150, Speaker A: And meanwhile, if you think about the impossibility result that we just proved in this lecture, that proof kind of breaks down in the presence of the PKI assumption. So there's various ways, all misguided, all doomed to failure, but there's various strategies you could try to apply to extend the proof we saw in this lecture so that it holds even under a PKI assumption. And if you try to salvage the proof in any number of different ways, there's kinds of two things that keep interfering with completing the proof.
00:02:41.150 - 00:03:10.310, Speaker A: So the first issue is that it becomes less clear how to define the thought experiment. So how did we do that in the version of the thought experiment we just saw where we were implicitly assuming there was no PKI? Well, when we bought our six machines and spun up the protocol pi on each one, we just ensured that the protocol had exactly the information it was expecting were the machine to be participating in an N equals three instance of Byzantine broadcast. Namely, every machine was told whether or not it should run in sender mode or in non sender mode.
00:03:10.310 - 00:03:35.086, Speaker A: For the senders, everybody was told their private input and everybody was told a list of three IP addresses, their own IP address and the IP address of two other machines which were their neighbors in the 6th cycle. Two other machines from which they should expect to hear messages and to which they could send messages if they so desired. So from each node's perspective, that was exactly as if they were in an N equals three instance of Byzantine broadcast.
00:03:35.086 - 00:03:56.618, Speaker A: Now, suppose we try to extend this idea to incorporate the PKI assumption. So now the protocol Pi is expecting more information before you press play and start it running. It's not just expecting a list of three IP addresses, it's also expecting a list of three public keys, the public keys for those corresponding machines, along with also the private key for the machine that the protocol is running on.
00:03:56.618 - 00:04:27.314, Speaker A: So you could try to define the thought experiment that way, where each node only learns about the IP addresses and the public keys of itself and of its two neighbors. So from each node's perspective, its initial data is consistent with being in an N equals three instance of Byzantine broadcast. But if you think about it, you realize things start getting kind of weird, right? So if you have six nodes running Pi, each of which knows only about sort of three public keys, and people are signing messages and passing it around, nodes might start seeing messages signed by nodes that they've never heard.
00:04:27.314 - 00:04:43.622, Speaker A: Of so that they can't verify with any of the three public keys in their list because it was signed with a private key that corresponded to one of the other three nodes. Now, this isn't quite a deal breaker. It's just meant to indicate that things get a little weird when you start throwing in the PKI assumption.
00:04:43.622 - 00:05:12.782, Speaker A: So if you wanted to try to salvage it up to this point, the trick would be to in the thought experiment with the six nodes actually only use three public key private key pairs. So give the two copies of A, A and A prime, they'll use the same public key private key pair, same thing for B and B prime and C and C prime. And so now, with this trick, we can sort of have our cake and eat it too, right? Because each of the six nodes in the thought experiment, on the one hand, it only receives a list of three public keys that of itself and that of its two neighbors.
00:05:12.782 - 00:05:33.500, Speaker A: And so that's consistent with existing in an N equals three instance of Byzantine broadcast. On the other hand, because of the way we've sort of reused keys, each of the six nodes actually will be able to recognize every signature it ever sees. So it won't necessarily be able to distinguish whether a message was signed by B or B Prime, but at least it'll check out that it is sort of a valid message.
00:05:33.500 - 00:05:56.890, Speaker A: So that brings us to the next and really the big roadblock. The big reason the proof really breaks down with the PKI assumption, which is that in our proof, we needed to define these very clever sort of simulation. Based strategies for byzantine nodes where a single byzantine node in an N equals three instance would simulate the behavior of four nodes out of the six.
00:05:56.890 - 00:06:28.640, Speaker A: In our thought experiment. And remember, we needed to define the Byzantine node strategy in this way so that the two honest nodes operated identically whether or not they were in the bona fide instance of Byzantine broadcast or they were in the six node thought experiment. And the problem now is that with the PKI assumption under our ideal signatures assumption that you can't forge signatures, a Byzantine node may simply be unable to carry out that simulation strategy.
00:06:28.640 - 00:06:59.520, Speaker A: So, to be a little bit more concrete, let me just remind you about what scenario one of the proof we just saw looked like. So in scenario one, that was the scenario where we were appealing to the agreement property supposedly possessed by the assumed protocol Pi. And so we were looking at a Byzantine sender, so that's X here and then B and C Prime were honest non senders.
00:06:59.520 - 00:07:34.960, Speaker A: And if you remember sort of the very clever strategy that this Byzantine sender X can employ is it can simulate the four other nodes in the 6th cycle thought experiment. So this is the chain between A and a prime. So now we see why we might have a problem, right? So simulation means that this single Byzantine node, capital X is responsible for recreating all of the behavior of these four honest nodes in the thought experiment AC B Prime and A Prime, including possibly signing messages with the appropriate private key.
00:07:34.960 - 00:08:01.942, Speaker A: So the question now is, does this Byzantine node X in the green triangle, does it have sufficient information to carry out the simulation that the proof requires? And if we look at it, we see that the answer is no. Okay? So what does the Byzantine node capital X know in the green triangle with the PKI assumption? Okay, so everybody knows everybody's public keys b, C Prime, X. Their three public keys are common knowledge, but people only know their own private key.
00:08:01.942 - 00:08:23.310, Speaker A: So the Byzantine node capital X, it knows its private key. It can sign on its own behalf, obviously, but it doesn't know the private key of B or C Prime. And remember, under the ideal signatures assumption, by virtue of not knowing either B or C Prime's, private key X cannot create any message with a valid signature by either of those two nodes.
00:08:23.310 - 00:08:41.646, Speaker A: But notice that is actually exactly what is required to carry out a faithful simulation of what's happening in the thought experiment. In the bottom right, the X is supposed to be Simulating Prime and A prime for Ana Prime. It can just make use of its own public key, private key pair.
00:08:41.646 - 00:08:54.610, Speaker A: So it can just sort of use that for A and A Prime. But C and B Prime, they're supposed to be using the same secret key as B and C Prime. And again, remember, the Byzantine node does not know the secret key of B and C Prime.
00:08:54.610 - 00:09:15.178, Speaker A: So it cannot simulate the actions of C and B Prime in the thought experiment. So it's literally just under the ideal signatures assumption, impossible for X to carry out the necessary simulation. So that's the reason why the Dole of strong protocol does not in fact contradict to the impossibility result that we proved in this lecture.
00:09:15.178 - 00:09:28.066, Speaker A: It's a quite subtle point. So I do encourage you to sort of keep thinking about it after the lecture concludes. But in any case, let me just make sure that the upshot of this lecture and last lecture is crystal clear.
00:09:28.066 - 00:10:01.104, Speaker A: So what we saw with the Dolov strong protocol is that if you do have the PKI assumption and you're in the synchronous model, then you can actually solve Byzantine broadcast to get agreement and validity, no matter what F is. And then the main thing we learned from today's lecture is that if you don't have this PKI assumption so if a Byzantine node really is capable of carrying out this simulation of a chain of sort of four nodes in a row in the thought experiment, then in fact you cannot get Byzantine broadcast for arbitrary number of faults. Little f.
00:10:01.104 - 00:10:19.640, Speaker A: You need little f to be less than a third of the nodes. So this separation, the fact that there are things you can do with PKI that you cannot without PKI, this is super, super interesting. In particular, this says that crypto really matters as far as when you can get good consensus protocols.
00:10:19.640 - 00:10:29.928, Speaker A: So just as a point of contrast, think about when you study algorithms. It doesn't matter whether cryptography exists or not. You're trying to solve the minimum spanning tree problem.
00:10:29.928 - 00:10:41.964, Speaker A: Like, who cares if there are secure digital signature schemes? You just give the algorithm. Or maybe it's a hard problem, like, say, an NP hard problem, like the traveling salesman problem. And it doesn't help you if I sort of give you for free a secure digital signature scheme.
00:10:41.964 - 00:11:05.240, Speaker A: It doesn't let you solve the problem any better than you could before. But it's very different here with distributed computing and with consensus protocols. If you do have access to cryptography, and as we saw there's a trusted setup phase where you can sort of broadcast all of the public keys, it actually fundamentally changes the game, right? Really, consensus protocols become more powerful in the presence of cryptographic assumptions.
00:11:05.240 - 00:11:22.684, Speaker A: So this then, I think is a textbook example of the purpose that impossibility results can serve. Not only are the proofs super cool, but they delineate exactly what is possible. They clarify exactly what assumptions you need to satisfy in order to get what you want.
00:11:22.684 - 00:11:44.352, Speaker A: Textbook example you need to assume that there's access to a secure digital signature scheme, and you need to somehow get those public keys out to everybody. But if you can do that, then all of a sudden, you can elude the impossibility results. So coming up next, what we'll start doing in the next lecture, lecture four, is we'll trying to relax this very strong assumption we've made about network reliability.
00:11:44.352 - 00:11:58.448, Speaker A: Well, we want to relax the assumption that we're in the synchronous model. And here again, impossibility results are going to play a crucial role in understanding what we might be able to hope for and what kind of compromises are required. So we'll start that study next lecture.
00:11:58.448 - 00:12:00.160, Speaker A: I'll see you there. Bye.
