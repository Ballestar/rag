00:00:00.570 - 00:00:15.642, Speaker A: Hi, everyone, and welcome to this video that accompanies section 24.4 of the book algorithms Illuminated, part four. This is a section about implementing the greedy heuristic algorithms from the past couple videos as what are called descending clock auctions.
00:00:15.642 - 00:00:30.386, Speaker A: So at this point, there might be two questions that you have. So number one, where's the auction exactly in the FCC incentive auction? And number two, why aren't we done right? We gave a greedy algorithm. It had a couple of thousand iterations.
00:00:30.386 - 00:00:40.842, Speaker A: In each iteration, we had to do a feasibility check. But now we have a subroutine that reliably does feasibility checks in a minute or less. So that means you could execute that entire greedy algorithm and it would finish within a couple of days.
00:00:40.842 - 00:00:57.774, Speaker A: So it seems like maybe we can declare victory. The reason it's premature to declare victory is because we still have those last two of the four simplifying assumptions. So the last of the simplifying assumptions was that the government had the ability to just unilaterally take stations off the air if it wanted to.
00:00:57.774 - 00:01:10.190, Speaker A: And that is not how the FCC incentive auction worked. These stations that went off the air, they did so voluntarily. They relinquished their licenses by their own volition in exchange, of course, for appropriate compensation.
00:01:10.190 - 00:01:28.226, Speaker A: So you might say, okay, fine, just do the same computation as we did before. Use the greedy heuristic, decide which stations we want to go off the air, and then just pay them the appropriate compensation, pay them whatever their value is for that station. But now, again, we don't know stations values priori.
00:01:28.226 - 00:01:49.150, Speaker A: I mean, we could ask the owner of a station how much their station is worth to them. But if you think about it, they would probably name a really high number in the hopes that we pay them a lot of money more than that station is actually worth to them. So how do we get rid of that third assumption? How could we ever implement these greedy heuristic algorithms if we don't even know station's values up front? Enter auctions.
00:01:49.150 - 00:02:13.746, Speaker A: Think about the auctions that you may have seen either in real life or in the movies. Maybe you saw one in a state sale or maybe you went to an auction house one time or maybe a school fundraiser, whatever. How do those auctions generally work? Well, there's usually some auctioneer who sort of stands up on a podium and calls out prices to see who'd be willing to pay those prices.
00:02:13.746 - 00:02:38.446, Speaker A: So, for example, who among you would be willing to pay $100 for this tennis ball signed by Roger Federer? And the interested bidders raise their hands, right? So anyone raises their hand if they would be willing to pay $100 for that signed tennis ball. And through that interaction, you learn something about the values that the possible buyers have for that tennis ball. You learn who among them values the signed tennis ball less than $100.
00:02:38.446 - 00:02:46.980, Speaker A: They're the people with their hand down. And you learn who has a value of $100 or more for the signed tennis ball. They're the people with their hand up.
00:02:46.980 - 00:03:14.250, Speaker A: So let's just try to mimic this same idea in the context of the FCC incentive auction. Now, mind you, in the reverse auction that we've been discussing, where the auctioneer now corresponds to the United States government, that's an auction not to sell something like a signed tennis ball, but rather to buy stuff to procure things. Remember, the government in the reverse auction is buying back licenses from their current owners from the television stations.
00:03:14.250 - 00:03:39.346, Speaker A: So the questions are now going to have the form, who among you would be willing to sell me your license for, say, $1 million? And again, from this question, you learn about the values that the license owners have for their license. All of the license owners whose value for their license is less than a million dollars. So the minimum acceptable compensation is lower than what we're offering them.
00:03:39.346 - 00:04:11.984, Speaker A: They're going to be the stations with their hands up, whereas any stations with their hands down who would not be willing to sell their license for a million dollars. We then know that their value for their license is bigger than a million dollars. So this is what auctions appear to really be good at.
00:04:11.984 - 00:04:30.484, Speaker A: They allow you to glean partial information about the values of the participants in that auction by offering them a price. So by offering a price at T, you are in effect implementing a comparison between T and whatever the participants values are. So that's what auctions are good for.
00:04:30.484 - 00:04:46.328, Speaker A: Now, what's the big dream, right? So we had this algorithm that we were very happy with, this FCC greedy algorithm. We had our feasibility checker. We believe that if we can carefully tune the station specific, multipliers that greedy, heuristic will output solutions that are very close to optimal.
00:04:46.328 - 00:05:10.944, Speaker A: And the whole problem with just implinging it directly is that its first step is to sort the stations in non increasing order of ratio. The value of a station w sub v divided by the parameter beta, sub v and if you don't know stations values are priori, as they did not in the FCC incentive auction. If you don't know those are priori, it's not at all clear how you would even implement that first step of the FCC greedy algorithm.
00:05:10.944 - 00:05:51.680, Speaker A: So the question then is, can we take that FCC greedy algorithm that we really, really would like to run, but can we somehow sort of re implement it so that it uses only these very auction friendly operations that compare a station's value against some threshold of our choosing? So that's what we're going to do in the rest of this video. To get a sense for how this might work, let's look at an example. Let's just use the same five station example we've used many times in the past, and let's go back to kind of the simplest setting that we started with when we were talking about greedy heuristics for weighted independent set, let's assume K equals one, so there's only one available channel.
00:05:51.680 - 00:06:03.684, Speaker A: And let's assume that all of the station specific multipliers are one. So betas of v equals one for every station v. I've labeled each of the five stations in red with their value.
00:06:03.684 - 00:06:15.960, Speaker A: And don't forget that what value of a station means. That means the minimum offer of compensation that that station would accept. So if you offer compensation equal to or greater than a station's value, they're happy to take it.
00:06:15.960 - 00:06:32.920, Speaker A: If you offer compensation which is below their value, they're going to reject it. Remember what our current goal is. What we'd like to do is re implement the FCC greedy algorithm using something that looks like an auction just by offering prices to the participants.
00:06:32.920 - 00:07:12.830, Speaker A: So in the current context where we've just said, let's take K equal one, only one channel, and all of the betas are equal to one, now we're literally just asking, can we faithfully re implement the basic greedy algorithm that we had for weighted independence set toward the very beginning of this chapter? Can we at least faithfully recreate the trajectory of the basic greedy algorithm using something that looks like an auction? So the key idea is going to start by offering all of the stations a very high level of compensation and then working downward. So let's suppose in this example, we were confident that if we offered a compensation of five, all of the stations would be happy to accept it. And as you can see, that is in fact the case.
00:07:12.830 - 00:07:33.874, Speaker A: We're also going to be keeping track of the stations that are definitely going to stay on the air. Initially, that set capital S is empty. The algorithm is going to work in iterations, and in the first iteration, it's going to ask all of the stations if they'd be willing to accept this sort of very high level of compensation.
00:07:33.874 - 00:07:47.242, Speaker A: So you ask each of the five stations, would you accept, let's call it $5 million for your license? And for all five of the stations, they're like, yeah, that's more than the minimum I would accept. I'll certainly accept that higher offer. So that's all fine.
00:07:47.242 - 00:08:13.060, Speaker A: But now the auction is going to try to decrease the amount of compensation it has to hand out. So now it goes back to all five of the stations and says, well, what if I offered you $4 million for your license? Would you still accept the offer? And again, each station can say whatever it wants, yes or no, but at the price of four, that is still equal to or more than all of the station's values. So all of the stations will still accept an offer of four.
00:08:13.060 - 00:08:26.182, Speaker A: Now the next iteration gets interesting because now we're going to try to lowball the stations even further, offer each of them a price of three compensation. Three. Four of the five stations will accept that.
00:08:26.182 - 00:08:36.060, Speaker A: But one of them, the lower left station, actually says, you know what, forget it. I do not want to sell my license to you for three. I'd like to stay on the air instead.
00:08:36.060 - 00:08:49.520, Speaker A: And so at this point, our algorithm is going to say, that's fine, hey, lower left station, that is your prerogative. You'll get to stay on the air. Of course, you're not going to get any compensation, but you'll be keeping your license and staying on the air.
00:08:49.520 - 00:09:23.848, Speaker A: Now, with this value four station being back on the air, and under our assumption that k equals one, that there's only one channel, that means that now all three of the overlapping stations are blocked from going back onto the air, so they need to stay off the air. Now, in subsequent iterations, the algorithm is only going to make decreasing compensation offers to the one station whose fate remains unresolved, the value two station. The value three stations, because they cannot fit back on the air, they have to stay off the air.
00:09:23.848 - 00:09:35.096, Speaker A: The algorithm will not make them lower compensation offers. Their compensation offer is going to be frozen at three. So we keep making lower offers to that fifth station, the value two station.
00:09:35.096 - 00:10:03.512, Speaker A: It will accept the offer at T equals two, but then it will reject the offer at T equals one. At that point, it says, you know what, I'd really rather just keep my license and stay on the air than sell you my license for merely $1 million. At this point, the algorithm halts now that all of the station's fates have been decided.
00:10:03.512 - 00:10:27.920, Speaker A: So the two orange stations are going to stay on the air while the three yellow stations have been blocked, and they will stay off the air. And as we'll see later, they will be compensated appropriately for relinquishing their licenses. So both in this example and in general, this iterative process recreates the trajectory of that basic greedy algorithm on the corresponding weighted independence ed instance.
00:10:27.920 - 00:10:55.840, Speaker A: So here on the bottom right of the slide, I've shown you the weighted independence ed instance that corresponds to this collection of five stations. Stations become vertices, overlapping stations become edges, and station values become vertex weights. And in this iterative algorithm that we just discussed, stations drop out, meaning stations go back on the air in non increasing order of value subject to feasibility, exactly as in the basic greedy algorithm.
00:10:55.840 - 00:11:22.914, Speaker A: That's how you faithfully recreate the trajectory of the basic greedy algorithm for the weighted independent set problem. So by just having these compensation offers drop each iteration, you're going to have stations dropping out, meaning going back on the air in decreasing order of their value. The first ones to drop out are going to be those with the highest value.
00:11:22.914 - 00:11:35.174, Speaker A: They'll be the first ones unhappy with the current offer. So stations will drop out in order decreasing order of value subject to feasibility, just like in the basic Greedy algorithm. But now let's try to generalize this.
00:11:35.174 - 00:11:59.920, Speaker A: We really want to sort of recreate the FCC Greedy algorithm. And one of the features of that algorithm is you have these station specific multipliers, you have these beta sub v's. In this case, what we want to see have happening is stations dropping out not in decreasing order of value, but in decreasing order of value divided by beta sub V for the station V.
00:11:59.920 - 00:12:12.610, Speaker A: As you might expect, the way to emulate station specific multipliers. The way to emulate the beta sub V's is to make use of station specific offers in each iteration. And it's going to be quite simple.
00:12:12.610 - 00:12:26.326, Speaker A: So we're again going to have what I'm going to call a base price. So the parameter t that we were using on the previous slide, that's again going to be descending in each iteration. But now you don't necessarily offer a compensation t to a station in a given round.
00:12:26.326 - 00:12:48.266, Speaker A: Rather you offer them compensation t times beta sub v. So the bigger the beta, the more the offer of compensation to that station v. So why does this work? Well, think about it from the perspective of some station v, right? So it has some value w sub v, the minimum offer of compensation it would be willing to accept.
00:12:48.266 - 00:13:14.994, Speaker A: So let's think about in which iteration is the station v going to drop out? It's going to drop out once the offer of compensation, which, remember, is now t times beta sub V, where beta sub V is the parameter for the station v when its offer T times beta sub v is less. Than its minimum acceptable offer less than its value W sub V. So it drops out when T times beta V is less than WV or rearranging.
00:13:14.994 - 00:13:30.170, Speaker A: It drops out as soon as t the base price drops below its ratio, its value WV divided by its parameter beta sub v. And that's exactly what we want. So it drops out as soon as t drops below the ratio of the value and the beta.
00:13:30.170 - 00:13:53.566, Speaker A: And that means that stations are going to be dropping out of this process in decreasing order of ratio, decreasing order of value divided by the parameter beta, again, subject to feasibility. And that's exactly what we need to recreate the operation of the FCC Greedy algorithm. So that brings us to our auction like re implementation of the FCC Greedy algorithm.
00:13:53.566 - 00:14:05.030, Speaker A: I'm going to call it FCC Descending clock. This type of algorithm is known as a descending clock auction. The clock here corresponds to that base price t, which is dropping with each iteration.
00:14:05.030 - 00:14:37.346, Speaker A: So this algorithm, the FCC descending clock algorithm, it will be iterative, there will be this base price which we're calling little t. It's going to be initialized to some super high value and this will be dropping with each iteration of the algorithm. And then we will successively identify stations that are definitely going to be on the air or definitely going to be off the air.
00:14:37.346 - 00:14:59.214, Speaker A: So capital S will be the stations that were committed to remaining on the air, capital T, those that we're definitely going to put off the air at the beginning of the algorithm. Both of those are the empty set. The fates of all of the stations are initially undecided, so the main while loop is going to keep running as long as there's at least one station with its fate undecided.
00:14:59.214 - 00:15:28.582, Speaker A: So as long as there's some station and capital X capital X at the stations were given at the first place as long as there's some station of capital X which we have put neither capital S nor capital T. So each iteration of this, while loop, is referred to as a round of the auction or of the algorithm. And as we'll see the base price little t that's going to drop with each round within a round, we're going to have an inner for loop that makes a single pass over the stations whose fates are unresolved.
00:15:28.582 - 00:15:53.110, Speaker A: That are in neither capital S nor capital T. It's going to proceed through these stations in an arbitrary order with the intention of making a new and lower offer to each of them. However, before making a new and lower offer of compensation to one of these stations, V, we need to have a sanity check that we can accommodate them on the air should they decline.
00:15:53.110 - 00:16:27.326, Speaker A: So before making a new offer to a station V, we need to invoke the feasibility checker the subroutine we worked so hard on in the past couple of videos, to check whether or not V could be accommodated on the air along with all the stations in capital S that we've already committed to keeping on the air. Now, if the feasibility checker comes back and says, no, you do not have room for V in addition to all of capital S, or alternatively, if it times out after a minute and we're not sure either way. In that case, the algorithm cannot risk a refusal of the offer by V.
00:16:27.326 - 00:16:47.746, Speaker A: So if V refused, then we'd be on the hook for keeping that station on the air. And if we don't have room for that station on the air, then we're not going to give that station the opportunity of declining some new lower offer. So whenever we can't pack this station V, we're going to keep the offer the same as it was before the offer that that station has already accepted.
00:16:47.746 - 00:17:01.546, Speaker A: On the other hand, if the feasibility checker comes back and says, yeah, I can pack V in addition to all the stations in capital S and here's your packing to prove it. At that point, the algorithm is comfortable with making a lower offer to the station. V may or may not accept it.
00:17:01.546 - 00:17:27.510, Speaker A: If they accept it, great. If they decline it, that means we have to put them back on the air, but that's fine because we know we have room for them. So summarizing for each remaining station in an iteration, it could go one of three ways.
00:17:27.510 - 00:17:57.698, Speaker A: It might wind up getting added to capital S, it might wind up getting added to capital T, or neither. Under what scenarios does each of those two things happen? Well, so first of all, if we're now at the point where there's no room for this station little V, if we cannot accommodate it along with all the stations, capital S, that are already committed to being on the air at that point, we need to commit to taking V off the air. So if the feasibility checker fails to pack V along with all the stations in capital S, that means we're going to put this station in the set, capital T.
00:17:57.698 - 00:18:15.206, Speaker A: So that station will not be going on the air at the end of the day. So that's how V gets added to capital T. How does it get added to capital S? Well, that's in the case where actually the repacking subroutine tells us that would be feasible if V drops out and so we make the lower offer and then V declines it.
00:18:15.206 - 00:18:29.898, Speaker A: And so then we're stuck putting V on the air. So in that case V gets added to capital S, we commit to putting that on the air at the end of the day. On the other hand, there's also this third case where there is room for the station V, the repacking checks out.
00:18:29.898 - 00:18:56.214, Speaker A: But on the other hand, the station did accept that lower offer and that's fine. That just means that station is going to persist to the next round, to the next iteration of the while loop, when it should be expecting to see a new lower offer of compensation. And indeed, you can see at the very end of a round, so at the bottom of iteration of the while loop, that's the point at which the base price T gets decreased to a smaller number.
00:18:56.214 - 00:19:13.850, Speaker A: And so here we're going to be using relative decreases, so it gets multiplied by one minus epsilon every round. In the actual FCC incentive auction, they used epsilon to be zero five. So everybody's offer in one round was 95% of what it had been in the previous round.
00:19:13.850 - 00:19:30.462, Speaker A: Eventually the algorithm halts with every station's fate resolved. So either a station stays on the air as part of capital S, because eventually the price got so low it was no longer worth it to that station to sell its license at that price. And then there'll be some stations in capital T.
00:19:30.462 - 00:19:47.846, Speaker A: These are the stations that are going off the air because there's no room to also accommodate those stations in the K channels, given that we're already putting all of the stations in capital S on those K channels. So I don't really have space to write it here on the slide. But hopefully it's pretty clear what the output of this algorithm is.
00:19:47.846 - 00:20:19.066, Speaker A: So it should report back, what are the stations in capital T? Who's going off the air? What are the stations in capital S? What are the stations staying on the air? And then also, what should the new channel assignments be for those stations in capital S that are staying on the air? And remember, those channel assignments are just already being computed by that feasibility checker. So you just look at the last successful invocation of the feasibility checker and that's going to tell you the channel assignments for that final set of stations, capital S. That concludes the pseudocode for this FCC descending clock algorithm.
00:20:19.066 - 00:20:33.860, Speaker A: And I want to emphasize, this is the real deal. This really is the algorithm that was used in the reverse auction of the FCC incentive auction to decide exactly which stations would go off the air. This is literally how it was done.
00:20:33.860 - 00:20:50.922, Speaker A: Looking at this new pseudocode for the descending clock algorithm, we still have this sort of for loop that iterates over stations. This time it's stations whose fates are as yet unresolved. So we still have this loop over stations which requires a feasibility check for each of those stations, little V.
00:20:50.922 - 00:21:12.414, Speaker A: But now we have this new outer loop, this while loop with iterations corresponding to rounds. So what we see is that in every single round of this algorithm, every iteration of the while loop, we might need a couple thousand feasibility checks. So then the question is how many iterations of this outer while loop were there? How many rounds were there? Well, dozens of them.
00:21:12.414 - 00:21:20.834, Speaker A: There were actually quite a few. So really to run this auction, you needed to do more like 100,000 feasibility checks. So that's a lot.
00:21:20.834 - 00:21:33.442, Speaker A: So that's why the requirement was they needed to be solved within a minute. And that's also one of the main reasons that the auction took many, many months to complete. That FCC descending clock algorithm is pretty impressive.
00:21:33.442 - 00:21:45.740, Speaker A: It answers some hard questions. In particular, it tells us exactly which stations are going to go off the air. It also tells us possible channel assignments for all of the stations that remain on the air.
00:21:45.740 - 00:22:05.022, Speaker A: But actually, this algorithm is still on the hook for one more responsibility. It was also tasked with computing exactly what was the appropriate compensation to be offered to each of the stations that were relinquishing their licenses. The stations that stayed on the air, they didn't deserve any compensation because they weren't giving up their license.
00:22:05.022 - 00:22:11.838, Speaker A: Okay, I'm lying a little bit. So a bunch of the stations had their channel reassigned. And it's a little annoying to have your channel reassigned.
00:22:11.838 - 00:23:05.622, Speaker A: Like you have to retune your transmitter, which requires hiring some specialists to do it. So stations that had their channels reassigned, that got a modest amount of compensation, but it was a couple of orders of magnitude less than the typical selling prices of these licenses, which was typically in the millions or even tens of millions of dollars per license. So how should we compute the appropriate compensation to offer the departing stations? Well, actually, first one preliminary question, which is how do we initialize that base price little t in the pseudocode, that is, what are the opening offers of compensation that we make to everybody, analogous to the five that we offered everybody in that toy example? Well, in the FCC incentive auction, they basically just decided to make t really big so that the initial opening offers of compensation were so lucrative, pretty much any station would have been ecstatic to sell their license at that price.
00:23:05.622 - 00:23:27.398, Speaker A: So just to give you a sense, so WCBS, which is the CBS affiliate here in New York City, the opening offer for their broadcasting license was $900 million, almost a billion dollars for that one license. And mind you, if you sell your license, it doesn't mean you have to stop broadcasting. It just means you lose your terrestrial or over the air television audience.
00:23:27.398 - 00:23:48.514, Speaker A: You still have your whole audience on cable TV and satellite TV, which is 85% to 90% of the overall audience anyways. So $900 million to give up terrestrial television broadcasting just was pretty insane. Now, if you owned a station kind of in the middle of nowhere, remember that the beta, the parameter values had those square root of pop terms.
00:23:48.514 - 00:24:03.574, Speaker A: And so that would result in you getting a much lower opening offer than a station in New York. But it would be some other offer that was comparably lucrative given the circumstances. So in the FCC incentive auction, participation was voluntary, right? So no one was.
00:24:03.574 - 00:24:15.142, Speaker A: Even if you owned a television broadcasting license, it's not like you had to enter it into this auction. You could have just not played at all if that was your choice. But by setting these incredibly high opening offers, almost everybody participated.
00:24:15.142 - 00:24:42.626, Speaker A: It just seemed crazy to not participate, given the amount of money that you might conceivably be being awarded for your license. Now, if you do indeed agree to participate in the auction, if you sign up for it at that point, you are contractually obligated to sell your license to the government should they ask for it at that opening offer. So by participating in the auction, you've effectively accepted and are contractually bound to that initial opening offer.
00:24:42.626 - 00:24:57.350, Speaker A: And the same goes true as the auction proceeds and the price gets lower and lower. Every offer that you accept in the auction is contractually binding. So you have to sell your license to the government for that amount, should the government ask for it.
00:24:57.350 - 00:25:22.114, Speaker A: If the price ever drops further, then all bets are off and you're free to say no. But if you've accepted an offer, then it's fair game for the government to actually take that license in exchange for the agreed upon compensation. And I say this because now you realize what the compensation is going to be, right? So the government, yes, its primary purpose at this auction was to clear a whole bunch of spectrum.
00:25:22.114 - 00:25:47.118, Speaker A: But subject to succeeding in clearing a whole bunch of spectrum, the government wanted to pay as little as possible. And so it's just going to pay each of the stations going off the air the minimum compensation it can get away with, the minimum compensation that that station is contractually obligated to accept. So if you think about that, that means that each station going off the air will be paid the amount of its most recently accepted offer.
00:25:47.118 - 00:26:15.122, Speaker A: So the offer from the iteration before, the one in which it departed, before the one in which it declined, the offer, that previous offer, the last one it accepted, that will be the payment made to the departing broadcaster. Now, for all its complexity under the hood, the reverse auction and the FCC incentive auction that we've been talking about, it was extremely simple for the participating broadcasters. Right? So as a broadcaster, the opening offer for a license was known in advance.
00:26:15.122 - 00:26:35.214, Speaker A: That was just sort of revealed well in advance of the auction. And also you knew in advance that whenever you got a new lower offer, it would be 95% of the previous one. So as long as the current offer for a license exceeded a broadcaster's value for that license, the obvious move was to accept this offer, as that's the worst that could happen.
00:26:35.214 - 00:26:54.434, Speaker A: If the price ever dropped, the broadcaster reserved the right to reject it at any lower offer. And on the other hand, once the current offer drops below the license's value to its owner, at that point the obvious response is to reject the offer and go back on the air. After all, if you stayed in the auction, you would only be getting subsequent offers that were even worse.
00:26:54.434 - 00:27:14.742, Speaker A: So as soon as the offer is lowballing, you below your value, it makes sense to drop out of the auction, go back on the air. Now, what's interesting is the efficacy of the feasibility checker, which we worked so hard to build up in the last couple of videos, that actually had a first order effect on the government's costs. So no harm, no foul.
00:27:14.742 - 00:27:49.138, Speaker A: When the subroutine times out on an unpackable station set, at that point, the FCC descending clock auction just assumes that it's unpackable. So it does exactly the same thing as it would have anyways, had the subroutine correctly deduced that it was unpackable. But whenever the feasibility checker timed out on a packable set of stations comprising a packable set capital S plus some new station v whenever the feasibility checker timed out despite you having room for V as well a big pile of money we're talking often in the millions of dollars was left on the table.
00:27:49.138 - 00:27:58.374, Speaker A: The auction could have made a lower offer to this station V. Right, because it is a packable subset of stations. But for the failure of its feasibility checker.
00:27:58.374 - 00:28:19.038, Speaker A: Because the feasibility checker timed out, the auction had to assume it was unpackable, even though it was not unpackable. And for that reason, it was unable to make that station a lower offer. So all that being said, you can see why the auction designers were really highly motivated to get that subroutine success rate as close to 100% as possible.
00:28:19.038 - 00:28:41.138, Speaker A: And indeed, in my life thinking about algorithms for 20 plus years, I'm not sure I've ever seen an application where there's a more direct relationship between the running time of an algorithm and huge piles of money. So that concludes the description of the algorithm in the descending clock auction. Now you know where the auction comes from in the FCC incentive auction.
00:28:41.138 - 00:28:44.580, Speaker A: Let's have a wrap up video where we talk about what actually happened.
