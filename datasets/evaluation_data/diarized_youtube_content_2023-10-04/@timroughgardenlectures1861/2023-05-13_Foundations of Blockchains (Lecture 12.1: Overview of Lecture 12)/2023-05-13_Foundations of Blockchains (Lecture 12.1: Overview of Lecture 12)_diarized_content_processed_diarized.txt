00:00:00.330 - 00:00:40.934, Speaker A: Welcome, everyone, to lecture number twelve of this series on the foundations of blockchains topic for this lecture is going to be proof of stake blockchain protocols. We already discussed in lecture number nine one approach to permissionless consensus based on proof of work civil resistance. And in this lecture, we'll talk about the other dominant approach based on proof of stake civil resistance. Now, I say lecture, but that's really quite a misnomer. Or in this case, this is really going to be about eight lectures worth of content. I mean, when I sat down and just sort of wrote out what I thought really needed to be said about proof of stake blockchain protocols, turns out there was a lot to say. Now, I know what you're thinking.
00:00:40.934 - 00:01:34.090, Speaker A: If this is really eight lectures worth of stuff, why is it lecture twelve? Why isn't it lectures twelve through 19? Well, I spent 15 years of my career sort of down the corridor from Don Knuth, and I guess one of the things I picked up from him was commitment to your numbering system. So I'd already decided lecture twelve was proof of stake. Lecture 13 was going to be economic security. So I just feel stuck with it. So that's why this sort of ballooned into the length of this lecture that it is. Because of this length, I do feel sort of obligated to justify it here at the outset. Like, why is this lecture so long? First reason is just this is a super important topic in practice, right? If you look at the major deployed blockchain protocols today, speaking in early 2023, if you put bitcoin aside, pretty much all of the rest of them actually do use proof of stake civil resistance.
00:01:34.090 - 00:02:08.874, Speaker A: In addition to being practically super important, the problem of designing a proof of stake blockchain protocol with provable guarantees, it's just a genuinely really difficult computer science problem. That, of course, makes it extra fascinating for an academic researcher such as myself. But it does mean it takes some time and effort to understand what's going on. I don't mean to suggest that Nakamoto Consensus, like the proof of work approach is somehow easy. Computer science. I mean, that's also kind of a brilliant idea. But I will say Nakamoto, it seems kind of nailed the proof of work approach right out of the gate with the Bitcoin protocol.
00:02:08.874 - 00:02:33.710, Speaker A: There's actually been very little evolution in our sort of understanding or designs of proof of work blockchain protocols in the last 14 years. Whereas proof of stake we've seen a lot of evolution over the years. Most of the earliest proof of stake blockchain protocols and even some of the ones that are sort of operating today have some pretty serious flaws in their design. It just seems harder to get the proof of stake approach to work properly.
00:02:34.450 - 00:02:36.382, Speaker B: Now, what's exciting is there's actually been.
00:02:36.436 - 00:03:23.590, Speaker A: Tremendous progress over the past, really just like five years or so in our understanding of how to design good proof of stake blockchain protocols using in some cases sort of interesting cryptographic, primitives and other nontrivial ideas. In fact, five years ago there was a kind of legitimate debate about whether the proof of stake approach would ever truly work, whether you could have a major and very secure blockchain protocol based on that approach to civil resistance. But fast forward to now. Now nobody really talks about that. It's clear that the proof of stake approach is viable, and we have many proof of stake blockchain protocols operating happily as we speak. Also exciting is that I don't think we're done so. I think in the next several years we will see further major progress in understanding how to design good proof of stake blockchain protocols.
00:03:23.590 - 00:04:06.282, Speaker A: A couple of points in this lecture will actually touch on some of the sort of experimental kind of cutting edge techniques which you may see sort of put into practice over the next few years. Another reason there's so much more to say about proof of stake protocols and proof of work protocols is that it seems like the design space is just much, much richer. So it's not like you can't have any proof of work protocol any other than Nakamoto Consensus. And certainly there are academic prototypes of other interesting proof of work protocols, but if you look at the deployed proof of work blockchain protocols, they pretty much all look like bitcoin. They're pretty much all based on some version of Nakamoto Consensus. Whereas in the proof of stake case, totally different. As I mentioned today, there are several major proof of stake blockchain protocols happily running along.
00:04:06.282 - 00:04:36.626, Speaker A: Almost all of them look very different from each other. For example, there's often a different choice of consensus protocol, right? So there are longest chain proof of stake protocols, but there's also other ones based on BFT type protocols. In the spirit of tendermint back from lecture number seven. And there's proof of stake protocols that use still other approaches to consensus. So we now know that there are multiple viable approaches to designing proof of stake protocols. And moreover, there doesn't appear to be any clear winner. Like, none of these designs appears obviously better than the others.
00:04:36.626 - 00:05:54.678, Speaker A: So it seems worth getting a lay of the land and telling you about some of the different design decisions that different projects have taken. The final reason lecture number twelve turned out so long is I just thought it was going to be valuable to package everything that's important to know about proof of stake into one place, which this is knowledge that is currently scattered across dozens, maybe even hundreds of different sources. So while it may take you 10 hours of your life to watch all of these videos, or 20 hours of your life, if you want to watch them twice and get sort of a really deep understanding, I promise you. It took me a very large multiple of that number for me to learn all of this material and then also package it together into what is this hopefully coherent mini course on the topic. Now the good news is that if you do take the time to watch all of these videos, maybe once, maybe twice, if you do that you'll find yourself more of an expert on this totally crucial topic than almost anybody else on the planet. Basically more of an expert than anyone who's not themselves trying to build a proof of stake blockchain protocol. Now I of course realize that you may not have the time or the inclination to become such a super expert on proof of stake blockchain protocols.
00:05:54.678 - 00:06:35.610, Speaker A: So in this opening video I want to give you an overview of all of the rest of lecture number twelve. I want you to get oriented and I want to talk through prioritization. So for example, if you have only 1 hour to learn about proof of stake blockchain protocols, which of these videos should you watch? So on this slide I'm going to enumerate all of the videos that make up lecture number twelve. Believe it or not, there are 24 videos spanning 15 different topics which I know is kind of crazy but like I said, there's just a lot to say about this very important topic. So I'll tell you about sort of what those 24 videos are on this slide. I'm also going to color code them to help you prioritize.
00:06:36.670 - 00:06:38.246, Speaker B: So here's going to be the meaning.
00:06:38.278 - 00:06:46.800, Speaker A: Of the various colors. Whenever I write down a sort of video title in blue, that's going to be a video which really everybody should watch.
00:06:47.810 - 00:06:49.566, Speaker B: So these are generally videos about sort.
00:06:49.588 - 00:07:10.630, Speaker A: Of what proof of stake is conceptually, what are its goals, what are its motivations, not so much about how it actually works. Now the video after this one is going to be an optional review video about permissionless consensus for those of you that either never watched or have sort of forgotten our discussion back in lecture number nine. So that one video I'll color code in orange.
00:07:15.590 - 00:07:17.266, Speaker B: Now the green videos are going to.
00:07:17.288 - 00:07:21.970, Speaker A: Start getting into the meat of the topic. They're going to cover the technical basics.
00:07:23.270 - 00:07:24.690, Speaker B: So the point of the green videos.
00:07:24.760 - 00:07:59.760, Speaker A: Is to learn more about how proof of stake works under the hood. So sort of the main ideas and implementation and to get a feel for some of the challenges which come up when you try to build a proof of stake blockchain protocol. So for the green videos I am generally going to be assuming that you kind of have some sort of computer science background. In particular familiarity with longest chain consensus as we discussed in lecture number eight and familiar with BFT type consensus like tendermint which we discussed in lecture number seven. And that's in contrast to the blue videos. The blue videos I hope really will be accessible to everybody. For the green videos, I am starting to narrow in on people that care about the computer science of this technology.
00:08:00.870 - 00:08:02.994, Speaker B: And then finally in the Magenta videos.
00:08:03.112 - 00:08:10.130, Speaker A: We are going to dive deep. Those are the videos that are going to make you a black belt expert on this topic.
00:08:11.510 - 00:08:13.266, Speaker B: So in the Magenta videos, we're going.
00:08:13.288 - 00:08:24.890, Speaker A: To cover kind of everything you could possibly want to know about proof of stake blockchain protocols, at least stopping short of actually studying the source code of some of the major deployed proof of stake protocols.
00:08:26.350 - 00:08:27.962, Speaker B: All right, so I've broken lecture number.
00:08:28.016 - 00:08:49.040, Speaker A: Twelve down into four different parts. So let's talk through each of those in turn. So I hope that everybody finds part one quite accessible. That's really kind of about what proof of stake is meant to do, not so much about how it works. So the first video, that's the one you're watching right now, that's this overview video.
00:08:50.130 - 00:08:51.406, Speaker B: So the rest of part one, which.
00:08:51.428 - 00:09:06.600, Speaker A: Is going to be videos two through six, I hope everybody finds those quite accessible. The focus is really going to be on what proof of stake is meant to do, what are some of the reasons why a blockchain protocol might choose to use it. We're not going to talk much in part one about how it actually works.
00:09:07.370 - 00:09:08.838, Speaker B: So video number two is going to.
00:09:08.844 - 00:09:13.750, Speaker A: Be that one review video that I promised where we talk about permissionless consensus.
00:09:14.970 - 00:09:16.442, Speaker B: So the two things I want everybody.
00:09:16.496 - 00:09:58.114, Speaker A: To always remember about permissionless consensus. So, first of all, it's absolutely fundamental to the vision of blockchain protocols. So when we talked back in lecture number one about that computer in the sky that in effect has no owner, that has no operator, what does that literally mean? What it literally means is you have lots of nodes, ideally something like thousands of nodes scattered across all over the globe that are staying in sync using a consensus protocol. And we would like the set of nodes running the protocol to be available to everybody. So anybody should be able to join the party, join that set of nodes without any registration. That's what we mean by permissionless. And that's the sense in which that computer in the sky has no sort of one owner, no operator.
00:09:58.114 - 00:10:01.320, Speaker A: That's why nobody can turn that computer in the sky off.
00:10:02.330 - 00:10:03.766, Speaker B: And then the second really important thing.
00:10:03.788 - 00:10:25.790, Speaker A: About missionless consensus is that it's just not that easy. So even if you take on faith the hard work we did on permissioned consensus back in, like lecture number seven talking about tendermint, or lecture number eight talking about longest chain consensus, it is not trivial to reduce permissionless consensus to the permissioned case. You really need a sort of new suite of ideas to solve permissionless consensus.
00:10:26.850 - 00:10:28.238, Speaker B: So we did touch on all of.
00:10:28.244 - 00:11:06.780, Speaker A: These topics in the first video of lecture number nine. That was our lecture on Nakamoto Consensus, which to this point in the lecture series. That is the one solution to permissionless consensus that we've seen thus far. So if lecture number nine is super fresh in your mind, you should definitely feel free to skip this video. If you never watched it or you don't remember it. I would recommend to watch this review video because really the whole point, the whole reason we're going to do all this hard work in lecture number twelve to get proof of stake civil resistance. Ultimately, it's because we want a permissionless consensus protocol and protocol which is different than Nakamoto Consensus, which we saw in lecture number nine.
00:11:07.550 - 00:11:08.938, Speaker B: In the third video, I just want.
00:11:08.944 - 00:11:27.810, Speaker A: To talk about proof of stake civil resistance sort of from 30,000ft. So what is it? Fundamentally, it's basically random sampling from a stake distribution, which is maintained as part of the state of a blockchain protocol. And I want to talk through in that video why proof of stake random sampling gives you the civil resistance that we need for a good permissionless consensus protocol.
00:11:28.470 - 00:11:29.698, Speaker B: In the fourth video, I want to.
00:11:29.704 - 00:12:20.290, Speaker A: Talk through why we might not be satisfied with Nakamoto Consensus, why we might want a different permissionless consensus protocol, and in particular one that uses a different approach to civil resistance. And in fact, actually just if you're looking at sort of the protocols that are out there in the wild, there's been a really noticeable migration away from proof of work toward proof of stake civil resistance in the major blockchain protocols that have been launched in recent years. And so in this fourth video, I want to talk about, at least from my vantage point, what seem to be the three biggest reasons for that migration. One reason is going to be much less energy consumption of proof of stake protocols compared to proof of work protocols. A second reason is going to be just performance reasons. So in particular, better latency and finality properties. And then the third motivation is going to be a security motivation, namely the possibility of having programmatic recovery of 51% type attacks.
00:12:21.110 - 00:12:22.786, Speaker B: So the fifth video is going to.
00:12:22.808 - 00:12:44.106, Speaker A: Be about staking mechanics. So this video, I sort of debated whether to put it in blue or in green because on the one hand, it's really not that technical. So really the material in that video should be accessible, I think, to everyone. On the other hand, if you only have like an hour to watch a subset of these 24 videos, you might want to skip this one. It's not as important as some of.
00:12:44.128 - 00:12:47.578, Speaker B: The other ones in part one. So what's the video about?
00:12:47.664 - 00:13:09.310, Speaker A: Well, it's kind of about all the little design decisions and parameter choices you have to actually make if you really want to launch a proof of stake blockchain protocol and actually different major proof of stake blockchains make different design decisions and different parameter choices. So in this video, we'll talk about things like should you have in protocol delegation we'll talk about things like do you want a cooldown period and a warm up period for staking?
00:13:09.390 - 00:13:12.754, Speaker B: Things like that. Now, many of you, after you watch.
00:13:12.792 - 00:13:35.226, Speaker A: The third of these videos, so that's the one about sort of proof of stake from 30,000ft. I think many of you will quite reasonably have the reaction like, why isn't this a totally trivial problem, right? You're talking about some probability of distribution. So just probabilities proportional to stakes. That distribution is perfectly well known to the blockchain protocol in question. All it has to do is sample from it.
00:13:35.248 - 00:13:36.380, Speaker B: What's the big deal?
00:13:37.310 - 00:14:12.950, Speaker A: So the 6th video, which is going to be the last one of part one, the point there is to tackle this question head on and the TLDR about why it's not trivial to carry out proof of stake random sampling is it's just not clear where the blockchain protocol is supposed to get its randomness from. Now why, you should be asking, didn't this exact same problem come up in our other permissionless consensus protocol when we talked about Nakamoto Consensus in lecture number nine? Right? There you are trying to sample from a distribution the hash rate distribution. And actually that distribution is unknown to the protocol. So that somehow seems like it should be even harder. Yet somehow we were able to sample from that distribution in Nakamoto Consensus.
00:14:13.850 - 00:14:15.338, Speaker B: And the difference is that with a.
00:14:15.344 - 00:14:59.234, Speaker A: Proof of work protocol, you basically just get randomness imported from the outside, an external process. That external process being miners, kind of trying all these different nonces and evaluating a cryptographic hash function, waiting to get output of the hash function, that's sufficiently close to zero. So if you believe in the random oracle assumption for that cryptographic hash function, it's just a fact that if you have 10% of the hash rate, you have a 10% chance of being the first node to solve the next crypto puzzle. So the protocol doesn't actually itself have to do the random sampling. The randomness comes in from the outside with proof of stake protocols where you don't have this kind of external mining process. It's not clear where you'd get external randomness from. So you seem sort of stuck of generating it internally.
00:14:59.234 - 00:15:01.640, Speaker A: The protocol has to kind of generate it itself.
00:15:02.810 - 00:15:04.694, Speaker B: So the most common approach to this.
00:15:04.732 - 00:15:59.130, Speaker A: Problem is to apply a cryptographic hash function to an input which is derived in some way from the blockchain state. And at first it seems like that should solve the problem, right? We are already happy making the random oracle assumption about a cryptographic hash function, so its output should just be indistinguishable from random. But here's why that's not quite right. So who is it who's responsible for maintaining the blockchain state, for example, choosing which transactions to process and that kind of stuff? The nodes running the protocol. So if the input and therefore the output of the cryptographic hash function depends on the blockchain state, well then you got to worry about nodes manipulating the blockchain state in order to manipulate the output of that cryptographic hash function. And that issue, at least as best as we understand now, appears to be fundamental to the proof of stake approach to permissionless consensus. And that's something we really just didn't have to worry about with proof of work civil resistance.
00:15:59.130 - 00:16:17.150, Speaker A: Now, I should warn you, this is not the only major challenge that we have to solve in order to get proof of stake blockchain protocols. It is the challenge we're going to focus on in part two. In parts three and four, we'll see more challenges that come up when you try to pair proof of stake sampling with a consensus protocol.
00:16:18.850 - 00:16:20.094, Speaker B: So then we move on to part.
00:16:20.132 - 00:16:27.860, Speaker A: Two where we really get into the meat of how you do proof of stake random sampling despite those obstacles that we're going to talk through in video number six.
00:16:28.870 - 00:16:30.542, Speaker B: So this part does get more technical.
00:16:30.606 - 00:16:53.290, Speaker A: I'm going to more be addressing kind of viewers that have some kind of background in computer science in these part two videos. I will say if you haven't watched this whole lecture series, the videos in part two are actually pretty independent of sort of earlier lectures in this lecture series. That was true for part one as well. It's only in part three I'm going to start not just assuming computer science background, but also that you've watched some of the previous videos. In this lecture series.
00:16:54.110 - 00:16:56.118, Speaker B: I will kick off part two with.
00:16:56.224 - 00:17:04.990, Speaker A: A quite accessible video just outlining a quick and dirty approach to approximating proof of stake random sampling, something known as weighted round robin.
00:17:08.560 - 00:17:10.924, Speaker B: So this approach, while quite simplistic, is.
00:17:10.962 - 00:17:28.630, Speaker A: Actually somewhat common in practice. There are some major proof of stake blockchain protocols that do something similar to this. Though as we'll see, it does also have some quite major problems. One of which, for example, is that everybody knows the output of the sampling procedure well in advance. And as we'll discuss later, that can be an issue.
00:17:29.720 - 00:17:31.076, Speaker B: In the 8th video, I want to.
00:17:31.098 - 00:18:04.130, Speaker A: Introduce you to the concept of a perfect randomness beacon. Intuitively that means that periodically perfectly random bits are just going to fall from the sky, publicly visible to everyone. And what I want to do in this 8th video is show you how if you had a perfect randomness beacon and to be clear, you don't, but if you had a perfect randomness beacon, then it would actually be not that hard to carry out proof of stake random sampling. In later videos we'll tackle the problem of okay, given that we don't probably have a perfect randomness beacon, what would be some approaches for approximating one?
00:18:04.980 - 00:18:06.656, Speaker B: In the 9th and 10th videos, I.
00:18:06.678 - 00:18:37.048, Speaker A: Want to talk about another approach to proof of stake random sampling which is also reasonably common in practice but much more sophisticated based on something known as a VRF which stands for a Verifiable Random function. So I've listed this title as green segueing into magenta, which means exactly, exactly what I'd hope you would think it would mean. Which is that if you want to understand the technical basics of proof of stake blockchain protocol design, you shouldn't skip this pair of videos. You should at least watch some of them, but you only need to watch all of them if you really want.
00:18:37.054 - 00:18:38.970, Speaker B: To reach that black belt level.
00:18:39.820 - 00:18:47.544, Speaker A: So the point of VRF based sampling and its advantage over the much simpler weighted round robin approach is secrecy.
00:18:47.672 - 00:18:47.916, Speaker B: Right?
00:18:47.938 - 00:19:05.120, Speaker A: So with more straightforward approaches, everybody learns the outcome of the sampling procedure well in advance and that's a property you may not want. Whereas with VRF based random sampling only the person who sampled learns that they've been sampled and they can furthermore choose to disclose that fact to others if they wish.
00:19:05.700 - 00:19:07.424, Speaker B: And that sort of parallels how things.
00:19:07.462 - 00:19:26.760, Speaker A: Work in Nakamoto Consensus. If you're a miner in Nakamoto Consensus, you're mining, in effect secretly. So if you actually find a solution to the crypto puzzle, it's not like other people automatically know that fact. Only you know that initially and you can choose to disclose that to others if you wish and then they can check that yes indeed, your nonce leads to a sufficiently small hash.
00:19:27.500 - 00:19:28.996, Speaker B: So you can think of VRF based.
00:19:29.038 - 00:19:57.430, Speaker A: Random sampling as giving you a comparable secrecy property, but in a proof of stake setting. So that hopefully sounds pretty cool, like something you definitely might want. The flip side is that if you use VRF based random sampling a number of additional complications come up which we'll talk through in these videos. And again, there are major proof of stake blockchain protocols that use VRF based random sampling. And so those protocols actually do have to solve all of these challenges that we'll talk through in these couple of videos.
00:19:58.440 - 00:20:00.276, Speaker B: So in the 11th video we'll return.
00:20:00.378 - 00:20:23.032, Speaker A: To the topic of randomness beacons, which we talked about in the 8th video. In video eight we talked about the case of this sort of fictitious case of a perfect randomness beacon, just sort of magically randomness sort of periodically falling from the sky. Video eleven is where we tackle head on the question of like, okay, but actually if you were doing a concrete implementation of a proof of stake random sampling procedure, what would you use in place of a perfect randomness beacon?
00:20:23.096 - 00:20:31.068, Speaker B: How would you build a pseudorandomness beacon? The main approach is kind of the.
00:20:31.074 - 00:20:54.340, Speaker A: Same one that we foreshadowed back in the 6th video, which is to, in place of perfect randomness, use the output of a cryptographic hash function applied to an input that's derived in some way from the blockchain state. As also foreshadowed in video number six opens up the possibility of manipulation of the output of that function from the nodes running the protocol.
00:20:55.400 - 00:20:56.948, Speaker B: So this appears to be a kind.
00:20:56.954 - 00:21:13.310, Speaker A: Of unavoidable issue in proof of stake blockchain protocol design. But some designs do a much better job than others of minimizing how manipulable the pseudorandomness is. So we'll talk here about the best practices for making it as unmaniputable as possible.
00:21:14.640 - 00:21:16.444, Speaker B: So the final two videos of Part.
00:21:16.482 - 00:21:57.120, Speaker A: Two videos, twelve and 13, they're going to be about what I would call an experimental approach to approximating a perfect randomness beacon using kind of fancy technology known as a VDF, which stands for Verifiable Delay Function. So VDFS are not to be confused with VRFs, the subject of the 9th and 10th videos, right? So VRFs are verifiable random functions, VDFS are verifiable delay functions. You're not supposed to know what either of those two things mean. I'll tell you exactly what are the properties of those two cryptographic primitives when we get to the relevant part two videos.
00:21:58.210 - 00:21:59.726, Speaker B: So the basic approach here is to.
00:21:59.748 - 00:22:17.250, Speaker A: Basically crowdsource your randomness. So you ask all participants in a protocol to submit their opinion of what maybe the randomness should be. And the goal is to have a protocol that as long as one of the participants is honest and submits truly random bits, well, then the output of the protocol should also be truly random bits.
00:22:18.070 - 00:22:19.666, Speaker B: Like I said, I would describe this.
00:22:19.688 - 00:23:10.754, Speaker A: As kind of experimental technology at this point, but I do think there's a chance it could go mainstream over the next two to three years. So for the intrepid among you who are actually watching all of the Magenta videos, when you get through part Two, you'll be not just kind of at the cutting edge of proof of stack blockchain design, actually a little bit even beyond it. So, moving on to part three. So having figured out in part two a number of reasonable approaches to actually pulling off proof of stake random sampling, in part three, we'll turn our attention to coupling one of those sampling methods with a particular consensus protocol. Never forget civil resistance mechanisms. Consensus protocols conceptually very different things. The point of a civil resistance mechanism is to decide who gets to participate at any given moment in time, who gets to propose a block, who gets to vote on a block, and so on.
00:23:10.754 - 00:23:20.520, Speaker A: The consensus protocol instructs what the participants are, instructs them what they're supposed to do, like how to vote on blocks, when to regard a block as finalized and so on.
00:23:21.210 - 00:23:22.646, Speaker B: So we've already done a lot of.
00:23:22.668 - 00:23:58.130, Speaker A: Work understanding each of those ingredients in isolation, right? We did a lot of hard work understanding permissioned consensus protocols deeply. Like for example, the tendermint protocol in lecture number seven or longest chain consensus in lecture number eight. Obviously just now in part two of lecture number eleven, we've worked hard to understand deeply how to do proof of stake random sampling, which you might hope would just facilitate a very straightforward reduction from permissionless consensus. The problem we want to solve, to permissioned consensus the problem we've already solved. The hope being that proof of stake random sampling just allows you to choose participants who could then just run permissioned protocol.
00:23:59.030 - 00:24:00.546, Speaker B: And while that's sort of what is.
00:24:00.568 - 00:24:19.770, Speaker A: Going to be happening from 30,000ft, honestly, if you actually try to make this work, if you actually try to write out a full blown permissionless consensus protocol, which is based on proof of stake random sampling, a lot of challenges come up. So the point of part three of a lecture twelve is to talk about those challenges and how they're typically addressed.
00:24:20.430 - 00:24:22.106, Speaker B: And this part, part three, this will.
00:24:22.128 - 00:24:36.510, Speaker A: Definitely be the most technical part of lecture number twelve, even more technical than part two. And in particular, I will be assuming in the first half that you remember sort of tendermint style permissions protocols. And I will be assuming in the second half of part three that you remember longest chain consensus.
00:24:37.490 - 00:24:39.514, Speaker B: So we'll speak separately about the challenges.
00:24:39.562 - 00:25:09.110, Speaker A: That come up, pairing proof of stake civil resistance with either a tenderman style BFT type consensus protocol versus a longest chain protocol. The challenges that come up, you know, there's some overlap, but there's a different set of challenges that come up in each of the two cases. So we'll treat them separately. And so accordingly, part three will have two halves. The first half on BFT type protocols that'll be three videos. And then the second half on proof of stake longest chain protocols, that'll be another three videos. As always in this lecture series, the focus is on principles, not protocols.
00:25:09.110 - 00:25:26.206, Speaker A: So I'm not going to do like a case study on some specific project and all of the detailed design decisions that that project makes. That said, the sort of protocol sketches that I give to you throughout part three, they really will be representative of how some of the major proof of stake blockchain protocols out there running in.
00:25:26.228 - 00:25:30.174, Speaker B: The wild work right now. So those of you that do watch.
00:25:30.212 - 00:25:47.720, Speaker A: These part three videos will be in a really great position to then pick your favorite proof of stake project, go to the documentation, or even go to the source code and you will have the conceptual framework to understand how that thing is designed. And you can then focus on the project specific details that are of interest to you.
00:25:48.410 - 00:25:49.718, Speaker B: All right, so as I said, the.
00:25:49.724 - 00:26:03.770, Speaker A: First half of part three, so this is videos 14 1516. That is going to be about the challenges that come up when you try to have a permissionless consensus protocol based on proof of stake random sampling and a BFT type consensus protocol such as Tendermint.
00:26:04.830 - 00:26:06.554, Speaker B: We're going to start with BFT type.
00:26:06.592 - 00:26:41.346, Speaker A: Protocols rather than the longest chain protocols for two reasons. One reason is just if you sort of look at current practice, BFT type consensus really has the momentum among proof of stake blockchain protocols. The latest generations tend not to use longest chain consensus. They. Tend to use BFT type consensus or perhaps something else. So that's one reason to emphasize the BFT case. 1st 2nd reason is while it's not going to be at all easy as those of you that watch these three videos will see, if you had to pick it's a little bit easier to get proof of stake silver resistance working properly with BFT type consensus than with longest chain consensus.
00:26:41.346 - 00:27:31.702, Speaker A: That's another reason to start with the BFT case. So I've listed these videos as green segueing into magenta just like I did with the VRF videos nine and ten. And that's because for those of you that want to sort of get some grasp of the technical basics of proof of stake blockchain protocols and in particular why it's nontrivial to build them, I think you'd be well served by watching one or two of these videos. That said, by the end we will be getting deep into the weeds. So I don't expect anyone other than aspiring black belts to really watch all three of them. What would be an example of a challenge that comes up? Well, like if you're using something like tendermint and you're using something like VRF based random sampling, well then there's this problem that VRF based random sampling might give you for example, multiple liters in the same round. And so then you have to somehow modify tendermint so that it works properly even if you have not just one liter of a round but many.
00:27:31.702 - 00:27:39.820, Speaker A: And that's just one example. You'll see many more challenges and sort of quirks that come up when you try to paste these two things together throughout those three videos.
00:27:40.990 - 00:27:42.794, Speaker B: The second half of part three is.
00:27:42.832 - 00:28:01.140, Speaker A: Going to focus on what's arguably the slightly more difficult case of getting proof of stake random sampling working in conjunction with longest chain consensus. And so this material again is even harder than the first half of part three. So let me put all of these videos in magenta. So for the aspiring black belts out there.
00:28:02.070 - 00:28:03.378, Speaker B: Now on the one hand, if you.
00:28:03.384 - 00:28:41.466, Speaker A: Were going to skip exactly one part of lecture number twelve, if you're going to omit only one thing, I would probably recommend this topic proof of stake longest chain protocols. That said, they're still quite interesting for a few reasons. So one, there are in fact a couple of major proof of stake protocols which are proof of stake longest chain and it's fun to learn about how those work. Secondly, the academic literature, if that's something that interests you, the proof of stake part of the academic literature actually is mostly focused on longest chain protocols. I think one of the reasons there is just it's a little bit out of date. It hasn't quite caught up with the increasing migration to BFT type consensus. But the other reason is just it's hard computer science.
00:28:41.466 - 00:29:20.170, Speaker A: So it's just like a natural topic to write research papers about. The third reason I think these are really interesting is especially if you're sort of coming from a bitcoin background, right? So if you've studied bitcoin but not blockchain protocols more generally, I think it's very natural to think like why can't you just take bitcoin, which of course is Nakamoto Consensus longest chain. Why can't you just take bitcoin and use sort of proof of stake as a drop in replacement for proof of work? And there's actually a surprisingly long list of reasons why that just doesn't work. And I think actually that's quite useful understanding to have. So if that sounds attractive, then you might also want to check out these videos, 1718 and 19.
00:29:20.990 - 00:29:22.426, Speaker B: As you'll see in these videos, for.
00:29:22.448 - 00:30:10.694, Speaker A: This class of protocols you inherit almost all of the same challenges you had in the BFD type case. Plus unfortunately, some others, right? So for example, in the proof of work case and Nakamoto Consensus, it's possible to force the leader of a round to propose only one block as opposed to multiple blocks in the same round, whereas with proof of stake civil resistance there appears to be no way to do that. And so because you can't restrict for example, Byzantine nodes from sort of proposing multiple blocks in the same round, that makes forking attacks potentially easier to carry out. So that's just sort of one of the reasons, one intuition about why the longest chain case is sort of even trickier to think through than the BFT case. So finally, part four, the last part of lecture number twelve. The good news is it's actually quite a bit less technical than part two or part three. It's several.
00:30:10.694 - 00:30:38.290, Speaker A: It's a collection of important topics very kind of specific to proof of stake protocols. Some of them are more kind of challenges, some of them are more opportunities. We'll talk about all that and then we'll also conclude with a lot of discussion and just sort of overall perspective about proof of stake protocols and sort of where they fit in the broader blockchain protocol landscape. The first topic we'll discuss in part four is a rather unique potential advantage of proof of stake protocols, which is the possibility of slashing.
00:30:41.570 - 00:30:43.714, Speaker B: The basic idea of slashing is to.
00:30:43.752 - 00:31:32.800, Speaker A: Confiscate the stake of any nodes that the protocol is able to catch provably deviating from what they're supposed to be doing. For example, voting for two different conflicting blocks in a sort of BFT type protocol such as tendermint. We actually mentioned slashing briefly when we foreshadowed video number four, the why proof of stake motivations for proof of stake. You might remember back then we mentioned sort of three reasons. There's the environmental reason, there were performance reasons around finality and latency, and then there was the security reason, which was the sort of possibility of doing slashing, something which would seem to be unavailable in a proof of work protocol. So video 20 is sort of the deep dive on slashing, both slashing done kind of in an ad hoc way via hard forks or sort of in protocol programmatic slashing. And we'll talk at length about the pros and cons of doing each.
00:31:32.800 - 00:32:06.220, Speaker A: Like the fifth video on Staking mechanics, I kind of waffled whether or not to list this in blue or in green because really don't be scared of this video. It's really not a very technical video in the end, just like I did with the Staking mechanics video. The fifth video, I opted to list it in green just because if you really only have like an hour to spend on these lecture number twelve videos, I'm not sure this video on Slashing would make the cut. If you have an hour and 15 minutes different story, then I would say maybe the slashing video should be one of the things that you watch.
00:32:07.150 - 00:32:08.538, Speaker B: We've already alluded to some of the.
00:32:08.544 - 00:33:11.146, Speaker A: Potential advantages of proof of stake blockchain protocols, but there's no free lunch. There's also some disadvantages and the next pair of videos, videos 21 and 22, they're going to illustrate one of those disadvantages which is additional attack vectors relative to proof of work blockchain protocols. And one of the kind of more concerning attack vectors that you don't get with proof of work protocols, but you do get with proof of stake protocols is something known as long range attacks. The intuition here is the idea of costless simulation. So in Nakamoto Consensus, simulation is costly in the sense that if you want to fabricate some sort of long alternative chain compared to the sort of incumbent chain, you got to put in a whole bunch of work for anybody to pay attention to your alternative chain. Whereas in proof of stake there isn't really an analog of that and nodes are actually in a position to very cheaply and quickly fabricate long alternative histories. That costless simulation opens up a couple of different problems, long range attacks being maybe the most concerning of those long range attacks.
00:33:11.146 - 00:33:25.140, Speaker A: The idea there is you are worried about an attacker who either through compromise or through purchase gets their hand on some old private keys of nodes that were running the protocol in the past and then from that point fabricates a long alternative history.
00:33:26.070 - 00:33:28.018, Speaker B: So while there's several options for how.
00:33:28.024 - 00:33:44.490, Speaker A: To deal with long range attacks in practice and we'll talk through the most common options in these videos, it's also at the moment still sort of an open question about which of those is the best. But watch these videos and you'll see a menu of options of how to make sure your proof of stake protocol doesn't get derailed by these long range attacks.
00:33:45.310 - 00:33:47.402, Speaker B: So I've listed these videos as green.
00:33:47.536 - 00:34:33.626, Speaker A: Segueing into magenta, not because at any point they get particularly technical, but we will go into a fair amount of detail. And so if you just kind of want the gist of the technical basics and sort of what these attacks are about obviously watch kind of only a subset of these two videos. And if you want to be a mega expert, then I encourage you to watch them all. And for the final two videos, I want to talk about a question over which much blood and ink has been spilled over the years. Namely, among the two competing approaches, the biggest ones to civil resistance, proof of work and proof of stake. Which of those two is better? Now, as usual, with hard computer science problems like the design of permissionless consensus protocols, there's no sort of one right answer here. There are just trade offs between the two.
00:34:33.626 - 00:35:16.210, Speaker A: And as usual in this lecture series, I'm really not here to take sides. I'm really here just to clarify the points that people debate so that you have a clear understanding of the issues and are in a position to make your own informed opinion. The biggest three advantages of proof of stake protocols, right, those are already advertised in the fourth video, as we mentioned. There's the sort of environmental reasons of using less energy. There's the performance reasons in terms of potentially having better latency and finality properties. And then there's the sort of security reason of having this additional option of including slashing in your protocol. So this video is going to review those, but then also talk about what are maybe the three biggest disadvantages of proof of stake protocols.
00:35:16.210 - 00:35:36.880, Speaker A: One is that at least if you look at the ones that are deployed right now, definitely more complicated and less battle tested than Nakamoto Consensus, sort of an inevitable byproduct, it would seem, of the additional complexity of these protocols is additional attack vectors. And again, the previous topic on long range attacks being a great example.
00:35:38.290 - 00:35:40.266, Speaker B: And finally, for proof of stake protocols.
00:35:40.298 - 00:35:55.640, Speaker A: To have provable, consistency and liveness, you do need to make slightly stronger trust assumptions than you do for a proof of work protocol like Nakamoto Consensus. And again, it'll be very clear in the discussion of long range attacks exactly what those stronger trust assumptions are.
00:35:56.490 - 00:35:58.214, Speaker B: So this pair of videos will begin.
00:35:58.332 - 00:36:39.650, Speaker A: By laying out those three advantages and those three disadvantages. And honestly, all six of those things, I think they're pretty uncontroversial. I think even people who dislike proof of stake protocols would concede the three advantages we're going to discuss. I think even people who are proponents of proof of stake protocols would concede the three disadvantages that we're going to discuss. So really the debate is really over sort of which of those outweighs the other. Are the advantages of proof of stake protocols worth the disadvantages? And that's, of course, a topic on which reasonable people can disagree. The second of these two videos is going to focus on two really heavily loaded terms in the blockchain space permissionless and decentralized.
00:36:39.650 - 00:37:07.500, Speaker A: And you hear a lot of people argue quite bitterly about the relative merits of proof of work and proof of stake along these two dimensions which one is more permissionless? Which one is more decentralized? And the discourse around those two topics, honestly is usually pretty confused. Sometimes it's because people are using the same word to just mean very different things and are just talking past each other. Sometimes it's because people have an agenda in favor or against some specific project. Sometimes it's just kind of sloppy thinking.
00:37:08.670 - 00:37:09.994, Speaker B: So I'd love it if this last.
00:37:10.032 - 00:38:02.506, Speaker A: Video really just brought a little bit more clarity to this discussion. We'll talk through some of the things people might mean when they talk about something being permissionless. We'll talk through some of the things people might mean when they talk about a sort of protocol being decentralized. We'll talk about, like for any of these meanings of these two words is there any meaningful comparison you can make between the proof of work and proof of stake approaches to civil resistance? And as you'll see, if we watch that video, the answer in most cases is going to be no. And that, my friends, concludes the overview of the 24 videos spanning 15 different subtopics in lecture number twelve. As I said at the outset, there is a lot to say about this very important but also complex topic. So go brew yourself a nice big pot of strong coffee and let's get started.
00:38:02.608 - 00:38:04.630, Speaker B: I'll see you in the next video. Bye.
