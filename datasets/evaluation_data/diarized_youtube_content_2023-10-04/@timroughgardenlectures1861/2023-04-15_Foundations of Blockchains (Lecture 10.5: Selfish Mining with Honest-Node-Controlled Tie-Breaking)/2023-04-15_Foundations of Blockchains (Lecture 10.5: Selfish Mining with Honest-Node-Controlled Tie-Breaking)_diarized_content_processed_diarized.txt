00:00:00.250 - 00:01:15.570, Speaker A: Alright, so in this video we're going to look at the third and final version of the argument that selfish mining, meaning a deviation from the intended behavior in longest chain consensus, can in fact boost the share of the block rewards that's earned by a node running the protocol. So in this video, we will relax. Finally, the somewhat unsatisfying assumption we've been making thus far. Remember, thus far we've have been basically, in effect, allowing the deviating node, which we've been calling node A, to, in addition to its deviation along the way, control how honest nodes break ties among competing longest chains. Now, where did that assumption come from? We basically inherited it from lecture eight when we were studying the consistency and liveness properties of longest chain consensus. And the motivation there was it's very hard to justify any specific assumptions about what some node may or may not be able to do within the communication network. For example, if you're in the synchronous model, okay, no message can be delayed by more than capital delta, but within that sort of window of capital delta, seems kind of risky to make assumptions about what one node may or may not be able to do as far as manipulating the order in which messages are delivered.
00:01:15.570 - 00:02:04.850, Speaker A: So in the context of lecture eight, that was a quite reasonable assumption. We were just trying to have the weakest possible restrictions on Byzantine nodes to make our consistency and liveness guarantees as strong as possible. Now that we're thinking about a profit maximizing node sort of deviating away from longest chain consensus, which is being run honestly by all the other nodes. Now and you saw this in the arguments, it kind of felt like we were abusing that flexibility in tiebreaking. So in this video we're going to assume the opposite. We are going to assume that the tiebreaking is not at all under control of node A. And actually we're going to assume it's as bad as possible for node A, which is going to boil down to assuming that honest nodes, when they see multiple longest chains and they have a choice, they're going to extend whichever longest chain has at its tip an honestly produced block.
00:02:04.850 - 00:03:17.360, Speaker A: All right, so a few comments. So making this assumption that we're breaking ties in effect in the best case way as far as supporting honesty and in the worst case way from the perspective of the deviating node A, this is going to make things more challenging. And you'll see that in this video, the strategy is more complex and the analysis is quite a bit harder than what we did in the previous video. And also the result is going to be a little bit weaker. So it's not going to be the case like it was last video, that no matter how small you are, deviating from longest chain consensus is a good idea. In fact, it's only going to be true if you're a sufficiently big node, you don't have to be a 51% node, but you do have to be something more on the ballpark of a 33% node in order for deviating from longest chain consensus to boost your block rewards. But this result still does qualitatively prove the point that at least some things do start going wrong or at least sort of becoming unexpected in Nakamoto Consensus even before the amount of non honest hash rate approaches 50%, even when it's just down at something like 33%.
00:03:17.360 - 00:03:53.674, Speaker A: And as we discussed in the last video at the time, this was announced in 2013 or so. And again, this was from ayal and Surrey's paper that took a lot of people by surprise. So like last lecture, we're going to be carrying out an analysis that's parameterized by alpha which denotes the fraction of hash rate that's possessed by the deviating node capital A. We're going to be assuming that alpha is less than a half. Again, two videos ago, if you look at the argument for the 51% node case, you'll see that that actually works. Our variant of that works no matter how you do the tiebreaking. So we already know what's up when alpha is bigger than a half.
00:03:53.674 - 00:03:56.540, Speaker A: So let's think about the case where alpha is less than a half.
00:04:03.560 - 00:04:04.836, Speaker B: And like in the last couple of.
00:04:04.858 - 00:05:13.816, Speaker A: Videos we're going to be thinking about the case where all of the other nodes, the other one minus alpha fraction of the hash rate, don't think about profit maximization and just sort of naively follow the protocol as intended. So in other words, the goal here is to sort of understand is it at least the case that if all of the rest of the hash rate is honest, your best response is to also be honest? Is honesty contagious in that sense or in game theoretic terms, is everybody honestly following the protocol? Does that constitute a Nash equilibrium? So before I start describing the strategy, let me just remind you sort of the two high level guiding principles of the strategy we developed last video when we had tiebreaking under the control of the deviator, the goal was twofold. Goal number one was for node A to get as many of its blocks as possible into the longest chain. Those are the only blocks that garner block rewards. And in the last video actually node A was able to get all of its blocks into the longest chain. So that was sort of the perfect realization of that goal. And then the second goal because the node ultimately wants to maximize the size of its slice of the pie.
00:05:13.816 - 00:05:57.690, Speaker A: And so given that it gets all of its blocks into the longest chain, the only other thing it can do is try to orphan honest blocks off of the longest chain, thereby boosting its share of the overall pie. Now, when the node had 51% hash rate two videos ago, it was actually able to orphan all of the honest blocks off of the longest chain. We saw in the last video, it was able to orphan some, but not all of the honest blocks off of the longest chain. Specifically, each block that Node A created, in addition to being on the longest chain, was deployed in such a way that it knocked out one honestly produced block from the longest chain. So that's what gave us that alpha over one minus alpha fraction of the block rewards, which remember is bigger than alpha for any alpha bigger than zero.
00:05:58.700 - 00:06:00.056, Speaker B: So that's a recap of what was.
00:06:00.078 - 00:06:48.996, Speaker A: Going on last video when Node A was actually able to control the tiebreaking by the honest nodes. Now, what we're going to see in the scenario in this video is that actually any attempt by Node A to try to orphan any honest blocks off of the longest chain automatically introduces a risk that the Node A will have some of its blocks orphaned off of the longest chain. So in order to make any progress on goal two orphaning honestly produced blocks, we're going to see there needs to be some kind of compromise on goal number one. I e. If Node A does the strategy we're going to describe, it will not be the case that all of its blocks wind up on the longest chain. Hopefully many of them do, at least from Node A's perspective, hopefully many of them do. But as we'll see, it will not be the case that all of them.
00:06:49.018 - 00:06:52.636, Speaker B: Get into the longest chain. Let me give you a little bit.
00:06:52.658 - 00:07:01.580, Speaker A: More intuition about how this assumption at the top of the slide, why this means there's fundamentally a risk into these attempts to orphan honestly produced blocks.
00:07:02.800 - 00:07:05.276, Speaker B: So for illustration, suppose there's currently a.
00:07:05.298 - 00:07:24.580, Speaker A: Block A fork in the blockchain. So we have two nodes, B one and B two. They're both tips of the longest chain. They both have the same predecessor, the block B. Let's suppose block B one was produced by an honest node. That is we're going to call it an H block and block B one prime was produced by Node A, so we're going to call that an A block.
00:07:25.640 - 00:07:26.916, Speaker B: Now, even at the level of this.
00:07:26.938 - 00:08:14.196, Speaker A: Tiny example, we already see why the scenario in this video is going to be a lot more challenging for the deviating Node A than the one in the last video. Because if this was sort of the blockchain in the previous video where the Node A could control how ties were broken, node A would just be done. Node A would at this point be absolutely sure that their block B one prime is going to wind up in the longest chain, right? So Node A itself, it's only going to bother to extend its own block. So it will extend B one prime, not B one. And if Node A gets to control how the honest nodes break ties, it's going to control them so that they all also extend the A block B one prime as opposed to the H block B one. So already when you have a tie in the longest chain, node A was good to go in the previous video, in the previous scenario. Now it's the opposite actually.
00:08:14.196 - 00:08:32.490, Speaker A: So now if the blockchain looks like this thing on the right, node A is actually quite nervous, right, because it's true that it will still keep trying to extend its own block, it will try to extend B one prime. But under our new assumption, the honest nodes are going to be in a race against it trying to extend the honestly produced block B one.
00:08:33.660 - 00:08:35.028, Speaker B: And so if what node A was.
00:08:35.054 - 00:09:20.530, Speaker A: Trying to do here was orphan the honestly produced block B one, it's not enough just to produce B one prime. B one is not going to be orphaned until node A actually successfully produces a second block B two prime, extending B one prime. Only when node A's chain is strictly longer than all the competition. Only at that point where the honest nodes switch to extending the chain of A blocks. That's the only point at which node A can then rest easy. So this shows why any attempt by node A to orphan H blocks is going to be automatically risky to node A. So this blockchain on the right, this is an attempt to orphan an H block, namely the orphan B one.
00:09:20.530 - 00:09:54.822, Speaker A: To do that, a prerequisite is you need to create another competing block at the same height. So the node A has already successfully done that, that's B one prime. But the story is not over and two different things could happen. Next, node A might find the next block or an honest node might produce the next block and we don't know it's probabilistic. Which of those two things is going to happen? If node A winds up producing the next block B two prime, extending B one prime, well then node A is happy, then B one actually is orphaned. The unique longest chain is the one with the A blocks. And so everything is good to go from node A's perspective.
00:09:54.822 - 00:10:47.886, Speaker A: But another thing that could happen is maybe the next block to be produced was by an honest node. Honest nodes are trying to extend the honest block B one by our tiebreaking assumption. And so if an honest node succeeds, now node A is in an even deeper hole than they were before. So now for node A to orphan these honest blocks, it's going to have to now extend its chain of A blocks twice. It's going to need a B two prime and a B three prime before any more honest nodes are tacked on at the end of B two in order to flip which is the longest chain. And you got to imagine like if this keeps happening, so suppose the honest nodes come up with a B three and then a B four before node A comes up with a B two prime, at some point you figure node A is going to give up, right? And this is using the fact that we're assuming node A has less than half of the hash rates. Honest nodes on average are producing blocks at a higher frequency, at a higher rate than node A.
00:10:47.886 - 00:11:59.174, Speaker A: So at some point, once a's chain is slipped sufficiently far behind the longest chain of honestly produced blocks, it should just give up because it's realistically likely to never catch up ever again. Now, as soon as node A abandons the chain, it was growing, all of the A blocks on the chain it was growing are going to be orphaned. So for example, on the right part of the slide, if node A happens to give up once b two is produced, well that means b one prime is going to be orphaned. So that's what I mean by any attempt by node A to orphan the H blocks also introduces the possibility of orphaning A blocks. And so that's why the analysis is going to be pretty tricky because we have two sort of complex forces going in opposite directions and we have to measure which of them does node A more good. Does the benefit of occasionally orphaning H blocks outweigh the cost of occasionally having A blocks orphaned or not? That is going to be the essence of the analysis in this video. The fact that it's unclear which way this cost benefit analysis is going to go, that also starts giving you an inkling about why the end result, whether or not this is a good deviation or not, will depend on alpha.
00:11:59.174 - 00:12:14.080, Speaker A: So for sufficiently big nodes it will be a good deviation, for sufficiently small nodes it will not be a helpful deviation. And that's because the cost benefit analysis resolves itself in different directions depending on the hash rate alpha possessed by node A.
00:12:15.010 - 00:12:16.238, Speaker B: So to give you a sort of.
00:12:16.244 - 00:12:41.234, Speaker A: Overview of where we're going in the rest of this video, so there's going to be three slides. This is going to be slide one, the last video with the sort of worst case tiebreaking. We just needed one slide to talk through everything, the strategy and the analysis, et cetera. Here things are more complicated, the strategy is more complicated, the analysis is more complicated. I'll talk you through the strategy on this slide. It will be somewhat reminiscent of the ones we've been talking about in the last couple of videos. But again, we're going to need four cases, not two cases.
00:12:41.234 - 00:13:35.100, Speaker A: So that'll pretty much fill up this whole slide. Then we're going to have two slides of analysis. The first of those is going to be modeling kind of the questions we care about name, what is the sort of share of block rewards that's earned by this deviating node A under this deviation? We're first going to sort of set that up as a question fundamentally about Markov chains and talk a little bit about the stationary distribution, the relevant Markov chain. And then on the third and final slide of this video, we'll just go through the final calculations to really characterize for which alphas this deviation actually is profitable to the node. So in the last video we had two cases basically corresponding to which of node A or the honest nodes was sort of furthest along, had produced a block at the highest height. Here we're going to have four cases. We're basically going to want to parameterize just how much node A might be ahead of the honest nodes at any given time.
00:13:36.190 - 00:13:37.386, Speaker B: To do that, we're going to keep.
00:13:37.408 - 00:14:09.640, Speaker A: Track of two different block heights h sub p, that's going to be the highest height, the maximum height of every block that's been announced to everybody. Of course, every honestly produced block has been announced to everybody because that's what honest nodes do. Node A will be selectively releasing announcements of blocks. So all of the publicly announced blocks, the highest height, one among those is going to be h sub p. Node A may also have some blocks that are secret, that only it knows about. And if there are any such blocks, h sub S is going to denote the highest height among all of them.
00:14:12.400 - 00:14:13.628, Speaker B: Let me just remind you what I.
00:14:13.634 - 00:14:56.904, Speaker A: Mean by a block height. We've talked about it many times, but it's super, super important, you remember. So the height of a block in a blockchain is the number of hops that you need to get back to Genesis, or equivalently, it's the length of the chain that ends at that block. So remember, the end of the longest chain is going to be exactly the block with the maximum height. So, for example, H sub P, the maximum height of any publicly announced block. From the perspective of the honest nodes who know only about the publicly announced blocks, they think that the longest chain is currently whichever one ends at the block that has height h sub P. Node A, meanwhile, may know about blocks at even higher heights.
00:14:56.904 - 00:15:19.468, Speaker A: If Node A ever chooses to release all those blocks, that will create a new longest chain. So let's move on to the strategy. So in case one basically Node A doesn't have anything going on, so just whatever is the maximum height of a publicly announced block, in case one that's going to be bigger than any blocks that Node A might have kept private.
00:15:19.484 - 00:15:22.416, Speaker B: To itself, we're also going to say.
00:15:22.438 - 00:15:33.030, Speaker A: This is the case we're in if there are no secret blocks. Basically, if there's no secret blocks that node A is keeping private to itself, just interpret H sub S as like minus one or minus infinity or something like that.
00:15:34.200 - 00:15:35.876, Speaker B: So for example, maybe at this point.
00:15:35.898 - 00:15:39.144, Speaker A: We just have a simple chain of three honestly produced blocks, b one, B.
00:15:39.182 - 00:15:40.330, Speaker B: Two, and b three.
00:15:41.260 - 00:16:14.448, Speaker A: All right, so we're dealing with Nakamoto Consensus, right? So all of the nodes in node A in particular are busy trying to sort of solve these hard crypto puzzles. And as they do that, they have some predecessor in mind. They're trying to extend some particular block that's in the blockchain thus far. So in each of the four cases, I'm going to tell you three things. First thing I tell you is exactly which block node is trying to extend. Secondly, I'm going to tell you what's going to happen if node succeeds, meaning it creates a block before any honestly produced block. And then third, I'm going to tell you what is node's response if it fails.
00:16:14.448 - 00:16:42.504, Speaker A: Meaning that if some honest node creates a block before it does. So in case one where the honest nodes in effect are ahead. So here node A is just going to say, you know what, I'm just going to cut my losses. I'm going to accept that all of the honest nodes on the longest chain are going to always be on the longest chain and let me at least try to sort of extend that myself. So in this case, node A is simply going to work to extend the longest chain. So the publicly announced block, the maximum.
00:16:42.552 - 00:16:45.996, Speaker B: Height h sub p. So for example.
00:16:46.178 - 00:17:28.968, Speaker A: In our little magenta three block chain here, node A would simply try to create a b four prime that extends b three. So we just try to extend the block b three. And notice that is already actually different than the strategies we were using in both of the last two videos. So with a 51% node we were able to get away with just never tolerating any honest blocks in the longest chain ever. So two videos ago we would have actually been trying to fork away, we would have been trying to orphan b one, b two and b three by forking away somewhere behind V. One last video where we didn't have a 51% hash rate, but we did at least have sort of tiebreaking working in favor of node A. There you gave up on all of the blocks, honestly produced blocks on the longest chain except for the last one.
00:17:28.968 - 00:18:04.804, Speaker A: So in the last video, the strategy we considered would actually try to extend b two with a competing block b three prime. And here again, because of the change in tiebreaking, that's no longer such a good idea. Just trying to directly extend b two to orphan b three because we'd need to actually produce two blocks, a B three prime and a b four prime before we would orphan b three. So here actually in case one, we're just going to try to, node A is just going to try to extend the longest chain. It's going to try to have a b four prime tacked on at the end of b three. The honest nodes, meanwhile, they obediently follow longest chain consensus. And they all know about block B three.
00:18:04.804 - 00:18:10.570, Speaker A: So all the honest nodes will be trying to extend also B three to create an honestly produced block B four.
00:18:12.140 - 00:18:13.320, Speaker B: So that's what's happening.
00:18:13.390 - 00:18:56.644, Speaker A: All of the nodes, both sort of the node A and the other one minus alpha fraction of the hash rate, they're all trying to extend B three one, and only one of those two will succeed first. So either A creates B four prime or an honest node creates B four. So let's talk about what happens next in each of those two cases. So if node A gets lucky and is the next one to produce a block, and again, that happens with probability alpha under the usual sort of random oracle assumption that we use in proof of work, if it succeeds, then it's actually going to keep that new block B four prime private to itself. It will for now keep that block secret. You may be wondering what node A does next. So just hold that thought for a second.
00:18:56.644 - 00:19:30.620, Speaker A: Basically in this case, we'll transition from case one of the strategy to case two of the strategy. So I'll tell you in a second what in case two of the strategy node A is going to do. Let me just complete the description of case one because there is a chance that A fails in its efforts and that in fact the next block, and this is probability one minus alpha, the next block may be produced by an honest node rather than node A. And so in that case, we're basically still in case one, right? So h sub s hasn't changed. There's no new secret blocks. H sub p has gone up by one. Honest nodes extended the end of the publicly known longest chain.
00:19:30.620 - 00:20:05.318, Speaker A: So we're still in case one. So node A is just going to reset its strategy. In its case one strategy, it will try to extend the new end of the longest chain. Moving on to case two. And again, case two is where you get if in case one, node A successfully creates a new block extending the end of the longest chain. So like in our example, that would be if node A successfully creates the block B four prime. And remember, is keeping it private for now.
00:20:05.318 - 00:20:38.558, Speaker A: So in that case, right, so now node A has a secret block that has a height one higher than the maximum height of any publicly known block. That is H sub S is now H sub p plus one. So I've updated our running example. So in the picture, in case one, the two blocks in gray and that are dotted, that's meant to indicate two blocks, two types of blocks the nodes are currently trying to create, they may or may not succeed. Those are the blocks in gray that the nodes are trying to create. So in case two, B four prime has turned from gray to magenta. It's still dotted.
00:20:38.558 - 00:21:00.522, Speaker A: And so what that means is that in case two, block b four prime actually exists. It's been created. Node A has it in its back pocket, but it hasn't been publicly announced. So the magenta means it exists. The dotted means that it's secret, that the honest nodes don't know about it yet. Now, the honest nodes in case two, right, they don't even know that this b four prime was created. So from them it still looks the same as it did before.
00:21:00.522 - 00:21:06.620, Speaker A: They're still trying to extend the end of the longest chain that they're aware of, which is trying to extend b three.
00:21:08.670 - 00:21:09.978, Speaker B: So the honest nodes are going to.
00:21:09.984 - 00:21:23.570, Speaker A: Be trying to extend b three, the maximum height block that they're aware of. What's node A going to do? Well, of course it's going to try to sort of double down on its strategy and try to extend the block it just created. It's going to try to extend, in the example, the block b four prime.
00:21:25.430 - 00:21:26.962, Speaker B: Now, one of two things could happen.
00:21:27.016 - 00:21:45.750, Speaker A: Right, with probability alpha, node A is the next one to produce a block. So in other words, b five prime gets created next. And with the remaining one minus alpha probabilities, some honest node creates a block which is going to be the block B four, extending the block B three. So first, let's suppose that node A succeeds and creates b five prime.
00:21:46.730 - 00:21:47.814, Speaker B: Well, Node Aid is going to do.
00:21:47.852 - 00:22:01.840, Speaker A: The exact same thing it did in case one when it succeeded there, namely, it's going to keep its new block in the example b five prime. It's going to keep that private and then, of course, moving on, it'll keep trying to extend b five prime with a b six prime and we'll see that's actually going to be in case four.
00:22:02.930 - 00:22:04.686, Speaker B: Now, if node A fails in its.
00:22:04.708 - 00:22:29.670, Speaker A: Efforts, meaning an honest node creates a block first, that would be like b four in our example. Then in fact, node A is going to stick to its guns. It's going to keep its secret block secret. It's not going to announce in the example what would be b four prime and it's going to keep trying to extend the secret block that it knows about. So in the example, it's going to keep trying to create b five prime, even though b four in this case is now in existence.
00:22:31.210 - 00:22:31.606, Speaker B: All right?
00:22:31.628 - 00:23:26.690, Speaker A: So that's case two. We have two more cases to go and we've actually already seen how we're going to get into each of those two cases. So if you're in case two and you have success, and then in effect, node A has kind of a lead of two over the publicly known sort of chain of honest blocks, that's going to move us to case four. But if there's a failure in case two, meaning that the honest nodes create a competing block at the same block height as the one private block that node A has, that's going to bring us to case three that we're going to describe next. So in this case, as we mentioned, node A is not going to give up on its secret chain. It's not going to give up on the block B four prime that it already created and it's keeping secret. So in case three, it's going to work to extend B four prime, to extend the private block that it created back in case one.
00:23:27.620 - 00:23:29.248, Speaker B: The honest nodes, meanwhile, they're going to.
00:23:29.254 - 00:23:39.430, Speaker A: Do what they always do. They're going to try to extend the end of the longest chain that they know about. So for example, in our running example, they're going to be trying to create a B five, extending the block B four.
00:23:40.920 - 00:23:42.468, Speaker B: So let's talk about what node A.
00:23:42.474 - 00:23:51.930, Speaker A: Is going to do if it succeeds. So like in our running example, if it actually creates its block B five prime before honest nodes are able to create a block B five.
00:23:53.340 - 00:23:54.936, Speaker B: And actually this reminds me of something.
00:23:54.958 - 00:24:29.220, Speaker A: I meant to say back when we're talking about case one, which is kind of an interesting contrast to what we're about to do in case three, right? So in case one, that's when node A was just sort of extending the end of the longest chain and the longest chain was public, everybody knew what it was. And in case one, if node A succeeds, one of the things it could do with the block it just created. So that would be like the B four prime in our example. It could just immediately announce it to everybody else. That would become the new end of the longest chain. Everybody would be trying to extend it. So B four prime would be guaranteed membership in the longest chain if it was announced immediately.
00:24:30.600 - 00:24:31.876, Speaker B: Well, here Node is going to do.
00:24:31.898 - 00:24:49.276, Speaker A: Something interesting, which is it's going to declare victory. So it is going to just announce its secret blocks. So like in our example, it's going to announce both B four prime, the block that it created previously in case one, as well as B five prime, the block that it just created. Now, in case three, it's going to.
00:24:49.298 - 00:24:50.830, Speaker B: Announce both of them.
00:24:52.160 - 00:25:40.124, Speaker A: Now, maybe you're bothered that I wrote a announces both secret blocks. I mean, it's obvious in our running example that in fact node A has exactly two secret blocks to announce, namely B four prime that it created in case one and B five prime, the block it just created just now in case three. But actually, as we'll see in general, the only way node A ever finds itself in case three is by going through this exact same sequence of events. Like first being in case one, successfully creating one block that it keeps private, then moving on to case two and failing so still having one block that it has private, and then moving on to case three and succeeding again. Which gives it a second block. And so always in case three, node is going to have exactly two blocks that are relevant to announce. Now once A does announce both of those private blocks, then it is good to go.
00:25:40.124 - 00:26:20.120, Speaker A: So like in the example B four prime and B five prime, that's going to be the new universally recognized longest chain. Remember, the honest nodes were trying to create the block B five but they did not yet create the block B five. So when B four prime and B five prime get announced, that's going to be the unique longest chain. And remember, look at the consequence at the top of this slide. That's what we needed, right? So for node A to make sure that its blocks get in the longest chain, it needs to make sure that if it ever kind of keeps some blocks private and then publishes them later, it needs to be on the unique longest chain. And that's exactly what it accomplished here in case three. So these two newly announced blocks, they are guaranteed to be in the longest chain forevermore.
00:26:20.120 - 00:26:43.264, Speaker A: Note also that that orphans one of the honestly produced blocks, namely B four. So that definitely is a win for node A. So good things can happen for node A and case three if it finds a block before the honest nodes. But actually this is also the case where you see the riskiness of doing any kind of holding block secret, any kind of delayed block announcement. Bad things can happen to node A.
00:26:43.302 - 00:26:46.464, Speaker B: And case three as well because if.
00:26:46.502 - 00:27:16.632, Speaker A: In fact the honest nodes produce a block. So like in our example B five before node A does like the block B five prime. Now Node A finds it in an even bigger hole than it was before. Previously it was in a tie between its secret chain and the sort of publicly known chain and ties are broken against node A. So that was already sort of a risky position. But now actually the honest nodes have sort of creeped ahead. So they actually have a chain which is one longer than the secret chain that Node has been trying to create.
00:27:16.632 - 00:27:46.070, Speaker A: And so at this point Node is just going to throw in, it's going to wave the white flag, throw in the towel, it's just going to give up and return to case one. It's just going to say, look, I'm going to accept that a couple of honest blocks got on the longest chain. In our example it's going to be B four and B five. I'm going to accept that one of my blocks got orphaned, is not going to be in the longest chain, that's the block B four prime in the example. And I'm just going to sort of start over, go back to case one and try to extend the new longest chain, which in the example would be trying to extend B five.
00:27:47.000 - 00:27:48.468, Speaker B: Let's wrap up the description of the.
00:27:48.474 - 00:28:02.440, Speaker A: Strategy with the remaining case, case four. This is going to be the case where things are really good for node A, in that it has blocks that it's keeping secret with heights that are two or more larger than the maximum height of any publicly known block.
00:28:03.740 - 00:28:05.512, Speaker B: So how do you find yourself in case four?
00:28:05.566 - 00:28:22.770, Speaker A: Well, sort of the initial way to get into it is just through case two, right? If you're in case one and you and node A produces a block, now, it has a sort of lead of one, in effect, over the honest chain that moves it to case two, if you succeed again in case two. Now your lead over the honest chain has grown to two and you find yourself in case four.
00:28:24.100 - 00:28:25.648, Speaker B: So in our example, if you look.
00:28:25.654 - 00:29:09.650, Speaker A: At case two and you look at the blockchain there, this would be if node A manages to create the block B five prime before any honest node manages to create the block B four. So no prizes for guessing what node A is going to try to do in this case. They're obviously going to try to just double down and keep extending their secret chain. So in the example, they're going to try to create a block B six prime, extending the still secret block B five prime. The honest nodes, meanwhile, are blissfully unaware that blocks B four prime or B five prime even exist. They think the end of the longest chain is B three. So they're still trying to create a block B four, extending the maximum height block they know about B three.
00:29:09.650 - 00:29:45.964, Speaker A: If node A succeeds yet again in case four, well, then it just gets more comfortable. Now the honest nodes are even farther away than ever from ever challenging this secret chain for dominance. So node A may as well just keep going, may as well just keep trying to extend the end of its secret chain. So, like in our example, if it successfully creates B six prime, it's again going to keep that private, and now it's going to try to create a B seven prime, extending B six prime. In other words, node A just finds itself back in case four yet again, this time with an even bigger gap between H sub s, the maximum height of a secret block, and H sub.
00:29:46.002 - 00:29:49.276, Speaker B: P, the maximum height of a publicly known block. All right?
00:29:49.298 - 00:30:39.388, Speaker A: So suppose instead the honest nodes are the next ones to create a block. Well, then that may or may not take us out of case four, right? It's just going to depend on how big the lead was that node A had with its secret chain over the publicly known chain. So, for example, if you look at our running example, so imagine that actually node A also created B six prime before the block B four, at which point it has a lead of three, right? So the publicly known blocks are only b one, B two, B three. But node A also knows secret blocks, b four prime, b five prime, b six prime. So H sub S would be three larger than H sub P. And so that means that once the honest nodes actually successfully create a B four, there's still a gap of two between H sub P and H sub S. So that means we're still going to be in case four.
00:30:39.388 - 00:31:55.760, Speaker A: So in that case then node A is just going to keep doing what it was doing before, it's going to keep trying to extend the secret chain because it's still comfortable with its lead of two or more that it has over the publicly known chain. If, on the other hand, this new honestly produced block puts node in the precarious position of having a lead of only one block with its secret chain over the publicly known chain, at that point, Node doesn't want to take any more risks. It doesn't want to risk any of its sort of private blocks, its secret blocks getting orphaned. So just like in the successful part of case three, in the unsuccessful part of case four, where the lead shrinks to just one, node A says, you know, I'm just going to be safe, I'm going to publish all of my secret blocks all at the same time. Because the deepest of the secret blocks, because the maximum height of a secret block is still one more than that of any other block in existence, all of the honest nodes will recognize this newly public version of the secret chain as the unique longest chain. So that means the honest nodes, they have no choice, they're following the protocol, they have to extend this new unique longest chain. Node A, of course, will always extend that chain.
00:31:55.760 - 00:32:43.360, Speaker A: So all of these newly announced previously secret blocks in case four are guaranteed to be on the longest chain. So in our running example, this would be the case if the honest nodes produced the block b four before node A manages to produce the block B six prime. So node A has produced b four prime and B five prime. It went in with a lead of two over the deepest publicly known block, B three. But if the honest nodes create b four before node A creates B six prime, that lead shrinks to one. And that's going to trigger node A announcing in this case it's two secret blocks, b four prime and B five prime that will have the effect of orphaning the just produced honest block B four. And it will also guarantee that b four prime and B five prime will be in the longest chain now and forevermore.
00:32:43.360 - 00:33:19.032, Speaker A: Now, unlike case three where we knew there were going to be exactly two blocks announced, that's because the only way you can get into case three is by going case one. Case two, case three, success, failure, success. Case four, there's an arbitrarily large number of secret blocks that might be announced at this point. Like for example, if you look at our running example. So now suppose actually node A managed to create B six prime first before the honest nodes managed to create B four. Then imagine that the honest nodes created B four. So imagine both of these gray blocks turned magenta.
00:33:19.032 - 00:33:53.290, Speaker A: And now imagine that actually the next thing to happen was those honest nodes again were the next ones to produce a block. This would be a block B five, extending block B four. So at that point the lead will have dropped to one, right? So there's a secret block B six prime, but there's now a public block B five. So that would again trigger the part of the case four strategy where node A announces all of its secret blocks. And in that case it's going to be three, not two secret blocks. It's going to be B four prime, b five prime and B six prime. That's going to have the effect of orphaning both of the honest blocks, b four and the one that was just created b five.
00:33:53.290 - 00:34:31.780, Speaker A: So that's the general principle in case four. So at this point, node A finds itself in a position of advantage. It has a big lead, a lead of at least two over the honest chain. And at this point it keeps staying in case four as long as it can. But as soon as there's any risk of any of its blocks being orphaned, it says, no, I'm shutting this down now. I'm just going to announce all my blocks, sort of cash in my chips and make sure all of the blocks that I've produced on this secret chain are guaranteed to get into the longest chain. So that's the description of the strategy that we're going to be analyzing over the next couple of slides should go without saying that it is not at all obvious whether this strategy is a good idea or not.
00:34:31.780 - 00:34:36.070, Speaker A: And as we'll see, it's actually going to depend on the hash rate of the node A.
00:34:36.440 - 00:34:37.888, Speaker B: But if you think about it, that's.
00:34:37.904 - 00:35:12.552, Speaker A: Already a pretty big difference from the previous video where I claim in the last video when node A had the advantage of being able to control tiebreaking. It was actually kind of obvious if you think about it, that deviating from longest chain consensus is a good idea, kind of no matter how small of a node you are, right? Because suppose you just followed longest chain consensus, right? What happens? Well, then everybody's honest. There's no message delays. So just every block gets in the longest chain. There's no forks, so all of node A's blocks are going to get in the longest chain. All of the honestly produced blocks are going to get in the longest chain. And so node A is going to have an alpha fraction of the blocks on the longest chain.
00:35:12.552 - 00:36:07.820, Speaker A: And in the last video we saw that actually node A had a strategy which retained the property that all of its blocks wind up in the longest chain. So it gets the same number of blocks there either way. But with that alternative strategy, you at least sometimes manage to orphan honest blocks, which means your share, the fraction of the blocks on the longest chain which are yours are clearly going to be bigger. You have the same absolute number and you have a strictly fewer number of other kinds of blocks, honestly produced blocks on the longest chain. With this more complicated strategy, in this more complex scenario, things are different, things are more complicated. With this strategy, you do still sometimes manage to orphan honestly produced blocks. For example, that happens in case three in the successful part of case three, right, that results in Node A announcing two secret blocks that are guaranteed entrance into the longest chain, which also orphans one honestly produced block.
00:36:07.820 - 00:36:59.552, Speaker A: And then in case four, in sort of the last part of the failure mode, when the lead shrinks to one, that again is going to lead to an orphaning of a number of honestly produced blocks, at least one honestly produced block, possibly more. So we see there are parts in this strategy where the honestly produced blocks do get orphaned. On the other hand, we also see there's a case where blocks created by Node A get orphaned specifically in case three in the failure mode within case three. That's when node A just sort of gives up, accepts that some of its blocks got orphaned, and then just sort of restarts, trying to extend the end of the Longest chain. So this is why you have this sort of tug of war between these sort of two competing forces with this strategy, right? So sometimes it works in your favor and some honestly produced blocks get orphaned. Sometimes it works against you and some of your blocks get orphaned. And it's really not clear how that benefit analysis is going to resolve.
00:36:59.552 - 00:37:10.950, Speaker A: The only option available to us to answer this question, whether this strategy is a good idea, the only option is to do some pretty nontrivial mathematical analysis. So let's get into that next.
