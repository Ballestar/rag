00:00:00.250 - 00:00:15.690, Speaker A: Welcome to this video that accompanies section 19.2 of the book algorithms Illuminated, part Four. This section is about identifying what level of expertise you're after in terms of mastering NP hardness and its algorithmic implications.
00:00:15.690 - 00:00:34.082, Speaker A: So what are the levels of expertise that you might have now and that you might want in the future? Well, let's start with the sort of level of total ignorance, level zero. So at level zero, you've literally never heard about NP hard problems. You're unaware that certain computational problems seem fundamentally intractable and unsolvable by fast algorithms.
00:00:34.082 - 00:00:54.174, Speaker A: And of course, you don't know what to do about those problems if you encounter them. So if I've done my job, this video playlist should be accessible even to those of you that are starting out with level zero knowledge about NP hardness. So level one is sort of cocktail party level awareness about NP hardness, where you'd roughly know what someone meant if they mentioned it.
00:00:54.174 - 00:01:14.110, Speaker A: I'm speaking here, of course, as always, but only the nerdiest of cocktail parties. So you would know that an NP hard problem, you need to do something about it. You need to reformulate the problem, you need to scale down your ambitions for solving the problem, or you need to invest a lot more resources, probably both human and computational, into getting that problem solved.
00:01:14.110 - 00:01:38.170, Speaker A: So for example, if you're managing a software project that has an algorithmic component, you're going to want to have at least level one expertise in case one of the engineers on your team tells you that they've encountered an empty hard problem in the course of the project. If you're content to stop at level one, it's sufficient to just read chapter 19 of the book. So just to watch this initial sequence of videos, that will bring your level up to level one.
00:01:38.170 - 00:02:05.554, Speaker A: So if you're a software engineer interested in algorithms reaching level two, that's probably the level that's the most empowering. At level two, you have a rich algorithmic toolbox for making headway on NP hard problems when you encounter them in your own projects. Happily, we'll see that all of the algorithm design paradigms that showed up in previous books of the series, especially greedy algorithms and Dynamic programming, they will also be part of the toolbox for making progress on NP hard problems.
00:02:05.554 - 00:02:22.166, Speaker A: And we'll also see some new tools to add to the toolbox, like local search and mixed integer programming solvers. To bring your level up to level two, you'll want to read chapters 20 and 21 of the book or watch the corresponding videos. Chapter 20 will specializing in fast heuristic algorithms.
00:02:22.166 - 00:02:42.398, Speaker A: So where you give up on correctness but retain speed. And then chapter 21 is the opposite compromise, where you're always correct, but you hope to do at least somewhat better than naive exhaustive search. So at level three of expertise, you not only know what to do with NP hard problems when you encounter one, you also know how to spot them.
00:02:42.398 - 00:03:15.420, Speaker A: So at this level, your colleagues will actually come to you with your problems to help you diagnose whether they need to just think harder about a fast and correct algorithm, or whether, indeed that problem is NP heart. So, as you can imagine, when I'm sort of advising either students or colleagues or people from industry, I often draw on both the level two and level three toolboxes. Of course, once you've applied the level three toolbox to figure out that a problem is MP hard, at that point, you can switch to the level toolbox and design algorithms that do the best that you can, given that the problem is MP hard.
00:03:15.420 - 00:03:42.610, Speaker A: Finally, the black belt level of mastery and NP hardness, level four, that's really for sort of budding theoreticians or people who really want a deep mathematical understanding of what NP hardness and the P versus MP conjecture is all about. So at this level, you could actually grab a marker and go to a whiteboard and sort of explain to your colleagues exactly what this whole P versus NP business is. So that'll be covered in the optional videos corresponding to chapter 23.
00:03:42.610 - 00:03:57.718, Speaker A: Everything else in the book you can understand perfectly without reading chapter 23. But if you want that deeper mathematical understanding, you should definitely check out the videos correspond to chapter 23. So those are the levels of expertise that you might want to shoot for, and it's really up to you.
00:03:57.718 - 00:04:23.262, Speaker A: You should decide how much time you want to invest in mastering NP hardness and what level it's worth your time to get to. I hope these videos have clarified the optimal way to spend your time so that you know exactly what to read and what to watch, given the level that you want to reach. So having said all that, now let's sort of proceed to the meat of the material in chapter 19 and start developing our informal understanding of what do we mean by an easy problem and what do we mean by a hard problem.
00:04:23.262 - 00:04:25.450, Speaker A: I'll see you then. Bye.
