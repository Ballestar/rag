00:00:00.250 - 00:00:55.630, Speaker A: So before we get into any details about how proof of stake random sampling is actually implemented, it's going to be useful for us to have a sort of sharper mental model for the mechanics of how staking actually works. So that's going to be the purpose of this video. And as we'll see already here, there's kind of a lot of design decisions that you have to make just when you're setting up the rules around deposits and withdrawals from, from a staking contract. And I need to warn you, if you sort of survey the major proof of stake blockchain protocols that are out there, pretty much all of them make somewhat different decisions on each of these design questions. As usual, we're not going to be focusing on the details of any specific protocol. We're going to be focusing on principles. So really, sort of fundamentally, what are the design decisions that you have to make when you're figuring out how staking is going to work in a blockchain protocol and what are some of the most common approaches that people take in practice.
00:00:55.630 - 00:01:55.650, Speaker A: So first, let me remind you that generally in proof of stake blockchain protocols, the protocol maintains some designated escrow contract. Some contract where would be validators can deposit and withdraw native cryptocurrency. We haven't really gotten yet to smart contracts on blockchain protocol. A smart contract here really just means kind of a computer program. So if you think about that big computer in the sky that we mentioned back in lecture number one, but basically just think of a transaction as kind of like a snippet of code, maybe including function calls to various smart contracts analogous to invoking object methods. If you're doing object oriented programming, and in particular, if you have general computing functionality as part of your blockchain protocol, certainly one thing you can do with a computer program is maintain a list of the public keys of the currently active validators along with their stake amounts. So all of that logic is going to be part of the program that constitutes this staking contract.
00:01:55.650 - 00:02:47.346, Speaker A: So the list of active validators that's maintained by this smart contract validators are identified by their public key. And then also, of course, the contract records the amount of stake that they've locked up in the contract. So that's the basic setup. So people who want to be validators, those are just nodes interacting with the staking contract, making deposits, withdraws, et cetera. So what's going to be the logic around when you can deposit and when you can withdraw? So there's several decisions that need to be made. So for example, you need to decide, is there a minimum and or a maximum duration that some node can enroll in this staking contract? So like the other design decisions, the different proof of stake blockchain protocols tend to make different choices for these parameters. There are some protocols that actually don't have any minimum duration at all.
00:02:47.346 - 00:03:23.166, Speaker A: You can literally kind of deposit and immediately withdraw. Again, that's not recommended as we'll talk about later in this video. But some protocols do work that way, much more common. To see a minimum lockup duration of something on the order of weeks or more maximum durations, if there are any, would typically more be on the order of years. A related decision is whether nodes can initiate deposits and withdraws whenever, or whether the validator set can only change at particular boundaries. And again, different protocols make different decisions. For some, the validator set could be just changing all the time.
00:03:23.166 - 00:04:06.072, Speaker A: For others, there's just kind of a batch update once every 2 hours or maybe once every two weeks. So in addition to these sort of upper and lower bounds on how long stake can be locked up, we also need to decide upon upper and lower bounds on how much stake can be locked up. So again, big differences in these parameter choices across different blockchain protocols. In some cases there's no minimum amount at all. You can literally stake an arbitrarily small amount of the blockchain's native currency. A little more common that you do have some nontrivial minimum amount. So you have to lock up at least a certain amount of stake in order to become a validator.
00:04:06.072 - 00:04:43.864, Speaker A: For some proof of stake blockchains that's going to be order of thousands of dollars, for others, it's going to be orders of tens of thousands of dollars. So for many of the proof of stake blockchain protocols, it's actually a nontrivial economic commitment. If you're going to want to become a validator, the key trade offs you have to weigh when you're deciding about sort of the minimum staking amount, higher numbers there. The benefit is that you're only going to have validators with a lot of skin in the game. You have validators that really have committed significant economic resources to the success of your protocol. So that's kind of very nice. On the other hand, the obvious benefit of having lower minimum amounts is then you're just much more accessible.
00:04:43.864 - 00:05:35.950, Speaker A: So you might have a sort of more diverse and sort of far reaching set of validators if you have a smaller minimum amount. Another thing to think about is whether you want to have warm up and or cool down periods. So these would be intervals of time where the stake is locked up, but you actually don't have the privileges of a Validator. So it's easiest to see what I mean with a picture like a timeline. So consider a time interval that commences with a deposit and concludes with a withdraw of those same funds. And now consider a subinterval of this time interval. The period during which the node who's locked up these funds is allowed to validate, is allowed to make block proposals, vote on other nodes, block proposals, and so on.
00:05:35.950 - 00:06:26.442, Speaker A: So that first sub interval between the actual deposit of the funds into the contract and the moment in time at which that node can actually participate in validation. That's what I mean by the warm up period. And then sort of symmetrically that sort of sub interval at the end after the validating has stopped, but before the node has been able to withdraw those funds. That's what I mean by the cooldown period. So the way you should think about this is you should think about the node as initiating the withdrawal at the start of the cooldown period and that's when they stop being able to validate. And then it's only at the conclusion of the cooldown period can they actually execute the withdrawal. And why is that important? That's important so that you have time to detect any misbehavior by that validator before they've had a chance to withdraw their fund.
00:06:26.442 - 00:07:33.066, Speaker A: So generally, best practices, you want at least some kind of cooldown, some kind of period at which the node on the one hand doesn't have any power over your protocol, but on the other hand, the protocol does have power over the node. It does actually still have its funds locked up in the staking contract. So for example, if you're talking about a protocol within protocol slashing like proof of stake ethereum does, you can only slash while the funds are locked up. But it may take a little bit of time to gather the evidence that some validator has misbehaved. So you want to set the cooldown period long enough so that you can expect people to figure out the evidence of misbehavior while you still have those funds in a slashable state. So next, a quite important design decision is how do you plan to incentivize nodes to do the right thing? So what kind of staking rewards are you going to offer? Now maybe your first reaction is, but wait a minute. When we talked about block rewards like in lecture number ten, we said it's particularly relevant for proof of work protocols because everybody is like investing in Asics and paying all this electricity to kind of do all this hashing.
00:07:33.066 - 00:08:01.798, Speaker A: It seemed kind of obvious that you needed some kind of economic incentive for nodes to bother running a Nakamoto Consensus, some proof of work protocol. Whereas here we don't have that. We don't have those energy costs. But nodes validators are still incurring costs in the form of their locked up capital. So they could be doing anything with their economic resources. They've chosen to commit it to securing this protocol for some period of time. And there's an opportunity cost to using those funds in that way.
00:08:01.798 - 00:08:45.030, Speaker A: So there really is still a need to compensate validators for the capital costs that they incur. Now, one sort of obvious thing we could do is just copy what we already did in lecture number ten. Back then we were talking about Nakamoto Consensus, but we introduced this idea of block rewards. So anytime a block gets finalized, meaning it's sufficiently deep in the longest chain, whichever node it was that proposed that block is then given a block reward. And generally those are newly minted coins in the blockchain's native currency. So you could do that in a proof of stake context. It might actually particularly make sense if you're talking about a longest chain protocol using proof of stake civil resistance, then block rewards are sort of reasonably natural.
00:08:45.030 - 00:09:40.200, Speaker A: Like we've said, many proof of stake protocols actually use BFT type consensus. And there it's actually a little unclear who the block reward is supposed to go to. Now if you're using something like tendermint, there is still a leader for each round. So there is a notion of like the node that originally proposed some block that got finalized so you could reward that, but then you have to make a decision. It's like, oh well, okay, so what about voting? Should we reward people for voting or what? So what's more common these days in proof of stake protocols, especially the ones that use BST type consensus, is some kind of very amortized, smoothed out version of this block reward idea. Namely, you're just going to basically have some fixed inflation rate. So you will just be printing new coins in the native cryptocurrency at some rate and you will be distributing those newly printed coins, newly minted coins, to the set of active validators pro rada, meaning proportional to the amount of stake that they have locked up.
00:09:40.200 - 00:10:24.178, Speaker A: So for example, suppose you're a validator and you happen to own 10% of the stake of all the stake that's been locked up. If you are using block rewards, well, with 10% of the stake, you might be expecting to propose 10% of the blocks that get finalized. So you might be expecting to get 10% of the overall block rewards. But there is going to be some variance around that number because it just depends kind of how frequently you wind up being selected to propose a block. Now, with the amortized version, you're just literally going to get 10% of the overall block rewards. That's just literally how the protocol defines staking rewards. Now, as you can imagine, this payment is going to be contingent on behaving correctly, right? So for example, what that means is going to vary a little bit with the protocol.
00:10:24.178 - 00:11:14.994, Speaker A: But for any proof of stake blockchain protocol, if you sort of lock up some stake and then you just turn your machine off for the duration of your lockup and never participate in consensus, you better believe you're not going to be getting that interest payment at the end of the staking period. Conversely, if you do behave correctly during the staking period, so you leave your machine on, you make sure that your network connection is reasonable. You always are running sort of the latest and greatest version of the protocol. If you do all these things right, then you're going to be getting your interest payment. How much is that interest payment again? Depends a lot on which protocol you're talking about, but somewhere in the single digits annual return is what you should be thinking about. Something like say three to 8% annual return on your stake might be a typical staking rewards that you'd see these days. So as we mentioned, that staking reward is meant to cover any opportunity costs.
00:11:14.994 - 00:12:11.874, Speaker A: The validators might be incurring from having locking up their funds as opposed to doing something else with those funds. Also kind of the operational cost of actually running a node that's running the protocol. Plus if you're talking about a protocol with slashing there's also then some risk that you get slashed kind of despite your best efforts. So in effect you're also somehow compensating for that slashing risk in some cases. Now at the beginning of a protocol's lifetime, the compensation is sort of set to be even a little bit higher than that because you want to bootstrap a really good set of validators to get a blockchain protocol sort of nice and healthy. But for most of the proof of stake protocols, the idea is that that inflation rate, that sort of the interest payments would be decreasing over time as hopefully that validator set stabilizes and all you need to do is sort of COVID the various costs that the validators are incurring. Now notice, and this is true for pretty much all of the proof of stake blockchain protocols, staking rewards scale with how much you've staked.
00:12:11.874 - 00:12:48.318, Speaker A: That is, the staking rewards are relative, not absolute. Stake twice as much native cryptocurrency, you're going to get twice as high as staking rewards. And that makes sense, right? That's sort of how interest payments work. The opportunity cost that a node is incurring is scaling with the amount of capital it locks up. So it makes sense for its rewards which are meant to cover those costs to also scale with how big the stake is. So all of that discussion was just about sort of what to do with inflationary rewards. So what to do with these newly minted coins whose job is to incentivize validators to behave correctly in running the protocol.
00:12:48.318 - 00:13:44.870, Speaker A: A totally separate question is what to do with a second revenue stream which does not involve newly minted coins but rather payments from end users in the form of transaction fees. Like we were talking about last lecture in lecture number eleven, there's a bunch of different things you could do with the transaction fees and sort of all of the different combinations have been tried. You could pass those transaction fees onto the proposer of the block. So for longest chain consensus, it's very clear what I mean by the proposer of a block. But even most BFT type consensus protocols, there's a notion of a block proposer who could capture all of the transaction fees of the transactions in the block that it assembled. Alternatively, you could just sort of add them as like a bonus to the inflationary rewards that you're paying out prorata. So you could distribute transaction fees to validators proportional to the amount of stake that they've locked up, or you could burn those transaction fees like we talked about in EIP 1559, which in effect is some kind of refund to holders of the native currency.
00:13:44.870 - 00:15:13.154, Speaker A: And the final design decision I'm going to highlight is whether or not you want to support in protocol delegation of funds to validators. So delegation is important because there's actually some pretty big deterrence from becoming a validator in some proof of stake blockchain protocols. Maybe the most obvious one is that for the protocols that have a significant minimum staking amount and as we discussed, that's often in the tens of thousands of dollars and USD terms and someone may not have that much, they may have half of that, they may have 10% of that, and it's a shame to just not let them use it. If that person wants to use their funds, lock up their funds to help secure the blockchain protocol, it would be nice to allow them to do that, presumably in exchange for some share of the staking rewards. So that's one of the things that delegation enables. A second example would be someone who possibly does have enough capital but just either doesn't want to or for whatever reason is unable to actually operate a node and contribute to the validation process. Maybe the person doesn't trust themselves to keep the protocol software up to date.
00:15:13.154 - 00:16:30.442, Speaker A: Maybe they don't trust their network connection to be strong enough sort of to keep up with the consensus protocol's progress. Who knows? You can easily imagine someone who's willing to pay the capital costs, willing to lock up their funds and only wants to be compensated for the capital costs in exchange for allowing someone else to bother with the operating costs of running a node. So that's another thing that delegation enables. So a majority of the major proof of stake blockchain protocols out there at this time do support in protocol delegation. A very notable exception is proof of stake ethereum which has no in protocol way of delegation, despite the fact that the minimum staking amount to become an ethereum validator is really quite high. It's in the tens of thousands of dollars. So perhaps unsurprisingly, we now have third party staking pools who really sort of act as a middleman to connect would be delegators to active validators at the time of this recording, specifically talking about now ethereum.
00:16:30.442 - 00:17:30.614, Speaker A: The biggest staking pool is a protocol known as lido. So if you look at all of the cryptocurrency that's staked on proof of stake ethereum, something like a third of that goes through Lido, which, again, is basically sort of connecting sort of delegators people who may or may not have sort of sufficient capital and who in any case don't want to run a validator connecting people of that type to the actual node operators that are happy to be validators. In addition to these third party staking pools, you can kind of think of centralized exchanges like say, binance or coinbase. They're kind of like staking pools, right, because they've taken funds from other customers, they're sort of staking it themselves and then they're passing a portion of those staking rewards back to their customers. One big difference there is if you're talking about a third party staking pool like Lido, that's non custodial, so it's never actually taking control of your funds. It's literally just there to kind of match you to some validator. So it's really just a middleman.
00:17:30.614 - 00:18:12.670, Speaker A: Whereas centralized exchanges like binance and coinbase, they're custodial, meaning they actually own your cryptocurrency and they're sort of just using it on your behalf and paying you accordingly. So in any case, whenever you have a proof of stake blockchain protocol with staking rewards, whatever rules you put around validators, if you don't allow in protocol delegation, you probably should expect the free market to take over and delegation to happen nonetheless outside of the protocol rather than inside of the protocol. So when you're designing a proof of stake blockchain protocol, these are all questions you have to answer. You have no choice. So there's a lot of parameters to choose. The answers are often unclear. The trade offs are pretty tricky.
00:18:12.670 - 00:19:10.104, Speaker A: Best practices are sort of starting to emerge and I've tried to highlight those on this slide here in green. So this is all really important. That's why I wanted to take this time in this video to really talk through it going forward. For the rest of lecture number twelve, we're not going to be worrying about these questions again. We will just assume that decisions have been made on all of these questions. There is some staking contract, some escrow contract where validators lock up funds which is maintained as part of the blockchain protocol's state. So just to connect this list of public keys and stake amounts back to the preceding discussion, notice that I've said this is the list of active validators.
00:19:10.104 - 00:19:56.056, Speaker A: Remember, active meant if you look back at that timeline in the middle of the slide, those are validators that are in the middle of that sort of sub interval in the middle that are currently active validating. In other words, validators who are currently in the warm up period or the cooldown period are not included in this list. So that's the first thing. Second thing with respect to delegation, the Qi, the stake amount associated with the public key, that includes not just the funds that, that validator themselves locked up, but also any delegated funds from other users. So the QIS include delegated stake. So at any moment in time we know the public keys of all of the active validators PK, one up to PKN. We also know the corresponding stake amounts.
00:19:56.056 - 00:20:49.928, Speaker A: And you look at what we just wrote down, like you look at that light blue list and you stare at it. It's actually surprisingly suggestive of the permissioned model along with the PKI assumption that we discussed for many lectures earlier in this series. In the permissioned setting, you have this known set of nodes and under the PKI assumption, all of their public keys are common knowledge. And here, I guess it looks like we're kind of in that setting, right? We have our end nodes with the public keys, PK one up to PKN. Yeah, we also have these stake weights, but it seems like we have this known set of nodes. So are we suddenly, accidentally finding ourselves somehow in the permissioned setting? So I'd say the answer to that question is a tiny bit yes, but mostly no. I say a tiny bit yes because I mean, this is like sort of some form of registration.
00:20:49.928 - 00:21:32.068, Speaker A: It is going to give us a set of known public keys which will be really important for reducing permissionless consensus to permissioned consensus. And that'll be particularly clear when we talk about coupling proof of stake civil resistance with BFT type consensus protocols. On the other hand, I'd say the answer is mostly no. Mostly we are still stuck with the permissionless setting and all of the challenges that it poses. In particular, this light blue list, this list of public keys, there could totally be sybils, definitely. There could be a single Byzantine node that owns more than one of these public keys and that does not come up in the permission setting with the PKI assumption. There by assumption, distinct public keys must belong to different nodes.
00:21:32.068 - 00:22:13.110, Speaker A: Here that's not going to be true. So that's why when we go around to randomly sampling from this list of active validators, we're certainly not going to want to do it uniformly at random because that, as we know, is very easily manipulated by civil attacks. That's why we're going to be focused on sampling from this list with probability proportional to the QIS, proportional to the stake that's going to give us the civil resistance that we need. Now, it sounds simple, sampling from this list with probability proportional to the QIS. It is in fact not simple. So let's now turn our attention to challenges in and approaches to sampling from the list of active validators proportional to the QIS. I'll see you in the next video.
