00:00:00.410 - 00:00:13.818, Speaker A: So why is Tendermint designed the way that it is? Well, it's so that it satisfies consistency and eventual liveness. Certainly not obvious that the protocol satisfies either of those two properties. And you really should be demanding careful proofs.
00:00:13.818 - 00:00:39.894, Speaker A: So in this video, let's start with a careful proof that the Tendermint protocol indeed satisfies consistency in the usual sense for a state machine replication protocol. And so, just to remind you what that means, the point of consistency is to rule out the epic fail of two different honest nodes committing different versions of the same block number. So any honest nodes that commits some block as block number nine, that has to be the same block for all of them.
00:00:39.894 - 00:00:56.446, Speaker A: Now, this does not assert that at every single moment in time, the local history of every single node is exactly the same. So, for example, because of message delays, perhaps some nodes may be lagging behind others, right? Maybe a node in Siberia is only up to block number seven. Others have made it up to block number nine.
00:00:56.446 - 00:01:16.366, Speaker A: But the first seven blocks of the node in Siberia should be the same as the first seven blocks of all of the other nodes. So consistency just promises that once the tortoises eventually catch up to the hairs, everyone will agree on exactly what each of the blocks should be. So we're going to prove the consistency guarantee block by block.
00:01:16.366 - 00:01:36.966, Speaker A: So let's go ahead and zoom in on your favorite block number, for example, block number nine. The plan is to prove that it is impossible for there to ever over the entire lifetime of the protocol. It's impossible for there to be two different quorum certificates, both for block number nine, both from stage two, from some round that support different blocks.
00:01:36.966 - 00:01:59.922, Speaker A: Now, we're not worried about two quorum certificates, both from stage two of the same round 117, we have the quorum overlap property, which ensures that you can only have one quorum certificate for any given referendum. But what we're worried about is that maybe in round 114 we get a stage two QC for one version of block number nine, and in around 117, we get a stage two QC for a different version of block number nine. That's what we need to show.
00:01:59.922 - 00:02:14.502, Speaker A: Can absolutely never happen. If we can show that there's never conflicting stage two QCs for block number nine, that implies SMR consistency. It implies it'll never be the case that honest nodes commit two different versions of block number nine.
00:02:14.502 - 00:02:51.022, Speaker A: Why is that? Well, if we go back to the pseudocode, just by inspection, we can see that a prerequisite to committing block number nine is to have a stage two quorum certificate for it. Like if you look in the fourth phase, if you look at the line that says commit B to local history, you will notice that prior in the if statement there, that node assembles a stage two quorum certificate supporting the block that it committed to. Similarly, if you look at the lower left of the pseudocode, so the part that the sanity check at the end of every round, there again, you only commit because you have a stage two quorum certificate in support of that block.
00:02:51.022 - 00:02:58.200, Speaker A: So if there's never stage two quorum certificates for different versions of block number nine, we're never going to have commits to different versions of block number nine either.
00:02:59.530 - 00:03:00.614, Speaker B: So what I want to do now.
00:03:00.652 - 00:03:19.050, Speaker A: Is sort of fast forward to the earliest round that might be relevant for the creation of a stage two quorum certificate for block number nine. And we're going to look at the first round in which more than N over three honest nodes all vote for the same block in the second stage of voting.
00:03:19.790 - 00:03:20.266, Speaker B: All right?
00:03:20.288 - 00:03:38.786, Speaker A: So if we have 100 nodes, we're fast forwarding to the earliest round where for block number nine in the second stage of voting, of that round, 34 or more honest nodes all cast votes in that second stage voting. And moreover, they all did it for exactly the same block. Call that block B star.
00:03:38.786 - 00:03:43.234, Speaker A: Also call the set of 34 or more honest nodes that voted for B star.
00:03:43.352 - 00:03:46.806, Speaker B: Call that set capital S. And what.
00:03:46.828 - 00:04:06.282, Speaker A: I want you to notice is that this is a prerequisite for the creation of a stage two quorum certificate. Remember, any quorum certificate has a supermajority of nodes present at least two thirds N. Remember our standing assumption that strictly less than a third of the nodes are Byzantine f less than n over three.
00:04:06.282 - 00:04:28.050, Speaker A: Which means that if you can ever form a quorum certificate, it has to be that strictly more than N over three nodes, honest nodes contributed, right? So if you have 100 nodes, you're going to need 67 nodes. For a quorum certificate, you have at most 33 Byzantine nodes. And so that means you have at least 34, which is strictly more than a third, at least 34 honest nodes contributing.
00:04:28.550 - 00:04:28.946, Speaker B: All right?
00:04:28.968 - 00:04:39.018, Speaker A: So to summarize consistency, ultimately it's about who commits what. We want any two honest nodes to commit the same version of block number nine. A prerequisite to commit is a stage two quorum certificate.
00:04:39.018 - 00:05:03.790, Speaker A: So we're showing that no stage two quorum certificates can support different blocks. And the prerequisite for creation of a stage two quorum certificate is that you get somehow strictly more than a third of the nodes, strictly more than N over three honest nodes, to contribute second stage votes to the same block, B star. In other words, this round R, this is the earliest round that it's conceivable that a stage two quorum certificate for block number nine could have been created.
00:05:03.790 - 00:05:07.886, Speaker A: It's not necessarily created in round number R, but it's certainly not created in.
00:05:07.908 - 00:05:10.906, Speaker B: Any round prior to R. So we're.
00:05:10.938 - 00:05:29.110, Speaker A: Now going to proceed to show that there will literally never be any stage two quorum certificate created for any block other than B star. Therefore, it will never be the case that any honest node commits a version of block number nine for any block other than B star. You might be worried that sort of nobody ever commits any block ever.
00:05:29.110 - 00:05:51.226, Speaker A: But that's really the responsibility of the liveness proof that we'll argue in the next video. So for now, we're just trying to argue that you never have commits to conflicting blocks. So we're looking at the earliest round where it's conceivable you would have the prerequisite for a commit created the first round where you might conceivably have a stage two quorum certificate for block number nine.
00:05:51.226 - 00:06:10.766, Speaker A: And never again will you have any stage two quorum certificate for any other version of block number nine. So for the intuition of why that's true, let's have a look at the pseudocode and consider any node that casts a second stage vote for some block. So we're looking at the upper rights part of the pseudocode.
00:06:10.766 - 00:07:01.490, Speaker A: We're looking at the third phase. That's the line where a node would broadcast a stage two vote for a block and a prerequisite for doing so is to witness firsthand a successful outcome of the referendum in the previous phase, the first stage of voting, right? So the only way that you will actually vote cast a second stage vote, is if you yourself saw a supermajority of support from the first stage all supporting the same block, capital B. And the point is, if you do that, if you actually get sufficiently convinced to cast a second stage vote, you're not going to commit yet, right? You wouldn't commit until the fourth phase, seeing yet another stage of successful voting, but you do kind of lock in on the block capital B, right? So if you look in that third phase, the pseudocode, certainly at that point you update your local variable B sub I, you update it to the block B that you just voted for.
00:07:01.490 - 00:07:14.322, Speaker A: And that node is not going to change its mind about which block it's supporting. It's not going to update its B sub I variable unless it is confronted with a strictly more recent quorum certificate possibly supporting some other block.
00:07:14.386 - 00:07:14.806, Speaker B: Okay?
00:07:14.908 - 00:07:28.790, Speaker A: So that's the first key point. Any honest node that casts a second stage vote, it's going to keep supporting that same block. It's not going to be voting for any other blocks, it's going to keep supporting that same block unless it's confronted with a more recent quorum certificate.
00:07:28.790 - 00:07:52.670, Speaker A: So that's the first point. Second point is that actually we know that not just like one honest node cast a second stage vote for the block B star, we know that a bunch of them did that set capital S has strictly more than N over three honest nodes. So that's strictly more than N over three nodes that are never going to vote for anything other than B star until they're confronted with a quorum certificate that's newer than the one that's newer.
00:07:52.670 - 00:08:08.214, Speaker A: Now you have more than a third of the nodes never willing to vote for any other block. So you'll never have a supermajority of support for any other block. You're never going to be able to assemble the two thirds that you need to actually create that more recent quorum certificate and go back to those nodes to change their mind.
00:08:08.214 - 00:08:28.080, Speaker A: So once you have such a big set of honest nodes, more than and over three honest nodes who have cast those second stage votes at that point, the rest is a foregone conclusion. There's no hope of ever producing any quorum certificate, stage one, stage two, whatever, any quorum certificate for any block other than B star for block number nine ever again.
00:08:37.860 - 00:08:38.256, Speaker B: All right.
00:08:38.278 - 00:08:54.976, Speaker A: So that's a pretty accurate summary of why this proof actually works, about why tenement really is consistent. Again, it's such an important property and it's so easy to have bogus proofs of consistency. I do feel obligated to give you to specify some more details and really sort of prove it formally.
00:08:54.976 - 00:09:06.280, Speaker A: If you already find that sort of super convincing, consider consistency. Vanquished and you can move on to the liveness video. But for those of you that really kind of want to be sure of the details, let's actually finish the formal proof.
00:09:06.280 - 00:09:14.908, Speaker A: So we're going to proceed by induction, induction on the number of rounds. So we'll think about the conclusion of round R. We'll sort of take stock of where we are.
00:09:14.908 - 00:09:30.528, Speaker A: We'll witness that we have conditions under which new QCs for blocks other than B star can't possibly be created. And then moreover, we'll show that those conditions continue to hold at the end of round R plus one. And so therefore, going into round R plus two, again, these sort of blocking conditions preventing new QCs continue to hold.
00:09:30.528 - 00:09:35.076, Speaker A: And then that's going to be true forevermore. So for the base case, let's think.
00:09:35.098 - 00:09:38.052, Speaker B: About the end of round R. So.
00:09:38.106 - 00:09:48.424, Speaker A: Three properties that I claim are true. So first of all, each of these nodes in capital S. So remember, these are the honest nodes that voted for B star in the second stage of round R.
00:09:48.424 - 00:10:08.258, Speaker A: Each of these nodes in S, they are locked in on the block B star. That is their local variable B sub I, is set to B star. We can observe that that's true just by looking at the pseudocode, right? So if we look at sort of so we're thinking about a node that cast a second stage vote in the third phase in the upper right.
00:10:08.258 - 00:10:23.670, Speaker A: Obviously, in the line right before that, it updated its local variable to whatever it voted for. So in our case, it's updating its local variable to B star. And then we want to argue that this node I does not update it again in the rest of the round.
00:10:23.670 - 00:10:43.374, Speaker A: Moving on to the fourth phase, where we have to check that none of these nodes in capital S have their local variable reset to something other than B star. And so here the thing to notice, is just that there's no way for this if statement to get triggered for any block other than B star, right? We've got more than N over three nodes, all of them honest, who voted for B star. They only voted once.
00:10:43.374 - 00:11:14.502, Speaker A: So in particular, they didn't vote for any other block other than B star, and there were more than N over three of them, which means you will have less strictly less than a supermajority, strictly less than two thirds n votes for any block other than B star. So the only possible things that can happen in the fourth phase either the if statement is triggered but for B star, in which case of course the nodes of capital S will have their local variables, they'll still be equal to B star, or the if statement won't be triggered at all. In which case obviously those nodes will also not be updating their local variables b sub i.
00:11:14.502 - 00:11:20.360, Speaker A: Okay, so it's going to still be true at the end of the fourth phase that all of the nodes of capital S have their local variables set to B star.
00:11:21.130 - 00:11:22.514, Speaker B: The final thing you might be worried.
00:11:22.562 - 00:11:42.686, Speaker A: About is kind of the sanity check that takes place at the very end of round R, where nodes are sort of sort of catching up with any stage two QCs they've pocketed in the past. But remember, we intentionally fast forwarded to round little R, which was the first round, where it's even conceivable that anyone could have come up with a stage two quorum certificate for block number nine.
00:11:42.788 - 00:11:43.006, Speaker B: Okay?
00:11:43.028 - 00:11:57.000, Speaker A: So if there's a stage two quorum certificate for block number nine, it must have been created in this round right here. It must have been created, therefore in the fourth phase of this round. And as we argued, the only possibility then would be that it would be equal to B star.
00:11:57.000 - 00:12:26.932, Speaker A: So the second property, which is true at the end of round R, not only does every node of capital S have its local variable set to B star, but it also has its local QC variable set to a fairly recent quorum certificate. A quorum certificate that is no less recent than stage one of the present round of round R. This property is obvious from the pseudocode.
00:12:26.996 - 00:12:27.224, Speaker B: Right.
00:12:27.262 - 00:12:44.108, Speaker A: So by virtue of casting the second stage vote for B star, this would be in the third phase in the upper right. By virtue of casting that vote. It also sets its local QC variable equal to the quorum certificate that it just saw firsthand at this time.
00:12:44.108 - 00:12:55.408, Speaker A: And that is a quorum certificate from the previous phase, which is stage one of round r. So certainly it has a quorum certificate of round r. And stage one.
00:12:55.408 - 00:13:12.790, Speaker A: It is possible it updated its local quorum certificate in the fourth phase to a stage two quorum certificate. But in that case, as we discussed, that must be for B star. You can't possibly create a stage two quorum certificate in the fourth phase of that round for any block other than B star.
00:13:13.880 - 00:13:14.288, Speaker B: All right?
00:13:14.314 - 00:13:22.330, Speaker A: So all the nodes of capital S, they're locally stored QC. It's definitely from round R. At the very least, it's from stage one conceivable it's even from stage two.
00:13:22.330 - 00:13:36.750, Speaker A: And then the final property is that any other quorum certificates floating around for block number nine must have been put together at round R minus one or earlier. There's no round R quorum certificates in existence for blocks other than B star.
00:13:38.080 - 00:13:39.528, Speaker B: So in this base case, where we're.
00:13:39.544 - 00:14:03.428, Speaker A: Just talking about the end of round R, right, really property three just says we have to show that anything created in round R has to be for B star rather than for some other block. Right? But we sort of have already argued that and it's sort of clear from the pseudocode, right? So by virtue of there being a second stage vote for the block B star, that means there was a stage one quorum certificate for B star. We know that any two quorum certificates from the same referendum have to support the same block.
00:14:03.428 - 00:14:29.280, Speaker A: So that says that no round R stage one quorum certificate could possibly be for a block other than B star, right? And then, as we discussed, given that more than N over three nodes were casting second stage votes for block B star, there's no way any other block could have possibly gotten a supermajority of votes in the second stage. So neither in stage one nor in stage two could there possibly have been a round R quorum certificate for any block other than B star.
00:14:29.350 - 00:14:32.656, Speaker B: And so that's the property three, the.
00:14:32.678 - 00:14:38.336, Speaker A: Argument from here forward is actually really pretty similar. So let's just sort of fast forward now to round R plus one.
00:14:38.518 - 00:14:39.948, Speaker B: And basically the claim is in round.
00:14:39.964 - 00:14:54.490, Speaker A: R plus one, none of these nodes that are locked in on B star, none of these nodes in capital S, none of them are going to be confronted with evidence that they should change their mind. So as a result, the post condition around R plus one will be exactly the same as after round R. These properties one, two and three will all continue to be true.
00:14:54.490 - 00:15:10.924, Speaker A: We can see this in detail again by looking at the pseudocode. And again, remember these sort of second two properties. So first of all, each of the nodes of capital S, right, they believe in block B star and they have quite recent evidence in support of that belief in the form of a quorum certificate from round R, maybe stage one, maybe stage two.
00:15:10.924 - 00:15:37.812, Speaker A: And meanwhile, property three says that any quorum certificate for any other block has to be old, has to be from round R minus one or before. So that means all of the nodes in capital S, they will enter round R plus one, right, with their local variable B sub I set to B star, and with their local quorum certificate, set to a round R quorum certificate. Meanwhile, if the leader tries to propose any block different than B star, it can only possibly be supported by a quorum certificate that's old from round R minus one or before.
00:15:37.812 - 00:16:15.936, Speaker A: Those are the only quorum certificates in existence that support blocks other than B star. So all of the nodes of capital S confronted with that proposal in the second phase, they're going to be like, whatever leader, you're out of date, I don't really care what you proposed, I'm just going to stay locked in on B star content with my round R quorum certificate. So that means those more than N over three honest nodes will not cast first stage votes for blocks other than B star, which means no block other than B star could possibly amass a supermajority in the first stage of voting, right? Either no block amasses a supermajority, or if there is one, it's got to be B star.
00:16:15.936 - 00:16:45.676, Speaker A: Now, amassing a supermajority in the first stage is a prerequisite for issuing a second stage vote for a block in the second stage. And so given that no block other than B star could have possibly gotten a majority supermajority in the first stage of voting, it means all of those nodes of capital S strictly more than n over three of them will also not be voting for any block other than B star in the second stage of voting. So for the same reason, in the second stage of voting, there's no way that a quorum certificate will be formed for any block other than B star.
00:16:45.676 - 00:17:05.072, Speaker A: So the nodes of capital S just very stubbornly sort of stay locked in on B star. It's impossible for any QCs to be created for blocks other than B star. And so what that means is that at the conclusion of round R plus one, all three of these properties will continue to be true, right? So none of the nodes in capital S have changed their mind.
00:17:05.072 - 00:17:22.996, Speaker A: So property one continues to hold. Quorum certificates only get sort of more recent over time, so property two definitely continues to hold. And then three, as we just argued, we already didn't have any quorum certificates for blocks other than B star in rounds one through R minus one or round R, and now we just showed that also in round R plus one.
00:17:23.018 - 00:17:23.668, Speaker B: You'Re not going to be able to.
00:17:23.674 - 00:17:35.108, Speaker A: Produce any quorum certificates for blocks other than B star. Again, just because the nodes in capital S are not going to participate and you need their participation to reach the supermajority to form a quorum certificate.
00:17:35.284 - 00:17:36.792, Speaker B: Moving on to round R plus two.
00:17:36.846 - 00:17:52.652, Speaker A: Nothing has changed from round R plus one, so history will just repeat itself again. All the nodes of capital S will stay locked in on B star. They'll never contribute votes for any other block, you'll never be able to form any other quorum certificates and properties one through three will just continue to hold forevermore.
00:17:52.796 - 00:17:54.064, Speaker B: And now we're done.
00:17:54.102 - 00:18:14.324, Speaker A: So let me just sort of remind you how this kind of completes the plan we had in mind all along. We sought out to prove that you could never have conflicting stage two QCs for the same block number. And so what we've shown here is that actually you will never have a stage two QC for any block other than B star, so there's no way you'll have two different ones in support of different blocks.
00:18:14.324 - 00:18:43.792, Speaker A: Any ones in existence have to support B Star. And finally, remember in the fourth phase or in the sanity check at the end of a round, a prerequisite for ever committing to some block number nine, an honest node before it does that and makes sure that it has a stage two quorum certificate supporting that block as block number nine. So by virtue of never having conflicting stage two quorum certificates for block number nine, you will also never have conflicting commits by different honest nodes for block number nine.
00:18:43.792 - 00:19:01.530, Speaker A: And that is exactly the consistency property for a state machine replication protocol. So that concludes the proof of consistency. So it's certainly not a trivial proof and you can imagine how if you made some different design decisions in the tenerint protocol, maybe actually this would no longer be true.
00:19:01.530 - 00:19:23.220, Speaker A: Happily, this consistency argument, it's actually fairly robust to small variations in the tenderman protocol that I described. Really what's fundamentally driving consistency is the use of quorum certificates. So supermajorities of votes and the use of having two stages of voting and so many other versions of the protocol that share those two properties are also going to satisfy consistency.
00:19:23.220 - 00:19:30.530, Speaker A: So I'm not saying this proof wasn't trick key, but actually it's the proof of liveness that's even more tricky. So let's move on to that next.
